// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package rep_resolucion_4505.resolucion4505_1_0;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.ArrayFromFile;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJava_9
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;
import java.math.*;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJava_7
	//import java.util.List;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: Resolucion4505 Purpose: <br>
 * Description: Genera archivo tipo 2 de la resoluci√≥n 4505 de 2012 y segun explicaciones-anexo-tecnico-29-de-mayo-2015 <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status PROD
 */
public class Resolucion4505 implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(Connection1_Encoding != null){
				
					this.setProperty("Connection1_Encoding", Connection1_Encoding.toString());
				
			}
			
			if(Connection1_XPathQuery != null){
				
					this.setProperty("Connection1_XPathQuery", Connection1_XPathQuery.toString());
				
			}
			
			if(Connection1_XmlFilePath != null){
				
					this.setProperty("Connection1_XmlFilePath", Connection1_XmlFilePath.toString());
				
			}
			
			if(db_destino_AdditionalParams != null){
				
					this.setProperty("db_destino_AdditionalParams", db_destino_AdditionalParams.toString());
				
			}
			
			if(db_destino_Login != null){
				
					this.setProperty("db_destino_Login", db_destino_Login.toString());
				
			}
			
			if(db_destino_Password != null){
				
					this.setProperty("db_destino_Password", db_destino_Password.toString());
				
			}
			
			if(db_destino_Port != null){
				
					this.setProperty("db_destino_Port", db_destino_Port.toString());
				
			}
			
			if(db_destino_Schema != null){
				
					this.setProperty("db_destino_Schema", db_destino_Schema.toString());
				
			}
			
			if(db_destino_Server != null){
				
					this.setProperty("db_destino_Server", db_destino_Server.toString());
				
			}
			
			if(db_destino_Sid != null){
				
					this.setProperty("db_destino_Sid", db_destino_Sid.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(BODEGA != null){
				
					this.setProperty("BODEGA", BODEGA.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(ArchivosId != null){
				
					this.setProperty("ArchivosId", ArchivosId.toString());
				
			}
			
			if(CarpetaTemp != null){
				
					this.setProperty("CarpetaTemp", CarpetaTemp.toString());
				
			}
			
			if(FECHA_FINAL != null){
				
					this.setProperty("FECHA_FINAL", FECHA_FINAL.toString());
				
			}
			
			if(FECHA_INICIAL != null){
				
					this.setProperty("FECHA_INICIAL", FECHA_INICIAL.toString());
				
			}
			
			if(FECHA_NUMERO != null){
				
					String pattern_FECHA_NUMERO = "yyyy-MM-dd HH:mm:ss";
					String value_FECHA_NUMERO = "";
					String[] parts_FECHA_NUMERO = value_FECHA_NUMERO.split(";");
					if(parts_FECHA_NUMERO.length > 1){
						pattern_FECHA_NUMERO = parts_FECHA_NUMERO[0];
						this.setProperty("FECHA_NUMERO", pattern_FECHA_NUMERO + ";" + FormatterUtils.format_Date(FECHA_NUMERO, pattern_FECHA_NUMERO));
					}else{
						this.setProperty("FECHA_NUMERO", FormatterUtils.format_Date(FECHA_NUMERO, pattern_FECHA_NUMERO));
					}
				
			}
			
			if(FechaArchivo != null){
				
					this.setProperty("FechaArchivo", FechaArchivo.toString());
				
			}
			
			if(FFinal != null){
				
					String pattern_FFinal = "yyyy-MM-dd HH:mm:ss";
					String value_FFinal = "";
					String[] parts_FFinal = value_FFinal.split(";");
					if(parts_FFinal.length > 1){
						pattern_FFinal = parts_FFinal[0];
						this.setProperty("FFinal", pattern_FFinal + ";" + FormatterUtils.format_Date(FFinal, pattern_FFinal));
					}else{
						this.setProperty("FFinal", FormatterUtils.format_Date(FFinal, pattern_FFinal));
					}
				
			}
			
			if(FInicial != null){
				
					String pattern_FInicial = "yyyy-MM-dd HH:mm:ss";
					String value_FInicial = "";
					String[] parts_FInicial = value_FInicial.split(";");
					if(parts_FInicial.length > 1){
						pattern_FInicial = parts_FInicial[0];
						this.setProperty("FInicial", pattern_FInicial + ";" + FormatterUtils.format_Date(FInicial, pattern_FInicial));
					}else{
						this.setProperty("FInicial", FormatterUtils.format_Date(FInicial, pattern_FInicial));
					}
				
			}
			
			if(FINICIO != null){
				
					String pattern_FINICIO = "yyyy-MM-dd HH:mm:ss";
					String value_FINICIO = "";
					String[] parts_FINICIO = value_FINICIO.split(";");
					if(parts_FINICIO.length > 1){
						pattern_FINICIO = parts_FINICIO[0];
						this.setProperty("FINICIO", pattern_FINICIO + ";" + FormatterUtils.format_Date(FINICIO, pattern_FINICIO));
					}else{
						this.setProperty("FINICIO", FormatterUtils.format_Date(FINICIO, pattern_FINICIO));
					}
				
			}
			
			if(FSolicitud != null){
				
					String pattern_FSolicitud = "yyyy-MM-dd HH:mm:ss";
					String value_FSolicitud = "";
					String[] parts_FSolicitud = value_FSolicitud.split(";");
					if(parts_FSolicitud.length > 1){
						pattern_FSolicitud = parts_FSolicitud[0];
						this.setProperty("FSolicitud", pattern_FSolicitud + ";" + FormatterUtils.format_Date(FSolicitud, pattern_FSolicitud));
					}else{
						this.setProperty("FSolicitud", FormatterUtils.format_Date(FSolicitud, pattern_FSolicitud));
					}
				
			}
			
			if(ID != null){
				
					this.setProperty("ID", ID.toString());
				
			}
			
			if(NombreArchivo != null){
				
					this.setProperty("NombreArchivo", NombreArchivo.toString());
				
			}
			
			if(PersonaId != null){
				
					this.setProperty("PersonaId", PersonaId.toString());
				
			}
			
			if(SolicitudId != null){
				
					this.setProperty("SolicitudId", SolicitudId.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String Connection1_Encoding;
public String getConnection1_Encoding(){
	return this.Connection1_Encoding;
}
public String Connection1_XPathQuery;
public String getConnection1_XPathQuery(){
	return this.Connection1_XPathQuery;
}
		public String Connection1_XmlFilePath;
		public String getConnection1_XmlFilePath(){
			return this.Connection1_XmlFilePath;
		}
		
public String db_destino_AdditionalParams;
public String getDb_destino_AdditionalParams(){
	return this.db_destino_AdditionalParams;
}
public String db_destino_Login;
public String getDb_destino_Login(){
	return this.db_destino_Login;
}
public java.lang.String db_destino_Password;
public java.lang.String getDb_destino_Password(){
	return this.db_destino_Password;
}
public String db_destino_Port;
public String getDb_destino_Port(){
	return this.db_destino_Port;
}
public String db_destino_Schema;
public String getDb_destino_Schema(){
	return this.db_destino_Schema;
}
public String db_destino_Server;
public String getDb_destino_Server(){
	return this.db_destino_Server;
}
public String db_destino_Sid;
public String getDb_destino_Sid(){
	return this.db_destino_Sid;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public java.lang.String db_origen_Password;
public java.lang.String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String BODEGA;
public String getBODEGA(){
	return this.BODEGA;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public BigDecimal ArchivosId;
public BigDecimal getArchivosId(){
	return this.ArchivosId;
}
public String CarpetaTemp;
public String getCarpetaTemp(){
	return this.CarpetaTemp;
}
public String FECHA_FINAL;
public String getFECHA_FINAL(){
	return this.FECHA_FINAL;
}
public String FECHA_INICIAL;
public String getFECHA_INICIAL(){
	return this.FECHA_INICIAL;
}
public java.util.Date FECHA_NUMERO;
public java.util.Date getFECHA_NUMERO(){
	return this.FECHA_NUMERO;
}
public String FechaArchivo;
public String getFechaArchivo(){
	return this.FechaArchivo;
}
public java.util.Date FFinal;
public java.util.Date getFFinal(){
	return this.FFinal;
}
public java.util.Date FInicial;
public java.util.Date getFInicial(){
	return this.FInicial;
}
public java.util.Date FINICIO;
public java.util.Date getFINICIO(){
	return this.FINICIO;
}
public java.util.Date FSolicitud;
public java.util.Date getFSolicitud(){
	return this.FSolicitud;
}
public BigDecimal ID;
public BigDecimal getID(){
	return this.ID;
}
public String NombreArchivo;
public String getNombreArchivo(){
	return this.NombreArchivo;
}
public BigDecimal PersonaId;
public BigDecimal getPersonaId(){
	return this.PersonaId;
}
public BigDecimal SolicitudId;
public BigDecimal getSolicitudId(){
	return this.SolicitudId;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "1.0";
	private final String jobName = "Resolucion4505";
	private final String projectName = "REP_RESOLUCION_4505";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				Resolucion4505.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(Resolucion4505.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_107_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_107_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_107_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_107_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_109_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_109_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_109_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_101_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_106_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_104_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_94_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_103_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_105_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_102_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_99_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_95_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_96_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_97_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_98_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_100_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_90_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_88_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_89_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_91_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_92_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_93_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_87_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_78_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_79_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_80_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_81_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_82_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_83_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_84_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_85_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_86_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_77_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_76_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_75_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_74_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_73_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_72_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_71_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_70_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_69_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_68_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_60_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_61_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_62_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_63_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_64_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_65_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_66_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_67_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_59_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_56_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_57_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_55_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_49_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row49_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row55_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row56_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row57_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row59_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row60_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row61_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row62_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row63_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row64_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row65_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row66_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row67_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row68_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row69_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row70_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row71_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row72_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row73_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row74_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row75_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row76_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row77_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row78_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row79_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row80_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row81_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row82_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row83_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row84_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row85_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row86_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row87_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row89_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row90_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row91_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row92_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row93_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row94_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row95_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row96_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row97_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row98_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row99_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row100_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row101_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row102_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row103_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row104_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row105_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row106_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row107_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_107_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_109_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public static class row113Struct implements routines.system.IPersistableRow<row113Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row113Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row112Struct implements routines.system.IPersistableRow<row112Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row112Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row112Struct row112 = new row112Struct();
row112Struct row113 = row112;





	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row113");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row112");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("moment");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("project");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("context");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("origin");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("message");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row112.type = lcm.getType();
		row112.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row112.priority = lcm.getPriority();
		row112.message = lcm.getMessage();
		row112.code = lcm.getCode();
		
		row112.moment = java.util.Calendar.getInstance().getTime();
	
    	row112.pid = pid;
		row112.root_pid = rootPid;
		row112.father_pid = fatherPid;
	
    	row112.project = projectName;
    	row112.job = jobName;
    	row112.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row112"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row112.moment != null) {
                        sb_tFileOutputDelimited_2.append(
                            FormatterUtils.format_Date(row112.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row112.project != null) {
                        sb_tFileOutputDelimited_2.append(
                            row112.project
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row112.job != null) {
                        sb_tFileOutputDelimited_2.append(
                            row112.job
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row112.context != null) {
                        sb_tFileOutputDelimited_2.append(
                            row112.context
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row112.origin != null) {
                        sb_tFileOutputDelimited_2.append(
                            row112.origin
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row112.message != null) {
                        sb_tFileOutputDelimited_2.append(
                            row112.message
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 
     row113 = row112;


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row113"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xercesImpl-2.12.2.jar;../lib/xml-apis-1.4.01.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/TalendSAX.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;mail_1_2.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_resolucion_4505.mail_1_2.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xercesImpl-2.12.2.jar:$ROOT_PATH/../lib/xml-apis-1.4.01.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/TalendSAX.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/mail_1_2.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_resolucion_4505.mail_1_2.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = row113.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = row113.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = row113.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = row113.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = row113.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = row113.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = "N/A";
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = "N/A";
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_destino", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row112");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row113");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tJava_5Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk19", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row114Struct implements routines.system.IPersistableRow<row114Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return 0;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return 0;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return 0;
				}
				public Integer HORA_INICIOPrecision(){
				    return 0;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return 0;
				}
				public Integer HORA_FINALPrecision(){
				    return 0;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return 0;
				}
				public Integer JOBSPrecision(){
				    return 0;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row114Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row114Struct row114 = new row114Struct();




	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row114");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
        if(filetFileOutputDelimited_3.exists()){
            isFileGenerated_tFileOutputDelimited_3 = false;
        }
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("HORA_INICIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("HORA_FINAL");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESTADO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("JOBS");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row114.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row114.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row114.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row114.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row114.JOBS = "RES_4505";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row114"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row114.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row114.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row114.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row114.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row114.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_3.append(
                            row114.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row114.ESTADO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row114.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row114.JOBS != null) {
                        sb_tFileOutputDelimited_3.append(
                            row114.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());




 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row114");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk17", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.FINICIO = new Date();
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tFileInputXML_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row108Struct implements routines.system.IPersistableRow<row108Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return false;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return false;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return false;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 6;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 8;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 15;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 34;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row108Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row108Struct row108 = new row108Struct();




	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row108");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class XML_API_tFileInputXML_1{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();

String[] queryPaths_tFileInputXML_1 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"	
	,"PathStorage"		
	,"PathStorage"+"/@xsi:nil"	
	,"SMTPHost"		
	,"SMTPHost"+"/@xsi:nil"	
	,"SMTPPort"		
	,"SMTPPort"+"/@xsi:nil"	
	,"UsernameMail"		
	,"UsernameMail"+"/@xsi:nil"	
	,"PasswordMail"		
	,"PasswordMail"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_1 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_1 = "";
String[] node_tFileInputXML_1 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_1 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_1,asXMLs_tFileInputXML_1);
looper_tFileInputXML_1.setEncoding("UTF-8");
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_1 instanceof java.io.InputStream){
	looper_tFileInputXML_1.parse((java.io.InputStream)filename_tFileInputXML_1);
}else{
	looper_tFileInputXML_1.parse(String.valueOf(filename_tFileInputXML_1));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_1  = looper_tFileInputXML_1.iterator();
while (it_tFileInputXML_1.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_1 = it_tFileInputXML_1.next();
	if (nb_line_tFileInputXML_1>=50) {
	
			looper_tFileInputXML_1.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row108 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row108 = new row108Struct();
	try{
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Host");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.Host =null;
									}else{
		row108.Host = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Port");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.Port =null;
									}else{
		row108.Port = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Sid");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.Sid =null;
									}else{
		row108.Sid = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("ServiceName");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.ServiceName =null;
									}else{
		row108.ServiceName = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Schema");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.Schema =null;
									}else{
		row108.Schema = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("User");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.User =null;
									}else{
		row108.User = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Password");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.Password =null;
									}else{
		row108.Password = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PathStorage");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PathStorage"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.PathStorage =null;
									}else{
		row108.PathStorage = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPHost");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPHost"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.SMTPHost =null;
									}else{
		row108.SMTPHost = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPPort");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPPort"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.SMTPPort =null;
									}else{
		row108.SMTPPort = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("UsernameMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("UsernameMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.UsernameMail =null;
									}else{
		row108.UsernameMail = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PasswordMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PasswordMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row108.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row108.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row108.PasswordMail =null;
									}else{
		row108.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row108 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row108"
if(row108 != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row108"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.db_origen_Server = row108.Host;
context.db_origen_Port = row108.Port;
context.CarpetaTemp = row108.PathStorage;
context.db_origen_ServiceName = row108.ServiceName;
context.db_origen_Login = row108.User;
context.db_origen_Password = row108.Password;

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "row108"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


	}
	try {
		looper_tFileInputXML_1.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		
		System.err.println(e.getMessage());	
	
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row108");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk26", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tOracleInput_107Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row88Struct implements routines.system.IPersistableRow<row88Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String PARAMETTROS;

				public String getPARAMETTROS () {
					return this.PARAMETTROS;
				}

				public Boolean PARAMETTROSIsNullable(){
				    return true;
				}
				public Boolean PARAMETTROSIsKey(){
				    return false;
				}
				public Integer PARAMETTROSLength(){
				    return 250;
				}
				public Integer PARAMETTROSPrecision(){
				    return 0;
				}
				public String PARAMETTROSDefault(){
				
					return null;
				
				}
				public String PARAMETTROSComment(){
				
				    return "";
				
				}
				public String PARAMETTROSPattern(){
				
					return "";
				
				}
				public String PARAMETTROSOriginalDbColumnName(){
				
					return "PARAMETTROS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PARAMETTROS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.PARAMETTROS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PARAMETTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.PARAMETTROS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",PARAMETTROS="+PARAMETTROS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row88Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_107Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_107_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row88Struct row88 = new row88Struct();




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tJava_9 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row88");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_107 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_107", false);
		start_Hash.put("tOracleInput_107", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_107";
	
	
		int tos_count_tOracleInput_107 = 0;
		
	


	
		    int nb_line_tOracleInput_107 = 0;
		    java.sql.Connection conn_tOracleInput_107 = null;
				conn_tOracleInput_107 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_107 = false;
				boolean isConnectionWrapped_tOracleInput_107 = !(conn_tOracleInput_107 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_107.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_107 = null;
                if (isConnectionWrapped_tOracleInput_107) {
					unwrappedOraConn_tOracleInput_107 = conn_tOracleInput_107.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_107 != null) {
                        isTimeZoneNull_tOracleInput_107 = (unwrappedOraConn_tOracleInput_107.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_107 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_107).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_107) {
					java.sql.Statement stmtGetTZ_tOracleInput_107 = conn_tOracleInput_107.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_107 = stmtGetTZ_tOracleInput_107.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_107 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_107.next()) {
						sessionTimezone_tOracleInput_107 = rsGetTZ_tOracleInput_107.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_107 && unwrappedOraConn_tOracleInput_107 != null) {
                        unwrappedOraConn_tOracleInput_107.setSessionTimeZone(sessionTimezone_tOracleInput_107);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_107).setSessionTimeZone(sessionTimezone_tOracleInput_107);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_107 = conn_tOracleInput_107.createStatement();

		    String dbquery_tOracleInput_107 = "SELECT\nSA.ID,\nSA.PARAMETTROS\nFROM REP_SARCHIVO SA \nINNER JOIN REP_TSARCHIVO TS ON TS.ID = SA.TSARCHIVO_ID\nWHERE TS"
+".SIGLA = 'R4505'\nAND SA.ARCHIVOS_ID IS NULL\n";
		    

		    globalMap.put("tOracleInput_107_QUERY",dbquery_tOracleInput_107);

		    java.sql.ResultSet rs_tOracleInput_107 = null;

		    try {
		    	rs_tOracleInput_107 = stmt_tOracleInput_107.executeQuery(dbquery_tOracleInput_107);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_107 = rs_tOracleInput_107.getMetaData();
		    	int colQtyInRs_tOracleInput_107 = rsmd_tOracleInput_107.getColumnCount();

		    String tmpContent_tOracleInput_107 = null;
		    
		    
		    while (rs_tOracleInput_107.next()) {
		        nb_line_tOracleInput_107++;
		        
							if(colQtyInRs_tOracleInput_107 < 1) {
								row88.ID = null;
							} else {
		                          
					if(rs_tOracleInput_107.getObject(1) != null) {
						row88.ID = rs_tOracleInput_107.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_107 < 2) {
								row88.PARAMETTROS = null;
							} else {
	                         		
        	row88.PARAMETTROS = routines.system.JDBCUtil.getString(rs_tOracleInput_107, 2, false);
		                    }
					




 



/**
 * [tOracleInput_107 begin ] stop
 */
	
	/**
	 * [tOracleInput_107 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_107";
	
	

 


	tos_count_tOracleInput_107++;

/**
 * [tOracleInput_107 main ] stop
 */
	
	/**
	 * [tOracleInput_107 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_107";
	
	

 



/**
 * [tOracleInput_107 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row88"
						
						);
					}
					


    	            
            globalMap.put("row88.ID", row88.ID);
    	            
            globalMap.put("row88.PARAMETTROS", row88.PARAMETTROS);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tJava_9++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row43", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row49", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row62", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row34", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row55", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row107", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row79", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row87", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row94", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row73", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row117", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row17", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row71", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row91", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row94", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row65", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row97", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row56", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row48", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row66", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row37", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row87", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row52", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row80", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row63", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row105", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row58", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row106", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row104", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row78", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row92", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row36", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row44", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row75", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row48", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row80", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row62", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row90", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row81", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row95", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row65", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row78", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row72", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row36", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row34", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row68", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row77", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row91", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row74", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row99", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row101", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_Pre1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row64", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row102", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row110", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row67", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row50", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row102", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row84", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row74", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row70", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row106", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row79", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_Pre2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row56", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row89", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row69", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row61", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row71", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row57", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row38", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row103", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row96", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row33", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row55", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row60", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row42", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Ins", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row57", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row17", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row100", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row90", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row47", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row85", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row69", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row116", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row93", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row81", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row42", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row66", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row93", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row101", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row89", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row95", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row51", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row85", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row50", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row59", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row82", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row53", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row115", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row38", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row47", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row109", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row76", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row54", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row43", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row104", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row49", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row60", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row33", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row15", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row61", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row35", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row53", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row72", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row97", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row37", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row39", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_Prev4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row59", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row99", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row68", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row84", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row86", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row63", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row46", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row100", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row103", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row41", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row58", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row92", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row45", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row83", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row70", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row107", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row96", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row111", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row46", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row73", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row54", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row44", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("salidad_4505", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row82", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row76", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row98", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row98", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row67", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row41", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row83", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row105", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("Salida_Prev3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row77", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row35", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row39", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row51", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row75", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row86", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row15", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row45", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row64", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tOracleInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row52", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tJava_9);
					//Thread.sleep(1000);
				}				
			

	
	/**
	 * [tJava_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_9", false);
		start_Hash.put("tJava_9", System.currentTimeMillis());
		
	
	currentComponent="tJava_9";
	
	
		int tos_count_tJava_9 = 0;
		


java.util.StringTokenizer tokens = new java.util.StringTokenizer(row88.PARAMETTROS,",");

String[] splitStr = new String[tokens.countTokens()];
int index = 0;
while(tokens.hasMoreElements()) {
splitStr[index++] = tokens.nextToken();
}
String[] splitStrAux = new String[splitStr.length*2];
int indexAux = 0;
for(index=0; index < splitStr.length; index++) {
java.util.StringTokenizer tokensAux = new java.util.StringTokenizer(splitStr[index],":");
while(tokensAux.hasMoreElements()) {
splitStrAux[indexAux++] = tokensAux.nextToken();
}
}




context.SolicitudId = row88.ID;
 // ID 
context.FECHA_INICIAL = splitStrAux[1].toString().replace('"', ' ').trim(); // fecha inicial
context.FECHA_FINAL = splitStrAux[3].toString().replace('"', ' ').trim(); // fecha final
//context.ESM_REMITE = splitStrAux[5].toString().replace('"', ' ').replace('}', ' ').trim() ; // esm
//context.SIGLA = row3.SIGLA;
System.out.println(context.FECHA_INICIAL);
System.out.println();

 



/**
 * [tJava_9 begin ] stop
 */
	
	/**
	 * [tJava_9 main ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 


	tos_count_tJava_9++;

/**
 * [tJava_9 main ] stop
 */
	
	/**
	 * [tJava_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_begin ] stop
 */
	
	/**
	 * [tJava_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_end ] stop
 */
	
	/**
	 * [tJava_9 end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 

ok_Hash.put("tJava_9", true);
end_Hash.put("tJava_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tOracleInput_109Process(globalMap);



/**
 * [tJava_9 end ] stop
 */
						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tJava_9);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_107 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_107";
	
	

 



/**
 * [tOracleInput_107 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_107 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_107";
	
	

}
}finally{
	if (rs_tOracleInput_107 != null) {
		rs_tOracleInput_107.close();
	}
	if (stmt_tOracleInput_107 != null) {
		stmt_tOracleInput_107.close();
	}
}

globalMap.put("tOracleInput_107_NB_LINE",nb_line_tOracleInput_107);
 

ok_Hash.put("tOracleInput_107", true);
end_Hash.put("tOracleInput_107", System.currentTimeMillis());




/**
 * [tOracleInput_107 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row88");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_107 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_107";
	
	

 



/**
 * [tOracleInput_107 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tJava_9 finally ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_107_SUBPROCESS_STATE", 1);
	}
	


public static class row116Struct implements routines.system.IPersistableRow<row116Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String NUMERO;

				public String getNUMERO () {
					return this.NUMERO;
				}

				public Boolean NUMEROIsNullable(){
				    return true;
				}
				public Boolean NUMEROIsKey(){
				    return false;
				}
				public Integer NUMEROLength(){
				    return 2;
				}
				public Integer NUMEROPrecision(){
				    return 0;
				}
				public String NUMERODefault(){
				
					return null;
				
				}
				public String NUMEROComment(){
				
				    return "";
				
				}
				public String NUMEROPattern(){
				
					return "";
				
				}
				public String NUMEROOriginalDbColumnName(){
				
					return "NUMERO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.NUMERO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.NUMERO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NUMERO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NUMERO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO="+NUMERO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row116Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_109Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_109_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row116Struct row116 = new row116Struct();




	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row116");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tOracleInput_109 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_109", false);
		start_Hash.put("tOracleInput_109", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_109";
	
	
		int tos_count_tOracleInput_109 = 0;
		
	


	
		    int nb_line_tOracleInput_109 = 0;
		    java.sql.Connection conn_tOracleInput_109 = null;
				conn_tOracleInput_109 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_109 = false;
				boolean isConnectionWrapped_tOracleInput_109 = !(conn_tOracleInput_109 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_109.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_109 = null;
                if (isConnectionWrapped_tOracleInput_109) {
					unwrappedOraConn_tOracleInput_109 = conn_tOracleInput_109.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_109 != null) {
                        isTimeZoneNull_tOracleInput_109 = (unwrappedOraConn_tOracleInput_109.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_109 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_109).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_109) {
					java.sql.Statement stmtGetTZ_tOracleInput_109 = conn_tOracleInput_109.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_109 = stmtGetTZ_tOracleInput_109.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_109 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_109.next()) {
						sessionTimezone_tOracleInput_109 = rsGetTZ_tOracleInput_109.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_109 && unwrappedOraConn_tOracleInput_109 != null) {
                        unwrappedOraConn_tOracleInput_109.setSessionTimeZone(sessionTimezone_tOracleInput_109);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_109).setSessionTimeZone(sessionTimezone_tOracleInput_109);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_109 = conn_tOracleInput_109.createStatement();

		    String dbquery_tOracleInput_109 = "SELECT \nLPAD(CASE\nWHEN COUNT (1) = 0 THEN 1\nWHEN COUNT (1) <> 0 THEN  COUNT (1)+1\nEND,1,'0')\nAS NUMERO\nFROM (\nSE"
+"LECT \nSUBSTR(SS.PARAMETTROS ,INSTR(SS.PARAMETTROS, ':'||chr(34), 1,2)+2,10) AS FECHA \nFROM REP_SARCHIVO SS\nINNER JOIN"
+" REP_TSARCHIVO TS ON TS.ID = SS.TSARCHIVO_ID\nINNER JOIN REP_ARCHIVOS AR ON AR.ID = SS.ARCHIVOS_ID)\nWHERE FECHA = '"+context.FECHA_FINAL+"'";
		    

		    globalMap.put("tOracleInput_109_QUERY",dbquery_tOracleInput_109);

		    java.sql.ResultSet rs_tOracleInput_109 = null;

		    try {
		    	rs_tOracleInput_109 = stmt_tOracleInput_109.executeQuery(dbquery_tOracleInput_109);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_109 = rs_tOracleInput_109.getMetaData();
		    	int colQtyInRs_tOracleInput_109 = rsmd_tOracleInput_109.getColumnCount();

		    String tmpContent_tOracleInput_109 = null;
		    
		    
		    while (rs_tOracleInput_109.next()) {
		        nb_line_tOracleInput_109++;
		        
							if(colQtyInRs_tOracleInput_109 < 1) {
								row116.NUMERO = null;
							} else {
	                         		
        	row116.NUMERO = routines.system.JDBCUtil.getString(rs_tOracleInput_109, 1, false);
		                    }
					




 



/**
 * [tOracleInput_109 begin ] stop
 */
	
	/**
	 * [tOracleInput_109 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_109";
	
	

 


	tos_count_tOracleInput_109++;

/**
 * [tOracleInput_109 main ] stop
 */
	
	/**
	 * [tOracleInput_109 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_109";
	
	

 



/**
 * [tOracleInput_109 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row116"
						
						);
					}
					

    
//SimpleDateFormat context.FECHA_NUMERO = new SimpleDateFormat(context.FECHA_FINAL);

//context.FECHA_NUMERO = TalendDate.parseDate("",context.FECHA_FINAL);
context.FECHA_NUMERO = TalendDate.parseDate("dd/MM/yyyy", context.FECHA_FINAL);
//System.out.printIn(TalendDate.getPartofDate("DAY_OF_MONTH",context.FECHA_NUMERO));

System.out.println("Mi fecha    " + context.FECHA_NUMERO);
//context.FechaArchivo = "20170215";
context.NombreArchivo = "SGD280RPED"+TalendDate.formatDate("yyyyMMdd",context.FECHA_NUMERO)+"NI000830039670P"+row116.NUMERO;
System.out.println("Nombre archivo    "+context.NombreArchivo);
//TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", yourStringData);

//SimpleDateFormat  dF = new SimpleDateFormat("dd/MM/yyyy"); 
//System.out.println(dF.parse("17/03/2017").toString());	

//context.FECHA_INICIAL = TalendDate.formatDate("dd/MM/yyyy""");
//context.FECHA_FINAL = TalendDate.formatDate("dd/MM/yyyy", dF.parse("17/03/2017"));


System.out.println("Inicial --> " + context.FECHA_INICIAL);
System.out.println("Final --> " + context.FECHA_FINAL);



//System.out.println(TalendDate.formatDate("yyyy-MM-dd", dF.parse(context.FECHA_INICIAL)));
//System.out.println(TalendDate.formatDate("yyyy-MM-dd", dF.parse(context.FECHA_FINAL)));


    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_109 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_109";
	
	

 



/**
 * [tOracleInput_109 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_109 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_109";
	
	

}
}finally{
	if (rs_tOracleInput_109 != null) {
		rs_tOracleInput_109.close();
	}
	if (stmt_tOracleInput_109 != null) {
		stmt_tOracleInput_109.close();
	}
}

globalMap.put("tOracleInput_109_NB_LINE",nb_line_tOracleInput_109);
 

ok_Hash.put("tOracleInput_109", true);
end_Hash.put("tOracleInput_109", System.currentTimeMillis());




/**
 * [tOracleInput_109 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row116");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleInput_1Process(globalMap);



/**
 * [tJavaRow_9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_109 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_109";
	
	

 



/**
 * [tOracleInput_109 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_109_SUBPROCESS_STATE", 1);
	}
	


public static class salidad_4505Struct implements routines.system.IPersistableRow<salidad_4505Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public String V9;

				public String getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				
			    public String V100;

				public String getV100 () {
					return this.V100;
				}

				public Boolean V100IsNullable(){
				    return true;
				}
				public Boolean V100IsKey(){
				    return false;
				}
				public Integer V100Length(){
				    return 0;
				}
				public Integer V100Precision(){
				    return 0;
				}
				public String V100Default(){
				
					return null;
				
				}
				public String V100Comment(){
				
				    return "";
				
				}
				public String V100Pattern(){
				
					return "";
				
				}
				public String V100OriginalDbColumnName(){
				
					return "V100";
				
				}

				
			    public String V101;

				public String getV101 () {
					return this.V101;
				}

				public Boolean V101IsNullable(){
				    return true;
				}
				public Boolean V101IsKey(){
				    return false;
				}
				public Integer V101Length(){
				    return 0;
				}
				public Integer V101Precision(){
				    return 0;
				}
				public String V101Default(){
				
					return null;
				
				}
				public String V101Comment(){
				
				    return "";
				
				}
				public String V101Pattern(){
				
					return "";
				
				}
				public String V101OriginalDbColumnName(){
				
					return "V101";
				
				}

				
			    public String V102;

				public String getV102 () {
					return this.V102;
				}

				public Boolean V102IsNullable(){
				    return true;
				}
				public Boolean V102IsKey(){
				    return false;
				}
				public Integer V102Length(){
				    return 0;
				}
				public Integer V102Precision(){
				    return 0;
				}
				public String V102Default(){
				
					return null;
				
				}
				public String V102Comment(){
				
				    return "";
				
				}
				public String V102Pattern(){
				
					return "";
				
				}
				public String V102OriginalDbColumnName(){
				
					return "V102";
				
				}

				
			    public String V103;

				public String getV103 () {
					return this.V103;
				}

				public Boolean V103IsNullable(){
				    return true;
				}
				public Boolean V103IsKey(){
				    return false;
				}
				public Integer V103Length(){
				    return 0;
				}
				public Integer V103Precision(){
				    return 0;
				}
				public String V103Default(){
				
					return null;
				
				}
				public String V103Comment(){
				
				    return "";
				
				}
				public String V103Pattern(){
				
					return "";
				
				}
				public String V103OriginalDbColumnName(){
				
					return "V103";
				
				}

				
			    public BigDecimal V104;

				public BigDecimal getV104 () {
					return this.V104;
				}

				public Boolean V104IsNullable(){
				    return true;
				}
				public Boolean V104IsKey(){
				    return false;
				}
				public Integer V104Length(){
				    return 0;
				}
				public Integer V104Precision(){
				    return 0;
				}
				public String V104Default(){
				
					return "";
				
				}
				public String V104Comment(){
				
				    return "";
				
				}
				public String V104Pattern(){
				
					return "";
				
				}
				public String V104OriginalDbColumnName(){
				
					return "V104";
				
				}

				
			    public String V105;

				public String getV105 () {
					return this.V105;
				}

				public Boolean V105IsNullable(){
				    return true;
				}
				public Boolean V105IsKey(){
				    return false;
				}
				public Integer V105Length(){
				    return 0;
				}
				public Integer V105Precision(){
				    return 0;
				}
				public String V105Default(){
				
					return null;
				
				}
				public String V105Comment(){
				
				    return "";
				
				}
				public String V105Pattern(){
				
					return "";
				
				}
				public String V105OriginalDbColumnName(){
				
					return "V105";
				
				}

				
			    public String V106;

				public String getV106 () {
					return this.V106;
				}

				public Boolean V106IsNullable(){
				    return true;
				}
				public Boolean V106IsKey(){
				    return false;
				}
				public Integer V106Length(){
				    return 0;
				}
				public Integer V106Precision(){
				    return 0;
				}
				public String V106Default(){
				
					return null;
				
				}
				public String V106Comment(){
				
				    return "";
				
				}
				public String V106Pattern(){
				
					return "";
				
				}
				public String V106OriginalDbColumnName(){
				
					return "V106";
				
				}

				
			    public BigDecimal V107;

				public BigDecimal getV107 () {
					return this.V107;
				}

				public Boolean V107IsNullable(){
				    return true;
				}
				public Boolean V107IsKey(){
				    return false;
				}
				public Integer V107Length(){
				    return 0;
				}
				public Integer V107Precision(){
				    return 0;
				}
				public String V107Default(){
				
					return "";
				
				}
				public String V107Comment(){
				
				    return "";
				
				}
				public String V107Pattern(){
				
					return "";
				
				}
				public String V107OriginalDbColumnName(){
				
					return "V107";
				
				}

				
			    public String V108;

				public String getV108 () {
					return this.V108;
				}

				public Boolean V108IsNullable(){
				    return true;
				}
				public Boolean V108IsKey(){
				    return false;
				}
				public Integer V108Length(){
				    return 0;
				}
				public Integer V108Precision(){
				    return 0;
				}
				public String V108Default(){
				
					return null;
				
				}
				public String V108Comment(){
				
				    return "";
				
				}
				public String V108Pattern(){
				
					return "";
				
				}
				public String V108OriginalDbColumnName(){
				
					return "V108";
				
				}

				
			    public BigDecimal V109;

				public BigDecimal getV109 () {
					return this.V109;
				}

				public Boolean V109IsNullable(){
				    return true;
				}
				public Boolean V109IsKey(){
				    return false;
				}
				public Integer V109Length(){
				    return 0;
				}
				public Integer V109Precision(){
				    return 0;
				}
				public String V109Default(){
				
					return "";
				
				}
				public String V109Comment(){
				
				    return "";
				
				}
				public String V109Pattern(){
				
					return "";
				
				}
				public String V109OriginalDbColumnName(){
				
					return "V109";
				
				}

				
			    public String V110;

				public String getV110 () {
					return this.V110;
				}

				public Boolean V110IsNullable(){
				    return true;
				}
				public Boolean V110IsKey(){
				    return false;
				}
				public Integer V110Length(){
				    return 0;
				}
				public Integer V110Precision(){
				    return 0;
				}
				public String V110Default(){
				
					return null;
				
				}
				public String V110Comment(){
				
				    return "";
				
				}
				public String V110Pattern(){
				
					return "";
				
				}
				public String V110OriginalDbColumnName(){
				
					return "V110";
				
				}

				
			    public String V111;

				public String getV111 () {
					return this.V111;
				}

				public Boolean V111IsNullable(){
				    return true;
				}
				public Boolean V111IsKey(){
				    return false;
				}
				public Integer V111Length(){
				    return 0;
				}
				public Integer V111Precision(){
				    return 0;
				}
				public String V111Default(){
				
					return null;
				
				}
				public String V111Comment(){
				
				    return "";
				
				}
				public String V111Pattern(){
				
					return "";
				
				}
				public String V111OriginalDbColumnName(){
				
					return "V111";
				
				}

				
			    public String V112;

				public String getV112 () {
					return this.V112;
				}

				public Boolean V112IsNullable(){
				    return true;
				}
				public Boolean V112IsKey(){
				    return false;
				}
				public Integer V112Length(){
				    return 0;
				}
				public Integer V112Precision(){
				    return 0;
				}
				public String V112Default(){
				
					return null;
				
				}
				public String V112Comment(){
				
				    return "";
				
				}
				public String V112Pattern(){
				
					return "";
				
				}
				public String V112OriginalDbColumnName(){
				
					return "V112";
				
				}

				
			    public BigDecimal V113;

				public BigDecimal getV113 () {
					return this.V113;
				}

				public Boolean V113IsNullable(){
				    return true;
				}
				public Boolean V113IsKey(){
				    return false;
				}
				public Integer V113Length(){
				    return 0;
				}
				public Integer V113Precision(){
				    return 0;
				}
				public String V113Default(){
				
					return null;
				
				}
				public String V113Comment(){
				
				    return "";
				
				}
				public String V113Pattern(){
				
					return "";
				
				}
				public String V113OriginalDbColumnName(){
				
					return "V113";
				
				}

				
			    public String V114;

				public String getV114 () {
					return this.V114;
				}

				public Boolean V114IsNullable(){
				    return true;
				}
				public Boolean V114IsKey(){
				    return false;
				}
				public Integer V114Length(){
				    return 0;
				}
				public Integer V114Precision(){
				    return 0;
				}
				public String V114Default(){
				
					return null;
				
				}
				public String V114Comment(){
				
				    return "";
				
				}
				public String V114Pattern(){
				
					return "";
				
				}
				public String V114OriginalDbColumnName(){
				
					return "V114";
				
				}

				
			    public String V115;

				public String getV115 () {
					return this.V115;
				}

				public Boolean V115IsNullable(){
				    return true;
				}
				public Boolean V115IsKey(){
				    return false;
				}
				public Integer V115Length(){
				    return 0;
				}
				public Integer V115Precision(){
				    return 0;
				}
				public String V115Default(){
				
					return null;
				
				}
				public String V115Comment(){
				
				    return "";
				
				}
				public String V115Pattern(){
				
					return "";
				
				}
				public String V115OriginalDbColumnName(){
				
					return "V115";
				
				}

				
			    public String V116;

				public String getV116 () {
					return this.V116;
				}

				public Boolean V116IsNullable(){
				    return true;
				}
				public Boolean V116IsKey(){
				    return false;
				}
				public Integer V116Length(){
				    return 0;
				}
				public Integer V116Precision(){
				    return 0;
				}
				public String V116Default(){
				
					return null;
				
				}
				public String V116Comment(){
				
				    return "";
				
				}
				public String V116Pattern(){
				
					return "";
				
				}
				public String V116OriginalDbColumnName(){
				
					return "V116";
				
				}

				
			    public String V117;

				public String getV117 () {
					return this.V117;
				}

				public Boolean V117IsNullable(){
				    return true;
				}
				public Boolean V117IsKey(){
				    return false;
				}
				public Integer V117Length(){
				    return 0;
				}
				public Integer V117Precision(){
				    return 0;
				}
				public String V117Default(){
				
					return null;
				
				}
				public String V117Comment(){
				
				    return "";
				
				}
				public String V117Pattern(){
				
					return "";
				
				}
				public String V117OriginalDbColumnName(){
				
					return "V117";
				
				}

				
			    public String V118;

				public String getV118 () {
					return this.V118;
				}

				public Boolean V118IsNullable(){
				    return true;
				}
				public Boolean V118IsKey(){
				    return false;
				}
				public Integer V118Length(){
				    return 0;
				}
				public Integer V118Precision(){
				    return 0;
				}
				public String V118Default(){
				
					return null;
				
				}
				public String V118Comment(){
				
				    return "";
				
				}
				public String V118Pattern(){
				
					return "";
				
				}
				public String V118OriginalDbColumnName(){
				
					return "V118";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readString(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readString(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// String
				
						writeString(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// String
				
						writeString(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+V9);
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
		sb.append(",V100="+V100);
		sb.append(",V101="+V101);
		sb.append(",V102="+V102);
		sb.append(",V103="+V103);
		sb.append(",V104="+String.valueOf(V104));
		sb.append(",V105="+V105);
		sb.append(",V106="+V106);
		sb.append(",V107="+String.valueOf(V107));
		sb.append(",V108="+V108);
		sb.append(",V109="+String.valueOf(V109));
		sb.append(",V110="+V110);
		sb.append(",V111="+V111);
		sb.append(",V112="+V112);
		sb.append(",V113="+String.valueOf(V113));
		sb.append(",V114="+V114);
		sb.append(",V115="+V115);
		sb.append(",V116="+V116);
		sb.append(",V117="+V117);
		sb.append(",V118="+V118);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(salidad_4505Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row110Struct implements routines.system.IPersistableRow<row110Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "YYYY-MM-DD";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				
			    public String V100;

				public String getV100 () {
					return this.V100;
				}

				public Boolean V100IsNullable(){
				    return true;
				}
				public Boolean V100IsKey(){
				    return false;
				}
				public Integer V100Length(){
				    return 0;
				}
				public Integer V100Precision(){
				    return 0;
				}
				public String V100Default(){
				
					return null;
				
				}
				public String V100Comment(){
				
				    return "";
				
				}
				public String V100Pattern(){
				
					return "";
				
				}
				public String V100OriginalDbColumnName(){
				
					return "V100";
				
				}

				
			    public String V101;

				public String getV101 () {
					return this.V101;
				}

				public Boolean V101IsNullable(){
				    return true;
				}
				public Boolean V101IsKey(){
				    return false;
				}
				public Integer V101Length(){
				    return 0;
				}
				public Integer V101Precision(){
				    return 0;
				}
				public String V101Default(){
				
					return null;
				
				}
				public String V101Comment(){
				
				    return "";
				
				}
				public String V101Pattern(){
				
					return "";
				
				}
				public String V101OriginalDbColumnName(){
				
					return "V101";
				
				}

				
			    public String V102;

				public String getV102 () {
					return this.V102;
				}

				public Boolean V102IsNullable(){
				    return true;
				}
				public Boolean V102IsKey(){
				    return false;
				}
				public Integer V102Length(){
				    return 0;
				}
				public Integer V102Precision(){
				    return 0;
				}
				public String V102Default(){
				
					return null;
				
				}
				public String V102Comment(){
				
				    return "";
				
				}
				public String V102Pattern(){
				
					return "";
				
				}
				public String V102OriginalDbColumnName(){
				
					return "V102";
				
				}

				
			    public String V103;

				public String getV103 () {
					return this.V103;
				}

				public Boolean V103IsNullable(){
				    return true;
				}
				public Boolean V103IsKey(){
				    return false;
				}
				public Integer V103Length(){
				    return 0;
				}
				public Integer V103Precision(){
				    return 0;
				}
				public String V103Default(){
				
					return null;
				
				}
				public String V103Comment(){
				
				    return "";
				
				}
				public String V103Pattern(){
				
					return "";
				
				}
				public String V103OriginalDbColumnName(){
				
					return "V103";
				
				}

				
			    public BigDecimal V104;

				public BigDecimal getV104 () {
					return this.V104;
				}

				public Boolean V104IsNullable(){
				    return true;
				}
				public Boolean V104IsKey(){
				    return false;
				}
				public Integer V104Length(){
				    return 0;
				}
				public Integer V104Precision(){
				    return 0;
				}
				public String V104Default(){
				
					return "";
				
				}
				public String V104Comment(){
				
				    return "";
				
				}
				public String V104Pattern(){
				
					return "";
				
				}
				public String V104OriginalDbColumnName(){
				
					return "V104";
				
				}

				
			    public String V105;

				public String getV105 () {
					return this.V105;
				}

				public Boolean V105IsNullable(){
				    return true;
				}
				public Boolean V105IsKey(){
				    return false;
				}
				public Integer V105Length(){
				    return 0;
				}
				public Integer V105Precision(){
				    return 0;
				}
				public String V105Default(){
				
					return null;
				
				}
				public String V105Comment(){
				
				    return "";
				
				}
				public String V105Pattern(){
				
					return "";
				
				}
				public String V105OriginalDbColumnName(){
				
					return "V105";
				
				}

				
			    public String V106;

				public String getV106 () {
					return this.V106;
				}

				public Boolean V106IsNullable(){
				    return true;
				}
				public Boolean V106IsKey(){
				    return false;
				}
				public Integer V106Length(){
				    return 0;
				}
				public Integer V106Precision(){
				    return 0;
				}
				public String V106Default(){
				
					return null;
				
				}
				public String V106Comment(){
				
				    return "";
				
				}
				public String V106Pattern(){
				
					return "";
				
				}
				public String V106OriginalDbColumnName(){
				
					return "V106";
				
				}

				
			    public BigDecimal V107;

				public BigDecimal getV107 () {
					return this.V107;
				}

				public Boolean V107IsNullable(){
				    return true;
				}
				public Boolean V107IsKey(){
				    return false;
				}
				public Integer V107Length(){
				    return 0;
				}
				public Integer V107Precision(){
				    return 0;
				}
				public String V107Default(){
				
					return "";
				
				}
				public String V107Comment(){
				
				    return "";
				
				}
				public String V107Pattern(){
				
					return "";
				
				}
				public String V107OriginalDbColumnName(){
				
					return "V107";
				
				}

				
			    public String V108;

				public String getV108 () {
					return this.V108;
				}

				public Boolean V108IsNullable(){
				    return true;
				}
				public Boolean V108IsKey(){
				    return false;
				}
				public Integer V108Length(){
				    return 0;
				}
				public Integer V108Precision(){
				    return 0;
				}
				public String V108Default(){
				
					return null;
				
				}
				public String V108Comment(){
				
				    return "";
				
				}
				public String V108Pattern(){
				
					return "";
				
				}
				public String V108OriginalDbColumnName(){
				
					return "V108";
				
				}

				
			    public BigDecimal V109;

				public BigDecimal getV109 () {
					return this.V109;
				}

				public Boolean V109IsNullable(){
				    return true;
				}
				public Boolean V109IsKey(){
				    return false;
				}
				public Integer V109Length(){
				    return 0;
				}
				public Integer V109Precision(){
				    return 0;
				}
				public String V109Default(){
				
					return "";
				
				}
				public String V109Comment(){
				
				    return "";
				
				}
				public String V109Pattern(){
				
					return "";
				
				}
				public String V109OriginalDbColumnName(){
				
					return "V109";
				
				}

				
			    public String V110;

				public String getV110 () {
					return this.V110;
				}

				public Boolean V110IsNullable(){
				    return true;
				}
				public Boolean V110IsKey(){
				    return false;
				}
				public Integer V110Length(){
				    return 0;
				}
				public Integer V110Precision(){
				    return 0;
				}
				public String V110Default(){
				
					return null;
				
				}
				public String V110Comment(){
				
				    return "";
				
				}
				public String V110Pattern(){
				
					return "";
				
				}
				public String V110OriginalDbColumnName(){
				
					return "V110";
				
				}

				
			    public String V111;

				public String getV111 () {
					return this.V111;
				}

				public Boolean V111IsNullable(){
				    return true;
				}
				public Boolean V111IsKey(){
				    return false;
				}
				public Integer V111Length(){
				    return 0;
				}
				public Integer V111Precision(){
				    return 0;
				}
				public String V111Default(){
				
					return null;
				
				}
				public String V111Comment(){
				
				    return "";
				
				}
				public String V111Pattern(){
				
					return "";
				
				}
				public String V111OriginalDbColumnName(){
				
					return "V111";
				
				}

				
			    public String V112;

				public String getV112 () {
					return this.V112;
				}

				public Boolean V112IsNullable(){
				    return true;
				}
				public Boolean V112IsKey(){
				    return false;
				}
				public Integer V112Length(){
				    return 0;
				}
				public Integer V112Precision(){
				    return 0;
				}
				public String V112Default(){
				
					return null;
				
				}
				public String V112Comment(){
				
				    return "";
				
				}
				public String V112Pattern(){
				
					return "";
				
				}
				public String V112OriginalDbColumnName(){
				
					return "V112";
				
				}

				
			    public BigDecimal V113;

				public BigDecimal getV113 () {
					return this.V113;
				}

				public Boolean V113IsNullable(){
				    return true;
				}
				public Boolean V113IsKey(){
				    return false;
				}
				public Integer V113Length(){
				    return 0;
				}
				public Integer V113Precision(){
				    return 0;
				}
				public String V113Default(){
				
					return null;
				
				}
				public String V113Comment(){
				
				    return "";
				
				}
				public String V113Pattern(){
				
					return "";
				
				}
				public String V113OriginalDbColumnName(){
				
					return "V113";
				
				}

				
			    public String V114;

				public String getV114 () {
					return this.V114;
				}

				public Boolean V114IsNullable(){
				    return true;
				}
				public Boolean V114IsKey(){
				    return false;
				}
				public Integer V114Length(){
				    return 0;
				}
				public Integer V114Precision(){
				    return 0;
				}
				public String V114Default(){
				
					return null;
				
				}
				public String V114Comment(){
				
				    return "";
				
				}
				public String V114Pattern(){
				
					return "";
				
				}
				public String V114OriginalDbColumnName(){
				
					return "V114";
				
				}

				
			    public String V115;

				public String getV115 () {
					return this.V115;
				}

				public Boolean V115IsNullable(){
				    return true;
				}
				public Boolean V115IsKey(){
				    return false;
				}
				public Integer V115Length(){
				    return 0;
				}
				public Integer V115Precision(){
				    return 0;
				}
				public String V115Default(){
				
					return null;
				
				}
				public String V115Comment(){
				
				    return "";
				
				}
				public String V115Pattern(){
				
					return "";
				
				}
				public String V115OriginalDbColumnName(){
				
					return "V115";
				
				}

				
			    public String V116;

				public String getV116 () {
					return this.V116;
				}

				public Boolean V116IsNullable(){
				    return true;
				}
				public Boolean V116IsKey(){
				    return false;
				}
				public Integer V116Length(){
				    return 0;
				}
				public Integer V116Precision(){
				    return 0;
				}
				public String V116Default(){
				
					return null;
				
				}
				public String V116Comment(){
				
				    return "";
				
				}
				public String V116Pattern(){
				
					return "";
				
				}
				public String V116OriginalDbColumnName(){
				
					return "V116";
				
				}

				
			    public String V117;

				public String getV117 () {
					return this.V117;
				}

				public Boolean V117IsNullable(){
				    return true;
				}
				public Boolean V117IsKey(){
				    return false;
				}
				public Integer V117Length(){
				    return 0;
				}
				public Integer V117Precision(){
				    return 0;
				}
				public String V117Default(){
				
					return null;
				
				}
				public String V117Comment(){
				
				    return "";
				
				}
				public String V117Pattern(){
				
					return "";
				
				}
				public String V117OriginalDbColumnName(){
				
					return "V117";
				
				}

				
			    public String V118;

				public String getV118 () {
					return this.V118;
				}

				public Boolean V118IsNullable(){
				    return true;
				}
				public Boolean V118IsKey(){
				    return false;
				}
				public Integer V118Length(){
				    return 0;
				}
				public Integer V118Precision(){
				    return 0;
				}
				public String V118Default(){
				
					return null;
				
				}
				public String V118Comment(){
				
				    return "";
				
				}
				public String V118Pattern(){
				
					return "";
				
				}
				public String V118OriginalDbColumnName(){
				
					return "V118";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
		sb.append(",V100="+V100);
		sb.append(",V101="+V101);
		sb.append(",V102="+V102);
		sb.append(",V103="+V103);
		sb.append(",V104="+String.valueOf(V104));
		sb.append(",V105="+V105);
		sb.append(",V106="+V106);
		sb.append(",V107="+String.valueOf(V107));
		sb.append(",V108="+V108);
		sb.append(",V109="+String.valueOf(V109));
		sb.append(",V110="+V110);
		sb.append(",V111="+V111);
		sb.append(",V112="+V112);
		sb.append(",V113="+String.valueOf(V113));
		sb.append(",V114="+V114);
		sb.append(",V115="+V115);
		sb.append(",V116="+V116);
		sb.append(",V117="+V117);
		sb.append(",V118="+V118);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row110Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_5Struct implements routines.system.IPersistableRow<Salida_5Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "YYYY-MM-DD";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				
			    public String V100;

				public String getV100 () {
					return this.V100;
				}

				public Boolean V100IsNullable(){
				    return true;
				}
				public Boolean V100IsKey(){
				    return false;
				}
				public Integer V100Length(){
				    return 0;
				}
				public Integer V100Precision(){
				    return 0;
				}
				public String V100Default(){
				
					return null;
				
				}
				public String V100Comment(){
				
				    return "";
				
				}
				public String V100Pattern(){
				
					return "";
				
				}
				public String V100OriginalDbColumnName(){
				
					return "V100";
				
				}

				
			    public String V101;

				public String getV101 () {
					return this.V101;
				}

				public Boolean V101IsNullable(){
				    return true;
				}
				public Boolean V101IsKey(){
				    return false;
				}
				public Integer V101Length(){
				    return 0;
				}
				public Integer V101Precision(){
				    return 0;
				}
				public String V101Default(){
				
					return null;
				
				}
				public String V101Comment(){
				
				    return "";
				
				}
				public String V101Pattern(){
				
					return "";
				
				}
				public String V101OriginalDbColumnName(){
				
					return "V101";
				
				}

				
			    public String V102;

				public String getV102 () {
					return this.V102;
				}

				public Boolean V102IsNullable(){
				    return true;
				}
				public Boolean V102IsKey(){
				    return false;
				}
				public Integer V102Length(){
				    return 0;
				}
				public Integer V102Precision(){
				    return 0;
				}
				public String V102Default(){
				
					return null;
				
				}
				public String V102Comment(){
				
				    return "";
				
				}
				public String V102Pattern(){
				
					return "";
				
				}
				public String V102OriginalDbColumnName(){
				
					return "V102";
				
				}

				
			    public String V103;

				public String getV103 () {
					return this.V103;
				}

				public Boolean V103IsNullable(){
				    return true;
				}
				public Boolean V103IsKey(){
				    return false;
				}
				public Integer V103Length(){
				    return 0;
				}
				public Integer V103Precision(){
				    return 0;
				}
				public String V103Default(){
				
					return null;
				
				}
				public String V103Comment(){
				
				    return "";
				
				}
				public String V103Pattern(){
				
					return "";
				
				}
				public String V103OriginalDbColumnName(){
				
					return "V103";
				
				}

				
			    public BigDecimal V104;

				public BigDecimal getV104 () {
					return this.V104;
				}

				public Boolean V104IsNullable(){
				    return true;
				}
				public Boolean V104IsKey(){
				    return false;
				}
				public Integer V104Length(){
				    return 0;
				}
				public Integer V104Precision(){
				    return 0;
				}
				public String V104Default(){
				
					return "";
				
				}
				public String V104Comment(){
				
				    return "";
				
				}
				public String V104Pattern(){
				
					return "";
				
				}
				public String V104OriginalDbColumnName(){
				
					return "V104";
				
				}

				
			    public String V105;

				public String getV105 () {
					return this.V105;
				}

				public Boolean V105IsNullable(){
				    return true;
				}
				public Boolean V105IsKey(){
				    return false;
				}
				public Integer V105Length(){
				    return 0;
				}
				public Integer V105Precision(){
				    return 0;
				}
				public String V105Default(){
				
					return null;
				
				}
				public String V105Comment(){
				
				    return "";
				
				}
				public String V105Pattern(){
				
					return "";
				
				}
				public String V105OriginalDbColumnName(){
				
					return "V105";
				
				}

				
			    public String V106;

				public String getV106 () {
					return this.V106;
				}

				public Boolean V106IsNullable(){
				    return true;
				}
				public Boolean V106IsKey(){
				    return false;
				}
				public Integer V106Length(){
				    return 0;
				}
				public Integer V106Precision(){
				    return 0;
				}
				public String V106Default(){
				
					return null;
				
				}
				public String V106Comment(){
				
				    return "";
				
				}
				public String V106Pattern(){
				
					return "";
				
				}
				public String V106OriginalDbColumnName(){
				
					return "V106";
				
				}

				
			    public BigDecimal V107;

				public BigDecimal getV107 () {
					return this.V107;
				}

				public Boolean V107IsNullable(){
				    return true;
				}
				public Boolean V107IsKey(){
				    return false;
				}
				public Integer V107Length(){
				    return 0;
				}
				public Integer V107Precision(){
				    return 0;
				}
				public String V107Default(){
				
					return "";
				
				}
				public String V107Comment(){
				
				    return "";
				
				}
				public String V107Pattern(){
				
					return "";
				
				}
				public String V107OriginalDbColumnName(){
				
					return "V107";
				
				}

				
			    public String V108;

				public String getV108 () {
					return this.V108;
				}

				public Boolean V108IsNullable(){
				    return true;
				}
				public Boolean V108IsKey(){
				    return false;
				}
				public Integer V108Length(){
				    return 0;
				}
				public Integer V108Precision(){
				    return 0;
				}
				public String V108Default(){
				
					return null;
				
				}
				public String V108Comment(){
				
				    return "";
				
				}
				public String V108Pattern(){
				
					return "";
				
				}
				public String V108OriginalDbColumnName(){
				
					return "V108";
				
				}

				
			    public BigDecimal V109;

				public BigDecimal getV109 () {
					return this.V109;
				}

				public Boolean V109IsNullable(){
				    return true;
				}
				public Boolean V109IsKey(){
				    return false;
				}
				public Integer V109Length(){
				    return 0;
				}
				public Integer V109Precision(){
				    return 0;
				}
				public String V109Default(){
				
					return "";
				
				}
				public String V109Comment(){
				
				    return "";
				
				}
				public String V109Pattern(){
				
					return "";
				
				}
				public String V109OriginalDbColumnName(){
				
					return "V109";
				
				}

				
			    public String V110;

				public String getV110 () {
					return this.V110;
				}

				public Boolean V110IsNullable(){
				    return true;
				}
				public Boolean V110IsKey(){
				    return false;
				}
				public Integer V110Length(){
				    return 0;
				}
				public Integer V110Precision(){
				    return 0;
				}
				public String V110Default(){
				
					return null;
				
				}
				public String V110Comment(){
				
				    return "";
				
				}
				public String V110Pattern(){
				
					return "";
				
				}
				public String V110OriginalDbColumnName(){
				
					return "V110";
				
				}

				
			    public String V111;

				public String getV111 () {
					return this.V111;
				}

				public Boolean V111IsNullable(){
				    return true;
				}
				public Boolean V111IsKey(){
				    return false;
				}
				public Integer V111Length(){
				    return 0;
				}
				public Integer V111Precision(){
				    return 0;
				}
				public String V111Default(){
				
					return null;
				
				}
				public String V111Comment(){
				
				    return "";
				
				}
				public String V111Pattern(){
				
					return "";
				
				}
				public String V111OriginalDbColumnName(){
				
					return "V111";
				
				}

				
			    public String V112;

				public String getV112 () {
					return this.V112;
				}

				public Boolean V112IsNullable(){
				    return true;
				}
				public Boolean V112IsKey(){
				    return false;
				}
				public Integer V112Length(){
				    return 0;
				}
				public Integer V112Precision(){
				    return 0;
				}
				public String V112Default(){
				
					return null;
				
				}
				public String V112Comment(){
				
				    return "";
				
				}
				public String V112Pattern(){
				
					return "";
				
				}
				public String V112OriginalDbColumnName(){
				
					return "V112";
				
				}

				
			    public BigDecimal V113;

				public BigDecimal getV113 () {
					return this.V113;
				}

				public Boolean V113IsNullable(){
				    return true;
				}
				public Boolean V113IsKey(){
				    return false;
				}
				public Integer V113Length(){
				    return 0;
				}
				public Integer V113Precision(){
				    return 0;
				}
				public String V113Default(){
				
					return null;
				
				}
				public String V113Comment(){
				
				    return "";
				
				}
				public String V113Pattern(){
				
					return "";
				
				}
				public String V113OriginalDbColumnName(){
				
					return "V113";
				
				}

				
			    public String V114;

				public String getV114 () {
					return this.V114;
				}

				public Boolean V114IsNullable(){
				    return true;
				}
				public Boolean V114IsKey(){
				    return false;
				}
				public Integer V114Length(){
				    return 0;
				}
				public Integer V114Precision(){
				    return 0;
				}
				public String V114Default(){
				
					return null;
				
				}
				public String V114Comment(){
				
				    return "";
				
				}
				public String V114Pattern(){
				
					return "";
				
				}
				public String V114OriginalDbColumnName(){
				
					return "V114";
				
				}

				
			    public String V115;

				public String getV115 () {
					return this.V115;
				}

				public Boolean V115IsNullable(){
				    return true;
				}
				public Boolean V115IsKey(){
				    return false;
				}
				public Integer V115Length(){
				    return 0;
				}
				public Integer V115Precision(){
				    return 0;
				}
				public String V115Default(){
				
					return null;
				
				}
				public String V115Comment(){
				
				    return "";
				
				}
				public String V115Pattern(){
				
					return "";
				
				}
				public String V115OriginalDbColumnName(){
				
					return "V115";
				
				}

				
			    public String V116;

				public String getV116 () {
					return this.V116;
				}

				public Boolean V116IsNullable(){
				    return true;
				}
				public Boolean V116IsKey(){
				    return false;
				}
				public Integer V116Length(){
				    return 0;
				}
				public Integer V116Precision(){
				    return 0;
				}
				public String V116Default(){
				
					return null;
				
				}
				public String V116Comment(){
				
				    return "";
				
				}
				public String V116Pattern(){
				
					return "";
				
				}
				public String V116OriginalDbColumnName(){
				
					return "V116";
				
				}

				
			    public String V117;

				public String getV117 () {
					return this.V117;
				}

				public Boolean V117IsNullable(){
				    return true;
				}
				public Boolean V117IsKey(){
				    return false;
				}
				public Integer V117Length(){
				    return 0;
				}
				public Integer V117Precision(){
				    return 0;
				}
				public String V117Default(){
				
					return null;
				
				}
				public String V117Comment(){
				
				    return "";
				
				}
				public String V117Pattern(){
				
					return "";
				
				}
				public String V117OriginalDbColumnName(){
				
					return "V117";
				
				}

				
			    public String V118;

				public String getV118 () {
					return this.V118;
				}

				public Boolean V118IsNullable(){
				    return true;
				}
				public Boolean V118IsKey(){
				    return false;
				}
				public Integer V118Length(){
				    return 0;
				}
				public Integer V118Precision(){
				    return 0;
				}
				public String V118Default(){
				
					return null;
				
				}
				public String V118Comment(){
				
				    return "";
				
				}
				public String V118Pattern(){
				
					return "";
				
				}
				public String V118OriginalDbColumnName(){
				
					return "V118";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
		sb.append(",V100="+V100);
		sb.append(",V101="+V101);
		sb.append(",V102="+V102);
		sb.append(",V103="+V103);
		sb.append(",V104="+String.valueOf(V104));
		sb.append(",V105="+V105);
		sb.append(",V106="+V106);
		sb.append(",V107="+String.valueOf(V107));
		sb.append(",V108="+V108);
		sb.append(",V109="+String.valueOf(V109));
		sb.append(",V110="+V110);
		sb.append(",V111="+V111);
		sb.append(",V112="+V112);
		sb.append(",V113="+String.valueOf(V113));
		sb.append(",V114="+V114);
		sb.append(",V115="+V115);
		sb.append(",V116="+V116);
		sb.append(",V117="+V117);
		sb.append(",V118="+V118);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_4Struct implements routines.system.IPersistableRow<Salida_4Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_Prev4Struct implements routines.system.IPersistableRow<Salida_Prev4Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_Prev4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_3Struct implements routines.system.IPersistableRow<Salida_3Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_Prev3Struct implements routines.system.IPersistableRow<Salida_Prev3Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_Prev3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_2Struct implements routines.system.IPersistableRow<Salida_2Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_Pre2Struct implements routines.system.IPersistableRow<Salida_Pre2Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_Pre2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_1Struct implements routines.system.IPersistableRow<Salida_1Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Salida_Pre1Struct implements routines.system.IPersistableRow<Salida_Pre1Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return 0;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public Integer Edad_year;

				public Integer getEdad_year () {
					return this.Edad_year;
				}

				public Boolean Edad_yearIsNullable(){
				    return true;
				}
				public Boolean Edad_yearIsKey(){
				    return false;
				}
				public Integer Edad_yearLength(){
				    return null;
				}
				public Integer Edad_yearPrecision(){
				    return null;
				}
				public String Edad_yearDefault(){
				
					return null;
				
				}
				public String Edad_yearComment(){
				
				    return "";
				
				}
				public String Edad_yearPattern(){
				
					return "";
				
				}
				public String Edad_yearOriginalDbColumnName(){
				
					return "Edad_year";
				
				}

				
			    public Integer Edad_month;

				public Integer getEdad_month () {
					return this.Edad_month;
				}

				public Boolean Edad_monthIsNullable(){
				    return true;
				}
				public Boolean Edad_monthIsKey(){
				    return false;
				}
				public Integer Edad_monthLength(){
				    return null;
				}
				public Integer Edad_monthPrecision(){
				    return null;
				}
				public String Edad_monthDefault(){
				
					return null;
				
				}
				public String Edad_monthComment(){
				
				    return "";
				
				}
				public String Edad_monthPattern(){
				
					return "";
				
				}
				public String Edad_monthOriginalDbColumnName(){
				
					return "Edad_month";
				
				}

				
			    public Integer Edad_day;

				public Integer getEdad_day () {
					return this.Edad_day;
				}

				public Boolean Edad_dayIsNullable(){
				    return true;
				}
				public Boolean Edad_dayIsKey(){
				    return false;
				}
				public Integer Edad_dayLength(){
				    return null;
				}
				public Integer Edad_dayPrecision(){
				    return null;
				}
				public String Edad_dayDefault(){
				
					return null;
				
				}
				public String Edad_dayComment(){
				
				    return "";
				
				}
				public String Edad_dayPattern(){
				
					return "";
				
				}
				public String Edad_dayOriginalDbColumnName(){
				
					return "Edad_day";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
					this.EDAD = readString(dis);
					
						this.Edad_year = readInteger(dis);
					
						this.Edad_month = readInteger(dis);
					
						this.Edad_day = readInteger(dis);
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// String
				
						writeString(this.EDAD,dos);
					
					// Integer
				
						writeInteger(this.Edad_year,dos);
					
					// Integer
				
						writeInteger(this.Edad_month,dos);
					
					// Integer
				
						writeInteger(this.Edad_day,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",EDAD="+EDAD);
		sb.append(",Edad_year="+String.valueOf(Edad_year));
		sb.append(",Edad_month="+String.valueOf(Edad_month));
		sb.append(",Edad_day="+String.valueOf(Edad_day));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Salida_Pre1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return null;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return true;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 0;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return true;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.EDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.EDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",EDAD="+EDAD);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_1Struct implements routines.system.IPersistableRow<after_tOracleInput_1Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return null;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return true;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public java.util.Date V9;

				public java.util.Date getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 0;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return true;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String EDAD;

				public String getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 4000;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.EDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readDate(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.EDAD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// java.util.Date
				
						writeDate(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PERSONAS_ID="+String.valueOf(PERSONAS_ID));
		sb.append(",V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+String.valueOf(V9));
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",EDAD="+EDAD);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_2Process(globalMap);
		tOracleInput_3Process(globalMap);
		tOracleInput_4Process(globalMap);
		tOracleInput_5Process(globalMap);
		tOracleInput_6Process(globalMap);
		tOracleInput_7Process(globalMap);
		tOracleInput_8Process(globalMap);
		tOracleInput_9Process(globalMap);
		tOracleInput_10Process(globalMap);
		tOracleInput_11Process(globalMap);
		tOracleInput_58Process(globalMap);
		tOracleInput_12Process(globalMap);
		tOracleInput_13Process(globalMap);
		tOracleInput_14Process(globalMap);
		tOracleInput_15Process(globalMap);
		tOracleInput_16Process(globalMap);
		tOracleInput_17Process(globalMap);
		tOracleInput_18Process(globalMap);
		tOracleInput_19Process(globalMap);
		tOracleInput_20Process(globalMap);
		tOracleInput_21Process(globalMap);
		tOracleInput_22Process(globalMap);
		tOracleInput_23Process(globalMap);
		tOracleInput_24Process(globalMap);
		tOracleInput_25Process(globalMap);
		tOracleInput_26Process(globalMap);
		tOracleInput_27Process(globalMap);
		tOracleInput_28Process(globalMap);
		tOracleInput_29Process(globalMap);
		tOracleInput_30Process(globalMap);
		tOracleInput_31Process(globalMap);
		tOracleInput_101Process(globalMap);
		tOracleInput_106Process(globalMap);
		tOracleInput_32Process(globalMap);
		tOracleInput_104Process(globalMap);
		tOracleInput_33Process(globalMap);
		tOracleInput_34Process(globalMap);
		tOracleInput_94Process(globalMap);
		tOracleInput_35Process(globalMap);
		tOracleInput_36Process(globalMap);
		tOracleInput_103Process(globalMap);
		tOracleInput_105Process(globalMap);
		tOracleInput_37Process(globalMap);
		tOracleInput_102Process(globalMap);
		tOracleInput_99Process(globalMap);
		tOracleInput_95Process(globalMap);
		tOracleInput_96Process(globalMap);
		tOracleInput_97Process(globalMap);
		tOracleInput_98Process(globalMap);
		tOracleInput_100Process(globalMap);
		tOracleInput_90Process(globalMap);
		tOracleInput_88Process(globalMap);
		tOracleInput_89Process(globalMap);
		tOracleInput_91Process(globalMap);
		tOracleInput_92Process(globalMap);
		tOracleInput_93Process(globalMap);
		tOracleInput_87Process(globalMap);
		tOracleInput_78Process(globalMap);
		tOracleInput_79Process(globalMap);
		tOracleInput_80Process(globalMap);
		tOracleInput_81Process(globalMap);
		tOracleInput_82Process(globalMap);
		tOracleInput_83Process(globalMap);
		tOracleInput_84Process(globalMap);
		tOracleInput_85Process(globalMap);
		tOracleInput_86Process(globalMap);
		tOracleInput_77Process(globalMap);
		tOracleInput_76Process(globalMap);
		tOracleInput_75Process(globalMap);
		tOracleInput_74Process(globalMap);
		tOracleInput_73Process(globalMap);
		tOracleInput_72Process(globalMap);
		tOracleInput_71Process(globalMap);
		tOracleInput_70Process(globalMap);
		tOracleInput_69Process(globalMap);
		tOracleInput_68Process(globalMap);
		tOracleInput_60Process(globalMap);
		tOracleInput_61Process(globalMap);
		tOracleInput_62Process(globalMap);
		tOracleInput_63Process(globalMap);
		tOracleInput_64Process(globalMap);
		tOracleInput_65Process(globalMap);
		tOracleInput_66Process(globalMap);
		tOracleInput_67Process(globalMap);
		tOracleInput_59Process(globalMap);
		tOracleInput_56Process(globalMap);
		tOracleInput_57Process(globalMap);
		tOracleInput_55Process(globalMap);
		tOracleInput_43Process(globalMap);
		tOracleInput_44Process(globalMap);
		tOracleInput_48Process(globalMap);
		tOracleInput_46Process(globalMap);
		tOracleInput_45Process(globalMap);
		tOracleInput_47Process(globalMap);
		tOracleInput_49Process(globalMap);
		tOracleInput_50Process(globalMap);
		tOracleInput_51Process(globalMap);
		tOracleInput_52Process(globalMap);
		tOracleInput_53Process(globalMap);
		tOracleInput_54Process(globalMap);
		tOracleInput_38Process(globalMap);
		tOracleInput_39Process(globalMap);
		tOracleInput_40Process(globalMap);
		tOracleInput_41Process(globalMap);
		tOracleInput_42Process(globalMap);

		row1Struct row1 = new row1Struct();
Salida_Pre1Struct Salida_Pre1 = new Salida_Pre1Struct();
Salida_1Struct Salida_1 = new Salida_1Struct();
Salida_Pre2Struct Salida_Pre2 = new Salida_Pre2Struct();
Salida_2Struct Salida_2 = new Salida_2Struct();
Salida_Prev3Struct Salida_Prev3 = new Salida_Prev3Struct();
Salida_3Struct Salida_3 = new Salida_3Struct();
Salida_Prev4Struct Salida_Prev4 = new Salida_Prev4Struct();
Salida_4Struct Salida_4 = new Salida_4Struct();
Salida_5Struct Salida_5 = new Salida_5Struct();
row110Struct row110 = new row110Struct();
salidad_4505Struct salidad_4505 = new salidad_4505Struct();















	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"salidad_4505");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<salidad_4505Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_Resolucion4505_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<salidad_4505Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row110");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
	String fnacimiento;
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
salidad_4505Struct salidad_4505_tmp = new salidad_4505Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_5");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_4");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct> tHash_Lookup_row89 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct>) 
					globalMap.get( "tHash_Lookup_row89" ))
					;					
					
	

row89Struct row89HashKey = new row89Struct();
row89Struct row89Default = new row89Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row90Struct> tHash_Lookup_row90 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row90Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row90Struct>) 
					globalMap.get( "tHash_Lookup_row90" ))
					;					
					
	

row90Struct row90HashKey = new row90Struct();
row90Struct row90Default = new row90Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row91Struct> tHash_Lookup_row91 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row91Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row91Struct>) 
					globalMap.get( "tHash_Lookup_row91" ))
					;					
					
	

row91Struct row91HashKey = new row91Struct();
row91Struct row91Default = new row91Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row92Struct> tHash_Lookup_row92 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row92Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row92Struct>) 
					globalMap.get( "tHash_Lookup_row92" ))
					;					
					
	

row92Struct row92HashKey = new row92Struct();
row92Struct row92Default = new row92Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row93Struct> tHash_Lookup_row93 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row93Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row93Struct>) 
					globalMap.get( "tHash_Lookup_row93" ))
					;					
					
	

row93Struct row93HashKey = new row93Struct();
row93Struct row93Default = new row93Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row94Struct> tHash_Lookup_row94 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row94Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row94Struct>) 
					globalMap.get( "tHash_Lookup_row94" ))
					;					
					
	

row94Struct row94HashKey = new row94Struct();
row94Struct row94Default = new row94Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row95Struct> tHash_Lookup_row95 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row95Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row95Struct>) 
					globalMap.get( "tHash_Lookup_row95" ))
					;					
					
	

row95Struct row95HashKey = new row95Struct();
row95Struct row95Default = new row95Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row96Struct> tHash_Lookup_row96 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row96Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row96Struct>) 
					globalMap.get( "tHash_Lookup_row96" ))
					;					
					
	

row96Struct row96HashKey = new row96Struct();
row96Struct row96Default = new row96Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row97Struct> tHash_Lookup_row97 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row97Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row97Struct>) 
					globalMap.get( "tHash_Lookup_row97" ))
					;					
					
	

row97Struct row97HashKey = new row97Struct();
row97Struct row97Default = new row97Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row98Struct> tHash_Lookup_row98 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row98Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row98Struct>) 
					globalMap.get( "tHash_Lookup_row98" ))
					;					
					
	

row98Struct row98HashKey = new row98Struct();
row98Struct row98Default = new row98Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row99Struct> tHash_Lookup_row99 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row99Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row99Struct>) 
					globalMap.get( "tHash_Lookup_row99" ))
					;					
					
	

row99Struct row99HashKey = new row99Struct();
row99Struct row99Default = new row99Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row100Struct> tHash_Lookup_row100 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row100Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row100Struct>) 
					globalMap.get( "tHash_Lookup_row100" ))
					;					
					
	

row100Struct row100HashKey = new row100Struct();
row100Struct row100Default = new row100Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row101Struct> tHash_Lookup_row101 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row101Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row101Struct>) 
					globalMap.get( "tHash_Lookup_row101" ))
					;					
					
	

row101Struct row101HashKey = new row101Struct();
row101Struct row101Default = new row101Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row102Struct> tHash_Lookup_row102 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row102Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row102Struct>) 
					globalMap.get( "tHash_Lookup_row102" ))
					;					
					
	

row102Struct row102HashKey = new row102Struct();
row102Struct row102Default = new row102Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row103Struct> tHash_Lookup_row103 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row103Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row103Struct>) 
					globalMap.get( "tHash_Lookup_row103" ))
					;					
					
	

row103Struct row103HashKey = new row103Struct();
row103Struct row103Default = new row103Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct> tHash_Lookup_row104 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct>) 
					globalMap.get( "tHash_Lookup_row104" ))
					;					
					
	

row104Struct row104HashKey = new row104Struct();
row104Struct row104Default = new row104Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row105Struct> tHash_Lookup_row105 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row105Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row105Struct>) 
					globalMap.get( "tHash_Lookup_row105" ))
					;					
					
	

row105Struct row105HashKey = new row105Struct();
row105Struct row105Default = new row105Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct> tHash_Lookup_row106 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct>) 
					globalMap.get( "tHash_Lookup_row106" ))
					;					
					
	

row106Struct row106HashKey = new row106Struct();
row106Struct row106Default = new row106Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row107Struct> tHash_Lookup_row107 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row107Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row107Struct>) 
					globalMap.get( "tHash_Lookup_row107" ))
					;					
					
	

row107Struct row107HashKey = new row107Struct();
row107Struct row107Default = new row107Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
Salida_5Struct Salida_5_tmp = new Salida_5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_Prev4");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_3");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct> tHash_Lookup_row67 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct>) 
					globalMap.get( "tHash_Lookup_row67" ))
					;					
					
	

row67Struct row67HashKey = new row67Struct();
row67Struct row67Default = new row67Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct>) 
					globalMap.get( "tHash_Lookup_row68" ))
					;					
					
	

row68Struct row68HashKey = new row68Struct();
row68Struct row68Default = new row68Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct> tHash_Lookup_row69 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct>) 
					globalMap.get( "tHash_Lookup_row69" ))
					;					
					
	

row69Struct row69HashKey = new row69Struct();
row69Struct row69Default = new row69Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct> tHash_Lookup_row70 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct>) 
					globalMap.get( "tHash_Lookup_row70" ))
					;					
					
	

row70Struct row70HashKey = new row70Struct();
row70Struct row70Default = new row70Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct> tHash_Lookup_row46 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct>) 
					globalMap.get( "tHash_Lookup_row46" ))
					;					
					
	

row46Struct row46HashKey = new row46Struct();
row46Struct row46Default = new row46Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct> tHash_Lookup_row71 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct>) 
					globalMap.get( "tHash_Lookup_row71" ))
					;					
					
	

row71Struct row71HashKey = new row71Struct();
row71Struct row71Default = new row71Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) 
					globalMap.get( "tHash_Lookup_row72" ))
					;					
					
	

row72Struct row72HashKey = new row72Struct();
row72Struct row72Default = new row72Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row73Struct> tHash_Lookup_row73 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row73Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row73Struct>) 
					globalMap.get( "tHash_Lookup_row73" ))
					;					
					
	

row73Struct row73HashKey = new row73Struct();
row73Struct row73Default = new row73Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct> tHash_Lookup_row74 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct>) 
					globalMap.get( "tHash_Lookup_row74" ))
					;					
					
	

row74Struct row74HashKey = new row74Struct();
row74Struct row74Default = new row74Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row75Struct> tHash_Lookup_row75 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row75Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row75Struct>) 
					globalMap.get( "tHash_Lookup_row75" ))
					;					
					
	

row75Struct row75HashKey = new row75Struct();
row75Struct row75Default = new row75Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row76Struct> tHash_Lookup_row76 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row76Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row76Struct>) 
					globalMap.get( "tHash_Lookup_row76" ))
					;					
					
	

row76Struct row76HashKey = new row76Struct();
row76Struct row76Default = new row76Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) 
					globalMap.get( "tHash_Lookup_row77" ))
					;					
					
	

row77Struct row77HashKey = new row77Struct();
row77Struct row77Default = new row77Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row78Struct> tHash_Lookup_row78 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row78Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row78Struct>) 
					globalMap.get( "tHash_Lookup_row78" ))
					;					
					
	

row78Struct row78HashKey = new row78Struct();
row78Struct row78Default = new row78Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row79Struct> tHash_Lookup_row79 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row79Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row79Struct>) 
					globalMap.get( "tHash_Lookup_row79" ))
					;					
					
	

row79Struct row79HashKey = new row79Struct();
row79Struct row79Default = new row79Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) 
					globalMap.get( "tHash_Lookup_row80" ))
					;					
					
	

row80Struct row80HashKey = new row80Struct();
row80Struct row80Default = new row80Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row81Struct> tHash_Lookup_row81 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row81Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row81Struct>) 
					globalMap.get( "tHash_Lookup_row81" ))
					;					
					
	

row81Struct row81HashKey = new row81Struct();
row81Struct row81Default = new row81Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row82Struct> tHash_Lookup_row82 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row82Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row82Struct>) 
					globalMap.get( "tHash_Lookup_row82" ))
					;					
					
	

row82Struct row82HashKey = new row82Struct();
row82Struct row82Default = new row82Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct> tHash_Lookup_row83 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct>) 
					globalMap.get( "tHash_Lookup_row83" ))
					;					
					
	

row83Struct row83HashKey = new row83Struct();
row83Struct row83Default = new row83Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct> tHash_Lookup_row84 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct>) 
					globalMap.get( "tHash_Lookup_row84" ))
					;					
					
	

row84Struct row84HashKey = new row84Struct();
row84Struct row84Default = new row84Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct>) 
					globalMap.get( "tHash_Lookup_row85" ))
					;					
					
	

row85Struct row85HashKey = new row85Struct();
row85Struct row85Default = new row85Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct> tHash_Lookup_row86 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct>) 
					globalMap.get( "tHash_Lookup_row86" ))
					;					
					
	
		tHash_Lookup_row86.initGet();
	

row86Struct row86HashKey = new row86Struct();
row86Struct row86Default = new row86Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row87Struct> tHash_Lookup_row87 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row87Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row87Struct>) 
					globalMap.get( "tHash_Lookup_row87" ))
					;					
					
	

row87Struct row87HashKey = new row87Struct();
row87Struct row87Default = new row87Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
Salida_Prev4Struct Salida_Prev4_tmp = new Salida_Prev4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_Prev3");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_2");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
					globalMap.get( "tHash_Lookup_row47" ))
					;					
					
	

row47Struct row47HashKey = new row47Struct();
row47Struct row47Default = new row47Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
					globalMap.get( "tHash_Lookup_row48" ))
					;					
					
	

row48Struct row48HashKey = new row48Struct();
row48Struct row48Default = new row48Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct> tHash_Lookup_row49 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct>) 
					globalMap.get( "tHash_Lookup_row49" ))
					;					
					
	

row49Struct row49HashKey = new row49Struct();
row49Struct row49Default = new row49Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) 
					globalMap.get( "tHash_Lookup_row50" ))
					;					
					
	

row50Struct row50HashKey = new row50Struct();
row50Struct row50Default = new row50Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct>) 
					globalMap.get( "tHash_Lookup_row51" ))
					;					
					
	

row51Struct row51HashKey = new row51Struct();
row51Struct row51Default = new row51Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct>) 
					globalMap.get( "tHash_Lookup_row52" ))
					;					
					
	

row52Struct row52HashKey = new row52Struct();
row52Struct row52Default = new row52Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct> tHash_Lookup_row53 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct>) 
					globalMap.get( "tHash_Lookup_row53" ))
					;					
					
	

row53Struct row53HashKey = new row53Struct();
row53Struct row53Default = new row53Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
					globalMap.get( "tHash_Lookup_row54" ))
					;					
					
	

row54Struct row54HashKey = new row54Struct();
row54Struct row54Default = new row54Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row55Struct> tHash_Lookup_row55 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row55Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row55Struct>) 
					globalMap.get( "tHash_Lookup_row55" ))
					;					
					
	

row55Struct row55HashKey = new row55Struct();
row55Struct row55Default = new row55Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) 
					globalMap.get( "tHash_Lookup_row56" ))
					;					
					
	

row56Struct row56HashKey = new row56Struct();
row56Struct row56Default = new row56Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row57Struct> tHash_Lookup_row57 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row57Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row57Struct>) 
					globalMap.get( "tHash_Lookup_row57" ))
					;					
					
	

row57Struct row57HashKey = new row57Struct();
row57Struct row57Default = new row57Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct> tHash_Lookup_row58 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct>) 
					globalMap.get( "tHash_Lookup_row58" ))
					;					
					
	

row58Struct row58HashKey = new row58Struct();
row58Struct row58Default = new row58Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row59Struct> tHash_Lookup_row59 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row59Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row59Struct>) 
					globalMap.get( "tHash_Lookup_row59" ))
					;					
					
	

row59Struct row59HashKey = new row59Struct();
row59Struct row59Default = new row59Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct> tHash_Lookup_row60 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct>) 
					globalMap.get( "tHash_Lookup_row60" ))
					;					
					
	

row60Struct row60HashKey = new row60Struct();
row60Struct row60Default = new row60Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row61Struct> tHash_Lookup_row61 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row61Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row61Struct>) 
					globalMap.get( "tHash_Lookup_row61" ))
					;					
					
	

row61Struct row61HashKey = new row61Struct();
row61Struct row61Default = new row61Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row62Struct> tHash_Lookup_row62 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row62Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row62Struct>) 
					globalMap.get( "tHash_Lookup_row62" ))
					;					
					
	

row62Struct row62HashKey = new row62Struct();
row62Struct row62Default = new row62Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct> tHash_Lookup_row63 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct>) 
					globalMap.get( "tHash_Lookup_row63" ))
					;					
					
	

row63Struct row63HashKey = new row63Struct();
row63Struct row63Default = new row63Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct> tHash_Lookup_row64 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct>) 
					globalMap.get( "tHash_Lookup_row64" ))
					;					
					
	

row64Struct row64HashKey = new row64Struct();
row64Struct row64Default = new row64Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) 
					globalMap.get( "tHash_Lookup_row65" ))
					;					
					
	

row65Struct row65HashKey = new row65Struct();
row65Struct row65Default = new row65Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct> tHash_Lookup_row66 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct>) 
					globalMap.get( "tHash_Lookup_row66" ))
					;					
					
	

row66Struct row66HashKey = new row66Struct();
row66Struct row66Default = new row66Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
Salida_Prev3Struct Salida_Prev3_tmp = new Salida_Prev3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_Pre2");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_1");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct>) 
					globalMap.get( "tHash_Lookup_row24" ))
					;					
					
	

row24Struct row24HashKey = new row24Struct();
row24Struct row24Default = new row24Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct> tHash_Lookup_row25 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct>) 
					globalMap.get( "tHash_Lookup_row25" ))
					;					
					
	

row25Struct row25HashKey = new row25Struct();
row25Struct row25Default = new row25Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
					globalMap.get( "tHash_Lookup_row26" ))
					;					
					
	

row26Struct row26HashKey = new row26Struct();
row26Struct row26Default = new row26Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
					globalMap.get( "tHash_Lookup_row27" ))
					;					
					
	

row27Struct row27HashKey = new row27Struct();
row27Struct row27Default = new row27Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
					globalMap.get( "tHash_Lookup_row28" ))
					;					
					
	

row28Struct row28HashKey = new row28Struct();
row28Struct row28Default = new row28Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row29Struct> tHash_Lookup_row29 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row29Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row29Struct>) 
					globalMap.get( "tHash_Lookup_row29" ))
					;					
					
	

row29Struct row29HashKey = new row29Struct();
row29Struct row29Default = new row29Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
					globalMap.get( "tHash_Lookup_row30" ))
					;					
					
	

row30Struct row30HashKey = new row30Struct();
row30Struct row30Default = new row30Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row31Struct> tHash_Lookup_row31 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row31Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row31Struct>) 
					globalMap.get( "tHash_Lookup_row31" ))
					;					
					
	

row31Struct row31HashKey = new row31Struct();
row31Struct row31Default = new row31Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
					globalMap.get( "tHash_Lookup_row32" ))
					;					
					
	

row32Struct row32HashKey = new row32Struct();
row32Struct row32Default = new row32Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
					globalMap.get( "tHash_Lookup_row33" ))
					;					
					
	

row33Struct row33HashKey = new row33Struct();
row33Struct row33Default = new row33Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
					globalMap.get( "tHash_Lookup_row34" ))
					;					
					
	

row34Struct row34HashKey = new row34Struct();
row34Struct row34Default = new row34Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct>) 
					globalMap.get( "tHash_Lookup_row35" ))
					;					
					
	

row35Struct row35HashKey = new row35Struct();
row35Struct row35Default = new row35Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
					globalMap.get( "tHash_Lookup_row36" ))
					;					
					
	
		tHash_Lookup_row36.initGet();
	

row36Struct row36HashKey = new row36Struct();
row36Struct row36Default = new row36Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
					globalMap.get( "tHash_Lookup_row37" ))
					;					
					
	

row37Struct row37HashKey = new row37Struct();
row37Struct row37Default = new row37Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
					globalMap.get( "tHash_Lookup_row38" ))
					;					
					
	

row38Struct row38HashKey = new row38Struct();
row38Struct row38Default = new row38Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
					globalMap.get( "tHash_Lookup_row39" ))
					;					
					
	

row39Struct row39HashKey = new row39Struct();
row39Struct row39Default = new row39Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) 
					globalMap.get( "tHash_Lookup_row40" ))
					;					
					
	

row40Struct row40HashKey = new row40Struct();
row40Struct row40Default = new row40Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
					globalMap.get( "tHash_Lookup_row41" ))
					;					
					
	

row41Struct row41HashKey = new row41Struct();
row41Struct row41Default = new row41Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct>) 
					globalMap.get( "tHash_Lookup_row42" ))
					;					
					
	

row42Struct row42HashKey = new row42Struct();
row42Struct row42Default = new row42Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
					globalMap.get( "tHash_Lookup_row43" ))
					;					
					
	

row43Struct row43HashKey = new row43Struct();
row43Struct row43Default = new row43Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct> tHash_Lookup_row44 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct>) 
					globalMap.get( "tHash_Lookup_row44" ))
					;					
					
	

row44Struct row44HashKey = new row44Struct();
row44Struct row44Default = new row44Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
					globalMap.get( "tHash_Lookup_row45" ))
					;					
					
	

row45Struct row45HashKey = new row45Struct();
row45Struct row45Default = new row45Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
Salida_Pre2Struct Salida_Pre2_tmp = new Salida_Pre2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Salida_Pre1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
					globalMap.get( "tHash_Lookup_row2" ))
					;					
					
	

row2Struct row2HashKey = new row2Struct();
row2Struct row2Default = new row2Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
					globalMap.get( "tHash_Lookup_row3" ))
					;					
					
	

row3Struct row3HashKey = new row3Struct();
row3Struct row3Default = new row3Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct>) 
					globalMap.get( "tHash_Lookup_row4" ))
					;					
					
	

row4Struct row4HashKey = new row4Struct();
row4Struct row4Default = new row4Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct> tHash_Lookup_row5 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct>) 
					globalMap.get( "tHash_Lookup_row5" ))
					;					
					
	

row5Struct row5HashKey = new row5Struct();
row5Struct row5Default = new row5Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
					globalMap.get( "tHash_Lookup_row6" ))
					;					
					
	

row6Struct row6HashKey = new row6Struct();
row6Struct row6Default = new row6Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct>) 
					globalMap.get( "tHash_Lookup_row9" ))
					;					
					
	

row9Struct row9HashKey = new row9Struct();
row9Struct row9Default = new row9Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) 
					globalMap.get( "tHash_Lookup_row12" ))
					;					
					
	

row12Struct row12HashKey = new row12Struct();
row12Struct row12Default = new row12Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
					globalMap.get( "tHash_Lookup_row14" ))
					;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
					globalMap.get( "tHash_Lookup_row17" ))
					;					
					
	

row17Struct row17HashKey = new row17Struct();
row17Struct row17Default = new row17Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
					globalMap.get( "tHash_Lookup_row18" ))
					;					
					
	

row18Struct row18HashKey = new row18Struct();
row18Struct row18Default = new row18Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
					globalMap.get( "tHash_Lookup_row19" ))
					;					
					
	

row19Struct row19HashKey = new row19Struct();
row19Struct row19Default = new row19Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
					globalMap.get( "tHash_Lookup_row20" ))
					;					
					
	

row20Struct row20HashKey = new row20Struct();
row20Struct row20Default = new row20Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
					globalMap.get( "tHash_Lookup_row21" ))
					;					
					
	

row21Struct row21HashKey = new row21Struct();
row21Struct row21Default = new row21Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
					globalMap.get( "tHash_Lookup_row22" ))
					;					
					
	

row22Struct row22HashKey = new row22Struct();
row22Struct row22Default = new row22Struct();
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
					globalMap.get( "tHash_Lookup_row23" ))
					;					
					
	

row23Struct row23HashKey = new row23Struct();
row23Struct row23Default = new row23Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
Salida_Pre1Struct Salida_Pre1_tmp = new Salida_Pre1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_1.setFetchSize(1000);


		    String dbquery_tOracleInput_1 = "SELECT    PERP.PERSONAS_ID        \n        , TO_NUMBER(2) AS v0\n        , ROWNUM AS v1\n        , NVL(UORG.CODIGO,'99"
+"9') AS v2\n        , TDOC.SIGLA AS v3\n        , PER.DOCUMENTO AS v4\n        , MED.MayusculasSinAcentos(REPLACE(TRIM(PE"
+"R.PRIMER_APELLIDO),'|','')) AS v5\n        , MED.MayusculasSinAcentos(REPLACE(NVL(TRIM(PER.SEGUNDO_APELLIDO),'NONE'),'|'"
+",'')) AS v6 \n        , MED.MayusculasSinAcentos(REPLACE(TRIM(PER.PRIMER_NOMBRE),'|','')) AS v7\n        , MED.Mayuscula"
+"sSinAcentos(NVL(REPLACE(TRIM(PER.SEGUNDO_NOMBRE),'|',''), 'NONE')) AS v8\n        , PER.FECHA_NACIMIENTO AS v9\n        "
+", SEX.SIGLA AS v10\n        , DECODE(ET.CODIGO,NULL,6,ET.CODIGO) AS v11\n        , '9999' AS v12\n        , NVL(EDU.CODI"
+"GO,'13') AS v13\n        , SALUDSIS.UTILS.GetEdad(PER.FECHA_NACIMIENTO) AS EDAD  \nFROM (\n    SELECT    PERSONAS_ID\n  "
+"          , ROW_NUMBER() OVER (PARTITION BY PERSONAS_ID ORDER BY PERSONAS_ID DESC) AS R\n    FROM (\n              SELEC"
+"T    PROC.PERSONAS_ID \n              FROM HCL_PROCESOSASISTENCIALES PROC\n              INNER JOIN HCL_VALORACIONES HV "
+"          ON HV.PROCESOSASISTENCIALES_ID=PROC.ID\n              LEFT JOIN GEN_FINALIDADCONSULTAPYP GFP   ON GFP.FINALIDA"
+"DCONSULTA_ID=HV.FINALIDADCONSULTA_ID\n                                                      AND HV.ESTREGISTRO_ID = 1\n "
+"             WHERE PROC.FFINAL BETWEEN  TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                    AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n                AND ( HV.PYP_ID IS NOT NULL \n                      OR GFP.ID IS NOT NULL )\n     "
+"           AND PROC.ESTREGISTRO_ID = 1\n                AND HV.ESTREGISTRO_ID = 1                \n              UNION\n"
+"              SELECT    AP.PERSONAS_ID \n              FROM VAC_DAPLICADAS DAP\n              INNER JOIN VAC_APLICADAS A"
+"P ON AP.ID = DAP.APLICADAS_ID\n              WHERE AP.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                       AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n                AND DAP.ESTREGISTRO_ID = 1\n                AND AP.ESTREGISTRO_ID = 1\n           "
+"   UNION \n              SELECT    DACT.PERSONAS_ID    \n              FROM CGP_DEJECACTIVIDADES DACT\n              INN"
+"ER JOIN CGP_ACTIVIDADES ACT          ON ACT.ID = DACT.ACTIVIDADES_ID \n              LEFT JOIN CGP_EJECACTIVIDADES EJE  "
+"     ON EJE.ID = DACT.EJECACTIVIDADES_ID\n                                                     AND EJE.ESTREGISTRO_ID = "
+"1 \n              LEFT JOIN HCL_PROCESOSASISTENCIALES HP  ON HP.ID=DACT.PROCESOSASISTENCIALES_ID\n                      "
+"                               AND HP.ESTREGISTRO_ID = 1\n              WHERE NVL( HP.FFINAL, EJE.FEJECUCION ) BETWEEN T"
+"O_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                                         AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1  \n                AND ACT.PYP_ID IS NOT NULL \n                AND ACT.NOMBRE IN ('Consejer√≠a en l"
+"actancia materna','PRE para VIH','POS para VIH')\n			  UNION\n              SELECT HP.PERSONAS_ID FROM HCL_PROCESOSASIST"
+"ENCIALES HP\n			  INNER JOIN HCL_DIAGNOSTICOS HD ON HD.PROCESOSASISTENCIALES_ID = HP.ID \n		      INNER JOIN GEN_CIE10 G"
+"C ON GC.ID = HD.CIE10_ID \n			  WHERE GC.CODIGO = 'Z321'\n			  AND TRUNC( HP.FFINAL )  BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) \n				                              AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n			  GROUP BY HP.PERSONAS_ID\n			  UNION\n			  SELECT    PERSONAS_ID \n              FROM (\n    		 S"
+"ELECT    PROC.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R"
+"\n   			 FROM GEN_CIE10 CIE\n    		INNER JOIN HCL_DIAGNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID\n    		INNER JOIN HCL_PROCE"
+"SOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID \n    		LEFT JOIN ( \n        	SELECT *\n        	FROM "
+"( \n          	SELECT    P.PERSONAS_ID\n                  , MAX( P.ID ) AS ID\n                  , CASE \n              "
+"        WHEN  MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%'\n                      THEN 1\n                      "
+"WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n                      THEN 2\n                      WHEN ME"
+"D.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERMERIA%' \n                      THEN 3\n                      WHEN MED.Mayusc"
+"ulasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%'\n                      THEN 4\n                    END AS CODIGO \n      "
+"    FROM HCL_PROCESOSASISTENCIALES P \n          INNER JOIN HCL_VALORACIONES V ON V.PROCESOSASISTENCIALES_ID = P.ID\n   "
+"       INNER JOIN GEN_CUPS CU ON CU.ID = V.CUPS_ID \n          WHERE P.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY')-90 \n                             AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            AND ( MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%' \n                  OR MED."
+"MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n                  OR MED.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERME"
+"RIA%' \n                  OR MED.MayusculasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%' ) \n          GROUP BY  P.PERSONAS"
+"_ID   \n                    , CASE \n                      WHEN  MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%'\n "
+"                     THEN 1\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n        "
+"              THEN 2\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERMERIA%' \n                "
+"      THEN 3\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%'\n                     "
+" THEN 4\n                     END\n          ) PIVOT ( MAX ( ID ) FOR CODIGO IN ( 1 AS PSICOLOGIA, 2 AS PSIQUIATRIA , 3 "
+"AS ENFERMERIA, 4 AS TRABAJO_SOCIAL ) )  \n    )  ATENCION ON ATENCION.PERSONAS_ID = PROC.PERSONAS_ID         \n    WHERE"
+" ( CIE.CODIGO IN ('F064', 'F408', 'F409', 'F410', 'F411', 'F412', 'F413', 'F418', 'F419', 'F930', 'F931', 'F932')\n     "
+"       OR ( CIE.CODIGO LIKE '%F32%' OR CIE.CODIGO IN ('F204', 'F412') )\n            OR regexp_like(CIE.codigo,'F20*|F3("
+"0)')\n            OR CIE.CODIGO LIKE '%F90%' \n            OR ( CIE.CODIGO LIKE '%F10%' OR CIE.CODIGO IN ('F04X', 'Z864'"
+") )\n            OR CIE.CODIGO LIKE '%F31%' )\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n   "
+"   AND PROC.FFINAL BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-3)  \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n	) WHERE R = 1\n    ) \n)PERP\nINNER JOIN GEN_PERSONAS PER ON PER.ID = PERP.PERSONAS_ID AND PER.ES"
+"TREGISTRO_ID=1\nINNER JOIN GEN_AFILIADOS GA ON GA.PERSONAS_ID = PER.ID AND GA.ESTREGISTRO_ID=1\nLEFT JOIN GEN_SEXOS SEX "
+"ON SEX.ID = PER.SEXO_ID\nLEFT JOIN GEN_UORG UORG ON UORG.ID = PER.ESMADSCRITO\nLEFT JOIN GEN_TDOCUMENTOS TDOC ON TDOC.ID"
+"  = PER.TDOCUMENTOS_ID\nLEFT JOIN GEN_ETNICAS ET ON ET.ID = PER.ETNICAS_ID\nLEFT JOIN GEN_NEDUCATIVOS  EDU ON EDU.ID =PE"
+"R.NEDUCATIVOS_ID\nWHERE PER.FECHA_NACIMIENTO IS NOT NULL AND PERP.R = 1";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row1.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row1.PERSONAS_ID = rs_tOracleInput_1.getBigDecimal(1);
					} else {
				
						row1.PERSONAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row1.V0 = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(2) != null) {
						row1.V0 = rs_tOracleInput_1.getBigDecimal(2);
					} else {
				
						row1.V0 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row1.V1 = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(3) != null) {
						row1.V1 = rs_tOracleInput_1.getBigDecimal(3);
					} else {
				
						row1.V1 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row1.V2 = null;
							} else {
	                         		
        	row1.V2 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 5) {
								row1.V3 = null;
							} else {
	                         		
        	row1.V3 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 6) {
								row1.V4 = null;
							} else {
	                         		
        	row1.V4 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 7) {
								row1.V5 = null;
							} else {
	                         		
        	row1.V5 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 8) {
								row1.V6 = null;
							} else {
	                         		
        	row1.V6 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 9) {
								row1.V7 = null;
							} else {
	                         		
        	row1.V7 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 10) {
								row1.V8 = null;
							} else {
	                         		
        	row1.V8 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 11) {
								row1.V9 = null;
							} else {
										
			row1.V9 = routines.system.JDBCUtil.getDate(rs_tOracleInput_1, 11);
		                    }
							if(colQtyInRs_tOracleInput_1 < 12) {
								row1.V10 = null;
							} else {
	                         		
        	row1.V10 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 13) {
								row1.V11 = null;
							} else {
	                         		
        	row1.V11 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 14) {
								row1.V12 = null;
							} else {
	                         		
        	row1.V12 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 15) {
								row1.V13 = null;
							} else {
	                         		
        	row1.V13 = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 16) {
								row1.EDAD = null;
							} else {
	                         		
        	row1.EDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 16, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row2Struct row2 = null;
					
						row3Struct row3 = null;
					
						row4Struct row4 = null;
					
						row5Struct row5 = null;
					
						row6Struct row6 = null;
					
						row7Struct row7 = null;
					
						row8Struct row8 = null;
					
						row9Struct row9 = null;
					
						row10Struct row10 = null;
					
						row11Struct row11 = null;
					
						row12Struct row12 = null;
					
						row13Struct row13 = null;
					
						row14Struct row14 = null;
					
						row15Struct row15 = null;
					
						row16Struct row16 = null;
					
						row17Struct row17 = null;
					
						row18Struct row18 = null;
					
						row19Struct row19 = null;
					
						row20Struct row20 = null;
					
						row21Struct row21 = null;
					
						row22Struct row22 = null;
					
						row23Struct row23 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row2" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow2 = false;
       		  	    	
       		  	    	
 							row2Struct row2ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row2HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row2HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row2.lookup( row2HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row2 != null && tHash_Lookup_row2.getCount(row2HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row2' and it contains more one result from keys :  row2.PERSONAS_ID = '" + row2HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row2Struct fromLookup_row2 = null;
							row2 = row2Default;
										 
							
								 
							
							
								if (tHash_Lookup_row2 !=null && tHash_Lookup_row2.hasNext()) { // G 099
								
							
								
								fromLookup_row2 = tHash_Lookup_row2.next();

							
							
								} // G 099
							
							

							if(fromLookup_row2 != null) {
								row2 = fromLookup_row2;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row3" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow3 = false;
       		  	    	
       		  	    	
 							row3Struct row3ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row3HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row3HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row3.lookup( row3HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row3 != null && tHash_Lookup_row3.getCount(row3HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row3' and it contains more one result from keys :  row3.PERSONAS_ID = '" + row3HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row3Struct fromLookup_row3 = null;
							row3 = row3Default;
										 
							
								 
							
							
								if (tHash_Lookup_row3 !=null && tHash_Lookup_row3.hasNext()) { // G 099
								
							
								
								fromLookup_row3 = tHash_Lookup_row3.next();

							
							
								} // G 099
							
							

							if(fromLookup_row3 != null) {
								row3 = fromLookup_row3;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row4" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow4 = false;
       		  	    	
       		  	    	
 							row4Struct row4ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row4HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row4HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row4.lookup( row4HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row4 != null && tHash_Lookup_row4.getCount(row4HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row4' and it contains more one result from keys :  row4.PERSONAS_ID = '" + row4HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row4Struct fromLookup_row4 = null;
							row4 = row4Default;
										 
							
								 
							
							
								if (tHash_Lookup_row4 !=null && tHash_Lookup_row4.hasNext()) { // G 099
								
							
								
								fromLookup_row4 = tHash_Lookup_row4.next();

							
							
								} // G 099
							
							

							if(fromLookup_row4 != null) {
								row4 = fromLookup_row4;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row5" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow5 = false;
       		  	    	
       		  	    	
 							row5Struct row5ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row5HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row5HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row5.lookup( row5HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row5 != null && tHash_Lookup_row5.getCount(row5HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row5' and it contains more one result from keys :  row5.PERSONAS_ID = '" + row5HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row5Struct fromLookup_row5 = null;
							row5 = row5Default;
										 
							
								 
							
							
								if (tHash_Lookup_row5 !=null && tHash_Lookup_row5.hasNext()) { // G 099
								
							
								
								fromLookup_row5 = tHash_Lookup_row5.next();

							
							
								} // G 099
							
							

							if(fromLookup_row5 != null) {
								row5 = fromLookup_row5;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row6" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow6 = false;
       		  	    	
       		  	    	
 							row6Struct row6ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row6HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row6HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row6.lookup( row6HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row6 != null && tHash_Lookup_row6.getCount(row6HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row6' and it contains more one result from keys :  row6.PERSONAS_ID = '" + row6HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row6Struct fromLookup_row6 = null;
							row6 = row6Default;
										 
							
								 
							
							
								if (tHash_Lookup_row6 !=null && tHash_Lookup_row6.hasNext()) { // G 099
								
							
								
								fromLookup_row6 = tHash_Lookup_row6.next();

							
							
								} // G 099
							
							

							if(fromLookup_row6 != null) {
								row6 = fromLookup_row6;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row7HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row7 != null && tHash_Lookup_row7.getCount(row7HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row7' and it contains more one result from keys :  row7.PERSONAS_ID = '" + row7HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								 
							
							
								if (tHash_Lookup_row7 !=null && tHash_Lookup_row7.hasNext()) { // G 099
								
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							
							
								} // G 099
							
							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row8HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8' and it contains more one result from keys :  row8.PERSONAS_ID = '" + row8HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								 
							
							
								if (tHash_Lookup_row8 !=null && tHash_Lookup_row8.hasNext()) { // G 099
								
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							
							
								} // G 099
							
							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row9" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow9 = false;
       		  	    	
       		  	    	
 							row9Struct row9ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row9HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row9HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row9.lookup( row9HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row9 != null && tHash_Lookup_row9.getCount(row9HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row9' and it contains more one result from keys :  row9.PERSONAS_ID = '" + row9HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row9Struct fromLookup_row9 = null;
							row9 = row9Default;
										 
							
								 
							
							
								if (tHash_Lookup_row9 !=null && tHash_Lookup_row9.hasNext()) { // G 099
								
							
								
								fromLookup_row9 = tHash_Lookup_row9.next();

							
							
								} // G 099
							
							

							if(fromLookup_row9 != null) {
								row9 = fromLookup_row9;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row10HashKey.PERSONAS_ID = row1.PERSONAS_ID ;
                        		    		

								
		                        	row10HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row10' and it contains more one result from keys :  row10.PERSONAS_ID = '" + row10HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								 
							
							
								if (tHash_Lookup_row10 !=null && tHash_Lookup_row10.hasNext()) { // G 099
								
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							
							
								} // G 099
							
							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row11HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.PERSONAS_ID = '" + row11HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row12" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow12 = false;
       		  	    	
       		  	    	
 							row12Struct row12ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row12HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row12HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row12.lookup( row12HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row12 != null && tHash_Lookup_row12.getCount(row12HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row12' and it contains more one result from keys :  row12.PERSONAS_ID = '" + row12HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row12Struct fromLookup_row12 = null;
							row12 = row12Default;
										 
							
								 
							
							
								if (tHash_Lookup_row12 !=null && tHash_Lookup_row12.hasNext()) { // G 099
								
							
								
								fromLookup_row12 = tHash_Lookup_row12.next();

							
							
								} // G 099
							
							

							if(fromLookup_row12 != null) {
								row12 = fromLookup_row12;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row13HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.PERSONAS_ID = '" + row13HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row14HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.PERSONAS_ID = '" + row14HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row15HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row15 != null && tHash_Lookup_row15.getCount(row15HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row15' and it contains more one result from keys :  row15.PERSONAS_ID = '" + row15HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row16HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row16 != null && tHash_Lookup_row16.getCount(row16HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row16' and it contains more one result from keys :  row16.PERSONAS_ID = '" + row16HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row17" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow17 = false;
       		  	    	
       		  	    	
 							row17Struct row17ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row17HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row17HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row17.lookup( row17HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row17 != null && tHash_Lookup_row17.getCount(row17HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row17' and it contains more one result from keys :  row17.PERSONAS_ID = '" + row17HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row17Struct fromLookup_row17 = null;
							row17 = row17Default;
										 
							
								 
							
							
								if (tHash_Lookup_row17 !=null && tHash_Lookup_row17.hasNext()) { // G 099
								
							
								
								fromLookup_row17 = tHash_Lookup_row17.next();

							
							
								} // G 099
							
							

							if(fromLookup_row17 != null) {
								row17 = fromLookup_row17;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row18" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow18 = false;
       		  	    	
       		  	    	
 							row18Struct row18ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row18HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row18HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row18.lookup( row18HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row18 != null && tHash_Lookup_row18.getCount(row18HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row18' and it contains more one result from keys :  row18.PERSONAS_ID = '" + row18HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row18Struct fromLookup_row18 = null;
							row18 = row18Default;
										 
							
								 
							
							
								if (tHash_Lookup_row18 !=null && tHash_Lookup_row18.hasNext()) { // G 099
								
							
								
								fromLookup_row18 = tHash_Lookup_row18.next();

							
							
								} // G 099
							
							

							if(fromLookup_row18 != null) {
								row18 = fromLookup_row18;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row19" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow19 = false;
       		  	    	
       		  	    	
 							row19Struct row19ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row19HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row19HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row19.lookup( row19HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row19 != null && tHash_Lookup_row19.getCount(row19HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row19' and it contains more one result from keys :  row19.PERSONAS_ID = '" + row19HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row19Struct fromLookup_row19 = null;
							row19 = row19Default;
										 
							
								 
							
							
								if (tHash_Lookup_row19 !=null && tHash_Lookup_row19.hasNext()) { // G 099
								
							
								
								fromLookup_row19 = tHash_Lookup_row19.next();

							
							
								} // G 099
							
							

							if(fromLookup_row19 != null) {
								row19 = fromLookup_row19;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row20" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow20 = false;
       		  	    	
       		  	    	
 							row20Struct row20ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row20HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row20HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row20.lookup( row20HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row20 != null && tHash_Lookup_row20.getCount(row20HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row20' and it contains more one result from keys :  row20.PERSONAS_ID = '" + row20HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row20Struct fromLookup_row20 = null;
							row20 = row20Default;
										 
							
								 
							
							
								if (tHash_Lookup_row20 !=null && tHash_Lookup_row20.hasNext()) { // G 099
								
							
								
								fromLookup_row20 = tHash_Lookup_row20.next();

							
							
								} // G 099
							
							

							if(fromLookup_row20 != null) {
								row20 = fromLookup_row20;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row21" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow21 = false;
       		  	    	
       		  	    	
 							row21Struct row21ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row21HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row21HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row21.lookup( row21HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row21 != null && tHash_Lookup_row21.getCount(row21HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row21' and it contains more one result from keys :  row21.PERSONAS_ID = '" + row21HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row21Struct fromLookup_row21 = null;
							row21 = row21Default;
										 
							
								 
							
							
								if (tHash_Lookup_row21 !=null && tHash_Lookup_row21.hasNext()) { // G 099
								
							
								
								fromLookup_row21 = tHash_Lookup_row21.next();

							
							
								} // G 099
							
							

							if(fromLookup_row21 != null) {
								row21 = fromLookup_row21;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row22" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow22 = false;
       		  	    	
       		  	    	
 							row22Struct row22ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row22HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row22HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row22.lookup( row22HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row22 != null && tHash_Lookup_row22.getCount(row22HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row22' and it contains more one result from keys :  row22.PERSONAS_ID = '" + row22HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row22Struct fromLookup_row22 = null;
							row22 = row22Default;
										 
							
								 
							
							
								if (tHash_Lookup_row22 !=null && tHash_Lookup_row22.hasNext()) { // G 099
								
							
								
								fromLookup_row22 = tHash_Lookup_row22.next();

							
							
								} // G 099
							
							

							if(fromLookup_row22 != null) {
								row22 = fromLookup_row22;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row23" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow23 = false;
       		  	    	
       		  	    	
 							row23Struct row23ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row23HashKey.PERSONAS_ID = row1.PERSONAS_ID;
                        		    		

								
		                        	row23HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row23.lookup( row23HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row23 != null && tHash_Lookup_row23.getCount(row23HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row23' and it contains more one result from keys :  row23.PERSONAS_ID = '" + row23HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row23Struct fromLookup_row23 = null;
							row23 = row23Default;
										 
							
								 
							
							
								if (tHash_Lookup_row23 !=null && tHash_Lookup_row23.hasNext()) { // G 099
								
							
								
								fromLookup_row23 = tHash_Lookup_row23.next();

							
							
								} // G 099
							
							

							if(fromLookup_row23 != null) {
								row23 = fromLookup_row23;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Salida_Pre1 = null;


// # Output table : 'Salida_Pre1'
Salida_Pre1_tmp.PERSONAS_ID = row1.PERSONAS_ID ;
Salida_Pre1_tmp.EDAD = row1.EDAD ;
Salida_Pre1_tmp.Edad_year = null;
Salida_Pre1_tmp.Edad_month = null;
Salida_Pre1_tmp.Edad_day = null;
Salida_Pre1_tmp.V0 = row1.V0;
Salida_Pre1_tmp.V1 = row1.V1;
Salida_Pre1_tmp.V2 = row1.V2;
Salida_Pre1_tmp.V3 = row1.V3;
Salida_Pre1_tmp.V4 = row1.V4;
Salida_Pre1_tmp.V5 = row1.V5;
Salida_Pre1_tmp.V6 = row1.V6;
Salida_Pre1_tmp.V7 = row1.V7;
Salida_Pre1_tmp.V8 = row1.V8;
Salida_Pre1_tmp.V9 = row1.V9;
Salida_Pre1_tmp.V10 = row1.V10;
Salida_Pre1_tmp.V11 = row1.V11;
Salida_Pre1_tmp.V12 = row1.V12;
Salida_Pre1_tmp.V13 = row1.V13;
Salida_Pre1_tmp.V14 = row2.V14 ;
Salida_Pre1_tmp.V15 = row3.V15 ;
Salida_Pre1_tmp.V16 = row4.V16 ;
Salida_Pre1_tmp.V17 = row5.V17 ;
Salida_Pre1_tmp.V18 = row6.V18 ;
Salida_Pre1_tmp.V19 = row7.V19 ;
Salida_Pre1_tmp.V20 = row8.V20 ;
Salida_Pre1_tmp.V21 = row9.V21 ;
Salida_Pre1_tmp.V22 = row10.V22 ;
Salida_Pre1_tmp.V23 = row11.V23 ;
Salida_Pre1_tmp.V24 = row12.V24 ;
Salida_Pre1_tmp.V25 = row13.V25 ;
Salida_Pre1_tmp.V26 = row14.V26 ;
Salida_Pre1_tmp.V27 = row15.V27 ;
Salida_Pre1_tmp.V28 = row16.V28 ;
Salida_Pre1_tmp.V29 = row17.V29 ;
Salida_Pre1_tmp.V30 = row18.V30 ;
Salida_Pre1_tmp.V31 = row19.V31 ;
Salida_Pre1_tmp.V32 = row20.V32 ;
Salida_Pre1_tmp.V33 = row21.V33 ;
Salida_Pre1_tmp.V34 = row22.V34 ;
Salida_Pre1_tmp.V35 = row23.V35 ;
Salida_Pre1 = Salida_Pre1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Salida_Pre1"
if(Salida_Pre1 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_Pre1"
						
						);
					}
					

    //Code generate according to input schema and output schema
Salida_1.PERSONAS_ID = Salida_Pre1.PERSONAS_ID;
Salida_1.EDAD = Salida_Pre1.EDAD;
Salida_1.Edad_year = Salida_Pre1.Edad_year;
Salida_1.Edad_month = Salida_Pre1.Edad_month;
Salida_1.Edad_day = Salida_Pre1.Edad_day;
Salida_1.V0 = Salida_Pre1.V0;
Salida_1.V1 = Salida_Pre1.V1;
Salida_1.V2 = Salida_Pre1.V2;
Salida_1.V3 = Salida_Pre1.V3;
Salida_1.V4 = Salida_Pre1.V4;
Salida_1.V5 = Salida_Pre1.V5;
Salida_1.V6 = Salida_Pre1.V6;
Salida_1.V7 = Salida_Pre1.V7;
Salida_1.V8 = Salida_Pre1.V8;
Salida_1.V9 = Salida_Pre1.V9;
Salida_1.V10 = Salida_Pre1.V10;
Salida_1.V11 = Salida_Pre1.V11;
Salida_1.V12 = Salida_Pre1.V12;
Salida_1.V13 = Salida_Pre1.V13;
Salida_1.V14 = Salida_Pre1.V14;
Salida_1.V15 = Salida_Pre1.V15;
Salida_1.V16 = Salida_Pre1.V16;
Salida_1.V17 = Salida_Pre1.V17;
Salida_1.V18 = Salida_Pre1.V18;
Salida_1.V19 = Salida_Pre1.V19;
Salida_1.V20 = Salida_Pre1.V20;
Salida_1.V21 = Salida_Pre1.V21;
Salida_1.V22 = Salida_Pre1.V22;
Salida_1.V23 = Salida_Pre1.V23;
Salida_1.V24 = Salida_Pre1.V24;
Salida_1.V25 = Salida_Pre1.V25;
Salida_1.V26 = Salida_Pre1.V26;
Salida_1.V27 = Salida_Pre1.V27;
Salida_1.V28 = Salida_Pre1.V28;
Salida_1.V29 = Salida_Pre1.V29;
Salida_1.V30 = Salida_Pre1.V30;
Salida_1.V31 = Salida_Pre1.V31;
Salida_1.V32 = Salida_Pre1.V32;
Salida_1.V33 = Salida_Pre1.V33;
Salida_1.V34 = Salida_Pre1.V34;
Salida_1.V35 = Salida_Pre1.V35;


// Calcular edad en DD, MM and YYYY
int DMA [] = null;
if( Salida_Pre1.V9 != null){	
	SimpleDateFormat  dF = new SimpleDateFormat("dd/MM/yyyy"); 
	DMA  = Utils.restar_fecha(dF.format(Salida_Pre1.V9),context.FECHA_FINAL);	
	Salida_1.Edad_day = DMA[0];
	Salida_1.Edad_month = DMA[1];
	Salida_1.Edad_year = DMA[2];
}


/*	14.Gestaci√≥n
	0- No aplica 
	1- Si 
	2- No 
	21- Riesgo no evaluado

*/
//Salida_1.V14

if( Salida_Pre1.V10 != null && Salida_Pre1.V10.equals("M") == true ) {
	Salida_1.V14 = "0";	
}

if( Salida_Pre1.V10 != null && Salida_Pre1.V10.equals("F") == true ) {
	if (Salida_Pre1.V9 != null && ( Salida_1.Edad_year < 10 || Salida_1.Edad_year >= 60 ) ){
		Salida_1.V14 = "0";
	}
}

if(Salida_1.V14 == null){
	Salida_1.V14 = "2";
}



/*	15. S√≠filis Gestacional o cong√©nita
	0- No aplica 
	1- Si es mujer con s√≠filis gestacional 
	2- Si es reci√©n nacido con s√≠filis cong√©nita 
	3- No 
	21- Riesgo no evaluado
*/
//Salida_1.V15

if(Salida_1.V14.equals("0") == true || Salida_1.V14.equals("2") == true || Salida_1.V14.equals("21") == true ){
	Salida_1.V15 = "0";
}

if( Salida_1.V15 == null && Salida_1.V14.equals("1") == true ){
	Salida_1.V15 = "3";
}

if( Salida_1.Edad_year == 0 && Salida_1.Edad_month < 3 ){
	Salida_1.V15 = "3";
}


/*	16. Hipertensi√≥n Inducida por la Gestaci√≥n
	0- No aplica 
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V16

if(Salida_1.V14.equals("1") == true && Salida_Pre1.V16 == null ){
	Salida_1.V16 = "2";
}

if( Salida_Pre1.V10 != null && Salida_Pre1.V10.equals("M") == true ){
	Salida_1.V16 = "0";
}

if( Salida_Pre1.V9 != null && ( Salida_1.Edad_year < 10 || Salida_1.Edad_year >= 60) ){
	Salida_1.V16 = "0";
}

if(Salida_1.V14.equals("0") == true || Salida_1.V14.equals("2") == true || Salida_1.V14.equals("21") == true ){
	Salida_1.V16 = "0";
}

if(Salida_1.V16 == null) {
	Salida_1.V16 = "21";
}



/*	17. Hipotiroidismo Cong√©nito
	0- No aplica 
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V17

if( Salida_Pre1.V9 != null &&  (Salida_1.Edad_year >= 3 && Salida_1.Edad_month >= 0 && Salida_1.Edad_day >= 0 )){
	Salida_1.V17 = "0";
}

if (Salida_1.V17 == null) {
	Salida_1.V17 = "2";
}



/*	18. Sintom√°tico Respiratorio
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V18 = Salida_Pre1.V18;

if(Salida_Pre1.V18 == null){
	Salida_1.V18 = "21";   
}



/*	19.Tuberculosis Multidrogoresistente
	0- No aplica 
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V19 = Salida_Pre1.V19;

if(Salida_Pre1.V19 == null){
	Salida_1.V19 = "21";
}




/*	20.Lepra
	1- Paucibacilar 
	2- Multibacilar 
	3- No 
	21- Riesgo no evaluado
*/
//Salida_1.V20 = Salida_Pre1.V20;

if( Salida_Pre1.V20 == null ){
	Salida_1.V20 = "21" ;

}


/*	21.Obesidad o Desnutrici√≥n Proteico Cal√≥rica
	1- Si es Obesidad 
	2- Si es Desnutrici√≥n Proteico Cal√≥rica
	3- No 
	21- Riesgo no evaluado
*/
//Salida_1.V21 = Salida_Pre1.V21;

if (Salida_Pre1.V21 == null ){
	Salida_1.V21 = "21";
} else if ( Salida_Pre1.V21.equals("1") && Salida_1.Edad_year > 18  ){

	if ( Salida_Pre1.V32 != null && Salida_Pre1.V30 != null && ( Salida_Pre1.V32.compareTo( new BigDecimal(0) ) == 1 ) ){
		float talla = ( Salida_Pre1.V32.floatValue() )/100.0f;
		float peso = ( Salida_Pre1.V30.floatValue() );
		float imc = (peso / (talla * talla));
		if ( imc < 30.0f ) {
			Salida_1.V21 = "21";
		}
	} else {
		Salida_1.V21 = "21";
	}
}



/*	22. V√≠ctima de Maltrato
	0- No aplica 
	1- Si es Mujer v√≠ctima del maltrato 
	2- Si es Menor v√≠ctima del maltrato 
	3- No 
	21- Riesgo no evaluado
*/
//Salida_1.V22 = Salida_Pre1.V22;

if( Salida_1.V22 == null && Salida_Pre1.V10.equals("M") == true ) {
	Salida_1.V22 = "0";
} else if ( Salida_1.V22 == null &&  Salida_1.Edad_year <=18 ){
	Salida_1.V22 = "3";
} else if ( Salida_Pre1.V10.equals("M") == true && Salida_1.Edad_year>18 ) {
	Salida_1.V22 = "0";
} else if(Salida_1.V22 == null){
	Salida_1.V22 = "21";
}



/*	23. V√≠ctima de Violencia Sexual
	1- Si
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V23 = Salida_Pre1.V23;

if(Salida_Pre1.V23 == null){
	Salida_1.V23 =  "2";	
}



/*	24. Infecciones de Trasmisi√≥n Sexual
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V2 = Salida_Pre1.V24;

if(Salida_Pre1.V24 == null){
	Salida_1.V24 =  "21";
	
}



/*	25.Enfermedad Mental
	1- Si el diagn√≥stico es Ansiedad 
	2- Si el diagn√≥stico es Depresi√≥n 
	3- Si el diagn√≥stico es esquizofrenia 
	4- Si el diagn√≥stico es D√©ficit de atenci√≥n por Hiperactividad 
	5- Si el diagn√≥stico es consumo Sustancias Psicoactivas 
	6- Si el diagn√≥stico es Trastorno del √Ånimo Bipolar
	7- No 
	21- Riesgo no evaluado
*/
//Salida_1.V25 = Salida_Pre1.V25;

if(Salida_Pre1.V25 == null ){
	Salida_1.V25 = "7";
}



/* 26. C√°ncer de C√©rvix
	0- No aplica 
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V26 = Salida_Pre1.V26;

if( Salida_Pre1.V10 != null && Salida_Pre1.V10.equals("M") == true ) {
	Salida_1.V26 = "0";	
}

if(Salida_1.V26 == null){	
	Salida_1.V26 = "2";
}



/* 27. C√°ncer de Seno
	1- Si
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V27 = Salida_Pre1.V27;

if(Salida_Pre1.V27 == null){
	Salida_1.V27 = "2";
	
}


/* 28. Fluorosis Dental
	1- Si 
	2- No 
	21- Riesgo no evaluado
*/
//Salida_1.V28 = Salida_Pre1.V28;

if(Salida_Pre1.V28 == null ){
	Salida_1.V28 = "2";
}



/* 29. Fecha del Peso
	AAAA-MM-DD Si no se toma registrar 1800-01-01
*/
//Salida_1.V29 = Salida_Pre1.V29;

if(Salida_Pre1.V29 == null  ){
	Salida_1.V29 = "1800-01-01";
	Salida_1.V30 = new BigDecimal(999);
}



/* 30. Peso en Kilogramos
	Se registra el dato obtenido de la medici√≥n. 
	Si no se toma registrar 999
*/
//Salida_1.V30 = Salida_Pre1.V30;

if( Salida_1.V30 == null ){
	Salida_1.V30 = new BigDecimal(999);
	Salida_1.V29 = "1800-01-01";
	if ( Salida_1.V21.equals("2") ) {
		Salida_1.V21 = "21";
	}
}



/*	31. Fecha de la Talla
	AAAA-MM-DD 
	Si no se toma registrar 1800-01-01
*/
//Salida_1.V31 = Salida_Pre1.V31;

if(Salida_Pre1.V31 == null  ){
	Salida_1.V31 = "1800-01-01";
	Salida_1.V32 = new BigDecimal(999); 
}



/*	32. Talla en Cent√≠metros
	Se registra el dato obtenido de la medici√≥n. 
	Si no se toma registrar 999
*/
//Salida_1.V32 = Salida_Pre1.V32;

if(Salida_1.V32 == null  ){
	Salida_1.V31 = "1800-01-01";
	Salida_1.V32 = new BigDecimal(999); 
	if ( Salida_1.V21.equals("2") ) {
		Salida_1.V21 = "21";
	}
}


/*	33.	Fecha Probable de Parto
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_1.V33 = Salida_Pre1.V33;
//if(Salida_Pre1.V33 != null ){	
	//System.out.println(TalendDate.formatDate("yyyy-MM-dd",TalendDate.parseDate("dd/MM/yyyy",Salida_Pre1.V33)));
	//Salida_1.V33 = TalendDate.formatDate("yyyy-MM-dd",TalendDate.parseDate("dd/MM/yyyy",Salida_Pre1.V33));	
//}

if(Salida_1.V33 == null ){	
	if( Salida_Pre1.V10 != null && Salida_Pre1.V10.equals("M") == true ) {
		Salida_1.V33 = "1845-01-01";
	}
	
	if(Salida_1.V14.equals("1") == true){
		Salida_1.V33 = "1800-01-01";
	}
	
	if(Salida_1.V14.equals("0") == true || Salida_1.V14.equals("2") == true || Salida_1.V14.equals("21") == true ){
		Salida_1.V33 = "1845-01-01";
	}
}




/*	34. Edad Gestacional al Nacer
	Se registra el dato de la edad gestacional en semanas.
	Si no tiene el dato registrar 999 
	Si no aplica registrar 0
*/
//Salida_1.V34 = Salida_Pre1.V34;


if( Salida_Pre1.V9 != null &&  Salida_1.Edad_year >= 6 ){
	Salida_1.V34 = new BigDecimal(0);
}


/*(Salida_1.Edad_year >= 5 && Salida_1.Edad_month == 12) || (Salida_1.Edad_year >= 5 && Salida_1.Edad_month > 11 && Salida_1.Edad_day > 29 ) )*/

if(Salida_1.V34 == null){
	Salida_1.V34 = new BigDecimal(999);
}



/*	35. BCG
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	22- Sin dato
*/
//Salida_1.V35 = Salida_Pre1.V35;
	
if( Salida_Pre1.V9 != null &&  Salida_1.Edad_year >= 6 ){
	Salida_1.V35 = "0";
}

if(Salida_1.V35 == null){
	Salida_1.V35 = "22";
}

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row24Struct row24 = null;
					
						row25Struct row25 = null;
					
						row26Struct row26 = null;
					
						row27Struct row27 = null;
					
						row28Struct row28 = null;
					
						row29Struct row29 = null;
					
						row30Struct row30 = null;
					
						row31Struct row31 = null;
					
						row32Struct row32 = null;
					
						row33Struct row33 = null;
					
						row34Struct row34 = null;
					
						row35Struct row35 = null;
					
						row36Struct row36 = null;
					
						row37Struct row37 = null;
					
						row38Struct row38 = null;
					
						row39Struct row39 = null;
					
						row40Struct row40 = null;
					
						row41Struct row41 = null;
					
						row42Struct row42 = null;
					
						row43Struct row43 = null;
					
						row44Struct row44 = null;
					
						row45Struct row45 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row24" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow24 = false;
       		  	    	
       		  	    	
 							row24Struct row24ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row24HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row24HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row24.lookup( row24HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row24 != null && tHash_Lookup_row24.getCount(row24HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row24' and it contains more one result from keys :  row24.PERSONAS_ID = '" + row24HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row24Struct fromLookup_row24 = null;
							row24 = row24Default;
										 
							
								 
							
							
								if (tHash_Lookup_row24 !=null && tHash_Lookup_row24.hasNext()) { // G 099
								
							
								
								fromLookup_row24 = tHash_Lookup_row24.next();

							
							
								} // G 099
							
							

							if(fromLookup_row24 != null) {
								row24 = fromLookup_row24;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row25" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow25 = false;
       		  	    	
       		  	    	
 							row25Struct row25ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row25HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row25HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row25.lookup( row25HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row25 != null && tHash_Lookup_row25.getCount(row25HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row25' and it contains more one result from keys :  row25.PERSONAS_ID = '" + row25HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row25Struct fromLookup_row25 = null;
							row25 = row25Default;
										 
							
								 
							
							
								if (tHash_Lookup_row25 !=null && tHash_Lookup_row25.hasNext()) { // G 099
								
							
								
								fromLookup_row25 = tHash_Lookup_row25.next();

							
							
								} // G 099
							
							

							if(fromLookup_row25 != null) {
								row25 = fromLookup_row25;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row26" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow26 = false;
       		  	    	
       		  	    	
 							row26Struct row26ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row26HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row26HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row26.lookup( row26HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row26 != null && tHash_Lookup_row26.getCount(row26HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row26' and it contains more one result from keys :  row26.PERSONAS_ID = '" + row26HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row26Struct fromLookup_row26 = null;
							row26 = row26Default;
										 
							
								 
							
							
								if (tHash_Lookup_row26 !=null && tHash_Lookup_row26.hasNext()) { // G 099
								
							
								
								fromLookup_row26 = tHash_Lookup_row26.next();

							
							
								} // G 099
							
							

							if(fromLookup_row26 != null) {
								row26 = fromLookup_row26;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row27" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow27 = false;
       		  	    	
       		  	    	
 							row27Struct row27ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row27HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row27HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row27.lookup( row27HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row27 != null && tHash_Lookup_row27.getCount(row27HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row27' and it contains more one result from keys :  row27.PERSONAS_ID = '" + row27HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row27Struct fromLookup_row27 = null;
							row27 = row27Default;
										 
							
								 
							
							
								if (tHash_Lookup_row27 !=null && tHash_Lookup_row27.hasNext()) { // G 099
								
							
								
								fromLookup_row27 = tHash_Lookup_row27.next();

							
							
								} // G 099
							
							

							if(fromLookup_row27 != null) {
								row27 = fromLookup_row27;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row28" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow28 = false;
       		  	    	
       		  	    	
 							row28Struct row28ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row28HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row28HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row28.lookup( row28HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row28 != null && tHash_Lookup_row28.getCount(row28HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row28' and it contains more one result from keys :  row28.PERSONAS_ID = '" + row28HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row28Struct fromLookup_row28 = null;
							row28 = row28Default;
										 
							
								 
							
							
								if (tHash_Lookup_row28 !=null && tHash_Lookup_row28.hasNext()) { // G 099
								
							
								
								fromLookup_row28 = tHash_Lookup_row28.next();

							
							
								} // G 099
							
							

							if(fromLookup_row28 != null) {
								row28 = fromLookup_row28;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row29" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow29 = false;
       		  	    	
       		  	    	
 							row29Struct row29ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row29HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row29HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row29.lookup( row29HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row29 != null && tHash_Lookup_row29.getCount(row29HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row29' and it contains more one result from keys :  row29.PERSONAS_ID = '" + row29HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row29Struct fromLookup_row29 = null;
							row29 = row29Default;
										 
							
								 
							
							
								if (tHash_Lookup_row29 !=null && tHash_Lookup_row29.hasNext()) { // G 099
								
							
								
								fromLookup_row29 = tHash_Lookup_row29.next();

							
							
								} // G 099
							
							

							if(fromLookup_row29 != null) {
								row29 = fromLookup_row29;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row30" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow30 = false;
       		  	    	
       		  	    	
 							row30Struct row30ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row30HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row30HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row30.lookup( row30HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row30 != null && tHash_Lookup_row30.getCount(row30HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row30' and it contains more one result from keys :  row30.PERSONAS_ID = '" + row30HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row30Struct fromLookup_row30 = null;
							row30 = row30Default;
										 
							
								 
							
							
								if (tHash_Lookup_row30 !=null && tHash_Lookup_row30.hasNext()) { // G 099
								
							
								
								fromLookup_row30 = tHash_Lookup_row30.next();

							
							
								} // G 099
							
							

							if(fromLookup_row30 != null) {
								row30 = fromLookup_row30;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row31" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow31 = false;
       		  	    	
       		  	    	
 							row31Struct row31ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row31HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row31HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row31.lookup( row31HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row31 != null && tHash_Lookup_row31.getCount(row31HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row31' and it contains more one result from keys :  row31.PERSONAS_ID = '" + row31HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row31Struct fromLookup_row31 = null;
							row31 = row31Default;
										 
							
								 
							
							
								if (tHash_Lookup_row31 !=null && tHash_Lookup_row31.hasNext()) { // G 099
								
							
								
								fromLookup_row31 = tHash_Lookup_row31.next();

							
							
								} // G 099
							
							

							if(fromLookup_row31 != null) {
								row31 = fromLookup_row31;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row32" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow32 = false;
       		  	    	
       		  	    	
 							row32Struct row32ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row32HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row32HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row32.lookup( row32HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row32 != null && tHash_Lookup_row32.getCount(row32HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row32' and it contains more one result from keys :  row32.PERSONAS_ID = '" + row32HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row32Struct fromLookup_row32 = null;
							row32 = row32Default;
										 
							
								 
							
							
								if (tHash_Lookup_row32 !=null && tHash_Lookup_row32.hasNext()) { // G 099
								
							
								
								fromLookup_row32 = tHash_Lookup_row32.next();

							
							
								} // G 099
							
							

							if(fromLookup_row32 != null) {
								row32 = fromLookup_row32;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row33" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow33 = false;
       		  	    	
       		  	    	
 							row33Struct row33ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row33HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row33HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row33.lookup( row33HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row33 != null && tHash_Lookup_row33.getCount(row33HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row33' and it contains more one result from keys :  row33.PERSONAS_ID = '" + row33HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row33Struct fromLookup_row33 = null;
							row33 = row33Default;
										 
							
								 
							
							
								if (tHash_Lookup_row33 !=null && tHash_Lookup_row33.hasNext()) { // G 099
								
							
								
								fromLookup_row33 = tHash_Lookup_row33.next();

							
							
								} // G 099
							
							

							if(fromLookup_row33 != null) {
								row33 = fromLookup_row33;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row34" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow34 = false;
       		  	    	
       		  	    	
 							row34Struct row34ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row34HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row34HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row34.lookup( row34HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row34 != null && tHash_Lookup_row34.getCount(row34HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row34' and it contains more one result from keys :  row34.PERSONAS_ID = '" + row34HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row34Struct fromLookup_row34 = null;
							row34 = row34Default;
										 
							
								 
							
							
								if (tHash_Lookup_row34 !=null && tHash_Lookup_row34.hasNext()) { // G 099
								
							
								
								fromLookup_row34 = tHash_Lookup_row34.next();

							
							
								} // G 099
							
							

							if(fromLookup_row34 != null) {
								row34 = fromLookup_row34;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row35" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow35 = false;
       		  	    	
       		  	    	
 							row35Struct row35ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row35HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row35HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row35.lookup( row35HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row35 != null && tHash_Lookup_row35.getCount(row35HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row35' and it contains more one result from keys :  row35.PERSONAS_ID = '" + row35HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row35Struct fromLookup_row35 = null;
							row35 = row35Default;
										 
							
								 
							
							
								if (tHash_Lookup_row35 !=null && tHash_Lookup_row35.hasNext()) { // G 099
								
							
								
								fromLookup_row35 = tHash_Lookup_row35.next();

							
							
								} // G 099
							
							

							if(fromLookup_row35 != null) {
								row35 = fromLookup_row35;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row36" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow36 = false;
       		  	    	
       		  	    	
 							row36Struct row36ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row36.lookup( row36HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row36.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow36 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow36 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row36 != null && tHash_Lookup_row36.hasNext()) || forceLooprow36) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row36'
									
                    		  	 
							   
                    		  	 
	       		  	    	row36Struct fromLookup_row36 = null;
							row36 = row36Default;
										 
							
								
								if(!forceLooprow36) { // G 46
								
							
								 
							
								
								fromLookup_row36 = tHash_Lookup_row36.next();

							

							if(fromLookup_row36 != null) {
								row36 = fromLookup_row36;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow36 = false;
									 	
							
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row37" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow37 = false;
       		  	    	
       		  	    	
 							row37Struct row37ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row37HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row37HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row37.lookup( row37HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row37 != null && tHash_Lookup_row37.getCount(row37HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row37' and it contains more one result from keys :  row37.PERSONAS_ID = '" + row37HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row37Struct fromLookup_row37 = null;
							row37 = row37Default;
										 
							
								 
							
							
								if (tHash_Lookup_row37 !=null && tHash_Lookup_row37.hasNext()) { // G 099
								
							
								
								fromLookup_row37 = tHash_Lookup_row37.next();

							
							
								} // G 099
							
							

							if(fromLookup_row37 != null) {
								row37 = fromLookup_row37;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row38" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow38 = false;
       		  	    	
       		  	    	
 							row38Struct row38ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row38HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row38HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row38.lookup( row38HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row38 != null && tHash_Lookup_row38.getCount(row38HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row38' and it contains more one result from keys :  row38.PERSONAS_ID = '" + row38HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row38Struct fromLookup_row38 = null;
							row38 = row38Default;
										 
							
								 
							
							
								if (tHash_Lookup_row38 !=null && tHash_Lookup_row38.hasNext()) { // G 099
								
							
								
								fromLookup_row38 = tHash_Lookup_row38.next();

							
							
								} // G 099
							
							

							if(fromLookup_row38 != null) {
								row38 = fromLookup_row38;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row39" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow39 = false;
       		  	    	
       		  	    	
 							row39Struct row39ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row39HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row39HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row39.lookup( row39HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row39 != null && tHash_Lookup_row39.getCount(row39HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row39' and it contains more one result from keys :  row39.PERSONAS_ID = '" + row39HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row39Struct fromLookup_row39 = null;
							row39 = row39Default;
										 
							
								 
							
							
								if (tHash_Lookup_row39 !=null && tHash_Lookup_row39.hasNext()) { // G 099
								
							
								
								fromLookup_row39 = tHash_Lookup_row39.next();

							
							
								} // G 099
							
							

							if(fromLookup_row39 != null) {
								row39 = fromLookup_row39;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row40" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow40 = false;
       		  	    	
       		  	    	
 							row40Struct row40ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row40HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row40HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row40.lookup( row40HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row40 != null && tHash_Lookup_row40.getCount(row40HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row40' and it contains more one result from keys :  row40.PERSONAS_ID = '" + row40HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row40Struct fromLookup_row40 = null;
							row40 = row40Default;
										 
							
								 
							
							
								if (tHash_Lookup_row40 !=null && tHash_Lookup_row40.hasNext()) { // G 099
								
							
								
								fromLookup_row40 = tHash_Lookup_row40.next();

							
							
								} // G 099
							
							

							if(fromLookup_row40 != null) {
								row40 = fromLookup_row40;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row41" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow41 = false;
       		  	    	
       		  	    	
 							row41Struct row41ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row41HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row41HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row41.lookup( row41HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row41 != null && tHash_Lookup_row41.getCount(row41HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row41' and it contains more one result from keys :  row41.PERSONAS_ID = '" + row41HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row41Struct fromLookup_row41 = null;
							row41 = row41Default;
										 
							
								 
							
							
								if (tHash_Lookup_row41 !=null && tHash_Lookup_row41.hasNext()) { // G 099
								
							
								
								fromLookup_row41 = tHash_Lookup_row41.next();

							
							
								} // G 099
							
							

							if(fromLookup_row41 != null) {
								row41 = fromLookup_row41;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row42" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow42 = false;
       		  	    	
       		  	    	
 							row42Struct row42ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row42HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row42HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row42.lookup( row42HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row42 != null && tHash_Lookup_row42.getCount(row42HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row42' and it contains more one result from keys :  row42.PERSONAS_ID = '" + row42HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row42Struct fromLookup_row42 = null;
							row42 = row42Default;
										 
							
								 
							
							
								if (tHash_Lookup_row42 !=null && tHash_Lookup_row42.hasNext()) { // G 099
								
							
								
								fromLookup_row42 = tHash_Lookup_row42.next();

							
							
								} // G 099
							
							

							if(fromLookup_row42 != null) {
								row42 = fromLookup_row42;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row43HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row43HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row43 != null && tHash_Lookup_row43.getCount(row43HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row43' and it contains more one result from keys :  row43.PERSONAS_ID = '" + row43HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								 
							
							
								if (tHash_Lookup_row43 !=null && tHash_Lookup_row43.hasNext()) { // G 099
								
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							
							
								} // G 099
							
							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row44" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow44 = false;
       		  	    	
       		  	    	
 							row44Struct row44ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row44HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row44HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row44.lookup( row44HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row44 != null && tHash_Lookup_row44.getCount(row44HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row44' and it contains more one result from keys :  row44.PERSONAS_ID = '" + row44HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row44Struct fromLookup_row44 = null;
							row44 = row44Default;
										 
							
								 
							
							
								if (tHash_Lookup_row44 !=null && tHash_Lookup_row44.hasNext()) { // G 099
								
							
								
								fromLookup_row44 = tHash_Lookup_row44.next();

							
							
								} // G 099
							
							

							if(fromLookup_row44 != null) {
								row44 = fromLookup_row44;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row45" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow45 = false;
       		  	    	
       		  	    	
 							row45Struct row45ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row45HashKey.PERSONAS_ID = Salida_1.PERSONAS_ID ;
                        		    		

								
		                        	row45HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row45.lookup( row45HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row45 != null && tHash_Lookup_row45.getCount(row45HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row45' and it contains more one result from keys :  row45.PERSONAS_ID = '" + row45HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row45Struct fromLookup_row45 = null;
							row45 = row45Default;
										 
							
								 
							
							
								if (tHash_Lookup_row45 !=null && tHash_Lookup_row45.hasNext()) { // G 099
								
							
								
								fromLookup_row45 = tHash_Lookup_row45.next();

							
							
								} // G 099
							
							

							if(fromLookup_row45 != null) {
								row45 = fromLookup_row45;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Salida_Pre2 = null;


// # Output table : 'Salida_Pre2'
Salida_Pre2_tmp.PERSONAS_ID = Salida_1.PERSONAS_ID  ;
Salida_Pre2_tmp.EDAD = Salida_1.EDAD;
Salida_Pre2_tmp.Edad_year = Salida_1.Edad_year ;
Salida_Pre2_tmp.Edad_month = Salida_1.Edad_month ;
Salida_Pre2_tmp.Edad_day = Salida_1.Edad_day ;
Salida_Pre2_tmp.V0 = Salida_1.V0;
Salida_Pre2_tmp.V1 = Salida_1.V1;
Salida_Pre2_tmp.V2 = Salida_1.V2;
Salida_Pre2_tmp.V3 = Salida_1.V3;
Salida_Pre2_tmp.V4 = Salida_1.V4;
Salida_Pre2_tmp.V5 = Salida_1.V5;
Salida_Pre2_tmp.V6 = Salida_1.V6;
Salida_Pre2_tmp.V7 = Salida_1.V7;
Salida_Pre2_tmp.V8 = Salida_1.V8;
Salida_Pre2_tmp.V9 = Salida_1.V9;
Salida_Pre2_tmp.V10 = Salida_1.V10;
Salida_Pre2_tmp.V11 = Salida_1.V11;
Salida_Pre2_tmp.V12 = Salida_1.V12;
Salida_Pre2_tmp.V13 = Salida_1.V13;
Salida_Pre2_tmp.V14 = Salida_1.V14  ;
Salida_Pre2_tmp.V15 = Salida_1.V15  ;
Salida_Pre2_tmp.V16 = Salida_1.V16  ;
Salida_Pre2_tmp.V17 = Salida_1.V17  ;
Salida_Pre2_tmp.V18 = Salida_1.V18  ;
Salida_Pre2_tmp.V19 = Salida_1.V19  ;
Salida_Pre2_tmp.V20 = Salida_1.V20  ;
Salida_Pre2_tmp.V21 = Salida_1.V21  ;
Salida_Pre2_tmp.V22 = Salida_1.V22  ;
Salida_Pre2_tmp.V23 = Salida_1.V23  ;
Salida_Pre2_tmp.V24 = Salida_1.V24  ;
Salida_Pre2_tmp.V25 = Salida_1.V25  ;
Salida_Pre2_tmp.V26 = Salida_1.V26  ;
Salida_Pre2_tmp.V27 = Salida_1.V27  ;
Salida_Pre2_tmp.V28 = Salida_1.V28  ;
Salida_Pre2_tmp.V29 = Salida_1.V29  ;
Salida_Pre2_tmp.V30 = Salida_1.V30  ;
Salida_Pre2_tmp.V31 = Salida_1.V31  ;
Salida_Pre2_tmp.V32 = Salida_1.V32  ;
Salida_Pre2_tmp.V33 = Salida_1.V33  ;
Salida_Pre2_tmp.V34 = Salida_1.V34  ;
Salida_Pre2_tmp.V35 = Salida_1.V35  ;
Salida_Pre2_tmp.V36 = row24.V36  ;
Salida_Pre2_tmp.V37 = row25.V37  ;
Salida_Pre2_tmp.V38 = row26.V38 ;
Salida_Pre2_tmp.V39 = row27.V39 ;
Salida_Pre2_tmp.V40 = row28.V40 ;
Salida_Pre2_tmp.V41 = row29.V41 ;
Salida_Pre2_tmp.V42 = row30.V42 ;
Salida_Pre2_tmp.V43 = row31.V43 ;
Salida_Pre2_tmp.V44 = row32.V44 ;
Salida_Pre2_tmp.V45 = row33.V45 ;
Salida_Pre2_tmp.V46 = row34.V46 ;
Salida_Pre2_tmp.V47 = row35.V47 ;
Salida_Pre2_tmp.V48 = row36.V48 ;
Salida_Pre2_tmp.V49 = row37.V49 ;
Salida_Pre2_tmp.V50 = row38.V50 ;
Salida_Pre2_tmp.V51 = row39.V51 ;
Salida_Pre2_tmp.V52 = row40.V52 ;
Salida_Pre2_tmp.V53 = row41.V53 ;
Salida_Pre2_tmp.V54 = row42.V54 ;
Salida_Pre2_tmp.V55 = row43.V55 ;
Salida_Pre2_tmp.V56 = row44.V56 ;
Salida_Pre2_tmp.V57 = row45.V57 ;
Salida_Pre2 = Salida_Pre2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Salida_Pre2"
if(Salida_Pre2 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_Pre2"
						
						);
					}
					

    //Code generate according to input schema and output schema
Salida_2.PERSONAS_ID = Salida_Pre2.PERSONAS_ID;
Salida_2.EDAD = Salida_Pre2.EDAD;
Salida_2.Edad_year = Salida_Pre2.Edad_year;
Salida_2.Edad_month = Salida_Pre2.Edad_month;
Salida_2.Edad_day = Salida_Pre2.Edad_day;
Salida_2.V0 = Salida_Pre2.V0;
Salida_2.V1 = Salida_Pre2.V1;
Salida_2.V2 = Salida_Pre2.V2;
Salida_2.V3 = Salida_Pre2.V3;
Salida_2.V4 = Salida_Pre2.V4;
Salida_2.V5 = Salida_Pre2.V5;
Salida_2.V6 = Salida_Pre2.V6;
Salida_2.V7 = Salida_Pre2.V7;
Salida_2.V8 = Salida_Pre2.V8;
Salida_2.V9 = Salida_Pre2.V9;
Salida_2.V10 = Salida_Pre2.V10;
Salida_2.V11 = Salida_Pre2.V11;
Salida_2.V12 = Salida_Pre2.V12;
Salida_2.V13 = Salida_Pre2.V13;
Salida_2.V14 = Salida_Pre2.V14;
Salida_2.V15 = Salida_Pre2.V15;
Salida_2.V16 = Salida_Pre2.V16;
Salida_2.V17 = Salida_Pre2.V17;
Salida_2.V18 = Salida_Pre2.V18;
Salida_2.V19 = Salida_Pre2.V19;
Salida_2.V20 = Salida_Pre2.V20;
Salida_2.V21 = Salida_Pre2.V21;
Salida_2.V22 = Salida_Pre2.V22;
Salida_2.V23 = Salida_Pre2.V23;
Salida_2.V24 = Salida_Pre2.V24;
Salida_2.V25 = Salida_Pre2.V25;
Salida_2.V26 = Salida_Pre2.V26;
Salida_2.V27 = Salida_Pre2.V27;
Salida_2.V28 = Salida_Pre2.V28;
Salida_2.V29 = Salida_Pre2.V29;
Salida_2.V30 = Salida_Pre2.V30;
Salida_2.V31 = Salida_Pre2.V31;
Salida_2.V32 = Salida_Pre2.V32;
Salida_2.V33 = Salida_Pre2.V33;
Salida_2.V34 = Salida_Pre2.V34;
Salida_2.V35 = Salida_Pre2.V35;
Salida_2.V36 = Salida_Pre2.V36;
Salida_2.V37 = Salida_Pre2.V37;
Salida_2.V38 = Salida_Pre2.V38;
Salida_2.V39 = Salida_Pre2.V39;
Salida_2.V40 = Salida_Pre2.V40;
Salida_2.V41 = Salida_Pre2.V41;
Salida_2.V42 = Salida_Pre2.V42;
Salida_2.V43 = Salida_Pre2.V43;
Salida_2.V44 = Salida_Pre2.V44;
Salida_2.V45 = Salida_Pre2.V45;
Salida_2.V46 = Salida_Pre2.V46;
Salida_2.V47 = Salida_Pre2.V47;
Salida_2.V48 = Salida_Pre2.V48;
Salida_2.V49 = Salida_Pre2.V49;
Salida_2.V50 = Salida_Pre2.V50;
Salida_2.V51 = Salida_Pre2.V51;
Salida_2.V52 = Salida_Pre2.V52;
Salida_2.V53 = Salida_Pre2.V53;
Salida_2.V54 = Salida_Pre2.V54;
Salida_2.V55 = Salida_Pre2.V55;
Salida_2.V56 = Salida_Pre2.V56;
Salida_2.V57 = Salida_Pre2.V57;



/*	36.Hepatitis B menores de 1 a√±o
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	22- Sin dato
*/
//Salida_2.V36 = Salida_Pre2.V36;
	
if( Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6 ){
	Salida_2.V36 = "0";
}

if(Salida_2.V36 == null){
	Salida_2.V36 = "22";
}


/*	37.Pentavalente
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	2- Dos Dosis 
	3- Tres Dosis
	22- Sin dato
*/
//Salida_2.V37 = Salida_Pre2.V37;

if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6 ){
	Salida_2.V37 = "0";
}

if(Salida_2.V37 == null){
	Salida_2.V37 = "22";
}



/*	38.Polio
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 2- Dos Dosis 
	3- Tres Dosis 
	4- Cuatro Dosis 
	5- Cinco Dosis  
	22- Sin dato
*/
//Salida_2.V38 = Salida_Pre2.V38;
if( Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6 ){
	Salida_2.V38 = "0";
}
if(Salida_2.V38 == null){
	Salida_2.V38 = "22";
}



/*	39.DPT menores de 5 a√±os
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠:
	0- No aplica
	4- Cuatro Dosis
	5- Cinco Dosis
	22- Sin dato
*/
//Salida_2.V39 = Salida_Pre2.V39;

if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6 ){
	Salida_2.V39 = "0";
}

if(Salida_Pre2.V9 != null && ( Salida_2.Edad_year == 0 && Salida_2.Edad_month < 18 )){
	Salida_2.V39 = "22";
} 


if(Salida_2.V39 == null){
	Salida_2.V39 = "22";
}



/*	40.Rotavirus
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	2- Dos Dosis  
	22- Sin dato
*/
//Salida_2.V40 = Salida_Pre2.V40;

if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6  ){
	Salida_2.V40 = "0";
}
if(Salida_2.V40 == null  ){
	Salida_2.V40 = "22";
}



/*	41.Neumococo
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠:
	0- No aplica
	1- Una Dosis
	2- Dos Dosis
	3- Tres Dosis
	22- Sin dato
*/
//Salida_2.V41 = Salida_Pre2.V41;
if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6  ){
	Salida_2.V41 = "0";
}

if(Salida_2.V41 == null  ){
	Salida_2.V41 = "22";
}



/*	42.Influenza Ni√±os
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	2- Dos Dosis 
	3- Tres Dosis Anual
	22- Sin dato
*/
//Salida_2.V42 = Salida_Pre2.V42;

if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6  ){
	Salida_2.V42= "0";
}

if(Salida_2.V42== null  ){
	Salida_2.V42= "22";
}



/*	43.Fiebre Amarilla ni√±os de 1 a√±o
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠:
	0- No aplica
	1- Una Dosis
	22- Sin dato
*/
//Salida_2.V43 = Salida_Pre2.V43;

if(Salida_Pre2.V9 != null &&  Salida_2.Edad_year >= 6 ){
	Salida_2.V43= "0";
}

if(Salida_2.V43 != null && Salida_2.V43.equals("1") == true && Salida_Pre2.V9 != null && Salida_2.Edad_year == 0 && Salida_2.Edad_month < 11 && Salida_Pre2.Edad_day <= 31){
	Salida_2.V43= "22";
}

if(Salida_2.V43== null  ){
	Salida_2.V43= "22";
}



/*	44.Hepatitis A 
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	22- Sin dato
*/
//Salida_2.V44 = Salida_Pre2.V44;

if(Salida_Pre2.V9 != null &&  Salida_2.Edad_year >= 6  ){
	Salida_2.V44= "0";
}

if( Salida_2.V44 != null && Salida_2.V44.equals("1") == true && Salida_Pre2.V9 != null &&  Salida_2.Edad_year == 0 && Salida_2.Edad_month < 11 && Salida_Pre2.Edad_day <= 31){
	Salida_2.V44= "22";
}


if(Salida_2.V44== null  ){
	Salida_2.V44= "22";
}



/*	45.Triple Viral Ni√±os
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠:
	0- No aplica
	1- Una Dosis
	2- Dos Dosis
	22- Sin dato
*/
//Salida_2.V45 = Salida_Pre2.V45;

if(Salida_Pre2.V9 != null && Salida_2.Edad_year >= 6  ){
	Salida_2.V45 = "0";
}

if(Salida_Pre2.V9 != null &&  Salida_2.Edad_year == 0 && Salida_2.Edad_month <= 11 && Salida_Pre2.Edad_day <= 31){
 	Salida_2.V45 = "22";
}

if(Salida_2.V45 == null  ){
	Salida_2.V45 = "22";
}



/*	46. Virus del Papiloma Humano (VPH)
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠: 
	0- No aplica 
	1- Una Dosis 
	2- Dos Dosis 
	3- Tres Dosis 
	22- Sin dato
*/
//Salida_2.V46 = Salida_Pre2.V46;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V46 = "0";
}
if(Salida_Pre2.V9 != null && Salida_2.Edad_year < 9){
	Salida_2.V46 = "0";	
}
if(Salida_2.V46 == null){
	Salida_2.V46 = "22";
}


/*	47. TD o TT Mujeres en Edad F√©rtil 15 a 49 a√±os
	Registre el dato del √∫ltimo n√∫mero de dosis aplicada as√≠:
	0- No aplica
	1- Una Dosis
	2- Dos Dosis
	3- Tres Dosis
	4- Cuatro Dosis
	5- Cinco Dosis
	22- Sin dato
*/
//Salida_2.V47 = Salida_Pre2.V47;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V47 = "0";
}
if(Salida_Pre2.V9 != null && (Salida_2.Edad_year < 10 || Salida_2.Edad_year >= 50) && !Salida_Pre2.V14.equals("1") ){
	Salida_2.V47 = "0";	
}
if(Salida_2.V47 == null){
	Salida_2.V47 = "22";
}



/*	48.Control de Placa Bacteriana
	0- No aplica 
	1- Si ‚Äì 1ra vez en el a√±o 
	2- Si ‚Äì 2da vez en el a√±o 
	22- Sin dato
*/
//Salida_2.V48 = Salida_Pre2.V48;

if( Salida_2.Edad_year <= 2 ){
	Salida_2.V48 = "0";
}

if(Salida_2.V48 == null){
	Salida_2.V48 = "22";
}


/*	49.Fecha atenci√≥n parto o ces√°rea
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01

*/
//Salida_2.V49 = Salida_Pre2.V49;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V49 = "1845-01-01";
}

if(Salida_2.V14.equals("0") == true || Salida_2.V14.equals("2") == true || Salida_2.V14.equals("21") == true ){
	Salida_2.V49 = "1845-01-01";
}

if(Salida_2.V14.equals("1") == true ){
	Salida_2.V49 = "1800-01-01";
}



/*	50.Fecha salida de la atenci√≥n del parto o ces√°rea
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01

*/
//Salida_2.V50 = Salida_Pre2.V50;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V50 = "1845-01-01";
}

if(Salida_2.V14.equals("0") == true || Salida_2.V14.equals("2") == true || Salida_2.V14.equals("21") == true ){
	Salida_2.V50 = "1845-01-01";
}

if(Salida_2.V14.equals("1") == true ){
	Salida_2.V50 = "1800-01-01";
}



/*	51.Fecha de consejer√≠a en Lactancia Materna
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_2.V51 = Salida_Pre2.V51;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V51 = "1845-01-01";
}

if(Salida_Pre2.V9 != null && (Salida_2.Edad_year < 10 || Salida_2.Edad_year >= 60) && !Salida_Pre2.V14.equals("1") ){
	Salida_2.V51 = "1845-01-01";
}

if( Salida_2.V51 == null){
	Salida_2.V51 = "1800-01-01";
}




/*	52.Control Reci√©n Nacido
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_2.V52 = Salida_Pre2.V52;

if(Salida_Pre2.V9 != null){

	if( ( Salida_2.Edad_year == 0 && Salida_2.Edad_month == 0 && Salida_2.Edad_day >= 30) || ( Salida_2.Edad_year>=0 && Salida_2.Edad_month >0 && Salida_2.Edad_day >= 0) ){
		Salida_2.V52 = "1845-01-01";	
	}

	if(Salida_2.V52 == null && ( Salida_2.Edad_day < 30 && Salida_2.Edad_month == 0 && Salida_2.Edad_year == 0 )  ){
		Salida_2.V52 = "1800-01-01 ";	
	}
}

if(Salida_2.V52 == null){
	Salida_2.V52 = "1800-01-01";	
}



/*	53.	Planificaci√≥n Familiar Primera vez
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01  
	Si no aplica registrar 1845-01-01	

*/
//Salida_2.V53 = Salida_Pre2.V53;

if( Salida_Pre2.V9 != null && ( Salida_2.Edad_year  <= 10 || Salida_2.Edad_year >= 60)){
	Salida_2.V53 = "1845-01-01";	
}

if( Salida_2.V53 == null  ){
	Salida_2.V53 = "1835-01-01";
}


/*	54.Suministro de M√©todo Anticonceptivo
	0- No aplica 
	1- Dispositivo Intrauterino 
	2- Dispositivo Intrauterino y Barrera 
	3- Implante Subd√©rmico 4- Implante Subd√©rmico y Barrera 
	5- Oral 
	6- Oral y Barrera 
	7- Inyectable Mensual 
	8- Inyectable Mensual y Barrera 9- Inyectable Trimestral 
	10- Inyectable Trimestral y Barrera 
	11- Emergencia 12- Emergencia y Barrera 
	13- Esterilizaci√≥n 14- Esterilizaci√≥n y Barrera 
	15- Barrera 
	21- Registro no Evaluado
*/
//Salida_2.V54 = Salida_Pre2.V54;

if( Salida_Pre2.V9 != null && ( Salida_2.Edad_year  <= 10 || Salida_2.Edad_year >= 60)){
	Salida_2.V54 = "0";	
}

if(Salida_2.V54 == null){
	Salida_2.V54 = "21";
}



/*	55.Fecha Suministro de M√©todo Anticonceptivo
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_2.V55 = Salida_Pre2.V55;

if( Salida_Pre2.V9 != null &&  ( Salida_2.Edad_year  <= 10 || Salida_2.Edad_year >= 60)){
	Salida_2.V55 = "1845-01-01";	
}

if( Salida_2.V55 == null){
	Salida_2.V55 = "1800-01-01";	
}



/*	56.Control Prenatal de Primera vez
	AAAA-MM-DD
	Si no se tiene el dato registrar 1800-01-01
	Si no aplica registrar 1845-01-01
*/
//Salida_2.V56 = Salida_Pre2.V56;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V56 = "1845-01-01";
}

if(Salida_2.V14.equals("0") == true || Salida_2.V14.equals("2") == true || Salida_2.V14.equals("21") == true ){
	Salida_2.V56 = "1845-01-01";
}

if(Salida_2.V56 == null ){
	Salida_2.V56 = "1800-01-01";
	
}


if ( !Salida_2.V33.equals ("1800-01-01") && !Salida_2.V33.equals ("1845-01-01") && !Salida_2.V56.equals ("1800-01-01") && !Salida_2.V56.equals ("1845-01-01") && Salida_2.V56 != null && Salida_2.V33 != null  ) {
	
	Date dateProbableParto=new SimpleDateFormat("yyyy-MM-dd").parse(Salida_2.V33); 
	Date datePrimerControl=new SimpleDateFormat("yyyy-MM-dd").parse(Salida_2.V56);
	
	if ( dateProbableParto.compareTo(datePrimerControl) < 0 ) {
		Salida_2.V56 = "1800-01-01";
	}
}


/*	57.Control Prenatal
	Registre el n√∫mero de controles que ha tenido en el √∫ltimo per√≠odo de reporte durante la gestaci√≥n actual.
	Si no tiene el dato registrar 999 
	Si no aplica registrar 0
*/
//Salida_2.V57 = Salida_Pre2.V57;

if( Salida_Pre2.V10 != null && Salida_Pre2.V10.equals("M") == true ) {
	Salida_2.V57 = "0";
}

if(Salida_2.V14.equals("0") == true || Salida_2.V14.equals("2") == true || Salida_2.V14.equals("21") == true ){
	Salida_2.V57 = "0";
}


if( Salida_Pre2.V9 != null &&  ( Salida_2.Edad_year  < 10 || Salida_2.Edad_year >= 60)){
	Salida_2.V57 = "0";	
}

if(Salida_2.V57 == null){
	Salida_2.V57 = "999";
}



    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row47Struct row47 = null;
					
						row48Struct row48 = null;
					
						row49Struct row49 = null;
					
						row50Struct row50 = null;
					
						row51Struct row51 = null;
					
						row52Struct row52 = null;
					
						row53Struct row53 = null;
					
						row54Struct row54 = null;
					
						row55Struct row55 = null;
					
						row56Struct row56 = null;
					
						row57Struct row57 = null;
					
						row58Struct row58 = null;
					
						row59Struct row59 = null;
					
						row60Struct row60 = null;
					
						row61Struct row61 = null;
					
						row62Struct row62 = null;
					
						row63Struct row63 = null;
					
						row64Struct row64 = null;
					
						row65Struct row65 = null;
					
						row66Struct row66 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row47" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow47 = false;
       		  	    	
       		  	    	
 							row47Struct row47ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row47HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row47HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row47.lookup( row47HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row47' and it contains more one result from keys :  row47.PERSONAS_ID = '" + row47HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row47Struct fromLookup_row47 = null;
							row47 = row47Default;
										 
							
								 
							
							
								if (tHash_Lookup_row47 !=null && tHash_Lookup_row47.hasNext()) { // G 099
								
							
								
								fromLookup_row47 = tHash_Lookup_row47.next();

							
							
								} // G 099
							
							

							if(fromLookup_row47 != null) {
								row47 = fromLookup_row47;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row48" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow48 = false;
       		  	    	
       		  	    	
 							row48Struct row48ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row48HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row48HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row48.lookup( row48HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row48 != null && tHash_Lookup_row48.getCount(row48HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row48' and it contains more one result from keys :  row48.PERSONAS_ID = '" + row48HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row48Struct fromLookup_row48 = null;
							row48 = row48Default;
										 
							
								 
							
							
								if (tHash_Lookup_row48 !=null && tHash_Lookup_row48.hasNext()) { // G 099
								
							
								
								fromLookup_row48 = tHash_Lookup_row48.next();

							
							
								} // G 099
							
							

							if(fromLookup_row48 != null) {
								row48 = fromLookup_row48;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row49" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow49 = false;
       		  	    	
       		  	    	
 							row49Struct row49ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row49HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row49HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row49.lookup( row49HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row49 != null && tHash_Lookup_row49.getCount(row49HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row49' and it contains more one result from keys :  row49.PERSONAS_ID = '" + row49HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row49Struct fromLookup_row49 = null;
							row49 = row49Default;
										 
							
								 
							
							
								if (tHash_Lookup_row49 !=null && tHash_Lookup_row49.hasNext()) { // G 099
								
							
								
								fromLookup_row49 = tHash_Lookup_row49.next();

							
							
								} // G 099
							
							

							if(fromLookup_row49 != null) {
								row49 = fromLookup_row49;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row50" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow50 = false;
       		  	    	
       		  	    	
 							row50Struct row50ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row50HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row50HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row50.lookup( row50HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row50' and it contains more one result from keys :  row50.PERSONAS_ID = '" + row50HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row50Struct fromLookup_row50 = null;
							row50 = row50Default;
										 
							
								 
							
							
								if (tHash_Lookup_row50 !=null && tHash_Lookup_row50.hasNext()) { // G 099
								
							
								
								fromLookup_row50 = tHash_Lookup_row50.next();

							
							
								} // G 099
							
							

							if(fromLookup_row50 != null) {
								row50 = fromLookup_row50;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row51" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow51 = false;
       		  	    	
       		  	    	
 							row51Struct row51ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row51HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row51HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row51.lookup( row51HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row51 != null && tHash_Lookup_row51.getCount(row51HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row51' and it contains more one result from keys :  row51.PERSONAS_ID = '" + row51HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row51Struct fromLookup_row51 = null;
							row51 = row51Default;
										 
							
								 
							
							
								if (tHash_Lookup_row51 !=null && tHash_Lookup_row51.hasNext()) { // G 099
								
							
								
								fromLookup_row51 = tHash_Lookup_row51.next();

							
							
								} // G 099
							
							

							if(fromLookup_row51 != null) {
								row51 = fromLookup_row51;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row52" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow52 = false;
       		  	    	
       		  	    	
 							row52Struct row52ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row52HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row52HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row52.lookup( row52HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row52 != null && tHash_Lookup_row52.getCount(row52HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row52' and it contains more one result from keys :  row52.PERSONAS_ID = '" + row52HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row52Struct fromLookup_row52 = null;
							row52 = row52Default;
										 
							
								 
							
							
								if (tHash_Lookup_row52 !=null && tHash_Lookup_row52.hasNext()) { // G 099
								
							
								
								fromLookup_row52 = tHash_Lookup_row52.next();

							
							
								} // G 099
							
							

							if(fromLookup_row52 != null) {
								row52 = fromLookup_row52;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row53" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow53 = false;
       		  	    	
       		  	    	
 							row53Struct row53ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row53HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row53HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row53.lookup( row53HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row53 != null && tHash_Lookup_row53.getCount(row53HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row53' and it contains more one result from keys :  row53.PERSONAS_ID = '" + row53HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row53Struct fromLookup_row53 = null;
							row53 = row53Default;
										 
							
								 
							
							
								if (tHash_Lookup_row53 !=null && tHash_Lookup_row53.hasNext()) { // G 099
								
							
								
								fromLookup_row53 = tHash_Lookup_row53.next();

							
							
								} // G 099
							
							

							if(fromLookup_row53 != null) {
								row53 = fromLookup_row53;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row54" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow54 = false;
       		  	    	
       		  	    	
 							row54Struct row54ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row54HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row54HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row54.lookup( row54HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row54 != null && tHash_Lookup_row54.getCount(row54HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row54' and it contains more one result from keys :  row54.PERSONAS_ID = '" + row54HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row54Struct fromLookup_row54 = null;
							row54 = row54Default;
										 
							
								 
							
							
								if (tHash_Lookup_row54 !=null && tHash_Lookup_row54.hasNext()) { // G 099
								
							
								
								fromLookup_row54 = tHash_Lookup_row54.next();

							
							
								} // G 099
							
							

							if(fromLookup_row54 != null) {
								row54 = fromLookup_row54;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row55" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow55 = false;
       		  	    	
       		  	    	
 							row55Struct row55ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row55HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row55HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row55.lookup( row55HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row55 != null && tHash_Lookup_row55.getCount(row55HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row55' and it contains more one result from keys :  row55.PERSONAS_ID = '" + row55HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row55Struct fromLookup_row55 = null;
							row55 = row55Default;
										 
							
								 
							
							
								if (tHash_Lookup_row55 !=null && tHash_Lookup_row55.hasNext()) { // G 099
								
							
								
								fromLookup_row55 = tHash_Lookup_row55.next();

							
							
								} // G 099
							
							

							if(fromLookup_row55 != null) {
								row55 = fromLookup_row55;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row56" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow56 = false;
       		  	    	
       		  	    	
 							row56Struct row56ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row56HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row56HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row56.lookup( row56HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row56 != null && tHash_Lookup_row56.getCount(row56HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row56' and it contains more one result from keys :  row56.PERSONAS_ID = '" + row56HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row56Struct fromLookup_row56 = null;
							row56 = row56Default;
										 
							
								 
							
							
								if (tHash_Lookup_row56 !=null && tHash_Lookup_row56.hasNext()) { // G 099
								
							
								
								fromLookup_row56 = tHash_Lookup_row56.next();

							
							
								} // G 099
							
							

							if(fromLookup_row56 != null) {
								row56 = fromLookup_row56;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row57" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow57 = false;
       		  	    	
       		  	    	
 							row57Struct row57ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row57HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row57HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row57.lookup( row57HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row57 != null && tHash_Lookup_row57.getCount(row57HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row57' and it contains more one result from keys :  row57.PERSONAS_ID = '" + row57HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row57Struct fromLookup_row57 = null;
							row57 = row57Default;
										 
							
								 
							
							
								if (tHash_Lookup_row57 !=null && tHash_Lookup_row57.hasNext()) { // G 099
								
							
								
								fromLookup_row57 = tHash_Lookup_row57.next();

							
							
								} // G 099
							
							

							if(fromLookup_row57 != null) {
								row57 = fromLookup_row57;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row58" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow58 = false;
       		  	    	
       		  	    	
 							row58Struct row58ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row58HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row58HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row58.lookup( row58HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row58 != null && tHash_Lookup_row58.getCount(row58HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row58' and it contains more one result from keys :  row58.PERSONAS_ID = '" + row58HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row58Struct fromLookup_row58 = null;
							row58 = row58Default;
										 
							
								 
							
							
								if (tHash_Lookup_row58 !=null && tHash_Lookup_row58.hasNext()) { // G 099
								
							
								
								fromLookup_row58 = tHash_Lookup_row58.next();

							
							
								} // G 099
							
							

							if(fromLookup_row58 != null) {
								row58 = fromLookup_row58;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row59" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow59 = false;
       		  	    	
       		  	    	
 							row59Struct row59ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row59HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row59HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row59.lookup( row59HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row59 != null && tHash_Lookup_row59.getCount(row59HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row59' and it contains more one result from keys :  row59.PERSONAS_ID = '" + row59HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row59Struct fromLookup_row59 = null;
							row59 = row59Default;
										 
							
								 
							
							
								if (tHash_Lookup_row59 !=null && tHash_Lookup_row59.hasNext()) { // G 099
								
							
								
								fromLookup_row59 = tHash_Lookup_row59.next();

							
							
								} // G 099
							
							

							if(fromLookup_row59 != null) {
								row59 = fromLookup_row59;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row60" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow60 = false;
       		  	    	
       		  	    	
 							row60Struct row60ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row60HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row60HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row60.lookup( row60HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row60 != null && tHash_Lookup_row60.getCount(row60HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row60' and it contains more one result from keys :  row60.PERSONAS_ID = '" + row60HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row60Struct fromLookup_row60 = null;
							row60 = row60Default;
										 
							
								 
							
							
								if (tHash_Lookup_row60 !=null && tHash_Lookup_row60.hasNext()) { // G 099
								
							
								
								fromLookup_row60 = tHash_Lookup_row60.next();

							
							
								} // G 099
							
							

							if(fromLookup_row60 != null) {
								row60 = fromLookup_row60;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row61" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow61 = false;
       		  	    	
       		  	    	
 							row61Struct row61ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row61HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row61HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row61.lookup( row61HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row61 != null && tHash_Lookup_row61.getCount(row61HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row61' and it contains more one result from keys :  row61.PERSONAS_ID = '" + row61HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row61Struct fromLookup_row61 = null;
							row61 = row61Default;
										 
							
								 
							
							
								if (tHash_Lookup_row61 !=null && tHash_Lookup_row61.hasNext()) { // G 099
								
							
								
								fromLookup_row61 = tHash_Lookup_row61.next();

							
							
								} // G 099
							
							

							if(fromLookup_row61 != null) {
								row61 = fromLookup_row61;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row62" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow62 = false;
       		  	    	
       		  	    	
 							row62Struct row62ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row62HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row62HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row62.lookup( row62HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row62 != null && tHash_Lookup_row62.getCount(row62HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row62' and it contains more one result from keys :  row62.PERSONAS_ID = '" + row62HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row62Struct fromLookup_row62 = null;
							row62 = row62Default;
										 
							
								 
							
							
								if (tHash_Lookup_row62 !=null && tHash_Lookup_row62.hasNext()) { // G 099
								
							
								
								fromLookup_row62 = tHash_Lookup_row62.next();

							
							
								} // G 099
							
							

							if(fromLookup_row62 != null) {
								row62 = fromLookup_row62;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row63" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow63 = false;
       		  	    	
       		  	    	
 							row63Struct row63ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row63HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row63HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row63.lookup( row63HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row63 != null && tHash_Lookup_row63.getCount(row63HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row63' and it contains more one result from keys :  row63.PERSONAS_ID = '" + row63HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row63Struct fromLookup_row63 = null;
							row63 = row63Default;
										 
							
								 
							
							
								if (tHash_Lookup_row63 !=null && tHash_Lookup_row63.hasNext()) { // G 099
								
							
								
								fromLookup_row63 = tHash_Lookup_row63.next();

							
							
								} // G 099
							
							

							if(fromLookup_row63 != null) {
								row63 = fromLookup_row63;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row64" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow64 = false;
       		  	    	
       		  	    	
 							row64Struct row64ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row64HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row64HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row64.lookup( row64HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row64 != null && tHash_Lookup_row64.getCount(row64HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row64' and it contains more one result from keys :  row64.PERSONAS_ID = '" + row64HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row64Struct fromLookup_row64 = null;
							row64 = row64Default;
										 
							
								 
							
							
								if (tHash_Lookup_row64 !=null && tHash_Lookup_row64.hasNext()) { // G 099
								
							
								
								fromLookup_row64 = tHash_Lookup_row64.next();

							
							
								} // G 099
							
							

							if(fromLookup_row64 != null) {
								row64 = fromLookup_row64;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row65" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow65 = false;
       		  	    	
       		  	    	
 							row65Struct row65ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row65HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row65HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row65.lookup( row65HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row65 != null && tHash_Lookup_row65.getCount(row65HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row65' and it contains more one result from keys :  row65.PERSONAS_ID = '" + row65HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row65Struct fromLookup_row65 = null;
							row65 = row65Default;
										 
							
								 
							
							
								if (tHash_Lookup_row65 !=null && tHash_Lookup_row65.hasNext()) { // G 099
								
							
								
								fromLookup_row65 = tHash_Lookup_row65.next();

							
							
								} // G 099
							
							

							if(fromLookup_row65 != null) {
								row65 = fromLookup_row65;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row66" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow66 = false;
       		  	    	
       		  	    	
 							row66Struct row66ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row66HashKey.PERSONAS_ID = Salida_2.PERSONAS_ID ;
                        		    		

								
		                        	row66HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row66.lookup( row66HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row66 != null && tHash_Lookup_row66.getCount(row66HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row66' and it contains more one result from keys :  row66.PERSONAS_ID = '" + row66HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row66Struct fromLookup_row66 = null;
							row66 = row66Default;
										 
							
								 
							
							
								if (tHash_Lookup_row66 !=null && tHash_Lookup_row66.hasNext()) { // G 099
								
							
								
								fromLookup_row66 = tHash_Lookup_row66.next();

							
							
								} // G 099
							
							

							if(fromLookup_row66 != null) {
								row66 = fromLookup_row66;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

Salida_Prev3 = null;


// # Output table : 'Salida_Prev3'
Salida_Prev3_tmp.PERSONAS_ID = Salida_2.PERSONAS_ID  ;
Salida_Prev3_tmp.EDAD = Salida_2.EDAD ;
Salida_Prev3_tmp.Edad_year = Salida_2.Edad_year ;
Salida_Prev3_tmp.Edad_month = Salida_2.Edad_month ;
Salida_Prev3_tmp.Edad_day = Salida_2.Edad_day ;
Salida_Prev3_tmp.V0 = Salida_2.V0  ;
Salida_Prev3_tmp.V1 = Salida_2.V1;
Salida_Prev3_tmp.V2 = Salida_2.V2;
Salida_Prev3_tmp.V3 = Salida_2.V3;
Salida_Prev3_tmp.V4 = Salida_2.V4;
Salida_Prev3_tmp.V5 = Salida_2.V5;
Salida_Prev3_tmp.V6 = Salida_2.V6;
Salida_Prev3_tmp.V7 = Salida_2.V7;
Salida_Prev3_tmp.V8 = Salida_2.V8;
Salida_Prev3_tmp.V9 = Salida_2.V9;
Salida_Prev3_tmp.V10 = Salida_2.V10;
Salida_Prev3_tmp.V11 = Salida_2.V11;
Salida_Prev3_tmp.V12 = Salida_2.V12;
Salida_Prev3_tmp.V13 = Salida_2.V13;
Salida_Prev3_tmp.V14 = Salida_2.V14  ;
Salida_Prev3_tmp.V15 = Salida_2.V15  ;
Salida_Prev3_tmp.V16 = Salida_2.V16  ;
Salida_Prev3_tmp.V17 = Salida_2.V17  ;
Salida_Prev3_tmp.V18 = Salida_2.V18  ;
Salida_Prev3_tmp.V19 = Salida_2.V19  ;
Salida_Prev3_tmp.V20 = Salida_2.V20  ;
Salida_Prev3_tmp.V21 = Salida_2.V21  ;
Salida_Prev3_tmp.V22 = Salida_2.V22  ;
Salida_Prev3_tmp.V23 = Salida_2.V23  ;
Salida_Prev3_tmp.V24 = Salida_2.V24  ;
Salida_Prev3_tmp.V25 = Salida_2.V25  ;
Salida_Prev3_tmp.V26 = Salida_2.V26  ;
Salida_Prev3_tmp.V27 = Salida_2.V27  ;
Salida_Prev3_tmp.V28 = Salida_2.V28  ;
Salida_Prev3_tmp.V29 = Salida_2.V29  ;
Salida_Prev3_tmp.V30 = Salida_2.V30  ;
Salida_Prev3_tmp.V31 = Salida_2.V31  ;
Salida_Prev3_tmp.V32 = Salida_2.V32  ;
Salida_Prev3_tmp.V33 = Salida_2.V33  ;
Salida_Prev3_tmp.V34 = Salida_2.V34  ;
Salida_Prev3_tmp.V35 = Salida_2.V35  ;
Salida_Prev3_tmp.V36 = Salida_2.V36  ;
Salida_Prev3_tmp.V37 = Salida_2.V37  ;
Salida_Prev3_tmp.V38 = Salida_2.V38  ;
Salida_Prev3_tmp.V39 = Salida_2.V39  ;
Salida_Prev3_tmp.V40 = Salida_2.V40  ;
Salida_Prev3_tmp.V41 = Salida_2.V41  ;
Salida_Prev3_tmp.V42 = Salida_2.V42  ;
Salida_Prev3_tmp.V43 = Salida_2.V43  ;
Salida_Prev3_tmp.V44 = Salida_2.V44  ;
Salida_Prev3_tmp.V45 = Salida_2.V45  ;
Salida_Prev3_tmp.V46 = Salida_2.V46  ;
Salida_Prev3_tmp.V47 = Salida_2.V47  ;
Salida_Prev3_tmp.V48 = Salida_2.V48  ;
Salida_Prev3_tmp.V49 = Salida_2.V49  ;
Salida_Prev3_tmp.V50 = Salida_2.V50  ;
Salida_Prev3_tmp.V51 = Salida_2.V51  ;
Salida_Prev3_tmp.V52 = Salida_2.V52  ;
Salida_Prev3_tmp.V53 = Salida_2.V53  ;
Salida_Prev3_tmp.V54 = Salida_2.V54  ;
Salida_Prev3_tmp.V55 = Salida_2.V55  ;
Salida_Prev3_tmp.V56 = Salida_2.V56  ;
Salida_Prev3_tmp.V57 = Salida_2.V57  ;
Salida_Prev3_tmp.V58 = row47.V58 ;
Salida_Prev3_tmp.V59 = row48.V59 ;
Salida_Prev3_tmp.V60 = row49.V60 ;
Salida_Prev3_tmp.V61 = row50.V61 ;
Salida_Prev3_tmp.V62 = row51.V62 ;
Salida_Prev3_tmp.V63 = row52.V63 ;
Salida_Prev3_tmp.V64 = row53.V64 ;
Salida_Prev3_tmp.V65 = row54.V65 ;
Salida_Prev3_tmp.V66 = row55.V66 ;
Salida_Prev3_tmp.V67 = row56.V67 ;
Salida_Prev3_tmp.V68 = row57.V69 ;
Salida_Prev3_tmp.V69 = row58.V69 ;
Salida_Prev3_tmp.V70 = row59.V70 ;
Salida_Prev3_tmp.V71 = row60.V71 ;
Salida_Prev3_tmp.V72 = row61.V72 ;
Salida_Prev3_tmp.V73 = row62.V73 ;
Salida_Prev3_tmp.V74 = row63.V74 ;
Salida_Prev3_tmp.V75 = row64.V75 ;
Salida_Prev3_tmp.V76 = row65.V76 ;
Salida_Prev3_tmp.V77 = row66.V77 ;
Salida_Prev3 = Salida_Prev3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "Salida_Prev3"
if(Salida_Prev3 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_Prev3"
						
						);
					}
					

    //Code generate according to input schema and output schema
Salida_3.PERSONAS_ID = Salida_Prev3.PERSONAS_ID;
Salida_3.EDAD = Salida_Prev3.EDAD;
Salida_3.Edad_year = Salida_Prev3.Edad_year;
Salida_3.Edad_month = Salida_Prev3.Edad_month;
Salida_3.Edad_day = Salida_Prev3.Edad_day;
Salida_3.V0 = Salida_Prev3.V0;
Salida_3.V1 = Salida_Prev3.V1;
Salida_3.V2 = Salida_Prev3.V2;
Salida_3.V3 = Salida_Prev3.V3;
Salida_3.V4 = Salida_Prev3.V4;
Salida_3.V5 = Salida_Prev3.V5;
Salida_3.V6 = Salida_Prev3.V6;
Salida_3.V7 = Salida_Prev3.V7;
Salida_3.V8 = Salida_Prev3.V8;
Salida_3.V9 = Salida_Prev3.V9;
Salida_3.V10 = Salida_Prev3.V10;
Salida_3.V11 = Salida_Prev3.V11;
Salida_3.V12 = Salida_Prev3.V12;
Salida_3.V13 = Salida_Prev3.V13;
Salida_3.V14 = Salida_Prev3.V14;
Salida_3.V15 = Salida_Prev3.V15;
Salida_3.V16 = Salida_Prev3.V16;
Salida_3.V17 = Salida_Prev3.V17;
Salida_3.V18 = Salida_Prev3.V18;
Salida_3.V19 = Salida_Prev3.V19;
Salida_3.V20 = Salida_Prev3.V20;
Salida_3.V21 = Salida_Prev3.V21;
Salida_3.V22 = Salida_Prev3.V22;
Salida_3.V23 = Salida_Prev3.V23;
Salida_3.V24 = Salida_Prev3.V24;
Salida_3.V25 = Salida_Prev3.V25;
Salida_3.V26 = Salida_Prev3.V26;
Salida_3.V27 = Salida_Prev3.V27;
Salida_3.V28 = Salida_Prev3.V28;
Salida_3.V29 = Salida_Prev3.V29;
Salida_3.V30 = Salida_Prev3.V30;
Salida_3.V31 = Salida_Prev3.V31;
Salida_3.V32 = Salida_Prev3.V32;
Salida_3.V33 = Salida_Prev3.V33;
Salida_3.V34 = Salida_Prev3.V34;
Salida_3.V35 = Salida_Prev3.V35;
Salida_3.V36 = Salida_Prev3.V36;
Salida_3.V37 = Salida_Prev3.V37;
Salida_3.V38 = Salida_Prev3.V38;
Salida_3.V39 = Salida_Prev3.V39;
Salida_3.V40 = Salida_Prev3.V40;
Salida_3.V41 = Salida_Prev3.V41;
Salida_3.V42 = Salida_Prev3.V42;
Salida_3.V43 = Salida_Prev3.V43;
Salida_3.V44 = Salida_Prev3.V44;
Salida_3.V45 = Salida_Prev3.V45;
Salida_3.V46 = Salida_Prev3.V46;
Salida_3.V47 = Salida_Prev3.V47;
Salida_3.V48 = Salida_Prev3.V48;
Salida_3.V49 = Salida_Prev3.V49;
Salida_3.V50 = Salida_Prev3.V50;
Salida_3.V51 = Salida_Prev3.V51;
Salida_3.V52 = Salida_Prev3.V52;
Salida_3.V53 = Salida_Prev3.V53;
Salida_3.V54 = Salida_Prev3.V54;
Salida_3.V55 = Salida_Prev3.V55;
Salida_3.V56 = Salida_Prev3.V56;
Salida_3.V57 = Salida_Prev3.V57;
Salida_3.V58 = Salida_Prev3.V58;
Salida_3.V59 = Salida_Prev3.V59;
Salida_3.V60 = Salida_Prev3.V60;
Salida_3.V61 = Salida_Prev3.V61;
Salida_3.V62 = Salida_Prev3.V62;
Salida_3.V63 = Salida_Prev3.V63;
Salida_3.V64 = Salida_Prev3.V64;
Salida_3.V65 = Salida_Prev3.V65;
Salida_3.V66 = Salida_Prev3.V66;
Salida_3.V67 = Salida_Prev3.V67;
Salida_3.V68 = Salida_Prev3.V68;
Salida_3.V69 = Salida_Prev3.V69;
Salida_3.V70 = Salida_Prev3.V70;
Salida_3.V71 = Salida_Prev3.V71;
Salida_3.V72 = Salida_Prev3.V72;
Salida_3.V73 = Salida_Prev3.V73;
Salida_3.V74 = Salida_Prev3.V74;
Salida_3.V75 = Salida_Prev3.V75;
Salida_3.V76 = Salida_Prev3.V76;
Salida_3.V77 = Salida_Prev3.V77;




/*	58.√öltimo Control Prenatal
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V58 = Salida_Prev3.V58;

if( Salida_Prev3.V10 != null && Salida_Prev3.V10.equals("M") == true ) {
	Salida_3.V58 = "1845-01-01";
}

if(Salida_3.V14.equals("0") == true || Salida_3.V14.equals("2") == true || Salida_3.V14.equals("21") == true ){
	Salida_3.V58 = "1845-01-01";
}

if(Salida_3.V58 == null){
	Salida_3.V58 = "1800-01-01";
}



/*	59. Suministro de √Åcido F√≥lico en el √öltimo Control Prenatal
	0- No aplica 
	1- Si se suministra
	21- Registro no Evaluado
*/
//Salida_3.V59 = Salida_Prev3.V59;

if( Salida_Prev3.V10 != null && Salida_Prev3.V10.equals("M") == true ) {
	Salida_3.V59 = "0";
}

if(Salida_3.V14.equals("0") == true || Salida_3.V14.equals("2") == true || Salida_3.V14.equals("21") == true ){
	Salida_3.V59 = "0";
}

if(Salida_3.V59 == null){
	Salida_3.V59 = "21";
}



/*	60. Suministro de Sulfato Ferroso en el √öltimo Control Prenatal
	0- No aplica 
	1- Si se suministra 
	21- Registro no Evaluado
*/
//Salida_3.V60 = Salida_Prev3.V60;

if( Salida_Prev3.V10 != null && Salida_Prev3.V10.equals("M") == true ) {
	Salida_3.V60 = "0";
}

if(Salida_3.V14.equals("0") == true || Salida_3.V14.equals("2") == true || Salida_3.V14.equals("21") == true ){
	Salida_3.V60 = "0";
}

if(Salida_3.V60 == null){
	Salida_3.V60 = "21";
}




/*	61.Suministro de Carbonato de Calcio en el √öltimo Control Prenatal0.
	0- No aplica
	1- Si se suministra
	21- Registro no Evaluado
*/
//Salida_3.V61 = Salida_Prev3.V61;

if( Salida_Prev3.V10 != null && Salida_Prev3.V10.equals("M") == true ) {
	Salida_3.V61 = "0";
}

if(Salida_3.V14.equals("0") == true || Salida_3.V14.equals("2") == true || Salida_3.V14.equals("21") == true ){
	Salida_3.V61 = "0";
}

if(Salida_3.V61 == null){
	Salida_3.V61 = "21";
}



/*	62. Valoraci√≥n de la Agudeza Visual
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01  
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V62 = Salida_Prev3.V62;


if( Salida_3.V62 == null && Salida_Prev3.V9 != null && (Salida_3.Edad_year == 4 || Salida_3.Edad_year == 11 || Salida_3.Edad_year == 16 || Salida_3.Edad_year == 45)){
	Salida_3.V62 = "1800-01-01";
}

if(Salida_3.V62 == null){
	Salida_3.V62 = "1845-01-01";
}




/*	63.Consulta por Oftalmolog√≠a
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V63 = Salida_Prev3.V63;


if(Salida_3.V63 == null){
	Salida_3.V63 = "1845-01-01";
}



/*	64. Fecha Diagn√≥stico Desnutrici√≥n Proteico Cal√≥rica
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V64 = Salida_Prev3.V64;


if(Salida_3.V21.equals("1") == true || Salida_3.V21.equals("3") == true || Salida_3.V21.equals("21") == true ){
	Salida_3.V64 = "1845-01-01";
}

if(Salida_3.V64 == null){
	Salida_3.V64 = "1800-01-01";
}



/*	65.Consulta Mujer o Menor V√≠ctima del Maltrato
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01  
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V65 = Salida_Prev3.V65;

if(Salida_3.V22.equals("0") == true || Salida_3.V22.equals("3") == true || Salida_3.V22.equals("21") == true ){
	Salida_3.V65 = "1845-01-01";
}

if(  Salida_Prev3.V10 != null && Salida_Prev3.V10.equals("M") == true  && Salida_3.Edad_year >= 18 ) {
	Salida_3.V65 = "1845-01-01";
}

if(Salida_3.V65 == null){
	Salida_3.V65 = "1835-01-01";
}



/*	66.Consulta V√≠ctimas de Violencia Sexual
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V66 = Salida_Prev3.V66;

if(Salida_3.V23.equals("2") == true || Salida_3.V23.equals("21") == true  ){
	Salida_3.V66 = "1845-01-01";
}

if(Salida_3.V66 == null){
	Salida_3.V66 = "1845-01-01";
}


/*	67. Consulta Nutrici√≥n
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V67 = Salida_Prev3.V67;

if(Salida_3.V67 == null){
	Salida_3.V67 = "1845-01-01";
}



/*	68.Consulta de Psicolog√≠a
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V68 = Salida_Prev3.V68;


if(Salida_3.V68 == null){
	Salida_3.V68 = "1845-01-01";
}



/*	69. Consulta de Crecimiento y Desarrollo Primera vez
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V69 = Salida_Prev3.V69;

if( Salida_Prev3.V9 != null &&  Salida_3.Edad_year >= 10 ){
	Salida_3.V69 = "1845-01-01";
}

if(Salida_3.V69 == null && Salida_Prev3.V9 != null &&  Salida_3.Edad_year < 10 ){
	Salida_3.V69 = "1800-01-01";
}

if(Salida_3.V69 == null){
	Salida_3.V69 = "1845-01-01";
}



/*	70.Suministro de Sulfato Ferroso en la √öltima Consulta del Menor de 10 a√±os
	0- No aplica 
	1- Si se suministra 
	21- Registro no Evaluado
*/
//Salida_3.V70 = Salida_Prev3.V70;

if( Salida_Prev3.V9 != null && Salida_3.Edad_year > 10 ){
	Salida_3.V70 = "0";
}

if(Salida_3.V70 == null){
	Salida_3.V70 = "21";
}



/*	71.Suministro de Vitamina A en la √öltima Consulta del Menor de 10 a√±os
	0- No aplica
	1- Si se suministra
	21- Registro no Evaluado
*/
//Salida_3.V71 = Salida_Prev3.V71;

if( Salida_Prev3.V9 != null && Salida_3.Edad_year >= 10 ){
	Salida_3.V71 = "0";
}

if(Salida_3.V71 == null){
	Salida_3.V71 = "21";
}




/*	72. Consulta de Joven Primera vez
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V72 = Salida_Prev3.V72;

if( Salida_Prev3.V9 != null && (Salida_3.Edad_year < 10 || Salida_3.Edad_year > 29)){
	Salida_3.V72 = "1845-01-01";
}

if(Salida_3.V72 == null){
	Salida_3.V72 = "1845-01-01";
}



/*	73.Consulta de Adulto Primera vez
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V73 = Salida_Prev3.V73;

if( Salida_Prev3.V9 != null && Salida_3.Edad_year < 45){
	Salida_3.V73 = "1845-01-01";
}

if(Salida_3.V73 == null){
	Salida_3.V73 = "1800-01-01";
}


/*	74.Preservativos entregados a pacientes con ITS
	Registre el n√∫mero de Preservativos entregados durante el per√≠odo de reporte. 
	Si no aplica registrar 0 
	Si no tiene el dato registrar 999
*/
//Salida_3.V74 = Salida_Prev3.V74;

if(Salida_Prev3.V74 == null){
	Salida_3.V74 = new BigDecimal("0");
}


/*	75.Asesor√≠a Pre test Elisa para VIH
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
//Salida_3.V75 = Salida_Prev3.V75;

if(Salida_3.V75 == null){
	Salida_3.V75 = "1845-01-01";
}



/* 76.Asesor√≠a Pos test Elisa para VIH
	AAAA-MM-DD 
	Si no se tiene el dato registrar 1800-01-01 
	Si no aplica registrar 1845-01-01
*/
// Salida_3.V76 = Salida_Prev3.V76;
if(Salida_3.V76 == null){
	Salida_3.V76 = "1845-01-01";
}



/* 77. Paciente con Diagn√≥stico de: Ansiedad, Depresi√≥n, Esquizofrenia, d√©ficit de atenci√≥n, consumo SPA y Bipolaridad recibi√≥ Atenci√≥n en los √∫ltimos 6 meses por Equipo Interdisciplinario Completo
0- No aplica 
1- En proceso de atenci√≥n. 
2- Si recibi√≥ atenci√≥n por equipo interdisciplinario completo.
22- Sin dato
*/
//Salida_3.V77 = Salida_Prev3.V77;


if(Salida_3.V25.equals("7") == true){
	Salida_3.V77 = "0";
}

if(Salida_3.V25.equals("21") == true){
	Salida_3.V77 = "0";
}

if(Salida_3.V77 == null){
	Salida_3.V77 = "22";
}
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row67Struct row67 = null;
					
						row68Struct row68 = null;
					
						row69Struct row69 = null;
					
						row70Struct row70 = null;
					
						row46Struct row46 = null;
					
						row71Struct row71 = null;
					
						row72Struct row72 = null;
					
						row73Struct row73 = null;
					
						row74Struct row74 = null;
					
						row75Struct row75 = null;
					
						row76Struct row76 = null;
					
						row77Struct row77 = null;
					
						row78Struct row78 = null;
					
						row79Struct row79 = null;
					
						row80Struct row80 = null;
					
						row81Struct row81 = null;
					
						row82Struct row82 = null;
					
						row83Struct row83 = null;
					
						row84Struct row84 = null;
					
						row85Struct row85 = null;
					
						row86Struct row86 = null;
					
						row87Struct row87 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row67" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow67 = false;
       		  	    	
       		  	    	
 							row67Struct row67ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row67HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row67HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row67.lookup( row67HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row67 != null && tHash_Lookup_row67.getCount(row67HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row67' and it contains more one result from keys :  row67.PERSONAS_ID = '" + row67HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row67Struct fromLookup_row67 = null;
							row67 = row67Default;
										 
							
								 
							
							
								if (tHash_Lookup_row67 !=null && tHash_Lookup_row67.hasNext()) { // G 099
								
							
								
								fromLookup_row67 = tHash_Lookup_row67.next();

							
							
								} // G 099
							
							

							if(fromLookup_row67 != null) {
								row67 = fromLookup_row67;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row68" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow68 = false;
       		  	    	
       		  	    	
 							row68Struct row68ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row68HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row68HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row68.lookup( row68HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row68 != null && tHash_Lookup_row68.getCount(row68HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row68' and it contains more one result from keys :  row68.PERSONAS_ID = '" + row68HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row68Struct fromLookup_row68 = null;
							row68 = row68Default;
										 
							
								 
							
							
								if (tHash_Lookup_row68 !=null && tHash_Lookup_row68.hasNext()) { // G 099
								
							
								
								fromLookup_row68 = tHash_Lookup_row68.next();

							
							
								} // G 099
							
							

							if(fromLookup_row68 != null) {
								row68 = fromLookup_row68;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row69" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow69 = false;
       		  	    	
       		  	    	
 							row69Struct row69ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row69HashKey.PACIENTE = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row69HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row69.lookup( row69HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row69 != null && tHash_Lookup_row69.getCount(row69HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row69' and it contains more one result from keys :  row69.PACIENTE = '" + row69HashKey.PACIENTE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row69Struct fromLookup_row69 = null;
							row69 = row69Default;
										 
							
								 
							
							
								if (tHash_Lookup_row69 !=null && tHash_Lookup_row69.hasNext()) { // G 099
								
							
								
								fromLookup_row69 = tHash_Lookup_row69.next();

							
							
								} // G 099
							
							

							if(fromLookup_row69 != null) {
								row69 = fromLookup_row69;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row70" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow70 = false;
       		  	    	
       		  	    	
 							row70Struct row70ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row70HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row70HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row70.lookup( row70HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row70 != null && tHash_Lookup_row70.getCount(row70HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row70' and it contains more one result from keys :  row70.PERSONAS_ID = '" + row70HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row70Struct fromLookup_row70 = null;
							row70 = row70Default;
										 
							
								 
							
							
								if (tHash_Lookup_row70 !=null && tHash_Lookup_row70.hasNext()) { // G 099
								
							
								
								fromLookup_row70 = tHash_Lookup_row70.next();

							
							
								} // G 099
							
							

							if(fromLookup_row70 != null) {
								row70 = fromLookup_row70;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row46" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow46 = false;
       		  	    	
       		  	    	
 							row46Struct row46ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row46HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row46HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row46.lookup( row46HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row46 != null && tHash_Lookup_row46.getCount(row46HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row46' and it contains more one result from keys :  row46.PERSONAS_ID = '" + row46HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row46Struct fromLookup_row46 = null;
							row46 = row46Default;
										 
							
								 
							
							
								if (tHash_Lookup_row46 !=null && tHash_Lookup_row46.hasNext()) { // G 099
								
							
								
								fromLookup_row46 = tHash_Lookup_row46.next();

							
							
								} // G 099
							
							

							if(fromLookup_row46 != null) {
								row46 = fromLookup_row46;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row71" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow71 = false;
       		  	    	
       		  	    	
 							row71Struct row71ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row71HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row71HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row71.lookup( row71HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row71 != null && tHash_Lookup_row71.getCount(row71HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row71' and it contains more one result from keys :  row71.PERSONAS_ID = '" + row71HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row71Struct fromLookup_row71 = null;
							row71 = row71Default;
										 
							
								 
							
							
								if (tHash_Lookup_row71 !=null && tHash_Lookup_row71.hasNext()) { // G 099
								
							
								
								fromLookup_row71 = tHash_Lookup_row71.next();

							
							
								} // G 099
							
							

							if(fromLookup_row71 != null) {
								row71 = fromLookup_row71;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row72" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow72 = false;
       		  	    	
       		  	    	
 							row72Struct row72ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row72HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row72HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row72.lookup( row72HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row72 != null && tHash_Lookup_row72.getCount(row72HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row72' and it contains more one result from keys :  row72.PERSONAS_ID = '" + row72HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row72Struct fromLookup_row72 = null;
							row72 = row72Default;
										 
							
								 
							
							
								if (tHash_Lookup_row72 !=null && tHash_Lookup_row72.hasNext()) { // G 099
								
							
								
								fromLookup_row72 = tHash_Lookup_row72.next();

							
							
								} // G 099
							
							

							if(fromLookup_row72 != null) {
								row72 = fromLookup_row72;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row73" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow73 = false;
       		  	    	
       		  	    	
 							row73Struct row73ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row73HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row73HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row73.lookup( row73HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row73 != null && tHash_Lookup_row73.getCount(row73HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row73' and it contains more one result from keys :  row73.PERSONAS_ID = '" + row73HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row73Struct fromLookup_row73 = null;
							row73 = row73Default;
										 
							
								 
							
							
								if (tHash_Lookup_row73 !=null && tHash_Lookup_row73.hasNext()) { // G 099
								
							
								
								fromLookup_row73 = tHash_Lookup_row73.next();

							
							
								} // G 099
							
							

							if(fromLookup_row73 != null) {
								row73 = fromLookup_row73;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row74" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow74 = false;
       		  	    	
       		  	    	
 							row74Struct row74ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row74HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row74HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row74.lookup( row74HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row74 != null && tHash_Lookup_row74.getCount(row74HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row74' and it contains more one result from keys :  row74.PERSONAS_ID = '" + row74HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row74Struct fromLookup_row74 = null;
							row74 = row74Default;
										 
							
								 
							
							
								if (tHash_Lookup_row74 !=null && tHash_Lookup_row74.hasNext()) { // G 099
								
							
								
								fromLookup_row74 = tHash_Lookup_row74.next();

							
							
								} // G 099
							
							

							if(fromLookup_row74 != null) {
								row74 = fromLookup_row74;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row75" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow75 = false;
       		  	    	
       		  	    	
 							row75Struct row75ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row75HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row75HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row75.lookup( row75HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row75 != null && tHash_Lookup_row75.getCount(row75HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row75' and it contains more one result from keys :  row75.PERSONAS_ID = '" + row75HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row75Struct fromLookup_row75 = null;
							row75 = row75Default;
										 
							
								 
							
							
								if (tHash_Lookup_row75 !=null && tHash_Lookup_row75.hasNext()) { // G 099
								
							
								
								fromLookup_row75 = tHash_Lookup_row75.next();

							
							
								} // G 099
							
							

							if(fromLookup_row75 != null) {
								row75 = fromLookup_row75;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row76" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow76 = false;
       		  	    	
       		  	    	
 							row76Struct row76ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row76HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row76HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row76.lookup( row76HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row76 != null && tHash_Lookup_row76.getCount(row76HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row76' and it contains more one result from keys :  row76.PERSONAS_ID = '" + row76HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row76Struct fromLookup_row76 = null;
							row76 = row76Default;
										 
							
								 
							
							
								if (tHash_Lookup_row76 !=null && tHash_Lookup_row76.hasNext()) { // G 099
								
							
								
								fromLookup_row76 = tHash_Lookup_row76.next();

							
							
								} // G 099
							
							

							if(fromLookup_row76 != null) {
								row76 = fromLookup_row76;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row77" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow77 = false;
       		  	    	
       		  	    	
 							row77Struct row77ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row77HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row77HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row77.lookup( row77HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row77 != null && tHash_Lookup_row77.getCount(row77HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row77' and it contains more one result from keys :  row77.PERSONAS_ID = '" + row77HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row77Struct fromLookup_row77 = null;
							row77 = row77Default;
										 
							
								 
							
							
								if (tHash_Lookup_row77 !=null && tHash_Lookup_row77.hasNext()) { // G 099
								
							
								
								fromLookup_row77 = tHash_Lookup_row77.next();

							
							
								} // G 099
							
							

							if(fromLookup_row77 != null) {
								row77 = fromLookup_row77;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row78" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow78 = false;
       		  	    	
       		  	    	
 							row78Struct row78ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row78HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row78HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row78.lookup( row78HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row78 != null && tHash_Lookup_row78.getCount(row78HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row78' and it contains more one result from keys :  row78.PERSONAS_ID = '" + row78HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row78Struct fromLookup_row78 = null;
							row78 = row78Default;
										 
							
								 
							
							
								if (tHash_Lookup_row78 !=null && tHash_Lookup_row78.hasNext()) { // G 099
								
							
								
								fromLookup_row78 = tHash_Lookup_row78.next();

							
							
								} // G 099
							
							

							if(fromLookup_row78 != null) {
								row78 = fromLookup_row78;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row79" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow79 = false;
       		  	    	
       		  	    	
 							row79Struct row79ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row79HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row79HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row79.lookup( row79HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row79 != null && tHash_Lookup_row79.getCount(row79HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row79' and it contains more one result from keys :  row79.PERSONAS_ID = '" + row79HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row79Struct fromLookup_row79 = null;
							row79 = row79Default;
										 
							
								 
							
							
								if (tHash_Lookup_row79 !=null && tHash_Lookup_row79.hasNext()) { // G 099
								
							
								
								fromLookup_row79 = tHash_Lookup_row79.next();

							
							
								} // G 099
							
							

							if(fromLookup_row79 != null) {
								row79 = fromLookup_row79;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row80" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow80 = false;
       		  	    	
       		  	    	
 							row80Struct row80ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row80HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row80HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row80.lookup( row80HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row80 != null && tHash_Lookup_row80.getCount(row80HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row80' and it contains more one result from keys :  row80.PERSONAS_ID = '" + row80HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row80Struct fromLookup_row80 = null;
							row80 = row80Default;
										 
							
								 
							
							
								if (tHash_Lookup_row80 !=null && tHash_Lookup_row80.hasNext()) { // G 099
								
							
								
								fromLookup_row80 = tHash_Lookup_row80.next();

							
							
								} // G 099
							
							

							if(fromLookup_row80 != null) {
								row80 = fromLookup_row80;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row81" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow81 = false;
       		  	    	
       		  	    	
 							row81Struct row81ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row81HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row81HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row81.lookup( row81HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row81 != null && tHash_Lookup_row81.getCount(row81HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row81' and it contains more one result from keys :  row81.PERSONAS_ID = '" + row81HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row81Struct fromLookup_row81 = null;
							row81 = row81Default;
										 
							
								 
							
							
								if (tHash_Lookup_row81 !=null && tHash_Lookup_row81.hasNext()) { // G 099
								
							
								
								fromLookup_row81 = tHash_Lookup_row81.next();

							
							
								} // G 099
							
							

							if(fromLookup_row81 != null) {
								row81 = fromLookup_row81;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row82" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow82 = false;
       		  	    	
       		  	    	
 							row82Struct row82ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row82HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row82HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row82.lookup( row82HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row82 != null && tHash_Lookup_row82.getCount(row82HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row82' and it contains more one result from keys :  row82.PERSONAS_ID = '" + row82HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row82Struct fromLookup_row82 = null;
							row82 = row82Default;
										 
							
								 
							
							
								if (tHash_Lookup_row82 !=null && tHash_Lookup_row82.hasNext()) { // G 099
								
							
								
								fromLookup_row82 = tHash_Lookup_row82.next();

							
							
								} // G 099
							
							

							if(fromLookup_row82 != null) {
								row82 = fromLookup_row82;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row83" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow83 = false;
       		  	    	
       		  	    	
 							row83Struct row83ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row83HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row83HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row83.lookup( row83HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row83 != null && tHash_Lookup_row83.getCount(row83HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row83' and it contains more one result from keys :  row83.PERSONAS_ID = '" + row83HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row83Struct fromLookup_row83 = null;
							row83 = row83Default;
										 
							
								 
							
							
								if (tHash_Lookup_row83 !=null && tHash_Lookup_row83.hasNext()) { // G 099
								
							
								
								fromLookup_row83 = tHash_Lookup_row83.next();

							
							
								} // G 099
							
							

							if(fromLookup_row83 != null) {
								row83 = fromLookup_row83;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row84" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow84 = false;
       		  	    	
       		  	    	
 							row84Struct row84ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row84HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row84HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row84.lookup( row84HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row84 != null && tHash_Lookup_row84.getCount(row84HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row84' and it contains more one result from keys :  row84.PERSONAS_ID = '" + row84HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row84Struct fromLookup_row84 = null;
							row84 = row84Default;
										 
							
								 
							
							
								if (tHash_Lookup_row84 !=null && tHash_Lookup_row84.hasNext()) { // G 099
								
							
								
								fromLookup_row84 = tHash_Lookup_row84.next();

							
							
								} // G 099
							
							

							if(fromLookup_row84 != null) {
								row84 = fromLookup_row84;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row85" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow85 = false;
       		  	    	
       		  	    	
 							row85Struct row85ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row85HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row85HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row85.lookup( row85HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row85 != null && tHash_Lookup_row85.getCount(row85HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row85' and it contains more one result from keys :  row85.PERSONAS_ID = '" + row85HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row85Struct fromLookup_row85 = null;
							row85 = row85Default;
										 
							
								 
							
							
								if (tHash_Lookup_row85 !=null && tHash_Lookup_row85.hasNext()) { // G 099
								
							
								
								fromLookup_row85 = tHash_Lookup_row85.next();

							
							
								} // G 099
							
							

							if(fromLookup_row85 != null) {
								row85 = fromLookup_row85;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row86" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow86 = false;
       		  	    	
       		  	    	
 							row86Struct row86ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row86.lookup( row86HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row86.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow86 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow86 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row86 != null && tHash_Lookup_row86.hasNext()) || forceLooprow86) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row86'
									
                    		  	 
							   
                    		  	 
	       		  	    	row86Struct fromLookup_row86 = null;
							row86 = row86Default;
										 
							
								
								if(!forceLooprow86) { // G 46
								
							
								 
							
								
								fromLookup_row86 = tHash_Lookup_row86.next();

							

							if(fromLookup_row86 != null) {
								row86 = fromLookup_row86;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow86 = false;
									 	
							
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row87" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow87 = false;
       		  	    	
       		  	    	
 							row87Struct row87ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row87HashKey.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
                        		    		

								
		                        	row87HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row87.lookup( row87HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row87 != null && tHash_Lookup_row87.getCount(row87HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row87' and it contains more one result from keys :  row87.PERSONAS_ID = '" + row87HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row87Struct fromLookup_row87 = null;
							row87 = row87Default;
										 
							
								 
							
							
								if (tHash_Lookup_row87 !=null && tHash_Lookup_row87.hasNext()) { // G 099
								
							
								
								fromLookup_row87 = tHash_Lookup_row87.next();

							
							
								} // G 099
							
							

							if(fromLookup_row87 != null) {
								row87 = fromLookup_row87;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

Salida_Prev4 = null;


// # Output table : 'Salida_Prev4'
Salida_Prev4_tmp.PERSONAS_ID = Salida_3.PERSONAS_ID  ;
Salida_Prev4_tmp.EDAD = Salida_3.EDAD ;
Salida_Prev4_tmp.Edad_year = Salida_3.Edad_year ;
Salida_Prev4_tmp.Edad_month = Salida_3.Edad_month ;
Salida_Prev4_tmp.Edad_day = Salida_3.Edad_day ;
Salida_Prev4_tmp.V0 = Salida_3.V0  ;
Salida_Prev4_tmp.V1 = Salida_3.V1;
Salida_Prev4_tmp.V2 = Salida_3.V2;
Salida_Prev4_tmp.V3 = Salida_3.V3;
Salida_Prev4_tmp.V4 = Salida_3.V4  ;
Salida_Prev4_tmp.V5 = Salida_3.V5  ;
Salida_Prev4_tmp.V6 = Salida_3.V6;
Salida_Prev4_tmp.V7 = Salida_3.V7;
Salida_Prev4_tmp.V8 = Salida_3.V8;
Salida_Prev4_tmp.V9 = Salida_3.V9;
Salida_Prev4_tmp.V10 = Salida_3.V10;
Salida_Prev4_tmp.V11 = Salida_3.V11;
Salida_Prev4_tmp.V12 = Salida_3.V12;
Salida_Prev4_tmp.V13 = Salida_3.V13;
Salida_Prev4_tmp.V14 = Salida_3.V14  ;
Salida_Prev4_tmp.V15 = Salida_3.V15  ;
Salida_Prev4_tmp.V16 = Salida_3.V16  ;
Salida_Prev4_tmp.V17 = Salida_3.V17  ;
Salida_Prev4_tmp.V18 = Salida_3.V18  ;
Salida_Prev4_tmp.V19 = Salida_3.V19  ;
Salida_Prev4_tmp.V20 = Salida_3.V20  ;
Salida_Prev4_tmp.V21 = Salida_3.V21  ;
Salida_Prev4_tmp.V22 = Salida_3.V22  ;
Salida_Prev4_tmp.V23 = Salida_3.V23  ;
Salida_Prev4_tmp.V24 = Salida_3.V24  ;
Salida_Prev4_tmp.V25 = Salida_3.V25  ;
Salida_Prev4_tmp.V26 = Salida_3.V26  ;
Salida_Prev4_tmp.V27 = Salida_3.V27  ;
Salida_Prev4_tmp.V28 = Salida_3.V28  ;
Salida_Prev4_tmp.V29 = Salida_3.V29  ;
Salida_Prev4_tmp.V30 = Salida_3.V30  ;
Salida_Prev4_tmp.V31 = Salida_3.V31  ;
Salida_Prev4_tmp.V32 = Salida_3.V32  ;
Salida_Prev4_tmp.V33 = Salida_3.V33  ;
Salida_Prev4_tmp.V34 = Salida_3.V34  ;
Salida_Prev4_tmp.V35 = Salida_3.V35  ;
Salida_Prev4_tmp.V36 = Salida_3.V36  ;
Salida_Prev4_tmp.V37 = Salida_3.V37  ;
Salida_Prev4_tmp.V38 = Salida_3.V38  ;
Salida_Prev4_tmp.V39 = Salida_3.V39  ;
Salida_Prev4_tmp.V40 = Salida_3.V40  ;
Salida_Prev4_tmp.V41 = Salida_3.V41  ;
Salida_Prev4_tmp.V42 = Salida_3.V42  ;
Salida_Prev4_tmp.V43 = Salida_3.V43  ;
Salida_Prev4_tmp.V44 = Salida_3.V44  ;
Salida_Prev4_tmp.V45 = Salida_3.V45  ;
Salida_Prev4_tmp.V46 = Salida_3.V46  ;
Salida_Prev4_tmp.V47 = Salida_3.V47  ;
Salida_Prev4_tmp.V48 = Salida_3.V48  ;
Salida_Prev4_tmp.V49 = Salida_3.V49  ;
Salida_Prev4_tmp.V50 = Salida_3.V50  ;
Salida_Prev4_tmp.V51 = Salida_3.V51  ;
Salida_Prev4_tmp.V52 = Salida_3.V52  ;
Salida_Prev4_tmp.V53 = Salida_3.V53  ;
Salida_Prev4_tmp.V54 = Salida_3.V54  ;
Salida_Prev4_tmp.V55 = Salida_3.V55  ;
Salida_Prev4_tmp.V56 = Salida_3.V56  ;
Salida_Prev4_tmp.V57 = Salida_3.V57  ;
Salida_Prev4_tmp.V58 = Salida_3.V58  ;
Salida_Prev4_tmp.V59 = Salida_3.V59  ;
Salida_Prev4_tmp.V60 = Salida_3.V60  ;
Salida_Prev4_tmp.V61 = Salida_3.V61  ;
Salida_Prev4_tmp.V62 = Salida_3.V62  ;
Salida_Prev4_tmp.V63 = Salida_3.V63  ;
Salida_Prev4_tmp.V64 = Salida_3.V64  ;
Salida_Prev4_tmp.V65 = Salida_3.V65  ;
Salida_Prev4_tmp.V66 = Salida_3.V66  ;
Salida_Prev4_tmp.V67 = Salida_3.V67  ;
Salida_Prev4_tmp.V68 = Salida_3.V68  ;
Salida_Prev4_tmp.V69 = Salida_3.V69  ;
Salida_Prev4_tmp.V70 = Salida_3.V70  ;
Salida_Prev4_tmp.V71 = Salida_3.V71  ;
Salida_Prev4_tmp.V72 = Salida_3.V72  ;
Salida_Prev4_tmp.V73 = Salida_3.V73  ;
Salida_Prev4_tmp.V74 = Salida_3.V74  ;
Salida_Prev4_tmp.V75 = Salida_3.V75  ;
Salida_Prev4_tmp.V76 = Salida_3.V76  ;
Salida_Prev4_tmp.V77 = Salida_3.V77  ;
Salida_Prev4_tmp.V78 = row67.V78 ;
Salida_Prev4_tmp.V79 = row68.V79 ;
Salida_Prev4_tmp.V80 = row69.V80 ;
Salida_Prev4_tmp.V81 = row70.V81 ;
Salida_Prev4_tmp.V82 = row46.V82 ;
Salida_Prev4_tmp.V83 = row71.V83 ;
Salida_Prev4_tmp.V84 = row72.V84;
Salida_Prev4_tmp.V85 = row73.V85 ;
Salida_Prev4_tmp.V86 = row74.V86 ;
Salida_Prev4_tmp.V87 = row75.V87 ;
Salida_Prev4_tmp.V88 = row76.V88 ;
Salida_Prev4_tmp.V89 = row77.V89 ;
Salida_Prev4_tmp.V90 = row78.V90 ;
Salida_Prev4_tmp.V91 = row79.V91 ;
Salida_Prev4_tmp.V92 = row80.V92 ;
Salida_Prev4_tmp.V93 = row81.V93 ;
Salida_Prev4_tmp.V94 = row82.V94 ;
Salida_Prev4_tmp.V95 = row83.V95 ;
Salida_Prev4_tmp.V96 = row84.V96 ;
Salida_Prev4_tmp.V97 = row85.V97 ;
Salida_Prev4_tmp.V98 = row86.V98 ;
Salida_Prev4_tmp.V99 = row87.V99 ;
Salida_Prev4 = Salida_Prev4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "Salida_Prev4"
if(Salida_Prev4 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_Prev4"
						
						);
					}
					

    //Code generate according to input schema and output schema
Salida_4.PERSONAS_ID = Salida_Prev4.PERSONAS_ID;
Salida_4.EDAD = Salida_Prev4.EDAD;
Salida_4.Edad_year = Salida_Prev4.Edad_year;
Salida_4.Edad_month = Salida_Prev4.Edad_month;
Salida_4.Edad_day = Salida_Prev4.Edad_day;
Salida_4.V0 = Salida_Prev4.V0;
Salida_4.V1 = Salida_Prev4.V1;
Salida_4.V2 = Salida_Prev4.V2;
Salida_4.V3 = Salida_Prev4.V3;
Salida_4.V4 = Salida_Prev4.V4;
Salida_4.V5 = Salida_Prev4.V5;
Salida_4.V6 = Salida_Prev4.V6;
Salida_4.V7 = Salida_Prev4.V7;
Salida_4.V8 = Salida_Prev4.V8;
Salida_4.V9 = Salida_Prev4.V9;
Salida_4.V10 = Salida_Prev4.V10;
Salida_4.V11 = Salida_Prev4.V11;
Salida_4.V12 = Salida_Prev4.V12;
Salida_4.V13 = Salida_Prev4.V13;
Salida_4.V14 = Salida_Prev4.V14;
Salida_4.V15 = Salida_Prev4.V15;
Salida_4.V16 = Salida_Prev4.V16;
Salida_4.V17 = Salida_Prev4.V17;
Salida_4.V18 = Salida_Prev4.V18;
Salida_4.V19 = Salida_Prev4.V19;
Salida_4.V20 = Salida_Prev4.V20;
Salida_4.V21 = Salida_Prev4.V21;
Salida_4.V22 = Salida_Prev4.V22;
Salida_4.V23 = Salida_Prev4.V23;
Salida_4.V24 = Salida_Prev4.V24;
Salida_4.V25 = Salida_Prev4.V25;
Salida_4.V26 = Salida_Prev4.V26;
Salida_4.V27 = Salida_Prev4.V27;
Salida_4.V28 = Salida_Prev4.V28;
Salida_4.V29 = Salida_Prev4.V29;
Salida_4.V30 = Salida_Prev4.V30;
Salida_4.V31 = Salida_Prev4.V31;
Salida_4.V32 = Salida_Prev4.V32;
Salida_4.V33 = Salida_Prev4.V33;
Salida_4.V34 = Salida_Prev4.V34;
Salida_4.V35 = Salida_Prev4.V35;
Salida_4.V36 = Salida_Prev4.V36;
Salida_4.V37 = Salida_Prev4.V37;
Salida_4.V38 = Salida_Prev4.V38;
Salida_4.V39 = Salida_Prev4.V39;
Salida_4.V40 = Salida_Prev4.V40;
Salida_4.V41 = Salida_Prev4.V41;
Salida_4.V42 = Salida_Prev4.V42;
Salida_4.V43 = Salida_Prev4.V43;
Salida_4.V44 = Salida_Prev4.V44;
Salida_4.V45 = Salida_Prev4.V45;
Salida_4.V46 = Salida_Prev4.V46;
Salida_4.V47 = Salida_Prev4.V47;
Salida_4.V48 = Salida_Prev4.V48;
Salida_4.V49 = Salida_Prev4.V49;
Salida_4.V50 = Salida_Prev4.V50;
Salida_4.V51 = Salida_Prev4.V51;
Salida_4.V52 = Salida_Prev4.V52;
Salida_4.V53 = Salida_Prev4.V53;
Salida_4.V54 = Salida_Prev4.V54;
Salida_4.V55 = Salida_Prev4.V55;
Salida_4.V56 = Salida_Prev4.V56;
Salida_4.V57 = Salida_Prev4.V57;
Salida_4.V58 = Salida_Prev4.V58;
Salida_4.V59 = Salida_Prev4.V59;
Salida_4.V60 = Salida_Prev4.V60;
Salida_4.V61 = Salida_Prev4.V61;
Salida_4.V62 = Salida_Prev4.V62;
Salida_4.V63 = Salida_Prev4.V63;
Salida_4.V64 = Salida_Prev4.V64;
Salida_4.V65 = Salida_Prev4.V65;
Salida_4.V66 = Salida_Prev4.V66;
Salida_4.V67 = Salida_Prev4.V67;
Salida_4.V68 = Salida_Prev4.V68;
Salida_4.V69 = Salida_Prev4.V69;
Salida_4.V70 = Salida_Prev4.V70;
Salida_4.V71 = Salida_Prev4.V71;
Salida_4.V72 = Salida_Prev4.V72;
Salida_4.V73 = Salida_Prev4.V73;
Salida_4.V74 = Salida_Prev4.V74;
Salida_4.V75 = Salida_Prev4.V75;
Salida_4.V76 = Salida_Prev4.V76;
Salida_4.V77 = Salida_Prev4.V77;
Salida_4.V78 = Salida_Prev4.V78;
Salida_4.V79 = Salida_Prev4.V79;
Salida_4.V80 = Salida_Prev4.V80;
Salida_4.V81 = Salida_Prev4.V81;
Salida_4.V82 = Salida_Prev4.V82;
Salida_4.V83 = Salida_Prev4.V83;
Salida_4.V84 = Salida_Prev4.V84;
Salida_4.V85 = Salida_Prev4.V85;
Salida_4.V86 = Salida_Prev4.V86;
Salida_4.V87 = Salida_Prev4.V87;
Salida_4.V88 = Salida_Prev4.V88;
Salida_4.V89 = Salida_Prev4.V89;
Salida_4.V90 = Salida_Prev4.V90;
Salida_4.V91 = Salida_Prev4.V91;
Salida_4.V92 = Salida_Prev4.V92;
Salida_4.V93 = Salida_Prev4.V93;
Salida_4.V94 = Salida_Prev4.V94;
Salida_4.V95 = Salida_Prev4.V95;
Salida_4.V96 = Salida_Prev4.V96;
Salida_4.V97 = Salida_Prev4.V97;
Salida_4.V98 = Salida_Prev4.V98;
Salida_4.V99 = Salida_Prev4.V99;



/*	78.Fecha Ant√≠geno de Superficie Hepatitis B en Gestantes
AAAA-MM-DD 
Si no se tiene el dato registrar 1800-01-01 
Si no se realiza por una Tradici√≥n registrar 1805-01-01 
Si no se realiza por una Condici√≥n de Salud registrar 1810-01-01 
Si no se realiza por Negaci√≥n del usuario registrar 1825-01-01 
Si no se realiza por tener datos de contacto del usuario no actualizados registrar 1830-01-01 
Si no se realiza por otras razones registrar 1835-01-01 
Si no aplica registrar 1845-01-01
*/
//Salida_4.V78 = Salida_Prev4.V78;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V78 = "1845-01-01";
}

if(Salida_4.V14.equals("0") == true || Salida_4.V14.equals("2") == true || Salida_4.V14.equals("21") == true ){
	Salida_4.V78 = "1845-01-01";
}

if(Salida_4.V14.equals("1") == true && Salida_4.V78 == null ){
	Salida_4.V78 = "1800-01-01";
}

if( Salida_Prev4.V9 != null && (Salida_4.Edad_year < 10 || Salida_4.Edad_year >= 60)){
	Salida_4.V78 = "1845-01-01";
}


if ( Salida_4.V78 == null ) {
	Salida_4.V78 = "1845-01-01";
}



/*	79. Resultado Ant√≠geno de Superficie Hepatitis B en Gestantes
	0- No aplica 
	1- Negativo 
	2- Positivo 
	22- Sin dato
*/
//Salida_4.V79 = Salida_Prev4.V79;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V79 = "0";
}

if(Salida_4.V14.equals("0") == true || Salida_4.V14.equals("2") == true || Salida_4.V14.equals("21") == true ){
	Salida_4.V79 = "0";
}

if(Salida_4.V14.equals("1") == true && Salida_4.V79 == null ){
	Salida_4.V79 = "22";
}

if(Salida_4.V79 == null){
	Salida_4.V79 = "0";
}




/*	80.Fecha Serolog√≠a para S√≠filis
*/
//Salida_4.V80 = Salida_Prev4.V80;
if(Salida_Prev4.V80 == null){
	Salida_4.V80 = "1845-01-01";
}



/*	81. Resultado Serolog√≠a para S√≠filis
*/
//Salida_4.V81 = Salida_Prev4.V81;
if(Salida_Prev4.V81 == null){
	Salida_4.V81 = "0";
}



/*	82.Fecha de Toma de Elisa para VIH
*/
//Salida_4.V82 = Salida_Prev4.V82;
if(Salida_Prev4.V82 == null){
	Salida_4.V82 = "1845-01-01";
}




/*	83. Resultado Elisa para VIH
*/
//Salida_4.V83 = Salida_Prev4.V83;
if(Salida_Prev4.V83 == null){
	Salida_4.V83 = "0";
}



/*	84.Fecha TSH Neonatal
*/
//Salida_4.V84 = Salida_Prev4.V84;
if(Salida_Prev4.V84 == null){
	Salida_4.V84 = "1845-01-01";
}



/*	85. Resultado de TSH Neonatal
*/
//Salida_4.V85 = Salida_Prev4.V85;
if(Salida_Prev4.V85 == null){
	Salida_4.V85 = "0";
}



/*	86.Tamizaje C√°ncer de Cuello Uterino
0- No aplica 
1- Citolog√≠a c√©rvico uterina 
2- ADN ‚Äì VPH 
3- T√©cnica de inspecci√≥n Visual 
22- Sin dato
*/
//Salida_4.V86 = Salida_Prev4.V86;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V86 = "0";
}

if( Salida_Prev4.V9 != null && Salida_4.Edad_year <= 10 ){
	Salida_4.V86 = "0";
}

if( Salida_4.V86 == null && Salida_Prev4.V9 != null && Salida_4.Edad_year > 10 ){
	Salida_4.V86 = "22";
}




/*	87.Citolog√≠a Cervico uterina
*/
//Salida_4.V87 = Salida_Prev4.V87;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V87 = "1845-01-01";
}

if(Salida_Prev4.V9 != null && Salida_4.Edad_year < 10  ){
	Salida_4.V87 = "1845-01-01";
}

if(Salida_4.V87 == null){
	Salida_4.V87 = "1800-01-01";
}



/*	88. Citolog√≠a Cervico uterina Resultados seg√∫n Bethesda
*/
//Salida_4.V88 = Salida_Prev4.V88;


if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V88 = "0";
}

if( Salida_Prev4.V9 != null && Salida_4.Edad_year < 10  ){
	Salida_4.V88 = "0";
}

if(Salida_4.V88 == null){
	Salida_4.V88 = "999";
}




/*	89. Calidad en la Muestra de Citolog√≠a Cervicouterina
*/
//Salida_4.V89 = Salida_Prev4.V89;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V89 = "0";
}

if(Salida_Prev4.V9 != null && Salida_4.Edad_year < 10  ){
	Salida_4.V89 = "0";
}

if(Salida_4.V89 == null){
	Salida_4.V89 = "999";
}



/*	90. C√≥digo de habilitaci√≥n IPS donde se toma Citolog√≠a Cervicouterina
*/
//Salida_4.V90 = Salida_Prev4.V90;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V90 = "0";
}

if ( Salida_4.V87.equals("1845-01-01") ) {
	Salida_4.V90 = "0";
}

if ( Salida_4.V87.equals("1800-01-01") ) {
	Salida_4.V90 = "999";
}

if(Salida_4.V90 == null){
	Salida_4.V90 = "0";
}



/*	91.Fecha Colposcopia
*/
//Salida_4.V91 = Salida_Prev4.V91;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V91 = "1845-01-01";
}
if(Salida_4.V91 == null){
	Salida_4.V91 = "1845-01-01";
}



/*	92. C√≥digo de habilitaci√≥n IPS donde se toma Colposcopia
*/
//Salida_4.V92 = Salida_Prev4.V92;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V92 = "0";
}
if(Salida_4.V92 == null){
	Salida_4.V92 = "0";
}



/*	93. Fecha Biopsia Cervical
*/
//Salida_4.V93 = Salida_Prev4.V93;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V93 = "1845-01-01";
}
if(Salida_4.V93 == null){
	Salida_4.V93 = "1845-01-01";
}



/*.	94. Resultado de Biopsia Cervical
*/
//Salida_4.V94 = Salida_Prev4.V94;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V94 = "0";
}

if(Salida_4.V94 == null){
	Salida_4.V94 = "0";
}



/*	95.C√≥digo de habilitaci√≥n IPS donde se toma Biopsia Cervical
*/
//Salida_4.V95 = Salida_Prev4.V95;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V95 = "0";
}

if(Salida_4.V95 == null){
	Salida_4.V95 = "0";
}



/*	96. Fecha Mamograf√≠a
*/
//Salida_4.V96 = Salida_Prev4.V96;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V96 = "1845-01-01";
}
if( Salida_Prev4.V9 != null && Salida_4.Edad_year < 35  ){
	Salida_4.V96 = "1845-01-01";
}

if( Salida_4.V96 == null && Salida_Prev4.V9 != null && Salida_4.Edad_year > 35  ){
	Salida_4.V96 = "1800-01-01";
}

if(Salida_4.V96 == null){
	Salida_4.V96 = "1845-01-01";
}



/*	97. Resultado Mamograf√≠a
*/
//Salida_4.V97 = Salida_Prev4.V97;
if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V97 = "0";
}
if( Salida_Prev4.V9 != null && Salida_4.Edad_year < 35  ){
	Salida_4.V97 = "0";
}
if(Salida_4.V97 == null && Salida_Prev4.V9 != null && Salida_4.Edad_year >= 35  ){
	Salida_4.V97 = "999";
}

if(Salida_4.V97 == null){
	Salida_4.V97 = "0";
}

if(Salida_4.V97.equals("999") == true ){
	Salida_4.V96 = "1800-01-01";
	Salida_4.V98 = "999";
}



/*	98.C√≥digo de habilitaci√≥n IPS donde se toma Mamograf√≠a
	Tabla REPS (Registro Especial de Prestadores de Servicios de Salud). 
	Si no tiene el dato registrar 999 
	Si no aplica registrar 0
*/
//Salida_4.V98 = Salida_Prev4.V98;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V98 = "0";
}

if(Salida_Prev4.V9 != null && Salida_4.Edad_year < 35  ){
	Salida_4.V98 = "0";
}

if(Salida_4.V98 == null && Salida_Prev4.V9 != null && Salida_4.Edad_year >= 35  ){
	Salida_4.V98 = "999";
}

if(Salida_4.V98 == null){
	Salida_4.V98 = "999";
}




/*	99. Fecha Toma Biopsia Seno por BACAF
AAAA-MM-DD
*/
//Salida_4.V99 = Salida_Prev4.V99;

if( Salida_Prev4.V10 != null && Salida_Prev4.V10.equals("M") == true ) {
	Salida_4.V99 = "1845-01-01";
}

if(Salida_4.V99 == null){
	Salida_4.V99 = "1845-01-01";
}


    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row89Struct row89 = null;
					
						row90Struct row90 = null;
					
						row91Struct row91 = null;
					
						row92Struct row92 = null;
					
						row93Struct row93 = null;
					
						row94Struct row94 = null;
					
						row95Struct row95 = null;
					
						row96Struct row96 = null;
					
						row97Struct row97 = null;
					
						row98Struct row98 = null;
					
						row99Struct row99 = null;
					
						row100Struct row100 = null;
					
						row101Struct row101 = null;
					
						row102Struct row102 = null;
					
						row103Struct row103 = null;
					
						row104Struct row104 = null;
					
						row105Struct row105 = null;
					
						row106Struct row106 = null;
					
						row107Struct row107 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row89" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow89 = false;
       		  	    	
       		  	    	
 							row89Struct row89ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row89HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row89HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row89.lookup( row89HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row89 != null && tHash_Lookup_row89.getCount(row89HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row89' and it contains more one result from keys :  row89.PERSONAS_ID = '" + row89HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row89Struct fromLookup_row89 = null;
							row89 = row89Default;
										 
							
								 
							
							
								if (tHash_Lookup_row89 !=null && tHash_Lookup_row89.hasNext()) { // G 099
								
							
								
								fromLookup_row89 = tHash_Lookup_row89.next();

							
							
								} // G 099
							
							

							if(fromLookup_row89 != null) {
								row89 = fromLookup_row89;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row90" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow90 = false;
       		  	    	
       		  	    	
 							row90Struct row90ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row90HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row90HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row90.lookup( row90HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row90 != null && tHash_Lookup_row90.getCount(row90HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row90' and it contains more one result from keys :  row90.PERSONAS_ID = '" + row90HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row90Struct fromLookup_row90 = null;
							row90 = row90Default;
										 
							
								 
							
							
								if (tHash_Lookup_row90 !=null && tHash_Lookup_row90.hasNext()) { // G 099
								
							
								
								fromLookup_row90 = tHash_Lookup_row90.next();

							
							
								} // G 099
							
							

							if(fromLookup_row90 != null) {
								row90 = fromLookup_row90;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row91" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow91 = false;
       		  	    	
       		  	    	
 							row91Struct row91ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row91HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row91HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row91.lookup( row91HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row91 != null && tHash_Lookup_row91.getCount(row91HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row91' and it contains more one result from keys :  row91.PERSONAS_ID = '" + row91HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row91Struct fromLookup_row91 = null;
							row91 = row91Default;
										 
							
								 
							
							
								if (tHash_Lookup_row91 !=null && tHash_Lookup_row91.hasNext()) { // G 099
								
							
								
								fromLookup_row91 = tHash_Lookup_row91.next();

							
							
								} // G 099
							
							

							if(fromLookup_row91 != null) {
								row91 = fromLookup_row91;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row92" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow92 = false;
       		  	    	
       		  	    	
 							row92Struct row92ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row92HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row92HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row92.lookup( row92HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row92 != null && tHash_Lookup_row92.getCount(row92HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row92' and it contains more one result from keys :  row92.PERSONAS_ID = '" + row92HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row92Struct fromLookup_row92 = null;
							row92 = row92Default;
										 
							
								 
							
							
								if (tHash_Lookup_row92 !=null && tHash_Lookup_row92.hasNext()) { // G 099
								
							
								
								fromLookup_row92 = tHash_Lookup_row92.next();

							
							
								} // G 099
							
							

							if(fromLookup_row92 != null) {
								row92 = fromLookup_row92;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row93" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow93 = false;
       		  	    	
       		  	    	
 							row93Struct row93ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row93HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row93HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row93.lookup( row93HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row93 != null && tHash_Lookup_row93.getCount(row93HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row93' and it contains more one result from keys :  row93.PERSONAS_ID = '" + row93HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row93Struct fromLookup_row93 = null;
							row93 = row93Default;
										 
							
								 
							
							
								if (tHash_Lookup_row93 !=null && tHash_Lookup_row93.hasNext()) { // G 099
								
							
								
								fromLookup_row93 = tHash_Lookup_row93.next();

							
							
								} // G 099
							
							

							if(fromLookup_row93 != null) {
								row93 = fromLookup_row93;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row94" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow94 = false;
       		  	    	
       		  	    	
 							row94Struct row94ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row94HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row94HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row94.lookup( row94HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row94 != null && tHash_Lookup_row94.getCount(row94HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row94' and it contains more one result from keys :  row94.PERSONAS_ID = '" + row94HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row94Struct fromLookup_row94 = null;
							row94 = row94Default;
										 
							
								 
							
							
								if (tHash_Lookup_row94 !=null && tHash_Lookup_row94.hasNext()) { // G 099
								
							
								
								fromLookup_row94 = tHash_Lookup_row94.next();

							
							
								} // G 099
							
							

							if(fromLookup_row94 != null) {
								row94 = fromLookup_row94;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row95" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow95 = false;
       		  	    	
       		  	    	
 							row95Struct row95ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row95HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row95HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row95.lookup( row95HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row95 != null && tHash_Lookup_row95.getCount(row95HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row95' and it contains more one result from keys :  row95.PERSONAS_ID = '" + row95HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row95Struct fromLookup_row95 = null;
							row95 = row95Default;
										 
							
								 
							
							
								if (tHash_Lookup_row95 !=null && tHash_Lookup_row95.hasNext()) { // G 099
								
							
								
								fromLookup_row95 = tHash_Lookup_row95.next();

							
							
								} // G 099
							
							

							if(fromLookup_row95 != null) {
								row95 = fromLookup_row95;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row96" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow96 = false;
       		  	    	
       		  	    	
 							row96Struct row96ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row96HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row96HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row96.lookup( row96HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row96 != null && tHash_Lookup_row96.getCount(row96HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row96' and it contains more one result from keys :  row96.PERSONAS_ID = '" + row96HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row96Struct fromLookup_row96 = null;
							row96 = row96Default;
										 
							
								 
							
							
								if (tHash_Lookup_row96 !=null && tHash_Lookup_row96.hasNext()) { // G 099
								
							
								
								fromLookup_row96 = tHash_Lookup_row96.next();

							
							
								} // G 099
							
							

							if(fromLookup_row96 != null) {
								row96 = fromLookup_row96;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row97" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow97 = false;
       		  	    	
       		  	    	
 							row97Struct row97ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row97HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row97HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row97.lookup( row97HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row97 != null && tHash_Lookup_row97.getCount(row97HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row97' and it contains more one result from keys :  row97.PERSONAS_ID = '" + row97HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row97Struct fromLookup_row97 = null;
							row97 = row97Default;
										 
							
								 
							
							
								if (tHash_Lookup_row97 !=null && tHash_Lookup_row97.hasNext()) { // G 099
								
							
								
								fromLookup_row97 = tHash_Lookup_row97.next();

							
							
								} // G 099
							
							

							if(fromLookup_row97 != null) {
								row97 = fromLookup_row97;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row98" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow98 = false;
       		  	    	
       		  	    	
 							row98Struct row98ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row98HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row98HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row98.lookup( row98HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row98 != null && tHash_Lookup_row98.getCount(row98HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row98' and it contains more one result from keys :  row98.PERSONAS_ID = '" + row98HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row98Struct fromLookup_row98 = null;
							row98 = row98Default;
										 
							
								 
							
							
								if (tHash_Lookup_row98 !=null && tHash_Lookup_row98.hasNext()) { // G 099
								
							
								
								fromLookup_row98 = tHash_Lookup_row98.next();

							
							
								} // G 099
							
							

							if(fromLookup_row98 != null) {
								row98 = fromLookup_row98;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row99" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow99 = false;
       		  	    	
       		  	    	
 							row99Struct row99ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row99HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row99HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row99.lookup( row99HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row99 != null && tHash_Lookup_row99.getCount(row99HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row99' and it contains more one result from keys :  row99.PERSONAS_ID = '" + row99HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row99Struct fromLookup_row99 = null;
							row99 = row99Default;
										 
							
								 
							
							
								if (tHash_Lookup_row99 !=null && tHash_Lookup_row99.hasNext()) { // G 099
								
							
								
								fromLookup_row99 = tHash_Lookup_row99.next();

							
							
								} // G 099
							
							

							if(fromLookup_row99 != null) {
								row99 = fromLookup_row99;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row100" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow100 = false;
       		  	    	
       		  	    	
 							row100Struct row100ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row100HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row100HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row100.lookup( row100HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row100 != null && tHash_Lookup_row100.getCount(row100HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row100' and it contains more one result from keys :  row100.PERSONAS_ID = '" + row100HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row100Struct fromLookup_row100 = null;
							row100 = row100Default;
										 
							
								 
							
							
								if (tHash_Lookup_row100 !=null && tHash_Lookup_row100.hasNext()) { // G 099
								
							
								
								fromLookup_row100 = tHash_Lookup_row100.next();

							
							
								} // G 099
							
							

							if(fromLookup_row100 != null) {
								row100 = fromLookup_row100;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row101" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow101 = false;
       		  	    	
       		  	    	
 							row101Struct row101ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row101HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row101HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row101.lookup( row101HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row101 != null && tHash_Lookup_row101.getCount(row101HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row101' and it contains more one result from keys :  row101.PERSONAS_ID = '" + row101HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row101Struct fromLookup_row101 = null;
							row101 = row101Default;
										 
							
								 
							
							
								if (tHash_Lookup_row101 !=null && tHash_Lookup_row101.hasNext()) { // G 099
								
							
								
								fromLookup_row101 = tHash_Lookup_row101.next();

							
							
								} // G 099
							
							

							if(fromLookup_row101 != null) {
								row101 = fromLookup_row101;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row102" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow102 = false;
       		  	    	
       		  	    	
 							row102Struct row102ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row102HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row102HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row102.lookup( row102HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row102 != null && tHash_Lookup_row102.getCount(row102HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row102' and it contains more one result from keys :  row102.PERSONAS_ID = '" + row102HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row102Struct fromLookup_row102 = null;
							row102 = row102Default;
										 
							
								 
							
							
								if (tHash_Lookup_row102 !=null && tHash_Lookup_row102.hasNext()) { // G 099
								
							
								
								fromLookup_row102 = tHash_Lookup_row102.next();

							
							
								} // G 099
							
							

							if(fromLookup_row102 != null) {
								row102 = fromLookup_row102;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row103" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow103 = false;
       		  	    	
       		  	    	
 							row103Struct row103ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row103HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row103HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row103.lookup( row103HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row103 != null && tHash_Lookup_row103.getCount(row103HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row103' and it contains more one result from keys :  row103.PERSONAS_ID = '" + row103HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row103Struct fromLookup_row103 = null;
							row103 = row103Default;
										 
							
								 
							
							
								if (tHash_Lookup_row103 !=null && tHash_Lookup_row103.hasNext()) { // G 099
								
							
								
								fromLookup_row103 = tHash_Lookup_row103.next();

							
							
								} // G 099
							
							

							if(fromLookup_row103 != null) {
								row103 = fromLookup_row103;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row104" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow104 = false;
       		  	    	
       		  	    	
 							row104Struct row104ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row104HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row104HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row104.lookup( row104HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row104 != null && tHash_Lookup_row104.getCount(row104HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row104' and it contains more one result from keys :  row104.PERSONAS_ID = '" + row104HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row104Struct fromLookup_row104 = null;
							row104 = row104Default;
										 
							
								 
							
							
								if (tHash_Lookup_row104 !=null && tHash_Lookup_row104.hasNext()) { // G 099
								
							
								
								fromLookup_row104 = tHash_Lookup_row104.next();

							
							
								} // G 099
							
							

							if(fromLookup_row104 != null) {
								row104 = fromLookup_row104;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row105" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow105 = false;
       		  	    	
       		  	    	
 							row105Struct row105ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row105HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row105HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row105.lookup( row105HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row105 != null && tHash_Lookup_row105.getCount(row105HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row105' and it contains more one result from keys :  row105.PERSONAS_ID = '" + row105HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row105Struct fromLookup_row105 = null;
							row105 = row105Default;
										 
							
								 
							
							
								if (tHash_Lookup_row105 !=null && tHash_Lookup_row105.hasNext()) { // G 099
								
							
								
								fromLookup_row105 = tHash_Lookup_row105.next();

							
							
								} // G 099
							
							

							if(fromLookup_row105 != null) {
								row105 = fromLookup_row105;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row106" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow106 = false;
       		  	    	
       		  	    	
 							row106Struct row106ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row106HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row106HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row106.lookup( row106HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row106 != null && tHash_Lookup_row106.getCount(row106HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row106' and it contains more one result from keys :  row106.PERSONAS_ID = '" + row106HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row106Struct fromLookup_row106 = null;
							row106 = row106Default;
										 
							
								 
							
							
								if (tHash_Lookup_row106 !=null && tHash_Lookup_row106.hasNext()) { // G 099
								
							
								
								fromLookup_row106 = tHash_Lookup_row106.next();

							
							
								} // G 099
							
							

							if(fromLookup_row106 != null) {
								row106 = fromLookup_row106;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	           	
	            	
	            

				///////////////////////////////////////////////
				// Starting Lookup Table "row107" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow107 = false;
       		  	    	
       		  	    	
 							row107Struct row107ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row107HashKey.PERSONAS_ID = Salida_4.PERSONAS_ID ;
                        		    		

								
		                        	row107HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row107.lookup( row107HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row107 != null && tHash_Lookup_row107.getCount(row107HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row107' and it contains more one result from keys :  row107.PERSONAS_ID = '" + row107HashKey.PERSONAS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row107Struct fromLookup_row107 = null;
							row107 = row107Default;
										 
							
								 
							
							
								if (tHash_Lookup_row107 !=null && tHash_Lookup_row107.hasNext()) { // G 099
								
							
								
								fromLookup_row107 = tHash_Lookup_row107.next();

							
							
								} // G 099
							
							

							if(fromLookup_row107 != null) {
								row107 = fromLookup_row107;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

Salida_5 = null;


// # Output table : 'Salida_5'
Salida_5_tmp.PERSONAS_ID = Salida_4.PERSONAS_ID ;
Salida_5_tmp.EDAD = Salida_4.EDAD ;
Salida_5_tmp.Edad_year = Salida_4.Edad_year ;
Salida_5_tmp.Edad_month = Salida_4.Edad_month ;
Salida_5_tmp.Edad_day = Salida_4.Edad_day ;
Salida_5_tmp.V0 = Salida_4.V0;
Salida_5_tmp.V1 = Salida_4.V1;
Salida_5_tmp.V2 = Salida_4.V2;
Salida_5_tmp.V3 = Salida_4.V3;
Salida_5_tmp.V4 = Salida_4.V4;
Salida_5_tmp.V5 = Salida_4.V5;
Salida_5_tmp.V6 = Salida_4.V6;
Salida_5_tmp.V7 = Salida_4.V7;
Salida_5_tmp.V8 = Salida_4.V8;
Salida_5_tmp.V9 = Salida_4.V9;
Salida_5_tmp.V10 = Salida_4.V10;
Salida_5_tmp.V11 = Salida_4.V11;
Salida_5_tmp.V12 = Salida_4.V12;
Salida_5_tmp.V13 = Salida_4.V13;
Salida_5_tmp.V14 = Salida_4.V14 ;
Salida_5_tmp.V15 = Salida_4.V15 ;
Salida_5_tmp.V16 = Salida_4.V16 ;
Salida_5_tmp.V17 = Salida_4.V17 ;
Salida_5_tmp.V18 = Salida_4.V18 ;
Salida_5_tmp.V19 = Salida_4.V19 ;
Salida_5_tmp.V20 = Salida_4.V20 ;
Salida_5_tmp.V21 = Salida_4.V21 ;
Salida_5_tmp.V22 = Salida_4.V22 ;
Salida_5_tmp.V23 = Salida_4.V23 ;
Salida_5_tmp.V24 = Salida_4.V24 ;
Salida_5_tmp.V25 = Salida_4.V25 ;
Salida_5_tmp.V26 = Salida_4.V26 ;
Salida_5_tmp.V27 = Salida_4.V27 ;
Salida_5_tmp.V28 = Salida_4.V28 ;
Salida_5_tmp.V29 = Salida_4.V29 ;
Salida_5_tmp.V30 = Salida_4.V30 ;
Salida_5_tmp.V31 = Salida_4.V31 ;
Salida_5_tmp.V32 = Salida_4.V32 ;
Salida_5_tmp.V33 = Salida_4.V33 ;
Salida_5_tmp.V34 = Salida_4.V34 ;
Salida_5_tmp.V35 = Salida_4.V35 ;
Salida_5_tmp.V36 = Salida_4.V36 ;
Salida_5_tmp.V37 = Salida_4.V37 ;
Salida_5_tmp.V38 = Salida_4.V38 ;
Salida_5_tmp.V39 = Salida_4.V39 ;
Salida_5_tmp.V40 = Salida_4.V40 ;
Salida_5_tmp.V41 = Salida_4.V41 ;
Salida_5_tmp.V42 = Salida_4.V42 ;
Salida_5_tmp.V43 = Salida_4.V43 ;
Salida_5_tmp.V44 = Salida_4.V44 ;
Salida_5_tmp.V45 = Salida_4.V45 ;
Salida_5_tmp.V46 = Salida_4.V46 ;
Salida_5_tmp.V47 = Salida_4.V47 ;
Salida_5_tmp.V48 = Salida_4.V48 ;
Salida_5_tmp.V49 = Salida_4.V49 ;
Salida_5_tmp.V50 = Salida_4.V50 ;
Salida_5_tmp.V51 = Salida_4.V51 ;
Salida_5_tmp.V52 = Salida_4.V52 ;
Salida_5_tmp.V53 = Salida_4.V53 ;
Salida_5_tmp.V54 = Salida_4.V54 ;
Salida_5_tmp.V55 = Salida_4.V55 ;
Salida_5_tmp.V56 = Salida_4.V56 ;
Salida_5_tmp.V57 = Salida_4.V57 ;
Salida_5_tmp.V58 = Salida_4.V58 ;
Salida_5_tmp.V59 = Salida_4.V59 ;
Salida_5_tmp.V60 = Salida_4.V60 ;
Salida_5_tmp.V61 = Salida_4.V61 ;
Salida_5_tmp.V62 = Salida_4.V62 ;
Salida_5_tmp.V63 = Salida_4.V63 ;
Salida_5_tmp.V64 = Salida_4.V64 ;
Salida_5_tmp.V65 = Salida_4.V65 ;
Salida_5_tmp.V66 = Salida_4.V66 ;
Salida_5_tmp.V67 = Salida_4.V67 ;
Salida_5_tmp.V68 = Salida_4.V68 ;
Salida_5_tmp.V69 = Salida_4.V69 ;
Salida_5_tmp.V70 = Salida_4.V70 ;
Salida_5_tmp.V71 = Salida_4.V71 ;
Salida_5_tmp.V72 = Salida_4.V72 ;
Salida_5_tmp.V73 = Salida_4.V73 ;
Salida_5_tmp.V74 = Salida_4.V74 ;
Salida_5_tmp.V75 = Salida_4.V75 ;
Salida_5_tmp.V76 = Salida_4.V76 ;
Salida_5_tmp.V77 = Salida_4.V77 ;
Salida_5_tmp.V78 = Salida_4.V78 ;
Salida_5_tmp.V79 = Salida_4.V79 ;
Salida_5_tmp.V80 = Salida_4.V80 ;
Salida_5_tmp.V81 = Salida_4.V81 ;
Salida_5_tmp.V82 = Salida_4.V82 ;
Salida_5_tmp.V83 = Salida_4.V83 ;
Salida_5_tmp.V84 = Salida_4.V84 ;
Salida_5_tmp.V85 = Salida_4.V85 ;
Salida_5_tmp.V86 = Salida_4.V86 ;
Salida_5_tmp.V87 = Salida_4.V87 ;
Salida_5_tmp.V88 = Salida_4.V88 ;
Salida_5_tmp.V89 = Salida_4.V89 ;
Salida_5_tmp.V90 = Salida_4.V90 ;
Salida_5_tmp.V91 = Salida_4.V91 ;
Salida_5_tmp.V92 = Salida_4.V92 ;
Salida_5_tmp.V93 = Salida_4.V93 ;
Salida_5_tmp.V94 = Salida_4.V94 ;
Salida_5_tmp.V95 = Salida_4.V95 ;
Salida_5_tmp.V96 = Salida_4.V96 ;
Salida_5_tmp.V97 = Salida_4.V97 ;
Salida_5_tmp.V98 = Salida_4.V98 ;
Salida_5_tmp.V99 = Salida_4.V99 ;
Salida_5_tmp.V100 = row89.V100 ;
Salida_5_tmp.V101 = row90.V101 ;
Salida_5_tmp.V102 = row91.V102 ;
Salida_5_tmp.V103 = row92.V103 ;
Salida_5_tmp.V104 = row93.V104 ;
Salida_5_tmp.V105 = row94.V105 ;
Salida_5_tmp.V106 = row95.V106 ;
Salida_5_tmp.V107 = row96.V107 ;
Salida_5_tmp.V108 = row97.V108 ;
Salida_5_tmp.V109 = row98.V109 ;
Salida_5_tmp.V110 = row99.V110 ;
Salida_5_tmp.V111 = row100.V111 ;
Salida_5_tmp.V112 = row101.V112 ;
Salida_5_tmp.V113 = row102.V113 ;
Salida_5_tmp.V114 = row103.V114 ;
Salida_5_tmp.V115 = row104.V115 ;
Salida_5_tmp.V116 = row105.V116 ;
Salida_5_tmp.V117 = row106.V117 ;
Salida_5_tmp.V118 = row107.V118 ;
Salida_5 = Salida_5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "Salida_5"
if(Salida_5 != null) { 



	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Salida_5"
						
						);
					}
					

    //Code generate according to input schema and output schema
row110.PERSONAS_ID = Salida_5.PERSONAS_ID;
row110.EDAD = Salida_5.EDAD;
row110.Edad_year = Salida_5.Edad_year;
row110.Edad_month = Salida_5.Edad_month;
row110.Edad_day = Salida_5.Edad_day;
row110.V0 = Salida_5.V0;
row110.V1 = Salida_5.V1;
row110.V2 = Salida_5.V2;
row110.V3 = Salida_5.V3;
row110.V4 = Salida_5.V4;
row110.V5 = Salida_5.V5;
row110.V6 = Salida_5.V6;
row110.V7 = Salida_5.V7;
row110.V8 = Salida_5.V8;
row110.V9 = Salida_5.V9;
row110.V10 = Salida_5.V10;
row110.V11 = Salida_5.V11;
row110.V12 = Salida_5.V12;
row110.V13 = Salida_5.V13;
row110.V14 = Salida_5.V14;
row110.V15 = Salida_5.V15;
row110.V16 = Salida_5.V16;
row110.V17 = Salida_5.V17;
row110.V18 = Salida_5.V18;
row110.V19 = Salida_5.V19;
row110.V20 = Salida_5.V20;
row110.V21 = Salida_5.V21;
row110.V22 = Salida_5.V22;
row110.V23 = Salida_5.V23;
row110.V24 = Salida_5.V24;
row110.V25 = Salida_5.V25;
row110.V26 = Salida_5.V26;
row110.V27 = Salida_5.V27;
row110.V28 = Salida_5.V28;
row110.V29 = Salida_5.V29;
row110.V30 = Salida_5.V30;
row110.V31 = Salida_5.V31;
row110.V32 = Salida_5.V32;
row110.V33 = Salida_5.V33;
row110.V34 = Salida_5.V34;
row110.V35 = Salida_5.V35;
row110.V36 = Salida_5.V36;
row110.V37 = Salida_5.V37;
row110.V38 = Salida_5.V38;
row110.V39 = Salida_5.V39;
row110.V40 = Salida_5.V40;
row110.V41 = Salida_5.V41;
row110.V42 = Salida_5.V42;
row110.V43 = Salida_5.V43;
row110.V44 = Salida_5.V44;
row110.V45 = Salida_5.V45;
row110.V46 = Salida_5.V46;
row110.V47 = Salida_5.V47;
row110.V48 = Salida_5.V48;
row110.V49 = Salida_5.V49;
row110.V50 = Salida_5.V50;
row110.V51 = Salida_5.V51;
row110.V52 = Salida_5.V52;
row110.V53 = Salida_5.V53;
row110.V54 = Salida_5.V54;
row110.V55 = Salida_5.V55;
row110.V56 = Salida_5.V56;
row110.V57 = Salida_5.V57;
row110.V58 = Salida_5.V58;
row110.V59 = Salida_5.V59;
row110.V60 = Salida_5.V60;
row110.V61 = Salida_5.V61;
row110.V62 = Salida_5.V62;
row110.V63 = Salida_5.V63;
row110.V64 = Salida_5.V64;
row110.V65 = Salida_5.V65;
row110.V66 = Salida_5.V66;
row110.V67 = Salida_5.V67;
row110.V68 = Salida_5.V68;
row110.V69 = Salida_5.V69;
row110.V70 = Salida_5.V70;
row110.V71 = Salida_5.V71;
row110.V72 = Salida_5.V72;
row110.V73 = Salida_5.V73;
row110.V74 = Salida_5.V74;
row110.V75 = Salida_5.V75;
row110.V76 = Salida_5.V76;
row110.V77 = Salida_5.V77;
row110.V78 = Salida_5.V78;
row110.V79 = Salida_5.V79;
row110.V80 = Salida_5.V80;
row110.V81 = Salida_5.V81;
row110.V82 = Salida_5.V82;
row110.V83 = Salida_5.V83;
row110.V84 = Salida_5.V84;
row110.V85 = Salida_5.V85;
row110.V86 = Salida_5.V86;
row110.V87 = Salida_5.V87;
row110.V88 = Salida_5.V88;
row110.V89 = Salida_5.V89;
row110.V90 = Salida_5.V90;
row110.V91 = Salida_5.V91;
row110.V92 = Salida_5.V92;
row110.V93 = Salida_5.V93;
row110.V94 = Salida_5.V94;
row110.V95 = Salida_5.V95;
row110.V96 = Salida_5.V96;
row110.V97 = Salida_5.V97;
row110.V98 = Salida_5.V98;
row110.V99 = Salida_5.V99;
row110.V100 = Salida_5.V100;
row110.V101 = Salida_5.V101;
row110.V102 = Salida_5.V102;
row110.V103 = Salida_5.V103;
row110.V104 = Salida_5.V104;
row110.V105 = Salida_5.V105;
row110.V106 = Salida_5.V106;
row110.V107 = Salida_5.V107;
row110.V108 = Salida_5.V108;
row110.V109 = Salida_5.V109;
row110.V110 = Salida_5.V110;
row110.V111 = Salida_5.V111;
row110.V112 = Salida_5.V112;
row110.V113 = Salida_5.V113;
row110.V114 = Salida_5.V114;
row110.V115 = Salida_5.V115;
row110.V116 = Salida_5.V116;
row110.V117 = Salida_5.V117;
row110.V118 = Salida_5.V118;


/*	100. Fecha Resultado Biopsia Seno por BACAF
*/
//row110.V100 = Salida_5.V100;
if( Salida_5.V10 != null && Salida_5.V10.equals("M") == true ) {
	row110.V100 = "1845-01-01";
}

if( Salida_5.V9 != null && row110.Edad_year < 35  ){
	row110.V100 = "1845-01-01";
}

if(row110.V100 == null && Salida_5.V9 != null && row110.Edad_year > 35  ){
	row110.V100 = "1800-01-01";
}

if(row110.V100 == null){
	row110.V100 = "1845-01-01";
}

if(row110.V101 == null){
	row110.V100 = "1845-01-01";
}

/*	101. Biopsia Seno por BACAF
*/
//row110.V101 = Salida_5.V101;
if(Salida_5.V10 != null && Salida_5.V10.equals("M") == true){
	row110.V101 = "0";
}

if(row110.V100.equals("1800-01-01") == true && row110.V101 == null ){
	row110.V101 = "999";
}

if(row110.V101 == null){
	row110.V101 = "0";
}

if(row110.V101.equals("999") == true ){
	row110.V100 = "1800-01-01";
}






/*	102. C√≥digo de habilitaci√≥n IPS donde se toma Biopsia Seno por BACAF
*/
//row110.V102 = Salida_5.V102;
if(Salida_5.V10 != null && Salida_5.V10.equals("M") == true){
	row110.V102 = "0";
}
if(row110.V102 == null){
	row110.V102 = "0";
}


/*	103. Fecha Toma de Hemoglobina
AAAA-MM-DD
*/
//row110.V103 = Salida_5.V103;
if(Salida_5.V103 == null){
	row110.V103 = "1845-01-01";
}



/*	104. Hemoglobina
*/
//row110.V104 = Salida_5.V104;
if(Salida_5.V104 == null){
	row110.V104 = new BigDecimal("0");
}


/*	105. Fecha de la Toma de Glicemia Basal
AAAA-MM-DD
*/
//row110.V105 = Salida_5.V105;
if(Salida_5.V105 == null){
	row110.V105 = "1845-01-01";
}



/*	106. Fecha Creatinina
AAAA-MM-DD
*/
//row110.V106 = Salida_5.V106;
if(Salida_5.V106 == null){
	row110.V106 = "1845-01-01";
}


/*	107. Creatinina
*/
//row110.V107 = Salida_5.V107;
if(Salida_5.V107 == null){
	row110.V107 = new BigDecimal("0");
}


/*	108. Fecha Hemoglobina Glicosilada
AAAA-MM-DD
*/
//row110.V108 = Salida_5.V108;
if(Salida_5.V108 == null){
	row110.V108 = "1845-01-01";
}



/*	109.Hemoglobina Glicosilada
*/
//row110.V109 = Salida_5.V109;
if(Salida_5.V109 == null){
	row110.V109 = new BigDecimal("0");
}



/*	110. Fecha Toma de Microalbuminuria
*/
//row110.V110 = Salida_5.V110;
if(Salida_5.V110 == null){
	row110.V110 = "1845-01-01";
}


/*	111. Fecha Toma de HDL
Si no aplica registrar 1845-01-01
*/
//row110.V111 = Salida_5.V111;
if(Salida_5.V111 == null){
	row110.V111 = "1845-01-01";
}



/*	112. Fecha Toma de Baciloscopia de Diagn√≥stico
AAAA-MM-DD
*/
//row110.V112 = Salida_5.V112;
if(Salida_5.V112 == null){
	if ( row110.V18.equals("1")){
		row110.V112 = "1800-01-01";
	} else {
		row110.V112 = "1845-01-01";
	}
}


/*	113. Baciloscopia de Diagn√≥stico
*/
//row110.V113 = Salida_5.V113;
if(Salida_5.V113 == null){
	if ( row110.V18.equals("1")){
		row110.V113 = new BigDecimal(22);	
	} else {
		row110.V113 = new BigDecimal(4);
	}
	
}



/*	114. Tratamiento para Hipotiroidismo Cong√©nito
*/
//row110.V114 = Salida_5.V114;
if(Salida_5.V114 == null){
	
	if ( row110.V17.equals("1")){		
		row110.V114 = "20";	
	} else {
		row110.V114 = "0";	
	}
	
}



/*	115. Tratamiento para S√≠filis gestacional
*/
//row110.V115 = Salida_5.V115;
if(Salida_5.V115 == null){
	row110.V115 = "0";
}



/*	116. Tratamiento para S√≠filis Cong√©nita
*/
//row110.V116 = Salida_5.V116;
if(Salida_5.V116 == null){
	row110.V116 = "0";
}




/*	117. Tratamiento para Lepra
*/
//row110.V117 = Salida_5.V117;
if(Salida_5.V117 == null){
	if ( row110.V20.equals("1") || row110.V20.equals("2")){
		row110.V117 = "20";
	} else {
		row110.V117 = "0";
	}		
}



/*	118.Fecha de Terminaci√≥n Tratamiento para Leishmaniasis
AAAA-MM-DD
*/
//row110.V118 = Salida_5.V118;
if(Salida_5.V118 == null){
	row110.V118 = "1845-01-01";
}


    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row110"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;
Var.fnacimiento = row110.V9 !=null?TalendDate.formatDate("yyyy-MM-dd",row110.V9) : null ;// ###############################
        // ###############################
        // # Output tables

salidad_4505 = null;


// # Output table : 'salidad_4505'
salidad_4505_tmp.V0 = row110.V0;
salidad_4505_tmp.V1 = row110.V1;
salidad_4505_tmp.V2 = row110.V2;
salidad_4505_tmp.V3 = row110.V3;
salidad_4505_tmp.V4 = row110.V4;
salidad_4505_tmp.V5 = row110.V5;
salidad_4505_tmp.V6 = row110.V6;
salidad_4505_tmp.V7 = row110.V7;
salidad_4505_tmp.V8 = row110.V8;
salidad_4505_tmp.V9 = Var.fnacimiento ;
salidad_4505_tmp.V10 = row110.V10;
salidad_4505_tmp.V11 = row110.V11;
salidad_4505_tmp.V12 = row110.V12;
salidad_4505_tmp.V13 = row110.V13;
salidad_4505_tmp.V14 = row110.V14 ;
salidad_4505_tmp.V15 = row110.V15 ;
salidad_4505_tmp.V16 = row110.V16 ;
salidad_4505_tmp.V17 = row110.V17 ;
salidad_4505_tmp.V18 = row110.V18 ;
salidad_4505_tmp.V19 = row110.V19 ;
salidad_4505_tmp.V20 = row110.V20 ;
salidad_4505_tmp.V21 = row110.V21 ;
salidad_4505_tmp.V22 = row110.V22 ;
salidad_4505_tmp.V23 = row110.V23 ;
salidad_4505_tmp.V24 = row110.V24 ;
salidad_4505_tmp.V25 = row110.V25 ;
salidad_4505_tmp.V26 = row110.V26 ;
salidad_4505_tmp.V27 = row110.V27 ;
salidad_4505_tmp.V28 = row110.V28 ;
salidad_4505_tmp.V29 = row110.V29 ;
salidad_4505_tmp.V30 = row110.V30 ;
salidad_4505_tmp.V31 = row110.V31 ;
salidad_4505_tmp.V32 = row110.V32 ;
salidad_4505_tmp.V33 = row110.V33 ;
salidad_4505_tmp.V34 = row110.V34 ;
salidad_4505_tmp.V35 = row110.V35 ;
salidad_4505_tmp.V36 = row110.V36 ;
salidad_4505_tmp.V37 = row110.V37 ;
salidad_4505_tmp.V38 = row110.V38 ;
salidad_4505_tmp.V39 = row110.V39 ;
salidad_4505_tmp.V40 = row110.V40 ;
salidad_4505_tmp.V41 = row110.V41 ;
salidad_4505_tmp.V42 = row110.V42 ;
salidad_4505_tmp.V43 = row110.V43 ;
salidad_4505_tmp.V44 = row110.V44 ;
salidad_4505_tmp.V45 = row110.V45 ;
salidad_4505_tmp.V46 = row110.V46 ;
salidad_4505_tmp.V47 = row110.V47 ;
salidad_4505_tmp.V48 = row110.V48 ;
salidad_4505_tmp.V49 = row110.V49 ;
salidad_4505_tmp.V50 = row110.V50 ;
salidad_4505_tmp.V51 = row110.V51 ;
salidad_4505_tmp.V52 = row110.V52 ;
salidad_4505_tmp.V53 = row110.V53 ;
salidad_4505_tmp.V54 = row110.V54 ;
salidad_4505_tmp.V55 = row110.V55 ;
salidad_4505_tmp.V56 = row110.V56 ;
salidad_4505_tmp.V57 = row110.V57 ;
salidad_4505_tmp.V58 = row110.V58 ;
salidad_4505_tmp.V59 = row110.V59 ;
salidad_4505_tmp.V60 = row110.V60 ;
salidad_4505_tmp.V61 = row110.V61 ;
salidad_4505_tmp.V62 = row110.V62 ;
salidad_4505_tmp.V63 = row110.V63 ;
salidad_4505_tmp.V64 = row110.V64 ;
salidad_4505_tmp.V65 = row110.V65 ;
salidad_4505_tmp.V66 = row110.V66 ;
salidad_4505_tmp.V67 = row110.V67 ;
salidad_4505_tmp.V68 = row110.V68 ;
salidad_4505_tmp.V69 = row110.V69 ;
salidad_4505_tmp.V70 = row110.V70 ;
salidad_4505_tmp.V71 = row110.V71 ;
salidad_4505_tmp.V72 = row110.V72 ;
salidad_4505_tmp.V73 = row110.V73 ;
salidad_4505_tmp.V74 = row110.V74 ;
salidad_4505_tmp.V75 = row110.V75 ;
salidad_4505_tmp.V76 = row110.V76 ;
salidad_4505_tmp.V77 = row110.V77 ;
salidad_4505_tmp.V78 = row110.V78 ;
salidad_4505_tmp.V79 = row110.V79 ;
salidad_4505_tmp.V80 = row110.V80 ;
salidad_4505_tmp.V81 = row110.V81 ;
salidad_4505_tmp.V82 = row110.V82 ;
salidad_4505_tmp.V83 = row110.V83 ;
salidad_4505_tmp.V84 = row110.V84 ;
salidad_4505_tmp.V85 = row110.V85 ;
salidad_4505_tmp.V86 = row110.V86 ;
salidad_4505_tmp.V87 = row110.V87 ;
salidad_4505_tmp.V88 = row110.V88 ;
salidad_4505_tmp.V89 = row110.V89 ;
salidad_4505_tmp.V90 = row110.V90 ;
salidad_4505_tmp.V91 = row110.V91 ;
salidad_4505_tmp.V92 = row110.V92 ;
salidad_4505_tmp.V93 = row110.V93 ;
salidad_4505_tmp.V94 = row110.V94 ;
salidad_4505_tmp.V95 = row110.V95 ;
salidad_4505_tmp.V96 = row110.V96 ;
salidad_4505_tmp.V97 = row110.V97 ;
salidad_4505_tmp.V98 = row110.V98 ;
salidad_4505_tmp.V99 = row110.V99 ;
salidad_4505_tmp.V100 = row110.V100 ;
salidad_4505_tmp.V101 = row110.V101 ;
salidad_4505_tmp.V102 = row110.V102 ;
salidad_4505_tmp.V103 = row110.V103 ;
salidad_4505_tmp.V104 = row110.V104 ;
salidad_4505_tmp.V105 = row110.V105 ;
salidad_4505_tmp.V106 = row110.V106 ;
salidad_4505_tmp.V107 = row110.V107 ;
salidad_4505_tmp.V108 = row110.V108 ;
salidad_4505_tmp.V109 = row110.V109 ;
salidad_4505_tmp.V110 = row110.V110 ;
salidad_4505_tmp.V111 = row110.V111 ;
salidad_4505_tmp.V112 = row110.V112 ;
salidad_4505_tmp.V113 = row110.V113 ;
salidad_4505_tmp.V114 = row110.V114 ;
salidad_4505_tmp.V115 = row110.V115 ;
salidad_4505_tmp.V116 = row110.V116 ;
salidad_4505_tmp.V117 = row110.V117 ;
salidad_4505_tmp.V118 = row110.V118 ;
salidad_4505 = salidad_4505_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "salidad_4505"
if(salidad_4505 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"salidad_4505"
						
						);
					}
					



    
		salidad_4505Struct oneRow_tHashOutput_1 = new salidad_4505Struct();
				
					oneRow_tHashOutput_1.V0 = salidad_4505.V0;
					oneRow_tHashOutput_1.V1 = salidad_4505.V1;
					oneRow_tHashOutput_1.V2 = salidad_4505.V2;
					oneRow_tHashOutput_1.V3 = salidad_4505.V3;
					oneRow_tHashOutput_1.V4 = salidad_4505.V4;
					oneRow_tHashOutput_1.V5 = salidad_4505.V5;
					oneRow_tHashOutput_1.V6 = salidad_4505.V6;
					oneRow_tHashOutput_1.V7 = salidad_4505.V7;
					oneRow_tHashOutput_1.V8 = salidad_4505.V8;
					oneRow_tHashOutput_1.V9 = salidad_4505.V9;
					oneRow_tHashOutput_1.V10 = salidad_4505.V10;
					oneRow_tHashOutput_1.V11 = salidad_4505.V11;
					oneRow_tHashOutput_1.V12 = salidad_4505.V12;
					oneRow_tHashOutput_1.V13 = salidad_4505.V13;
					oneRow_tHashOutput_1.V14 = salidad_4505.V14;
					oneRow_tHashOutput_1.V15 = salidad_4505.V15;
					oneRow_tHashOutput_1.V16 = salidad_4505.V16;
					oneRow_tHashOutput_1.V17 = salidad_4505.V17;
					oneRow_tHashOutput_1.V18 = salidad_4505.V18;
					oneRow_tHashOutput_1.V19 = salidad_4505.V19;
					oneRow_tHashOutput_1.V20 = salidad_4505.V20;
					oneRow_tHashOutput_1.V21 = salidad_4505.V21;
					oneRow_tHashOutput_1.V22 = salidad_4505.V22;
					oneRow_tHashOutput_1.V23 = salidad_4505.V23;
					oneRow_tHashOutput_1.V24 = salidad_4505.V24;
					oneRow_tHashOutput_1.V25 = salidad_4505.V25;
					oneRow_tHashOutput_1.V26 = salidad_4505.V26;
					oneRow_tHashOutput_1.V27 = salidad_4505.V27;
					oneRow_tHashOutput_1.V28 = salidad_4505.V28;
					oneRow_tHashOutput_1.V29 = salidad_4505.V29;
					oneRow_tHashOutput_1.V30 = salidad_4505.V30;
					oneRow_tHashOutput_1.V31 = salidad_4505.V31;
					oneRow_tHashOutput_1.V32 = salidad_4505.V32;
					oneRow_tHashOutput_1.V33 = salidad_4505.V33;
					oneRow_tHashOutput_1.V34 = salidad_4505.V34;
					oneRow_tHashOutput_1.V35 = salidad_4505.V35;
					oneRow_tHashOutput_1.V36 = salidad_4505.V36;
					oneRow_tHashOutput_1.V37 = salidad_4505.V37;
					oneRow_tHashOutput_1.V38 = salidad_4505.V38;
					oneRow_tHashOutput_1.V39 = salidad_4505.V39;
					oneRow_tHashOutput_1.V40 = salidad_4505.V40;
					oneRow_tHashOutput_1.V41 = salidad_4505.V41;
					oneRow_tHashOutput_1.V42 = salidad_4505.V42;
					oneRow_tHashOutput_1.V43 = salidad_4505.V43;
					oneRow_tHashOutput_1.V44 = salidad_4505.V44;
					oneRow_tHashOutput_1.V45 = salidad_4505.V45;
					oneRow_tHashOutput_1.V46 = salidad_4505.V46;
					oneRow_tHashOutput_1.V47 = salidad_4505.V47;
					oneRow_tHashOutput_1.V48 = salidad_4505.V48;
					oneRow_tHashOutput_1.V49 = salidad_4505.V49;
					oneRow_tHashOutput_1.V50 = salidad_4505.V50;
					oneRow_tHashOutput_1.V51 = salidad_4505.V51;
					oneRow_tHashOutput_1.V52 = salidad_4505.V52;
					oneRow_tHashOutput_1.V53 = salidad_4505.V53;
					oneRow_tHashOutput_1.V54 = salidad_4505.V54;
					oneRow_tHashOutput_1.V55 = salidad_4505.V55;
					oneRow_tHashOutput_1.V56 = salidad_4505.V56;
					oneRow_tHashOutput_1.V57 = salidad_4505.V57;
					oneRow_tHashOutput_1.V58 = salidad_4505.V58;
					oneRow_tHashOutput_1.V59 = salidad_4505.V59;
					oneRow_tHashOutput_1.V60 = salidad_4505.V60;
					oneRow_tHashOutput_1.V61 = salidad_4505.V61;
					oneRow_tHashOutput_1.V62 = salidad_4505.V62;
					oneRow_tHashOutput_1.V63 = salidad_4505.V63;
					oneRow_tHashOutput_1.V64 = salidad_4505.V64;
					oneRow_tHashOutput_1.V65 = salidad_4505.V65;
					oneRow_tHashOutput_1.V66 = salidad_4505.V66;
					oneRow_tHashOutput_1.V67 = salidad_4505.V67;
					oneRow_tHashOutput_1.V68 = salidad_4505.V68;
					oneRow_tHashOutput_1.V69 = salidad_4505.V69;
					oneRow_tHashOutput_1.V70 = salidad_4505.V70;
					oneRow_tHashOutput_1.V71 = salidad_4505.V71;
					oneRow_tHashOutput_1.V72 = salidad_4505.V72;
					oneRow_tHashOutput_1.V73 = salidad_4505.V73;
					oneRow_tHashOutput_1.V74 = salidad_4505.V74;
					oneRow_tHashOutput_1.V75 = salidad_4505.V75;
					oneRow_tHashOutput_1.V76 = salidad_4505.V76;
					oneRow_tHashOutput_1.V77 = salidad_4505.V77;
					oneRow_tHashOutput_1.V78 = salidad_4505.V78;
					oneRow_tHashOutput_1.V79 = salidad_4505.V79;
					oneRow_tHashOutput_1.V80 = salidad_4505.V80;
					oneRow_tHashOutput_1.V81 = salidad_4505.V81;
					oneRow_tHashOutput_1.V82 = salidad_4505.V82;
					oneRow_tHashOutput_1.V83 = salidad_4505.V83;
					oneRow_tHashOutput_1.V84 = salidad_4505.V84;
					oneRow_tHashOutput_1.V85 = salidad_4505.V85;
					oneRow_tHashOutput_1.V86 = salidad_4505.V86;
					oneRow_tHashOutput_1.V87 = salidad_4505.V87;
					oneRow_tHashOutput_1.V88 = salidad_4505.V88;
					oneRow_tHashOutput_1.V89 = salidad_4505.V89;
					oneRow_tHashOutput_1.V90 = salidad_4505.V90;
					oneRow_tHashOutput_1.V91 = salidad_4505.V91;
					oneRow_tHashOutput_1.V92 = salidad_4505.V92;
					oneRow_tHashOutput_1.V93 = salidad_4505.V93;
					oneRow_tHashOutput_1.V94 = salidad_4505.V94;
					oneRow_tHashOutput_1.V95 = salidad_4505.V95;
					oneRow_tHashOutput_1.V96 = salidad_4505.V96;
					oneRow_tHashOutput_1.V97 = salidad_4505.V97;
					oneRow_tHashOutput_1.V98 = salidad_4505.V98;
					oneRow_tHashOutput_1.V99 = salidad_4505.V99;
					oneRow_tHashOutput_1.V100 = salidad_4505.V100;
					oneRow_tHashOutput_1.V101 = salidad_4505.V101;
					oneRow_tHashOutput_1.V102 = salidad_4505.V102;
					oneRow_tHashOutput_1.V103 = salidad_4505.V103;
					oneRow_tHashOutput_1.V104 = salidad_4505.V104;
					oneRow_tHashOutput_1.V105 = salidad_4505.V105;
					oneRow_tHashOutput_1.V106 = salidad_4505.V106;
					oneRow_tHashOutput_1.V107 = salidad_4505.V107;
					oneRow_tHashOutput_1.V108 = salidad_4505.V108;
					oneRow_tHashOutput_1.V109 = salidad_4505.V109;
					oneRow_tHashOutput_1.V110 = salidad_4505.V110;
					oneRow_tHashOutput_1.V111 = salidad_4505.V111;
					oneRow_tHashOutput_1.V112 = salidad_4505.V112;
					oneRow_tHashOutput_1.V113 = salidad_4505.V113;
					oneRow_tHashOutput_1.V114 = salidad_4505.V114;
					oneRow_tHashOutput_1.V115 = salidad_4505.V115;
					oneRow_tHashOutput_1.V116 = salidad_4505.V116;
					oneRow_tHashOutput_1.V117 = salidad_4505.V117;
					oneRow_tHashOutput_1.V118 = salidad_4505.V118;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "salidad_4505"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */

} // End of branch "Salida_5"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "Salida_Prev4"



	
		} // close loop of lookup 'row86' // G_TM_M_043
	
	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "Salida_Prev3"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "Salida_Pre2"



	
		} // close loop of lookup 'row36' // G_TM_M_043
	
	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "Salida_Pre1"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row2 != null) {
						tHash_Lookup_row2.endGet();
					}
					globalMap.remove( "tHash_Lookup_row2" );

					
					
				
					if(tHash_Lookup_row3 != null) {
						tHash_Lookup_row3.endGet();
					}
					globalMap.remove( "tHash_Lookup_row3" );

					
					
				
					if(tHash_Lookup_row4 != null) {
						tHash_Lookup_row4.endGet();
					}
					globalMap.remove( "tHash_Lookup_row4" );

					
					
				
					if(tHash_Lookup_row5 != null) {
						tHash_Lookup_row5.endGet();
					}
					globalMap.remove( "tHash_Lookup_row5" );

					
					
				
					if(tHash_Lookup_row6 != null) {
						tHash_Lookup_row6.endGet();
					}
					globalMap.remove( "tHash_Lookup_row6" );

					
					
				
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
					if(tHash_Lookup_row9 != null) {
						tHash_Lookup_row9.endGet();
					}
					globalMap.remove( "tHash_Lookup_row9" );

					
					
				
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
					if(tHash_Lookup_row12 != null) {
						tHash_Lookup_row12.endGet();
					}
					globalMap.remove( "tHash_Lookup_row12" );

					
					
				
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
					if(tHash_Lookup_row17 != null) {
						tHash_Lookup_row17.endGet();
					}
					globalMap.remove( "tHash_Lookup_row17" );

					
					
				
					if(tHash_Lookup_row18 != null) {
						tHash_Lookup_row18.endGet();
					}
					globalMap.remove( "tHash_Lookup_row18" );

					
					
				
					if(tHash_Lookup_row19 != null) {
						tHash_Lookup_row19.endGet();
					}
					globalMap.remove( "tHash_Lookup_row19" );

					
					
				
					if(tHash_Lookup_row20 != null) {
						tHash_Lookup_row20.endGet();
					}
					globalMap.remove( "tHash_Lookup_row20" );

					
					
				
					if(tHash_Lookup_row21 != null) {
						tHash_Lookup_row21.endGet();
					}
					globalMap.remove( "tHash_Lookup_row21" );

					
					
				
					if(tHash_Lookup_row22 != null) {
						tHash_Lookup_row22.endGet();
					}
					globalMap.remove( "tHash_Lookup_row22" );

					
					
				
					if(tHash_Lookup_row23 != null) {
						tHash_Lookup_row23.endGet();
					}
					globalMap.remove( "tHash_Lookup_row23" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_Pre1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row24 != null) {
						tHash_Lookup_row24.endGet();
					}
					globalMap.remove( "tHash_Lookup_row24" );

					
					
				
					if(tHash_Lookup_row25 != null) {
						tHash_Lookup_row25.endGet();
					}
					globalMap.remove( "tHash_Lookup_row25" );

					
					
				
					if(tHash_Lookup_row26 != null) {
						tHash_Lookup_row26.endGet();
					}
					globalMap.remove( "tHash_Lookup_row26" );

					
					
				
					if(tHash_Lookup_row27 != null) {
						tHash_Lookup_row27.endGet();
					}
					globalMap.remove( "tHash_Lookup_row27" );

					
					
				
					if(tHash_Lookup_row28 != null) {
						tHash_Lookup_row28.endGet();
					}
					globalMap.remove( "tHash_Lookup_row28" );

					
					
				
					if(tHash_Lookup_row29 != null) {
						tHash_Lookup_row29.endGet();
					}
					globalMap.remove( "tHash_Lookup_row29" );

					
					
				
					if(tHash_Lookup_row30 != null) {
						tHash_Lookup_row30.endGet();
					}
					globalMap.remove( "tHash_Lookup_row30" );

					
					
				
					if(tHash_Lookup_row31 != null) {
						tHash_Lookup_row31.endGet();
					}
					globalMap.remove( "tHash_Lookup_row31" );

					
					
				
					if(tHash_Lookup_row32 != null) {
						tHash_Lookup_row32.endGet();
					}
					globalMap.remove( "tHash_Lookup_row32" );

					
					
				
					if(tHash_Lookup_row33 != null) {
						tHash_Lookup_row33.endGet();
					}
					globalMap.remove( "tHash_Lookup_row33" );

					
					
				
					if(tHash_Lookup_row34 != null) {
						tHash_Lookup_row34.endGet();
					}
					globalMap.remove( "tHash_Lookup_row34" );

					
					
				
					if(tHash_Lookup_row35 != null) {
						tHash_Lookup_row35.endGet();
					}
					globalMap.remove( "tHash_Lookup_row35" );

					
					
				
					if(tHash_Lookup_row36 != null) {
						tHash_Lookup_row36.endGet();
					}
					globalMap.remove( "tHash_Lookup_row36" );

					
					
				
					if(tHash_Lookup_row37 != null) {
						tHash_Lookup_row37.endGet();
					}
					globalMap.remove( "tHash_Lookup_row37" );

					
					
				
					if(tHash_Lookup_row38 != null) {
						tHash_Lookup_row38.endGet();
					}
					globalMap.remove( "tHash_Lookup_row38" );

					
					
				
					if(tHash_Lookup_row39 != null) {
						tHash_Lookup_row39.endGet();
					}
					globalMap.remove( "tHash_Lookup_row39" );

					
					
				
					if(tHash_Lookup_row40 != null) {
						tHash_Lookup_row40.endGet();
					}
					globalMap.remove( "tHash_Lookup_row40" );

					
					
				
					if(tHash_Lookup_row41 != null) {
						tHash_Lookup_row41.endGet();
					}
					globalMap.remove( "tHash_Lookup_row41" );

					
					
				
					if(tHash_Lookup_row42 != null) {
						tHash_Lookup_row42.endGet();
					}
					globalMap.remove( "tHash_Lookup_row42" );

					
					
				
					if(tHash_Lookup_row43 != null) {
						tHash_Lookup_row43.endGet();
					}
					globalMap.remove( "tHash_Lookup_row43" );

					
					
				
					if(tHash_Lookup_row44 != null) {
						tHash_Lookup_row44.endGet();
					}
					globalMap.remove( "tHash_Lookup_row44" );

					
					
				
					if(tHash_Lookup_row45 != null) {
						tHash_Lookup_row45.endGet();
					}
					globalMap.remove( "tHash_Lookup_row45" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_1");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_Pre2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row47 != null) {
						tHash_Lookup_row47.endGet();
					}
					globalMap.remove( "tHash_Lookup_row47" );

					
					
				
					if(tHash_Lookup_row48 != null) {
						tHash_Lookup_row48.endGet();
					}
					globalMap.remove( "tHash_Lookup_row48" );

					
					
				
					if(tHash_Lookup_row49 != null) {
						tHash_Lookup_row49.endGet();
					}
					globalMap.remove( "tHash_Lookup_row49" );

					
					
				
					if(tHash_Lookup_row50 != null) {
						tHash_Lookup_row50.endGet();
					}
					globalMap.remove( "tHash_Lookup_row50" );

					
					
				
					if(tHash_Lookup_row51 != null) {
						tHash_Lookup_row51.endGet();
					}
					globalMap.remove( "tHash_Lookup_row51" );

					
					
				
					if(tHash_Lookup_row52 != null) {
						tHash_Lookup_row52.endGet();
					}
					globalMap.remove( "tHash_Lookup_row52" );

					
					
				
					if(tHash_Lookup_row53 != null) {
						tHash_Lookup_row53.endGet();
					}
					globalMap.remove( "tHash_Lookup_row53" );

					
					
				
					if(tHash_Lookup_row54 != null) {
						tHash_Lookup_row54.endGet();
					}
					globalMap.remove( "tHash_Lookup_row54" );

					
					
				
					if(tHash_Lookup_row55 != null) {
						tHash_Lookup_row55.endGet();
					}
					globalMap.remove( "tHash_Lookup_row55" );

					
					
				
					if(tHash_Lookup_row56 != null) {
						tHash_Lookup_row56.endGet();
					}
					globalMap.remove( "tHash_Lookup_row56" );

					
					
				
					if(tHash_Lookup_row57 != null) {
						tHash_Lookup_row57.endGet();
					}
					globalMap.remove( "tHash_Lookup_row57" );

					
					
				
					if(tHash_Lookup_row58 != null) {
						tHash_Lookup_row58.endGet();
					}
					globalMap.remove( "tHash_Lookup_row58" );

					
					
				
					if(tHash_Lookup_row59 != null) {
						tHash_Lookup_row59.endGet();
					}
					globalMap.remove( "tHash_Lookup_row59" );

					
					
				
					if(tHash_Lookup_row60 != null) {
						tHash_Lookup_row60.endGet();
					}
					globalMap.remove( "tHash_Lookup_row60" );

					
					
				
					if(tHash_Lookup_row61 != null) {
						tHash_Lookup_row61.endGet();
					}
					globalMap.remove( "tHash_Lookup_row61" );

					
					
				
					if(tHash_Lookup_row62 != null) {
						tHash_Lookup_row62.endGet();
					}
					globalMap.remove( "tHash_Lookup_row62" );

					
					
				
					if(tHash_Lookup_row63 != null) {
						tHash_Lookup_row63.endGet();
					}
					globalMap.remove( "tHash_Lookup_row63" );

					
					
				
					if(tHash_Lookup_row64 != null) {
						tHash_Lookup_row64.endGet();
					}
					globalMap.remove( "tHash_Lookup_row64" );

					
					
				
					if(tHash_Lookup_row65 != null) {
						tHash_Lookup_row65.endGet();
					}
					globalMap.remove( "tHash_Lookup_row65" );

					
					
				
					if(tHash_Lookup_row66 != null) {
						tHash_Lookup_row66.endGet();
					}
					globalMap.remove( "tHash_Lookup_row66" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_2");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_Prev3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row67 != null) {
						tHash_Lookup_row67.endGet();
					}
					globalMap.remove( "tHash_Lookup_row67" );

					
					
				
					if(tHash_Lookup_row68 != null) {
						tHash_Lookup_row68.endGet();
					}
					globalMap.remove( "tHash_Lookup_row68" );

					
					
				
					if(tHash_Lookup_row69 != null) {
						tHash_Lookup_row69.endGet();
					}
					globalMap.remove( "tHash_Lookup_row69" );

					
					
				
					if(tHash_Lookup_row70 != null) {
						tHash_Lookup_row70.endGet();
					}
					globalMap.remove( "tHash_Lookup_row70" );

					
					
				
					if(tHash_Lookup_row46 != null) {
						tHash_Lookup_row46.endGet();
					}
					globalMap.remove( "tHash_Lookup_row46" );

					
					
				
					if(tHash_Lookup_row71 != null) {
						tHash_Lookup_row71.endGet();
					}
					globalMap.remove( "tHash_Lookup_row71" );

					
					
				
					if(tHash_Lookup_row72 != null) {
						tHash_Lookup_row72.endGet();
					}
					globalMap.remove( "tHash_Lookup_row72" );

					
					
				
					if(tHash_Lookup_row73 != null) {
						tHash_Lookup_row73.endGet();
					}
					globalMap.remove( "tHash_Lookup_row73" );

					
					
				
					if(tHash_Lookup_row74 != null) {
						tHash_Lookup_row74.endGet();
					}
					globalMap.remove( "tHash_Lookup_row74" );

					
					
				
					if(tHash_Lookup_row75 != null) {
						tHash_Lookup_row75.endGet();
					}
					globalMap.remove( "tHash_Lookup_row75" );

					
					
				
					if(tHash_Lookup_row76 != null) {
						tHash_Lookup_row76.endGet();
					}
					globalMap.remove( "tHash_Lookup_row76" );

					
					
				
					if(tHash_Lookup_row77 != null) {
						tHash_Lookup_row77.endGet();
					}
					globalMap.remove( "tHash_Lookup_row77" );

					
					
				
					if(tHash_Lookup_row78 != null) {
						tHash_Lookup_row78.endGet();
					}
					globalMap.remove( "tHash_Lookup_row78" );

					
					
				
					if(tHash_Lookup_row79 != null) {
						tHash_Lookup_row79.endGet();
					}
					globalMap.remove( "tHash_Lookup_row79" );

					
					
				
					if(tHash_Lookup_row80 != null) {
						tHash_Lookup_row80.endGet();
					}
					globalMap.remove( "tHash_Lookup_row80" );

					
					
				
					if(tHash_Lookup_row81 != null) {
						tHash_Lookup_row81.endGet();
					}
					globalMap.remove( "tHash_Lookup_row81" );

					
					
				
					if(tHash_Lookup_row82 != null) {
						tHash_Lookup_row82.endGet();
					}
					globalMap.remove( "tHash_Lookup_row82" );

					
					
				
					if(tHash_Lookup_row83 != null) {
						tHash_Lookup_row83.endGet();
					}
					globalMap.remove( "tHash_Lookup_row83" );

					
					
				
					if(tHash_Lookup_row84 != null) {
						tHash_Lookup_row84.endGet();
					}
					globalMap.remove( "tHash_Lookup_row84" );

					
					
				
					if(tHash_Lookup_row85 != null) {
						tHash_Lookup_row85.endGet();
					}
					globalMap.remove( "tHash_Lookup_row85" );

					
					
				
					if(tHash_Lookup_row86 != null) {
						tHash_Lookup_row86.endGet();
					}
					globalMap.remove( "tHash_Lookup_row86" );

					
					
				
					if(tHash_Lookup_row87 != null) {
						tHash_Lookup_row87.endGet();
					}
					globalMap.remove( "tHash_Lookup_row87" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_3");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_Prev4");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row89 != null) {
						tHash_Lookup_row89.endGet();
					}
					globalMap.remove( "tHash_Lookup_row89" );

					
					
				
					if(tHash_Lookup_row90 != null) {
						tHash_Lookup_row90.endGet();
					}
					globalMap.remove( "tHash_Lookup_row90" );

					
					
				
					if(tHash_Lookup_row91 != null) {
						tHash_Lookup_row91.endGet();
					}
					globalMap.remove( "tHash_Lookup_row91" );

					
					
				
					if(tHash_Lookup_row92 != null) {
						tHash_Lookup_row92.endGet();
					}
					globalMap.remove( "tHash_Lookup_row92" );

					
					
				
					if(tHash_Lookup_row93 != null) {
						tHash_Lookup_row93.endGet();
					}
					globalMap.remove( "tHash_Lookup_row93" );

					
					
				
					if(tHash_Lookup_row94 != null) {
						tHash_Lookup_row94.endGet();
					}
					globalMap.remove( "tHash_Lookup_row94" );

					
					
				
					if(tHash_Lookup_row95 != null) {
						tHash_Lookup_row95.endGet();
					}
					globalMap.remove( "tHash_Lookup_row95" );

					
					
				
					if(tHash_Lookup_row96 != null) {
						tHash_Lookup_row96.endGet();
					}
					globalMap.remove( "tHash_Lookup_row96" );

					
					
				
					if(tHash_Lookup_row97 != null) {
						tHash_Lookup_row97.endGet();
					}
					globalMap.remove( "tHash_Lookup_row97" );

					
					
				
					if(tHash_Lookup_row98 != null) {
						tHash_Lookup_row98.endGet();
					}
					globalMap.remove( "tHash_Lookup_row98" );

					
					
				
					if(tHash_Lookup_row99 != null) {
						tHash_Lookup_row99.endGet();
					}
					globalMap.remove( "tHash_Lookup_row99" );

					
					
				
					if(tHash_Lookup_row100 != null) {
						tHash_Lookup_row100.endGet();
					}
					globalMap.remove( "tHash_Lookup_row100" );

					
					
				
					if(tHash_Lookup_row101 != null) {
						tHash_Lookup_row101.endGet();
					}
					globalMap.remove( "tHash_Lookup_row101" );

					
					
				
					if(tHash_Lookup_row102 != null) {
						tHash_Lookup_row102.endGet();
					}
					globalMap.remove( "tHash_Lookup_row102" );

					
					
				
					if(tHash_Lookup_row103 != null) {
						tHash_Lookup_row103.endGet();
					}
					globalMap.remove( "tHash_Lookup_row103" );

					
					
				
					if(tHash_Lookup_row104 != null) {
						tHash_Lookup_row104.endGet();
					}
					globalMap.remove( "tHash_Lookup_row104" );

					
					
				
					if(tHash_Lookup_row105 != null) {
						tHash_Lookup_row105.endGet();
					}
					globalMap.remove( "tHash_Lookup_row105" );

					
					
				
					if(tHash_Lookup_row106 != null) {
						tHash_Lookup_row106.endGet();
					}
					globalMap.remove( "tHash_Lookup_row106" );

					
					
				
					if(tHash_Lookup_row107 != null) {
						tHash_Lookup_row107.endGet();
					}
					globalMap.remove( "tHash_Lookup_row107" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_4");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Salida_5");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row110");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"salidad_4505");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk24", 0, "ok");
				}
				tJava_7Process(globalMap);



/**
 * [tHashOutput_1 end ] stop
 */




































				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row89"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row90"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row91"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row92"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row93"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row94"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row95"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row96"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row97"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row98"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row99"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row100"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row101"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row102"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row103"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row104"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row105"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row106"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row107"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row67"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row68"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row69"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row70"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row46"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row71"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row72"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row73"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row74"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row75"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row76"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row77"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row78"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row79"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row80"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row81"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row82"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row83"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row84"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row85"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row86"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row87"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row47"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row48"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row49"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row50"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row51"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row52"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row53"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row54"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row55"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row56"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row57"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row58"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row59"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row60"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row61"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row62"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row63"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row64"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row65"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row66"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row24"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row25"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row26"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row27"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row28"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row29"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row30"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row31"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row32"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row33"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row34"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row35"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row36"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row37"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row38"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row39"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row40"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row41"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row42"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row43"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row44"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row45"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row2"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row3"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row4"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row5"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row6"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row9"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row12"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row17"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row18"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row19"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row20"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row21"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row22"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row23"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */




































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_7", false);
		start_Hash.put("tJava_7", System.currentTimeMillis());
		
	
	currentComponent="tJava_7";
	
	
		int tos_count_tJava_7 = 0;
		


SimpleDateFormat  dF = new SimpleDateFormat("dd/MM/yyyy"); 
String finicial = TalendDate.formatDate("yyyy-MM-dd", dF.parse(context.FECHA_INICIAL));
String ffinal =  TalendDate.formatDate("yyyy-MM-dd", dF.parse(context.FECHA_FINAL));

System.out.println(finicial);
System.out.println(ffinal);



File archivo = new File(context.CarpetaTemp  + "/" + context.NombreArchivo + ".txt");
BufferedWriter bw;
//if(archivo.exists()) {
   //bw = new BufferedWriter(new FileWriter(archivo));
   //bw.write("1|RES003|2016-10-01|2016-12-31|191");
   //bw.newLine();
//} else {
   bw = new BufferedWriter(new FileWriter(archivo));
   bw.write("1|RES003|" +finicial+ "|" + ffinal +"|"+globalMap.get("tHashOutput_1_NB_LINE"));
   bw.write("\n");
//}
bw.close();




 



/**
 * [tJava_7 begin ] stop
 */
	
	/**
	 * [tJava_7 main ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 


	tos_count_tJava_7++;

/**
 * [tJava_7 main ] stop
 */
	
	/**
	 * [tJava_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_begin ] stop
 */
	
	/**
	 * [tJava_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_end ] stop
 */
	
	/**
	 * [tJava_7 end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 

ok_Hash.put("tJava_7", true);
end_Hash.put("tJava_7", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk25", 0, "ok");
				}
				tHashInput_1Process(globalMap);



/**
 * [tJava_7 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_7 finally ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_7_SUBPROCESS_STATE", 1);
	}
	


public static class row117Struct implements routines.system.IPersistableRow<row117Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal V0;

				public BigDecimal getV0 () {
					return this.V0;
				}

				public Boolean V0IsNullable(){
				    return true;
				}
				public Boolean V0IsKey(){
				    return false;
				}
				public Integer V0Length(){
				    return 0;
				}
				public Integer V0Precision(){
				    return 0;
				}
				public String V0Default(){
				
					return "";
				
				}
				public String V0Comment(){
				
				    return "";
				
				}
				public String V0Pattern(){
				
					return "";
				
				}
				public String V0OriginalDbColumnName(){
				
					return "V0";
				
				}

				
			    public BigDecimal V1;

				public BigDecimal getV1 () {
					return this.V1;
				}

				public Boolean V1IsNullable(){
				    return true;
				}
				public Boolean V1IsKey(){
				    return false;
				}
				public Integer V1Length(){
				    return 0;
				}
				public Integer V1Precision(){
				    return 0;
				}
				public String V1Default(){
				
					return "";
				
				}
				public String V1Comment(){
				
				    return "";
				
				}
				public String V1Pattern(){
				
					return "";
				
				}
				public String V1OriginalDbColumnName(){
				
					return "V1";
				
				}

				
			    public String V2;

				public String getV2 () {
					return this.V2;
				}

				public Boolean V2IsNullable(){
				    return true;
				}
				public Boolean V2IsKey(){
				    return false;
				}
				public Integer V2Length(){
				    return 100;
				}
				public Integer V2Precision(){
				    return 0;
				}
				public String V2Default(){
				
					return null;
				
				}
				public String V2Comment(){
				
				    return "";
				
				}
				public String V2Pattern(){
				
					return "";
				
				}
				public String V2OriginalDbColumnName(){
				
					return "V2";
				
				}

				
			    public String V3;

				public String getV3 () {
					return this.V3;
				}

				public Boolean V3IsNullable(){
				    return false;
				}
				public Boolean V3IsKey(){
				    return false;
				}
				public Integer V3Length(){
				    return 5;
				}
				public Integer V3Precision(){
				    return 0;
				}
				public String V3Default(){
				
					return null;
				
				}
				public String V3Comment(){
				
				    return "";
				
				}
				public String V3Pattern(){
				
					return "";
				
				}
				public String V3OriginalDbColumnName(){
				
					return "V3";
				
				}

				
			    public String V4;

				public String getV4 () {
					return this.V4;
				}

				public Boolean V4IsNullable(){
				    return false;
				}
				public Boolean V4IsKey(){
				    return false;
				}
				public Integer V4Length(){
				    return 40;
				}
				public Integer V4Precision(){
				    return 0;
				}
				public String V4Default(){
				
					return null;
				
				}
				public String V4Comment(){
				
				    return "";
				
				}
				public String V4Pattern(){
				
					return "";
				
				}
				public String V4OriginalDbColumnName(){
				
					return "V4";
				
				}

				
			    public String V5;

				public String getV5 () {
					return this.V5;
				}

				public Boolean V5IsNullable(){
				    return true;
				}
				public Boolean V5IsKey(){
				    return false;
				}
				public Integer V5Length(){
				    return 100;
				}
				public Integer V5Precision(){
				    return 0;
				}
				public String V5Default(){
				
					return null;
				
				}
				public String V5Comment(){
				
				    return "";
				
				}
				public String V5Pattern(){
				
					return "";
				
				}
				public String V5OriginalDbColumnName(){
				
					return "V5";
				
				}

				
			    public String V6;

				public String getV6 () {
					return this.V6;
				}

				public Boolean V6IsNullable(){
				    return true;
				}
				public Boolean V6IsKey(){
				    return false;
				}
				public Integer V6Length(){
				    return 100;
				}
				public Integer V6Precision(){
				    return 0;
				}
				public String V6Default(){
				
					return null;
				
				}
				public String V6Comment(){
				
				    return "";
				
				}
				public String V6Pattern(){
				
					return "";
				
				}
				public String V6OriginalDbColumnName(){
				
					return "V6";
				
				}

				
			    public String V7;

				public String getV7 () {
					return this.V7;
				}

				public Boolean V7IsNullable(){
				    return true;
				}
				public Boolean V7IsKey(){
				    return false;
				}
				public Integer V7Length(){
				    return 100;
				}
				public Integer V7Precision(){
				    return 0;
				}
				public String V7Default(){
				
					return null;
				
				}
				public String V7Comment(){
				
				    return "";
				
				}
				public String V7Pattern(){
				
					return "";
				
				}
				public String V7OriginalDbColumnName(){
				
					return "V7";
				
				}

				
			    public String V8;

				public String getV8 () {
					return this.V8;
				}

				public Boolean V8IsNullable(){
				    return true;
				}
				public Boolean V8IsKey(){
				    return false;
				}
				public Integer V8Length(){
				    return 100;
				}
				public Integer V8Precision(){
				    return 0;
				}
				public String V8Default(){
				
					return null;
				
				}
				public String V8Comment(){
				
				    return "";
				
				}
				public String V8Pattern(){
				
					return "";
				
				}
				public String V8OriginalDbColumnName(){
				
					return "V8";
				
				}

				
			    public String V9;

				public String getV9 () {
					return this.V9;
				}

				public Boolean V9IsNullable(){
				    return true;
				}
				public Boolean V9IsKey(){
				    return false;
				}
				public Integer V9Length(){
				    return 10;
				}
				public Integer V9Precision(){
				    return 0;
				}
				public String V9Default(){
				
					return null;
				
				}
				public String V9Comment(){
				
				    return "";
				
				}
				public String V9Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V9OriginalDbColumnName(){
				
					return "V9";
				
				}

				
			    public String V10;

				public String getV10 () {
					return this.V10;
				}

				public Boolean V10IsNullable(){
				    return false;
				}
				public Boolean V10IsKey(){
				    return false;
				}
				public Integer V10Length(){
				    return 1;
				}
				public Integer V10Precision(){
				    return 0;
				}
				public String V10Default(){
				
					return null;
				
				}
				public String V10Comment(){
				
				    return "";
				
				}
				public String V10Pattern(){
				
					return "";
				
				}
				public String V10OriginalDbColumnName(){
				
					return "V10";
				
				}

				
			    public String V11;

				public String getV11 () {
					return this.V11;
				}

				public Boolean V11IsNullable(){
				    return true;
				}
				public Boolean V11IsKey(){
				    return false;
				}
				public Integer V11Length(){
				    return 5;
				}
				public Integer V11Precision(){
				    return 0;
				}
				public String V11Default(){
				
					return null;
				
				}
				public String V11Comment(){
				
				    return "";
				
				}
				public String V11Pattern(){
				
					return "";
				
				}
				public String V11OriginalDbColumnName(){
				
					return "V11";
				
				}

				
			    public String V12;

				public String getV12 () {
					return this.V12;
				}

				public Boolean V12IsNullable(){
				    return true;
				}
				public Boolean V12IsKey(){
				    return false;
				}
				public Integer V12Length(){
				    return 4;
				}
				public Integer V12Precision(){
				    return 0;
				}
				public String V12Default(){
				
					return null;
				
				}
				public String V12Comment(){
				
				    return "";
				
				}
				public String V12Pattern(){
				
					return "";
				
				}
				public String V12OriginalDbColumnName(){
				
					return "V12";
				
				}

				
			    public String V13;

				public String getV13 () {
					return this.V13;
				}

				public Boolean V13IsNullable(){
				    return true;
				}
				public Boolean V13IsKey(){
				    return false;
				}
				public Integer V13Length(){
				    return 100;
				}
				public Integer V13Precision(){
				    return 0;
				}
				public String V13Default(){
				
					return null;
				
				}
				public String V13Comment(){
				
				    return "";
				
				}
				public String V13Pattern(){
				
					return "";
				
				}
				public String V13OriginalDbColumnName(){
				
					return "V13";
				
				}

				
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 2;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return 0;
				}
				public Integer V15Precision(){
				    return 0;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return 0;
				}
				public Integer V16Precision(){
				    return 0;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return 0;
				}
				public Integer V17Precision(){
				    return 0;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return 0;
				}
				public Integer V18Precision(){
				    return 0;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 1;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return 0;
				}
				public Integer V20Precision(){
				    return 0;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 0;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 0;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return 1;
				}
				public Integer V24Precision(){
				    return 0;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 0;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return 0;
				}
				public Integer V27Precision(){
				    return 0;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return 0;
				}
				public Integer V28Precision(){
				    return 0;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 4000;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return false;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return 0;
				}
				public Integer V35Precision(){
				    return 0;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return 0;
				}
				public Integer V36Precision(){
				    return 0;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return 1;
				}
				public Integer V38Precision(){
				    return 0;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return 1;
				}
				public Integer V39Precision(){
				    return 0;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return 0;
				}
				public Integer V40Precision(){
				    return 0;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return 1;
				}
				public Integer V41Precision(){
				    return 0;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return 1;
				}
				public Integer V42Precision(){
				    return 0;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return 0;
				}
				public Integer V43Precision(){
				    return 0;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return 0;
				}
				public Integer V44Precision(){
				    return 0;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return 0;
				}
				public Integer V45Precision(){
				    return 0;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return 0;
				}
				public Integer V46Precision(){
				    return 0;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return 0;
				}
				public Integer V47Precision(){
				    return 0;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return 10;
				}
				public Integer V50Precision(){
				    return 0;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 0;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return 0;
				}
				public Integer V52Precision(){
				    return 0;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 0;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 0;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 0;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return 0;
				}
				public Integer V59Precision(){
				    return 0;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return 0;
				}
				public Integer V60Precision(){
				    return 0;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return 0;
				}
				public Integer V61Precision(){
				    return 0;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return false;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 0;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return 0;
				}
				public Integer V63Precision(){
				    return 0;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return 0;
				}
				public Integer V64Precision(){
				    return 0;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return 0;
				}
				public Integer V67Precision(){
				    return 0;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public String V68;

				public String getV68 () {
					return this.V68;
				}

				public Boolean V68IsNullable(){
				    return true;
				}
				public Boolean V68IsKey(){
				    return false;
				}
				public Integer V68Length(){
				    return 0;
				}
				public Integer V68Precision(){
				    return 0;
				}
				public String V68Default(){
				
					return null;
				
				}
				public String V68Comment(){
				
				    return "";
				
				}
				public String V68Pattern(){
				
					return "";
				
				}
				public String V68OriginalDbColumnName(){
				
					return "V68";
				
				}

				
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return 0;
				}
				public Integer V70Precision(){
				    return 0;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return 0;
				}
				public Integer V71Precision(){
				    return 0;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return 0;
				}
				public Integer V74Precision(){
				    return 0;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 0;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 0;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return 1;
				}
				public Integer V77Precision(){
				    return 0;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return 0;
				}
				public Integer V78Precision(){
				    return 0;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return 0;
				}
				public Integer V79Precision(){
				    return 0;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return 0;
				}
				public Integer V80Precision(){
				    return 0;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return 0;
				}
				public Integer V81Precision(){
				    return 0;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 1;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return 0;
				}
				public Integer V84Precision(){
				    return 0;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return 0;
				}
				public Integer V85Precision(){
				    return 0;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 0;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 0;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 0;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return 0;
				}
				public Integer V91Precision(){
				    return 0;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 0;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 11;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 0;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 0;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 0;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				
			    public String V100;

				public String getV100 () {
					return this.V100;
				}

				public Boolean V100IsNullable(){
				    return true;
				}
				public Boolean V100IsKey(){
				    return false;
				}
				public Integer V100Length(){
				    return 0;
				}
				public Integer V100Precision(){
				    return 0;
				}
				public String V100Default(){
				
					return null;
				
				}
				public String V100Comment(){
				
				    return "";
				
				}
				public String V100Pattern(){
				
					return "";
				
				}
				public String V100OriginalDbColumnName(){
				
					return "V100";
				
				}

				
			    public String V101;

				public String getV101 () {
					return this.V101;
				}

				public Boolean V101IsNullable(){
				    return true;
				}
				public Boolean V101IsKey(){
				    return false;
				}
				public Integer V101Length(){
				    return 0;
				}
				public Integer V101Precision(){
				    return 0;
				}
				public String V101Default(){
				
					return null;
				
				}
				public String V101Comment(){
				
				    return "";
				
				}
				public String V101Pattern(){
				
					return "";
				
				}
				public String V101OriginalDbColumnName(){
				
					return "V101";
				
				}

				
			    public String V102;

				public String getV102 () {
					return this.V102;
				}

				public Boolean V102IsNullable(){
				    return true;
				}
				public Boolean V102IsKey(){
				    return false;
				}
				public Integer V102Length(){
				    return 0;
				}
				public Integer V102Precision(){
				    return 0;
				}
				public String V102Default(){
				
					return null;
				
				}
				public String V102Comment(){
				
				    return "";
				
				}
				public String V102Pattern(){
				
					return "";
				
				}
				public String V102OriginalDbColumnName(){
				
					return "V102";
				
				}

				
			    public String V103;

				public String getV103 () {
					return this.V103;
				}

				public Boolean V103IsNullable(){
				    return true;
				}
				public Boolean V103IsKey(){
				    return false;
				}
				public Integer V103Length(){
				    return 0;
				}
				public Integer V103Precision(){
				    return 0;
				}
				public String V103Default(){
				
					return null;
				
				}
				public String V103Comment(){
				
				    return "";
				
				}
				public String V103Pattern(){
				
					return "";
				
				}
				public String V103OriginalDbColumnName(){
				
					return "V103";
				
				}

				
			    public BigDecimal V104;

				public BigDecimal getV104 () {
					return this.V104;
				}

				public Boolean V104IsNullable(){
				    return true;
				}
				public Boolean V104IsKey(){
				    return false;
				}
				public Integer V104Length(){
				    return 0;
				}
				public Integer V104Precision(){
				    return 0;
				}
				public String V104Default(){
				
					return "";
				
				}
				public String V104Comment(){
				
				    return "";
				
				}
				public String V104Pattern(){
				
					return "";
				
				}
				public String V104OriginalDbColumnName(){
				
					return "V104";
				
				}

				
			    public String V105;

				public String getV105 () {
					return this.V105;
				}

				public Boolean V105IsNullable(){
				    return true;
				}
				public Boolean V105IsKey(){
				    return false;
				}
				public Integer V105Length(){
				    return 0;
				}
				public Integer V105Precision(){
				    return 0;
				}
				public String V105Default(){
				
					return null;
				
				}
				public String V105Comment(){
				
				    return "";
				
				}
				public String V105Pattern(){
				
					return "";
				
				}
				public String V105OriginalDbColumnName(){
				
					return "V105";
				
				}

				
			    public String V106;

				public String getV106 () {
					return this.V106;
				}

				public Boolean V106IsNullable(){
				    return true;
				}
				public Boolean V106IsKey(){
				    return false;
				}
				public Integer V106Length(){
				    return 0;
				}
				public Integer V106Precision(){
				    return 0;
				}
				public String V106Default(){
				
					return null;
				
				}
				public String V106Comment(){
				
				    return "";
				
				}
				public String V106Pattern(){
				
					return "";
				
				}
				public String V106OriginalDbColumnName(){
				
					return "V106";
				
				}

				
			    public BigDecimal V107;

				public BigDecimal getV107 () {
					return this.V107;
				}

				public Boolean V107IsNullable(){
				    return true;
				}
				public Boolean V107IsKey(){
				    return false;
				}
				public Integer V107Length(){
				    return 0;
				}
				public Integer V107Precision(){
				    return 0;
				}
				public String V107Default(){
				
					return "";
				
				}
				public String V107Comment(){
				
				    return "";
				
				}
				public String V107Pattern(){
				
					return "";
				
				}
				public String V107OriginalDbColumnName(){
				
					return "V107";
				
				}

				
			    public String V108;

				public String getV108 () {
					return this.V108;
				}

				public Boolean V108IsNullable(){
				    return true;
				}
				public Boolean V108IsKey(){
				    return false;
				}
				public Integer V108Length(){
				    return 0;
				}
				public Integer V108Precision(){
				    return 0;
				}
				public String V108Default(){
				
					return null;
				
				}
				public String V108Comment(){
				
				    return "";
				
				}
				public String V108Pattern(){
				
					return "";
				
				}
				public String V108OriginalDbColumnName(){
				
					return "V108";
				
				}

				
			    public BigDecimal V109;

				public BigDecimal getV109 () {
					return this.V109;
				}

				public Boolean V109IsNullable(){
				    return true;
				}
				public Boolean V109IsKey(){
				    return false;
				}
				public Integer V109Length(){
				    return 0;
				}
				public Integer V109Precision(){
				    return 0;
				}
				public String V109Default(){
				
					return "";
				
				}
				public String V109Comment(){
				
				    return "";
				
				}
				public String V109Pattern(){
				
					return "";
				
				}
				public String V109OriginalDbColumnName(){
				
					return "V109";
				
				}

				
			    public String V110;

				public String getV110 () {
					return this.V110;
				}

				public Boolean V110IsNullable(){
				    return true;
				}
				public Boolean V110IsKey(){
				    return false;
				}
				public Integer V110Length(){
				    return 0;
				}
				public Integer V110Precision(){
				    return 0;
				}
				public String V110Default(){
				
					return null;
				
				}
				public String V110Comment(){
				
				    return "";
				
				}
				public String V110Pattern(){
				
					return "";
				
				}
				public String V110OriginalDbColumnName(){
				
					return "V110";
				
				}

				
			    public String V111;

				public String getV111 () {
					return this.V111;
				}

				public Boolean V111IsNullable(){
				    return true;
				}
				public Boolean V111IsKey(){
				    return false;
				}
				public Integer V111Length(){
				    return 0;
				}
				public Integer V111Precision(){
				    return 0;
				}
				public String V111Default(){
				
					return null;
				
				}
				public String V111Comment(){
				
				    return "";
				
				}
				public String V111Pattern(){
				
					return "";
				
				}
				public String V111OriginalDbColumnName(){
				
					return "V111";
				
				}

				
			    public String V112;

				public String getV112 () {
					return this.V112;
				}

				public Boolean V112IsNullable(){
				    return true;
				}
				public Boolean V112IsKey(){
				    return false;
				}
				public Integer V112Length(){
				    return 0;
				}
				public Integer V112Precision(){
				    return 0;
				}
				public String V112Default(){
				
					return null;
				
				}
				public String V112Comment(){
				
				    return "";
				
				}
				public String V112Pattern(){
				
					return "";
				
				}
				public String V112OriginalDbColumnName(){
				
					return "V112";
				
				}

				
			    public BigDecimal V113;

				public BigDecimal getV113 () {
					return this.V113;
				}

				public Boolean V113IsNullable(){
				    return true;
				}
				public Boolean V113IsKey(){
				    return false;
				}
				public Integer V113Length(){
				    return 0;
				}
				public Integer V113Precision(){
				    return 0;
				}
				public String V113Default(){
				
					return null;
				
				}
				public String V113Comment(){
				
				    return "";
				
				}
				public String V113Pattern(){
				
					return "";
				
				}
				public String V113OriginalDbColumnName(){
				
					return "V113";
				
				}

				
			    public String V114;

				public String getV114 () {
					return this.V114;
				}

				public Boolean V114IsNullable(){
				    return true;
				}
				public Boolean V114IsKey(){
				    return false;
				}
				public Integer V114Length(){
				    return 0;
				}
				public Integer V114Precision(){
				    return 0;
				}
				public String V114Default(){
				
					return null;
				
				}
				public String V114Comment(){
				
				    return "";
				
				}
				public String V114Pattern(){
				
					return "";
				
				}
				public String V114OriginalDbColumnName(){
				
					return "V114";
				
				}

				
			    public String V115;

				public String getV115 () {
					return this.V115;
				}

				public Boolean V115IsNullable(){
				    return true;
				}
				public Boolean V115IsKey(){
				    return false;
				}
				public Integer V115Length(){
				    return 0;
				}
				public Integer V115Precision(){
				    return 0;
				}
				public String V115Default(){
				
					return null;
				
				}
				public String V115Comment(){
				
				    return "";
				
				}
				public String V115Pattern(){
				
					return "";
				
				}
				public String V115OriginalDbColumnName(){
				
					return "V115";
				
				}

				
			    public String V116;

				public String getV116 () {
					return this.V116;
				}

				public Boolean V116IsNullable(){
				    return true;
				}
				public Boolean V116IsKey(){
				    return false;
				}
				public Integer V116Length(){
				    return 0;
				}
				public Integer V116Precision(){
				    return 0;
				}
				public String V116Default(){
				
					return null;
				
				}
				public String V116Comment(){
				
				    return "";
				
				}
				public String V116Pattern(){
				
					return "";
				
				}
				public String V116OriginalDbColumnName(){
				
					return "V116";
				
				}

				
			    public String V117;

				public String getV117 () {
					return this.V117;
				}

				public Boolean V117IsNullable(){
				    return true;
				}
				public Boolean V117IsKey(){
				    return false;
				}
				public Integer V117Length(){
				    return 0;
				}
				public Integer V117Precision(){
				    return 0;
				}
				public String V117Default(){
				
					return null;
				
				}
				public String V117Comment(){
				
				    return "";
				
				}
				public String V117Pattern(){
				
					return "";
				
				}
				public String V117OriginalDbColumnName(){
				
					return "V117";
				
				}

				
			    public String V118;

				public String getV118 () {
					return this.V118;
				}

				public Boolean V118IsNullable(){
				    return true;
				}
				public Boolean V118IsKey(){
				    return false;
				}
				public Integer V118Length(){
				    return 0;
				}
				public Integer V118Precision(){
				    return 0;
				}
				public String V118Default(){
				
					return null;
				
				}
				public String V118Comment(){
				
				    return "";
				
				}
				public String V118Pattern(){
				
					return "";
				
				}
				public String V118OriginalDbColumnName(){
				
					return "V118";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readString(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.V0 = (BigDecimal) dis.readObject();
					
						this.V1 = (BigDecimal) dis.readObject();
					
					this.V2 = readString(dis);
					
					this.V3 = readString(dis);
					
					this.V4 = readString(dis);
					
					this.V5 = readString(dis);
					
					this.V6 = readString(dis);
					
					this.V7 = readString(dis);
					
					this.V8 = readString(dis);
					
					this.V9 = readString(dis);
					
					this.V10 = readString(dis);
					
					this.V11 = readString(dis);
					
					this.V12 = readString(dis);
					
					this.V13 = readString(dis);
					
					this.V14 = readString(dis);
					
					this.V15 = readString(dis);
					
					this.V16 = readString(dis);
					
					this.V17 = readString(dis);
					
					this.V18 = readString(dis);
					
					this.V19 = readString(dis);
					
					this.V20 = readString(dis);
					
					this.V21 = readString(dis);
					
					this.V22 = readString(dis);
					
					this.V23 = readString(dis);
					
					this.V24 = readString(dis);
					
					this.V25 = readString(dis);
					
					this.V26 = readString(dis);
					
					this.V27 = readString(dis);
					
					this.V28 = readString(dis);
					
					this.V29 = readString(dis);
					
						this.V30 = (BigDecimal) dis.readObject();
					
					this.V31 = readString(dis);
					
						this.V32 = (BigDecimal) dis.readObject();
					
					this.V33 = readString(dis);
					
						this.V34 = (BigDecimal) dis.readObject();
					
					this.V35 = readString(dis);
					
					this.V36 = readString(dis);
					
					this.V37 = readString(dis);
					
					this.V38 = readString(dis);
					
					this.V39 = readString(dis);
					
					this.V40 = readString(dis);
					
					this.V41 = readString(dis);
					
					this.V42 = readString(dis);
					
					this.V43 = readString(dis);
					
					this.V44 = readString(dis);
					
					this.V45 = readString(dis);
					
					this.V46 = readString(dis);
					
					this.V47 = readString(dis);
					
					this.V48 = readString(dis);
					
					this.V49 = readString(dis);
					
					this.V50 = readString(dis);
					
					this.V51 = readString(dis);
					
					this.V52 = readString(dis);
					
					this.V53 = readString(dis);
					
					this.V54 = readString(dis);
					
					this.V55 = readString(dis);
					
					this.V56 = readString(dis);
					
					this.V57 = readString(dis);
					
					this.V58 = readString(dis);
					
					this.V59 = readString(dis);
					
					this.V60 = readString(dis);
					
					this.V61 = readString(dis);
					
					this.V62 = readString(dis);
					
					this.V63 = readString(dis);
					
					this.V64 = readString(dis);
					
					this.V65 = readString(dis);
					
					this.V66 = readString(dis);
					
					this.V67 = readString(dis);
					
					this.V68 = readString(dis);
					
					this.V69 = readString(dis);
					
					this.V70 = readString(dis);
					
					this.V71 = readString(dis);
					
					this.V72 = readString(dis);
					
					this.V73 = readString(dis);
					
						this.V74 = (BigDecimal) dis.readObject();
					
					this.V75 = readString(dis);
					
					this.V76 = readString(dis);
					
					this.V77 = readString(dis);
					
					this.V78 = readString(dis);
					
					this.V79 = readString(dis);
					
					this.V80 = readString(dis);
					
					this.V81 = readString(dis);
					
					this.V82 = readString(dis);
					
					this.V83 = readString(dis);
					
					this.V84 = readString(dis);
					
					this.V85 = readString(dis);
					
					this.V86 = readString(dis);
					
					this.V87 = readString(dis);
					
					this.V88 = readString(dis);
					
					this.V89 = readString(dis);
					
					this.V90 = readString(dis);
					
					this.V91 = readString(dis);
					
					this.V92 = readString(dis);
					
					this.V93 = readString(dis);
					
					this.V94 = readString(dis);
					
					this.V95 = readString(dis);
					
					this.V96 = readString(dis);
					
					this.V97 = readString(dis);
					
					this.V98 = readString(dis);
					
					this.V99 = readString(dis);
					
					this.V100 = readString(dis);
					
					this.V101 = readString(dis);
					
					this.V102 = readString(dis);
					
					this.V103 = readString(dis);
					
						this.V104 = (BigDecimal) dis.readObject();
					
					this.V105 = readString(dis);
					
					this.V106 = readString(dis);
					
						this.V107 = (BigDecimal) dis.readObject();
					
					this.V108 = readString(dis);
					
						this.V109 = (BigDecimal) dis.readObject();
					
					this.V110 = readString(dis);
					
					this.V111 = readString(dis);
					
					this.V112 = readString(dis);
					
						this.V113 = (BigDecimal) dis.readObject();
					
					this.V114 = readString(dis);
					
					this.V115 = readString(dis);
					
					this.V116 = readString(dis);
					
					this.V117 = readString(dis);
					
					this.V118 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.V0);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// String
				
						writeString(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V0);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V1);
					
					// String
				
						writeString(this.V2,dos);
					
					// String
				
						writeString(this.V3,dos);
					
					// String
				
						writeString(this.V4,dos);
					
					// String
				
						writeString(this.V5,dos);
					
					// String
				
						writeString(this.V6,dos);
					
					// String
				
						writeString(this.V7,dos);
					
					// String
				
						writeString(this.V8,dos);
					
					// String
				
						writeString(this.V9,dos);
					
					// String
				
						writeString(this.V10,dos);
					
					// String
				
						writeString(this.V11,dos);
					
					// String
				
						writeString(this.V12,dos);
					
					// String
				
						writeString(this.V13,dos);
					
					// String
				
						writeString(this.V14,dos);
					
					// String
				
						writeString(this.V15,dos);
					
					// String
				
						writeString(this.V16,dos);
					
					// String
				
						writeString(this.V17,dos);
					
					// String
				
						writeString(this.V18,dos);
					
					// String
				
						writeString(this.V19,dos);
					
					// String
				
						writeString(this.V20,dos);
					
					// String
				
						writeString(this.V21,dos);
					
					// String
				
						writeString(this.V22,dos);
					
					// String
				
						writeString(this.V23,dos);
					
					// String
				
						writeString(this.V24,dos);
					
					// String
				
						writeString(this.V25,dos);
					
					// String
				
						writeString(this.V26,dos);
					
					// String
				
						writeString(this.V27,dos);
					
					// String
				
						writeString(this.V28,dos);
					
					// String
				
						writeString(this.V29,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V30);
					
					// String
				
						writeString(this.V31,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V32);
					
					// String
				
						writeString(this.V33,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V34);
					
					// String
				
						writeString(this.V35,dos);
					
					// String
				
						writeString(this.V36,dos);
					
					// String
				
						writeString(this.V37,dos);
					
					// String
				
						writeString(this.V38,dos);
					
					// String
				
						writeString(this.V39,dos);
					
					// String
				
						writeString(this.V40,dos);
					
					// String
				
						writeString(this.V41,dos);
					
					// String
				
						writeString(this.V42,dos);
					
					// String
				
						writeString(this.V43,dos);
					
					// String
				
						writeString(this.V44,dos);
					
					// String
				
						writeString(this.V45,dos);
					
					// String
				
						writeString(this.V46,dos);
					
					// String
				
						writeString(this.V47,dos);
					
					// String
				
						writeString(this.V48,dos);
					
					// String
				
						writeString(this.V49,dos);
					
					// String
				
						writeString(this.V50,dos);
					
					// String
				
						writeString(this.V51,dos);
					
					// String
				
						writeString(this.V52,dos);
					
					// String
				
						writeString(this.V53,dos);
					
					// String
				
						writeString(this.V54,dos);
					
					// String
				
						writeString(this.V55,dos);
					
					// String
				
						writeString(this.V56,dos);
					
					// String
				
						writeString(this.V57,dos);
					
					// String
				
						writeString(this.V58,dos);
					
					// String
				
						writeString(this.V59,dos);
					
					// String
				
						writeString(this.V60,dos);
					
					// String
				
						writeString(this.V61,dos);
					
					// String
				
						writeString(this.V62,dos);
					
					// String
				
						writeString(this.V63,dos);
					
					// String
				
						writeString(this.V64,dos);
					
					// String
				
						writeString(this.V65,dos);
					
					// String
				
						writeString(this.V66,dos);
					
					// String
				
						writeString(this.V67,dos);
					
					// String
				
						writeString(this.V68,dos);
					
					// String
				
						writeString(this.V69,dos);
					
					// String
				
						writeString(this.V70,dos);
					
					// String
				
						writeString(this.V71,dos);
					
					// String
				
						writeString(this.V72,dos);
					
					// String
				
						writeString(this.V73,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V74);
					
					// String
				
						writeString(this.V75,dos);
					
					// String
				
						writeString(this.V76,dos);
					
					// String
				
						writeString(this.V77,dos);
					
					// String
				
						writeString(this.V78,dos);
					
					// String
				
						writeString(this.V79,dos);
					
					// String
				
						writeString(this.V80,dos);
					
					// String
				
						writeString(this.V81,dos);
					
					// String
				
						writeString(this.V82,dos);
					
					// String
				
						writeString(this.V83,dos);
					
					// String
				
						writeString(this.V84,dos);
					
					// String
				
						writeString(this.V85,dos);
					
					// String
				
						writeString(this.V86,dos);
					
					// String
				
						writeString(this.V87,dos);
					
					// String
				
						writeString(this.V88,dos);
					
					// String
				
						writeString(this.V89,dos);
					
					// String
				
						writeString(this.V90,dos);
					
					// String
				
						writeString(this.V91,dos);
					
					// String
				
						writeString(this.V92,dos);
					
					// String
				
						writeString(this.V93,dos);
					
					// String
				
						writeString(this.V94,dos);
					
					// String
				
						writeString(this.V95,dos);
					
					// String
				
						writeString(this.V96,dos);
					
					// String
				
						writeString(this.V97,dos);
					
					// String
				
						writeString(this.V98,dos);
					
					// String
				
						writeString(this.V99,dos);
					
					// String
				
						writeString(this.V100,dos);
					
					// String
				
						writeString(this.V101,dos);
					
					// String
				
						writeString(this.V102,dos);
					
					// String
				
						writeString(this.V103,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V104);
					
					// String
				
						writeString(this.V105,dos);
					
					// String
				
						writeString(this.V106,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V107);
					
					// String
				
						writeString(this.V108,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V109);
					
					// String
				
						writeString(this.V110,dos);
					
					// String
				
						writeString(this.V111,dos);
					
					// String
				
						writeString(this.V112,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.V113);
					
					// String
				
						writeString(this.V114,dos);
					
					// String
				
						writeString(this.V115,dos);
					
					// String
				
						writeString(this.V116,dos);
					
					// String
				
						writeString(this.V117,dos);
					
					// String
				
						writeString(this.V118,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V0="+String.valueOf(V0));
		sb.append(",V1="+String.valueOf(V1));
		sb.append(",V2="+V2);
		sb.append(",V3="+V3);
		sb.append(",V4="+V4);
		sb.append(",V5="+V5);
		sb.append(",V6="+V6);
		sb.append(",V7="+V7);
		sb.append(",V8="+V8);
		sb.append(",V9="+V9);
		sb.append(",V10="+V10);
		sb.append(",V11="+V11);
		sb.append(",V12="+V12);
		sb.append(",V13="+V13);
		sb.append(",V14="+V14);
		sb.append(",V15="+V15);
		sb.append(",V16="+V16);
		sb.append(",V17="+V17);
		sb.append(",V18="+V18);
		sb.append(",V19="+V19);
		sb.append(",V20="+V20);
		sb.append(",V21="+V21);
		sb.append(",V22="+V22);
		sb.append(",V23="+V23);
		sb.append(",V24="+V24);
		sb.append(",V25="+V25);
		sb.append(",V26="+V26);
		sb.append(",V27="+V27);
		sb.append(",V28="+V28);
		sb.append(",V29="+V29);
		sb.append(",V30="+String.valueOf(V30));
		sb.append(",V31="+V31);
		sb.append(",V32="+String.valueOf(V32));
		sb.append(",V33="+V33);
		sb.append(",V34="+String.valueOf(V34));
		sb.append(",V35="+V35);
		sb.append(",V36="+V36);
		sb.append(",V37="+V37);
		sb.append(",V38="+V38);
		sb.append(",V39="+V39);
		sb.append(",V40="+V40);
		sb.append(",V41="+V41);
		sb.append(",V42="+V42);
		sb.append(",V43="+V43);
		sb.append(",V44="+V44);
		sb.append(",V45="+V45);
		sb.append(",V46="+V46);
		sb.append(",V47="+V47);
		sb.append(",V48="+V48);
		sb.append(",V49="+V49);
		sb.append(",V50="+V50);
		sb.append(",V51="+V51);
		sb.append(",V52="+V52);
		sb.append(",V53="+V53);
		sb.append(",V54="+V54);
		sb.append(",V55="+V55);
		sb.append(",V56="+V56);
		sb.append(",V57="+V57);
		sb.append(",V58="+V58);
		sb.append(",V59="+V59);
		sb.append(",V60="+V60);
		sb.append(",V61="+V61);
		sb.append(",V62="+V62);
		sb.append(",V63="+V63);
		sb.append(",V64="+V64);
		sb.append(",V65="+V65);
		sb.append(",V66="+V66);
		sb.append(",V67="+V67);
		sb.append(",V68="+V68);
		sb.append(",V69="+V69);
		sb.append(",V70="+V70);
		sb.append(",V71="+V71);
		sb.append(",V72="+V72);
		sb.append(",V73="+V73);
		sb.append(",V74="+String.valueOf(V74));
		sb.append(",V75="+V75);
		sb.append(",V76="+V76);
		sb.append(",V77="+V77);
		sb.append(",V78="+V78);
		sb.append(",V79="+V79);
		sb.append(",V80="+V80);
		sb.append(",V81="+V81);
		sb.append(",V82="+V82);
		sb.append(",V83="+V83);
		sb.append(",V84="+V84);
		sb.append(",V85="+V85);
		sb.append(",V86="+V86);
		sb.append(",V87="+V87);
		sb.append(",V88="+V88);
		sb.append(",V89="+V89);
		sb.append(",V90="+V90);
		sb.append(",V91="+V91);
		sb.append(",V92="+V92);
		sb.append(",V93="+V93);
		sb.append(",V94="+V94);
		sb.append(",V95="+V95);
		sb.append(",V96="+V96);
		sb.append(",V97="+V97);
		sb.append(",V98="+V98);
		sb.append(",V99="+V99);
		sb.append(",V100="+V100);
		sb.append(",V101="+V101);
		sb.append(",V102="+V102);
		sb.append(",V103="+V103);
		sb.append(",V104="+String.valueOf(V104));
		sb.append(",V105="+V105);
		sb.append(",V106="+V106);
		sb.append(",V107="+String.valueOf(V107));
		sb.append(",V108="+V108);
		sb.append(",V109="+String.valueOf(V109));
		sb.append(",V110="+V110);
		sb.append(",V111="+V111);
		sb.append(",V112="+V112);
		sb.append(",V113="+String.valueOf(V113));
		sb.append(",V114="+V114);
		sb.append(",V115="+V115);
		sb.append(",V116="+V116);
		sb.append(",V117="+V117);
		sb.append(",V118="+V118);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row117Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row117Struct row117 = new row117Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row117");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
                class FileOutputDelimitedUtil_tFileOutputDelimited_1{
                                public void putValue_0(final row117Struct row117,StringBuilder sb_tFileOutputDelimited_1,final String OUT_DELIM_tFileOutputDelimited_1)throws java.lang.Exception {
                                if(row117.V0 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V0.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V1 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V1.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V2 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V2
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V3 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V3
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V4 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V4
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V5 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V5
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V6 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V6
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V7 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V7
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V8 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V8
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V9 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V9
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V10 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V10
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V11 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V11
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V12 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V12
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V13 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V13
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V14 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V14
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V15 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V15
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V16 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V16
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V17 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V17
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V18 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V18
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V19 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V19
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V20 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V20
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V21 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V21
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V22 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V22
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V23 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V23
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V24 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V24
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V25 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V25
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V26 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V26
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V27 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V27
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V28 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V28
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V29 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V29
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V30 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V30.toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V31 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V31
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V32 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V32.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V33 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V33
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V34 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V34.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V35 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V35
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V36 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V36
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V37 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V37
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V38 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V38
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V39 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V39
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V40 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V40
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V41 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V41
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V42 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V42
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V43 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V43
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V44 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V44
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V45 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V45
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V46 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V46
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V47 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V47
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V48 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V48
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V49 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V49
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V50 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V50
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V51 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V51
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V52 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V52
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V53 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V53
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V54 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V54
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V55 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V55
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V56 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V56
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V57 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V57
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V58 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V58
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V59 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V59
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V60 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V60
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V61 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V61
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V62 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V62
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V63 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V63
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V64 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V64
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V65 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V65
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V66 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V66
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V67 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V67
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V68 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V68
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V69 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V69
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V70 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V70
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V71 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V71
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V72 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V72
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V73 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V73
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V74 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V74.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V75 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V75
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V76 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V76
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V77 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V77
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V78 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V78
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V79 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V79
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V80 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V80
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V81 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V81
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V82 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V82
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V83 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V83
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V84 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V84
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V85 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V85
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V86 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V86
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V87 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V87
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V88 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V88
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V89 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V89
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                }
                                public void putValue_1(final row117Struct row117,StringBuilder sb_tFileOutputDelimited_1,final String OUT_DELIM_tFileOutputDelimited_1)throws java.lang.Exception {
                                if(row117.V90 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V90
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V91 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V91
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V92 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V92
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V93 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V93
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V94 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V94
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V95 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V95
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V96 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V96
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V97 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V97
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V98 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V98
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V99 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V99
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V100 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V100
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V101 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V101
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V102 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V102
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V103 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V103
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V104 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V104.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V105 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V105
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V106 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V106
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V107 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V107.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V108 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V108
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V109 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V109.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V110 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V110
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V111 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V111
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V112 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V112
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V113 != null) {
                                sb_tFileOutputDelimited_1.append(
                                            FormatterUtils.format_Number(row117.V113.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString(), null, '.')
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V114 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V114
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V115 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V115
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V116 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V116
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V117 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V117
                                );
                                }
                                sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                                if(row117.V118 != null) {
                                sb_tFileOutputDelimited_1.append(
                                        row117.V118
                                );
                                }
                            }
                }
                FileOutputDelimitedUtil_tFileOutputDelimited_1 fileOutputDelimitedUtil_tFileOutputDelimited_1=new FileOutputDelimitedUtil_tFileOutputDelimited_1();
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.CarpetaTemp  + "/" + context.NombreArchivo + ".txt")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */"|"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);
    resourceMap.put("isFileGenerated_tFileOutputDelimited_1", isFileGenerated_tFileOutputDelimited_1);
        resourceMap.put("filetFileOutputDelimited_1", filetFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<salidad_4505Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_Resolucion4505_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<salidad_4505Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    salidad_4505Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row117.V0 = next_tHashInput_1.V0;
	row117.V1 = next_tHashInput_1.V1;
	row117.V2 = next_tHashInput_1.V2;
	row117.V3 = next_tHashInput_1.V3;
	row117.V4 = next_tHashInput_1.V4;
	row117.V5 = next_tHashInput_1.V5;
	row117.V6 = next_tHashInput_1.V6;
	row117.V7 = next_tHashInput_1.V7;
	row117.V8 = next_tHashInput_1.V8;
	row117.V9 = next_tHashInput_1.V9;
	row117.V10 = next_tHashInput_1.V10;
	row117.V11 = next_tHashInput_1.V11;
	row117.V12 = next_tHashInput_1.V12;
	row117.V13 = next_tHashInput_1.V13;
	row117.V14 = next_tHashInput_1.V14;
	row117.V15 = next_tHashInput_1.V15;
	row117.V16 = next_tHashInput_1.V16;
	row117.V17 = next_tHashInput_1.V17;
	row117.V18 = next_tHashInput_1.V18;
	row117.V19 = next_tHashInput_1.V19;
	row117.V20 = next_tHashInput_1.V20;
	row117.V21 = next_tHashInput_1.V21;
	row117.V22 = next_tHashInput_1.V22;
	row117.V23 = next_tHashInput_1.V23;
	row117.V24 = next_tHashInput_1.V24;
	row117.V25 = next_tHashInput_1.V25;
	row117.V26 = next_tHashInput_1.V26;
	row117.V27 = next_tHashInput_1.V27;
	row117.V28 = next_tHashInput_1.V28;
	row117.V29 = next_tHashInput_1.V29;
	row117.V30 = next_tHashInput_1.V30;
	row117.V31 = next_tHashInput_1.V31;
	row117.V32 = next_tHashInput_1.V32;
	row117.V33 = next_tHashInput_1.V33;
	row117.V34 = next_tHashInput_1.V34;
	row117.V35 = next_tHashInput_1.V35;
	row117.V36 = next_tHashInput_1.V36;
	row117.V37 = next_tHashInput_1.V37;
	row117.V38 = next_tHashInput_1.V38;
	row117.V39 = next_tHashInput_1.V39;
	row117.V40 = next_tHashInput_1.V40;
	row117.V41 = next_tHashInput_1.V41;
	row117.V42 = next_tHashInput_1.V42;
	row117.V43 = next_tHashInput_1.V43;
	row117.V44 = next_tHashInput_1.V44;
	row117.V45 = next_tHashInput_1.V45;
	row117.V46 = next_tHashInput_1.V46;
	row117.V47 = next_tHashInput_1.V47;
	row117.V48 = next_tHashInput_1.V48;
	row117.V49 = next_tHashInput_1.V49;
	row117.V50 = next_tHashInput_1.V50;
	row117.V51 = next_tHashInput_1.V51;
	row117.V52 = next_tHashInput_1.V52;
	row117.V53 = next_tHashInput_1.V53;
	row117.V54 = next_tHashInput_1.V54;
	row117.V55 = next_tHashInput_1.V55;
	row117.V56 = next_tHashInput_1.V56;
	row117.V57 = next_tHashInput_1.V57;
	row117.V58 = next_tHashInput_1.V58;
	row117.V59 = next_tHashInput_1.V59;
	row117.V60 = next_tHashInput_1.V60;
	row117.V61 = next_tHashInput_1.V61;
	row117.V62 = next_tHashInput_1.V62;
	row117.V63 = next_tHashInput_1.V63;
	row117.V64 = next_tHashInput_1.V64;
	row117.V65 = next_tHashInput_1.V65;
	row117.V66 = next_tHashInput_1.V66;
	row117.V67 = next_tHashInput_1.V67;
	row117.V68 = next_tHashInput_1.V68;
	row117.V69 = next_tHashInput_1.V69;
	row117.V70 = next_tHashInput_1.V70;
	row117.V71 = next_tHashInput_1.V71;
	row117.V72 = next_tHashInput_1.V72;
	row117.V73 = next_tHashInput_1.V73;
	row117.V74 = next_tHashInput_1.V74;
	row117.V75 = next_tHashInput_1.V75;
	row117.V76 = next_tHashInput_1.V76;
	row117.V77 = next_tHashInput_1.V77;
	row117.V78 = next_tHashInput_1.V78;
	row117.V79 = next_tHashInput_1.V79;
	row117.V80 = next_tHashInput_1.V80;
	row117.V81 = next_tHashInput_1.V81;
	row117.V82 = next_tHashInput_1.V82;
	row117.V83 = next_tHashInput_1.V83;
	row117.V84 = next_tHashInput_1.V84;
	row117.V85 = next_tHashInput_1.V85;
	row117.V86 = next_tHashInput_1.V86;
	row117.V87 = next_tHashInput_1.V87;
	row117.V88 = next_tHashInput_1.V88;
	row117.V89 = next_tHashInput_1.V89;
	row117.V90 = next_tHashInput_1.V90;
	row117.V91 = next_tHashInput_1.V91;
	row117.V92 = next_tHashInput_1.V92;
	row117.V93 = next_tHashInput_1.V93;
	row117.V94 = next_tHashInput_1.V94;
	row117.V95 = next_tHashInput_1.V95;
	row117.V96 = next_tHashInput_1.V96;
	row117.V97 = next_tHashInput_1.V97;
	row117.V98 = next_tHashInput_1.V98;
	row117.V99 = next_tHashInput_1.V99;
	row117.V100 = next_tHashInput_1.V100;
	row117.V101 = next_tHashInput_1.V101;
	row117.V102 = next_tHashInput_1.V102;
	row117.V103 = next_tHashInput_1.V103;
	row117.V104 = next_tHashInput_1.V104;
	row117.V105 = next_tHashInput_1.V105;
	row117.V106 = next_tHashInput_1.V106;
	row117.V107 = next_tHashInput_1.V107;
	row117.V108 = next_tHashInput_1.V108;
	row117.V109 = next_tHashInput_1.V109;
	row117.V110 = next_tHashInput_1.V110;
	row117.V111 = next_tHashInput_1.V111;
	row117.V112 = next_tHashInput_1.V112;
	row117.V113 = next_tHashInput_1.V113;
	row117.V114 = next_tHashInput_1.V114;
	row117.V115 = next_tHashInput_1.V115;
	row117.V116 = next_tHashInput_1.V116;
	row117.V117 = next_tHashInput_1.V117;
	row117.V118 = next_tHashInput_1.V118;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row117"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            fileOutputDelimitedUtil_tFileOutputDelimited_1.putValue_0(row117,sb_tFileOutputDelimited_1,OUT_DELIM_tFileOutputDelimited_1);
                            fileOutputDelimitedUtil_tFileOutputDelimited_1.putValue_1(row117,sb_tFileOutputDelimited_1,OUT_DELIM_tFileOutputDelimited_1);
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    		
    		mf_tHashInput_1.clearCache("tHashFile_Resolucion4505_" + pid +"_tHashOutput_1");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_Resolucion4505_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
			if(isFileGenerated_tFileOutputDelimited_1 && nb_line_tFileOutputDelimited_1 == 0){
				
					filetFileOutputDelimited_1.delete();
				
			}		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row117");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
				if(Boolean.valueOf(String.valueOf(resourceMap.get("isFileGenerated_tFileOutputDelimited_1"))) && Integer.valueOf(String.valueOf(resourceMap.get("nb_line_tFileOutputDelimited_1"))) == 0){
					
						((java.io.File)resourceMap.get("filetFileOutputDelimited_1")).delete();
					
				}		
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row115Struct implements routines.system.IPersistableRow<row115Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_;

				public String getNOMBRE_ () {
					return this.NOMBRE_;
				}

				public Boolean NOMBRE_IsNullable(){
				    return false;
				}
				public Boolean NOMBRE_IsKey(){
				    return false;
				}
				public Integer NOMBRE_Length(){
				    return 0;
				}
				public Integer NOMBRE_Precision(){
				    return 0;
				}
				public String NOMBRE_Default(){
				
					return null;
				
				}
				public String NOMBRE_Comment(){
				
				    return "";
				
				}
				public String NOMBRE_Pattern(){
				
					return "";
				
				}
				public String NOMBRE_OriginalDbColumnName(){
				
					return "NOMBRE_";
				
				}

				
			    public Object CONTENIDO_;

				public Object getCONTENIDO_ () {
					return this.CONTENIDO_;
				}

				public Boolean CONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean CONTENIDO_IsKey(){
				    return false;
				}
				public Integer CONTENIDO_Length(){
				    return 0;
				}
				public Integer CONTENIDO_Precision(){
				    return 0;
				}
				public String CONTENIDO_Default(){
				
					return null;
				
				}
				public String CONTENIDO_Comment(){
				
				    return "";
				
				}
				public String CONTENIDO_Pattern(){
				
					return "";
				
				}
				public String CONTENIDO_OriginalDbColumnName(){
				
					return "CONTENIDO_";
				
				}

				
			    public String TCONTENIDO_;

				public String getTCONTENIDO_ () {
					return this.TCONTENIDO_;
				}

				public Boolean TCONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean TCONTENIDO_IsKey(){
				    return false;
				}
				public Integer TCONTENIDO_Length(){
				    return 0;
				}
				public Integer TCONTENIDO_Precision(){
				    return 0;
				}
				public String TCONTENIDO_Default(){
				
					return null;
				
				}
				public String TCONTENIDO_Comment(){
				
				    return "";
				
				}
				public String TCONTENIDO_Pattern(){
				
					return "";
				
				}
				public String TCONTENIDO_OriginalDbColumnName(){
				
					return "TCONTENIDO_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
						this.CONTENIDO_ = (Object) dis.readObject();
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
						this.CONTENIDO_ = (Object) dis.readObject();
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO_);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO_);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_="+NOMBRE_);
		sb.append(",CONTENIDO_="+String.valueOf(CONTENIDO_));
		sb.append(",TCONTENIDO_="+TCONTENIDO_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row115Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class InsStruct implements routines.system.IPersistableRow<InsStruct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_;

				public String getNOMBRE_ () {
					return this.NOMBRE_;
				}

				public Boolean NOMBRE_IsNullable(){
				    return false;
				}
				public Boolean NOMBRE_IsKey(){
				    return false;
				}
				public Integer NOMBRE_Length(){
				    return 0;
				}
				public Integer NOMBRE_Precision(){
				    return 0;
				}
				public String NOMBRE_Default(){
				
					return null;
				
				}
				public String NOMBRE_Comment(){
				
				    return "";
				
				}
				public String NOMBRE_Pattern(){
				
					return "";
				
				}
				public String NOMBRE_OriginalDbColumnName(){
				
					return "NOMBRE_";
				
				}

				
			    public byte[] CONTENIDO_;

				public byte[] getCONTENIDO_ () {
					return this.CONTENIDO_;
				}

				public Boolean CONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean CONTENIDO_IsKey(){
				    return false;
				}
				public Integer CONTENIDO_Length(){
				    return 0;
				}
				public Integer CONTENIDO_Precision(){
				    return 0;
				}
				public String CONTENIDO_Default(){
				
					return null;
				
				}
				public String CONTENIDO_Comment(){
				
				    return "";
				
				}
				public String CONTENIDO_Pattern(){
				
					return "";
				
				}
				public String CONTENIDO_OriginalDbColumnName(){
				
					return "CONTENIDO_";
				
				}

				
			    public String TCONTENIDO_;

				public String getTCONTENIDO_ () {
					return this.TCONTENIDO_;
				}

				public Boolean TCONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean TCONTENIDO_IsKey(){
				    return false;
				}
				public Integer TCONTENIDO_Length(){
				    return 0;
				}
				public Integer TCONTENIDO_Precision(){
				    return 0;
				}
				public String TCONTENIDO_Default(){
				
					return null;
				
				}
				public String TCONTENIDO_Comment(){
				
				    return "";
				
				}
				public String TCONTENIDO_Pattern(){
				
					return "";
				
				}
				public String TCONTENIDO_OriginalDbColumnName(){
				
					return "TCONTENIDO_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private byte[] readByteArray(ObjectInputStream dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}
	
	private byte[] readByteArray(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}

    private void writeByteArray(byte[] byteArray, ObjectOutputStream dos) throws IOException{
		if(byteArray == null) {
            dos.writeInt(-1);
		} else {
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeByteArray(byte[] byteArray, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(byteArray == null) {
			marshaller.writeInt(-1);
		} else {
			marshaller.writeInt(byteArray.length);
			marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_="+NOMBRE_);
		sb.append(",CONTENIDO_="+String.valueOf(CONTENIDO_));
		sb.append(",TCONTENIDO_="+TCONTENIDO_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(InsStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row109Struct implements routines.system.IPersistableRow<row109Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String NOMBRE_;

				public String getNOMBRE_ () {
					return this.NOMBRE_;
				}

				public Boolean NOMBRE_IsNullable(){
				    return false;
				}
				public Boolean NOMBRE_IsKey(){
				    return false;
				}
				public Integer NOMBRE_Length(){
				    return null;
				}
				public Integer NOMBRE_Precision(){
				    return null;
				}
				public String NOMBRE_Default(){
				
					return null;
				
				}
				public String NOMBRE_Comment(){
				
				    return "";
				
				}
				public String NOMBRE_Pattern(){
				
					return "";
				
				}
				public String NOMBRE_OriginalDbColumnName(){
				
					return "NOMBRE_";
				
				}

				
			    public byte[] CONTENIDO_;

				public byte[] getCONTENIDO_ () {
					return this.CONTENIDO_;
				}

				public Boolean CONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean CONTENIDO_IsKey(){
				    return false;
				}
				public Integer CONTENIDO_Length(){
				    return null;
				}
				public Integer CONTENIDO_Precision(){
				    return null;
				}
				public String CONTENIDO_Default(){
				
					return null;
				
				}
				public String CONTENIDO_Comment(){
				
				    return "";
				
				}
				public String CONTENIDO_Pattern(){
				
					return "";
				
				}
				public String CONTENIDO_OriginalDbColumnName(){
				
					return "CONTENIDO_";
				
				}

				
			    public String TCONTENIDO_;

				public String getTCONTENIDO_ () {
					return this.TCONTENIDO_;
				}

				public Boolean TCONTENIDO_IsNullable(){
				    return false;
				}
				public Boolean TCONTENIDO_IsKey(){
				    return false;
				}
				public Integer TCONTENIDO_Length(){
				    return null;
				}
				public Integer TCONTENIDO_Precision(){
				    return null;
				}
				public String TCONTENIDO_Default(){
				
					return null;
				
				}
				public String TCONTENIDO_Comment(){
				
				    return "";
				
				}
				public String TCONTENIDO_Pattern(){
				
					return "";
				
				}
				public String TCONTENIDO_OriginalDbColumnName(){
				
					return "TCONTENIDO_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private byte[] readByteArray(ObjectInputStream dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}
	
	private byte[] readByteArray(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}

    private void writeByteArray(byte[] byteArray, ObjectOutputStream dos) throws IOException{
		if(byteArray == null) {
            dos.writeInt(-1);
		} else {
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeByteArray(byte[] byteArray, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(byteArray == null) {
			marshaller.writeInt(-1);
		} else {
			marshaller.writeInt(byteArray.length);
			marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NOMBRE_="+NOMBRE_);
		sb.append(",CONTENIDO_="+String.valueOf(CONTENIDO_));
		sb.append(",TCONTENIDO_="+TCONTENIDO_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row109Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row109Struct row109 = new row109Struct();
InsStruct Ins = new InsStruct();
row115Struct row115 = new row115Struct();






	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row115");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Ins");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{? = call " + "REP.InsSolicitudArchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row109");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
InsStruct Ins_tmp = new InsStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("Archivo almacenado satisfactoriamente  "+context.NombreArchivo);
row109.NOMBRE_ = context.NombreArchivo; 
row109.CONTENIDO_ = ArrayFromFile.ByteArrayFromFile(context.CarpetaTemp  + "/" + context.NombreArchivo + ".txt");
row109.TCONTENIDO_ = "txt";


 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row109"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

Ins = null;


// # Output table : 'Ins'
Ins_tmp.ID = null;
Ins_tmp.NOMBRE_ = row109.NOMBRE_ ;
Ins_tmp.CONTENIDO_ = row109.CONTENIDO_ ;
Ins_tmp.TCONTENIDO_ = row109.TCONTENIDO_ ;
Ins = Ins_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "Ins"
if(Ins != null) { 



	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Ins"
						
						);
					}
					

			// code for the argument 1 (ID) of type 'OUT NUMERIC'
					statement_tOracleSP_1.registerOutParameter(1, java.sql.Types.NUMERIC);
			// code for the argument 2 (NOMBRE_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_1.setString(2, Ins.NOMBRE_);
			// code for the argument 3 (CONTENIDO_) of type 'IN BLOB'
                        statement_tOracleSP_1.setObject(3, Ins.CONTENIDO_);
			// code for the argument 4 (TCONTENIDO_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_1.setString(4, Ins.TCONTENIDO_);
		statement_tOracleSP_1.execute();
		
									row115.ID = statement_tOracleSP_1.getBigDecimal(1);
									
									if (statement_tOracleSP_1.wasNull()) {
										row115.ID = null;
									}
									
								row115.NOMBRE_ = Ins.NOMBRE_;
								
								row115.CONTENIDO_ = Ins.CONTENIDO_;
								
								row115.TCONTENIDO_ = Ins.TCONTENIDO_;
								

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row115"
						
						);
					}
					

    context.ID = row115.ID;

    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */

} // End of branch "Ins"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row109");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Ins");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row115");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk22", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);



/**
 * [tJavaRow_8 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row111Struct implements routines.system.IPersistableRow<row111Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public BigDecimal Sarchivo_Id_;

				public BigDecimal getSarchivo_Id_ () {
					return this.Sarchivo_Id_;
				}

				public Boolean Sarchivo_Id_IsNullable(){
				    return false;
				}
				public Boolean Sarchivo_Id_IsKey(){
				    return false;
				}
				public Integer Sarchivo_Id_Length(){
				    return null;
				}
				public Integer Sarchivo_Id_Precision(){
				    return null;
				}
				public String Sarchivo_Id_Default(){
				
					return null;
				
				}
				public String Sarchivo_Id_Comment(){
				
				    return "";
				
				}
				public String Sarchivo_Id_Pattern(){
				
					return "";
				
				}
				public String Sarchivo_Id_OriginalDbColumnName(){
				
					return "Sarchivo_Id_";
				
				}

				
			    public BigDecimal ARCHIVOS_ID_;

				public BigDecimal getARCHIVOS_ID_ () {
					return this.ARCHIVOS_ID_;
				}

				public Boolean ARCHIVOS_ID_IsNullable(){
				    return false;
				}
				public Boolean ARCHIVOS_ID_IsKey(){
				    return false;
				}
				public Integer ARCHIVOS_ID_Length(){
				    return null;
				}
				public Integer ARCHIVOS_ID_Precision(){
				    return null;
				}
				public String ARCHIVOS_ID_Default(){
				
					return null;
				
				}
				public String ARCHIVOS_ID_Comment(){
				
				    return "";
				
				}
				public String ARCHIVOS_ID_Pattern(){
				
					return "";
				
				}
				public String ARCHIVOS_ID_OriginalDbColumnName(){
				
					return "ARCHIVOS_ID_";
				
				}

				
			    public java.util.Date FINICIAL_;

				public java.util.Date getFINICIAL_ () {
					return this.FINICIAL_;
				}

				public Boolean FINICIAL_IsNullable(){
				    return false;
				}
				public Boolean FINICIAL_IsKey(){
				    return false;
				}
				public Integer FINICIAL_Length(){
				    return null;
				}
				public Integer FINICIAL_Precision(){
				    return null;
				}
				public String FINICIAL_Default(){
				
					return null;
				
				}
				public String FINICIAL_Comment(){
				
				    return "";
				
				}
				public String FINICIAL_Pattern(){
				
					return "";
				
				}
				public String FINICIAL_OriginalDbColumnName(){
				
					return "FINICIAL_";
				
				}

				
			    public java.util.Date FFINAL_;

				public java.util.Date getFFINAL_ () {
					return this.FFINAL_;
				}

				public Boolean FFINAL_IsNullable(){
				    return false;
				}
				public Boolean FFINAL_IsKey(){
				    return false;
				}
				public Integer FFINAL_Length(){
				    return null;
				}
				public Integer FFINAL_Precision(){
				    return null;
				}
				public String FFINAL_Default(){
				
					return null;
				
				}
				public String FFINAL_Comment(){
				
				    return "";
				
				}
				public String FFINAL_Pattern(){
				
					return "";
				
				}
				public String FFINAL_OriginalDbColumnName(){
				
					return "FFINAL_";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Sarchivo_Id_="+String.valueOf(Sarchivo_Id_));
		sb.append(",ARCHIVOS_ID_="+String.valueOf(ARCHIVOS_ID_));
		sb.append(",FINICIAL_="+String.valueOf(FINICIAL_));
		sb.append(",FFINAL_="+String.valueOf(FFINAL_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row111Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row111Struct row111 = new row111Struct();




	
	/**
	 * [tOracleSP_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_2", false);
		start_Hash.put("tOracleSP_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row111");
					}
				
		int tos_count_tOracleSP_2 = 0;
		

	java.sql.Connection connection_tOracleSP_2 = null;
	connection_tOracleSP_2 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_2 = connection_tOracleSP_2.prepareCall("{call " + "REP.UpdEstadoSolicitudArchivo" + "(?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_2;
String tmpString_tOracleSP_2;

 



/**
 * [tOracleSP_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row111.Sarchivo_Id_ = context.SolicitudId;
    	            	        	            	
    	            		row111.ARCHIVOS_ID_ = context.ID;
    	            	        	            	
    	            		row111.FINICIAL_ = context.FINICIO;
    	            	        	            	
    	            		row111.FFINAL_ = new Date();
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_2 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row111"
						
						);
					}
					

			// code for the argument 1 (Sarchivo_Id_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_2.setBigDecimal(1, row111.Sarchivo_Id_);
			// code for the argument 2 (ARCHIVOS_ID_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_2.setBigDecimal(2, row111.ARCHIVOS_ID_);
			// code for the argument 3 (FINICIAL_) of type 'IN TIMESTAMP'
    					statement_tOracleSP_2.setTimestamp(3, new java.sql.Timestamp(row111.FINICIAL_.getTime()));
    					
			// code for the argument 4 (FFINAL_) of type 'IN TIMESTAMP'
    					statement_tOracleSP_2.setTimestamp(4, new java.sql.Timestamp(row111.FFINAL_.getTime()));
    					
		statement_tOracleSP_2.execute();
		

 


	tos_count_tOracleSP_2++;

/**
 * [tOracleSP_2 main ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tOracleSP_2 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	


	statement_tOracleSP_2.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row111");
			  	}
			  	
 

ok_Hash.put("tOracleSP_2", true);
end_Hash.put("tOracleSP_2", System.currentTimeMillis());




/**
 * [tOracleSP_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tOracleSP_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableComparableLookupRow<row2Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V14;

				public String getV14 () {
					return this.V14;
				}

				public Boolean V14IsNullable(){
				    return true;
				}
				public Boolean V14IsKey(){
				    return false;
				}
				public Integer V14Length(){
				    return 1;
				}
				public Integer V14Precision(){
				    return 0;
				}
				public String V14Default(){
				
					return null;
				
				}
				public String V14Comment(){
				
				    return "";
				
				}
				public String V14Pattern(){
				
					return "";
				
				}
				public String V14OriginalDbColumnName(){
				
					return "V14";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row2Struct other = (row2Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row2Struct other) {

		other.V14 = this.V14;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row2Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V14 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V14 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V14, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V14, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V14="+V14);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tAdvancedHash_row2 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row2", false);
		start_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tAdvancedHash_row2 = 0;
		

			   		// connection name:row2
			   		// source node:tOracleInput_2 - inputs:(after_tOracleInput_1) outputs:(row2,row2) | target node:tAdvancedHash_row2 - inputs:(row2) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row2 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row2Struct>getLookup(matchingModeEnum_row2);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row2", tHash_Lookup_row2);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row2 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT    V14\n        , PERSONAS_ID\nFROM ( \n    SELECT    '1' AS V14\n            , PMA.PERSONAS_ID\n            , R"
+"OW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_PYP PYP\n    INNER JOIN HCL_VALOR"
+"ACIONES VAL           ON VAL.PYP_ID = PYP.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA   ON PA.ID = VAL.PROCESOSASIST"
+"ENCIALES_ID \n    INNER JOIN PMP_MATERNAS PMA               ON PMA.PERSONAS_ID = PA.PERSONAS_ID\n    INNER JOIN GEN_PERS"
+"ONAS GP                ON GP.ID = PMA.PERSONAS_ID \n    LEFT JOIN PMP_DESENLACE PD                ON PD.MATERNAS_ID = PM"
+"A.ID\n                                              AND PD.ESTREGISTRO_ID = 1 \n    LEFT JOIN HCL_PARTOGRAMA HPT        "
+"      ON HPT.PROCESOSASISTENCIALES_ID = PA.ID\n                                              AND HPT.ESTREGISTRO_ID = 1 "
+" \n    WHERE PYP.SIGLA = 'PMP'\n      AND PD.ID IS NULL \n      AND HPT.ID IS NULL\n      AND VAL.ESTREGISTRO_ID = 1\n  "
+"    AND PA.ESTREGISTRO_ID = 1\n      AND PMA.ESTREGISTRO_ID = 1\n      AND TRUNC( MONTHS_BETWEEN ( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12 ) BETWEEN 10 AND 59\n      AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row2.V14 = null;
							} else {
	                         		
        	row2.V14 = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row2.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(2) != null) {
						row2.PERSONAS_ID = rs_tOracleInput_2.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					


			   
			   

					row2Struct row2_HashRow = new row2Struct();
		   	   	   
				
				row2_HashRow.V14 = row2.V14;
				
				row2_HashRow.PERSONAS_ID = row2.PERSONAS_ID;
				
			tHash_Lookup_row2.put(row2_HashRow);
			
            




 


	tos_count_tAdvancedHash_row2++;

/**
 * [tAdvancedHash_row2 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

tHash_Lookup_row2.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row2", true);
end_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());




/**
 * [tAdvancedHash_row2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableComparableLookupRow<row3Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V15;

				public String getV15 () {
					return this.V15;
				}

				public Boolean V15IsNullable(){
				    return true;
				}
				public Boolean V15IsKey(){
				    return false;
				}
				public Integer V15Length(){
				    return null;
				}
				public Integer V15Precision(){
				    return null;
				}
				public String V15Default(){
				
					return null;
				
				}
				public String V15Comment(){
				
				    return "";
				
				}
				public String V15Pattern(){
				
					return "";
				
				}
				public String V15OriginalDbColumnName(){
				
					return "V15";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.V15 = this.V15;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V15 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V15 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V15, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V15, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V15="+V15);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tAdvancedHash_row3 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row3", false);
		start_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tAdvancedHash_row3 = 0;
		

			   		// connection name:row3
			   		// source node:tOracleInput_3 - inputs:(after_tOracleInput_1) outputs:(row3,row3) | target node:tAdvancedHash_row3 - inputs:(row3) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row3 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row3Struct>getLookup(matchingModeEnum_row3);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row3", tHash_Lookup_row3);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row3 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_3.setFetchSize(1000);


		    String dbquery_tOracleInput_3 = "SELECT    V15\n        , PERSONAS_ID\nFROM ( \n    SELECT    '1' AS V15\n            , PA.PERSONAS_ID\n            , RO"
+"W_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM  GEN_CIE10 CIE\n    INNER JOIN HCL_DIA"
+"GNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID \n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = DIAG.PROCESOSASISTENCI"
+"ALES_ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = GP.SEXO_ID "
+"\n    WHERE CIE.CODIGO = 'O981'\n      AND SEX.SIGLA = 'F'\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_"
+"ID = 1\n      AND TRUNC( MONTHS_BETWEEN ( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12 ) BETWEEN 10 AND 59\n      AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1  \nUNION ALL\nSELECT    V15\n        , PERSONAS_ID\nFROM ( \n    SELECT    '2' AS V15\n"
+"            , PROC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC"
+") R\n    FROM HCL_NEONATOS NEO1\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.PERSONAS_ID = NEO1.NEONATO\n    I"
+"NNER JOIN GEN_PERSONAS GP ON GP.ID=NEO1.NEONATO\n    INNER JOIN HCL_DIAGNOSTICOS DIAG ON DIAG.PROCESOSASISTENCIALES_ID ="
+" PROC.ID\n    INNER JOIN GEN_CIE10 CIE ON CIE.ID = DIAG.CIE10_ID \n    WHERE CIE.CODIGO IN ('A500','A501','A502','A503',"
+"'A504','A505','A506','A507','A509')\n     AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                         AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n     AND MONTHS_BETWEEN( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO ) < 3 \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row3.V15 = null;
							} else {
	                         		
        	row3.V15 = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row3.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(2) != null) {
						row3.PERSONAS_ID = rs_tOracleInput_3.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


			   
			   

					row3Struct row3_HashRow = new row3Struct();
		   	   	   
				
				row3_HashRow.V15 = row3.V15;
				
				row3_HashRow.PERSONAS_ID = row3.PERSONAS_ID;
				
			tHash_Lookup_row3.put(row3_HashRow);
			
            




 


	tos_count_tAdvancedHash_row3++;

/**
 * [tAdvancedHash_row3 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

tHash_Lookup_row3.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row3", true);
end_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());




/**
 * [tAdvancedHash_row3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableComparableLookupRow<row4Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V16;

				public String getV16 () {
					return this.V16;
				}

				public Boolean V16IsNullable(){
				    return true;
				}
				public Boolean V16IsKey(){
				    return false;
				}
				public Integer V16Length(){
				    return null;
				}
				public Integer V16Precision(){
				    return null;
				}
				public String V16Default(){
				
					return null;
				
				}
				public String V16Comment(){
				
				    return "";
				
				}
				public String V16Pattern(){
				
					return "";
				
				}
				public String V16OriginalDbColumnName(){
				
					return "V16";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row4Struct other = (row4Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row4Struct other) {

		other.V16 = this.V16;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row4Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V16 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V16 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V16, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V16, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V16="+V16);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tAdvancedHash_row4 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row4", false);
		start_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tAdvancedHash_row4 = 0;
		

			   		// connection name:row4
			   		// source node:tOracleInput_4 - inputs:(after_tOracleInput_1) outputs:(row4,row4) | target node:tAdvancedHash_row4 - inputs:(row4) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row4 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row4Struct> tHash_Lookup_row4 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row4Struct>getLookup(matchingModeEnum_row4);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row4", tHash_Lookup_row4);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row4 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_4.setFetchSize(1000);


		    String dbquery_tOracleInput_4 = "SELECT    v16\n        , PERSONAS_ID \nFROM ( \n    SELECT    '1' AS v16\n            , PER.ID AS PERSONAS_ID\n        "
+"    , ROW_NUMBER() OVER (PARTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN HCL_DI"
+"AGNOSTICOS DIAG          ON DIAG.CIE10_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROC"
+"ESOSASISTENCIALES_ID\n    INNER JOIN GEN_PERSONAS PER               ON PER.ID = PROC.PERSONAS_ID\n    INNER JOIN GEN_SEX"
+"OS SEX                  ON SEX.ID = PER.SEXO_ID\n    WHERE CIE.CODIGO IN  ('O16X','O13X','O109','O104','O100','I10X') \n"
+"      AND SEX.SIGLA = 'F'\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND PER.ESTREGIST"
+"RO_ID = 1\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row4.V16 = null;
							} else {
	                         		
        	row4.V16 = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row4.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(2) != null) {
						row4.PERSONAS_ID = rs_tOracleInput_4.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


			   
			   

					row4Struct row4_HashRow = new row4Struct();
		   	   	   
				
				row4_HashRow.V16 = row4.V16;
				
				row4_HashRow.PERSONAS_ID = row4.PERSONAS_ID;
				
			tHash_Lookup_row4.put(row4_HashRow);
			
            




 


	tos_count_tAdvancedHash_row4++;

/**
 * [tAdvancedHash_row4 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row4 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());




/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

tHash_Lookup_row4.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row4", true);
end_Hash.put("tAdvancedHash_row4", System.currentTimeMillis());




/**
 * [tAdvancedHash_row4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row4 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row4";
	
	

 



/**
 * [tAdvancedHash_row4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableComparableLookupRow<row5Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V17;

				public String getV17 () {
					return this.V17;
				}

				public Boolean V17IsNullable(){
				    return true;
				}
				public Boolean V17IsKey(){
				    return false;
				}
				public Integer V17Length(){
				    return null;
				}
				public Integer V17Precision(){
				    return null;
				}
				public String V17Default(){
				
					return null;
				
				}
				public String V17Comment(){
				
				    return "";
				
				}
				public String V17Pattern(){
				
					return "";
				
				}
				public String V17OriginalDbColumnName(){
				
					return "V17";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row5Struct other = (row5Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row5Struct other) {

		other.V17 = this.V17;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row5Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V17 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V17 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V17, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V17, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V17="+V17);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tAdvancedHash_row5 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row5", false);
		start_Hash.put("tAdvancedHash_row5", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tAdvancedHash_row5 = 0;
		

			   		// connection name:row5
			   		// source node:tOracleInput_5 - inputs:(after_tOracleInput_1) outputs:(row5,row5) | target node:tAdvancedHash_row5 - inputs:(row5) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row5 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row5Struct> tHash_Lookup_row5 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row5Struct>getLookup(matchingModeEnum_row5);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row5", tHash_Lookup_row5);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row5 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_5.setFetchSize(1000);


		    String dbquery_tOracleInput_5 = "SELECT    V17\n        , PERSONAS_ID\nFROM ( \n    SELECT    '1' AS v17\n            , PROC.PERSONAS_ID\n            , "
+"ROW_NUMBER() OVER (PARTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN HCL_DIAGNOST"
+"ICOS DIAG ON  DIAG.CIE10_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIA"
+"LES_ID \n    INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n    WHERE CIE.CODIGO IN ('E009','E002','E001','E0"
+"00','E030', 'E031')\n      AND (MONTHS_BETWEEN(DIAG.FECHA,PER.FECHA_NACIMIENTO))<37\n      AND PROC.FFINAL BETWEEN TO_DA"
+"TE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row5.V17 = null;
							} else {
	                         		
        	row5.V17 = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row5.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(2) != null) {
						row5.PERSONAS_ID = rs_tOracleInput_5.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


			   
			   

					row5Struct row5_HashRow = new row5Struct();
		   	   	   
				
				row5_HashRow.V17 = row5.V17;
				
				row5_HashRow.PERSONAS_ID = row5.PERSONAS_ID;
				
			tHash_Lookup_row5.put(row5_HashRow);
			
            




 


	tos_count_tAdvancedHash_row5++;

/**
 * [tAdvancedHash_row5 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row5 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());




/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

tHash_Lookup_row5.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row5", true);
end_Hash.put("tAdvancedHash_row5", System.currentTimeMillis());




/**
 * [tAdvancedHash_row5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row5 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row5";
	
	

 



/**
 * [tAdvancedHash_row5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableComparableLookupRow<row6Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V18;

				public String getV18 () {
					return this.V18;
				}

				public Boolean V18IsNullable(){
				    return true;
				}
				public Boolean V18IsKey(){
				    return false;
				}
				public Integer V18Length(){
				    return null;
				}
				public Integer V18Precision(){
				    return null;
				}
				public String V18Default(){
				
					return null;
				
				}
				public String V18Comment(){
				
				    return "";
				
				}
				public String V18Pattern(){
				
					return "";
				
				}
				public String V18OriginalDbColumnName(){
				
					return "V18";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.V18 = this.V18;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V18 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V18 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V18, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V18, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V18="+V18);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();




	
	/**
	 * [tAdvancedHash_row6 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row6", false);
		start_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tAdvancedHash_row6 = 0;
		

			   		// connection name:row6
			   		// source node:tOracleInput_6 - inputs:(after_tOracleInput_1) outputs:(row6,row6) | target node:tAdvancedHash_row6 - inputs:(row6) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row6 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row6Struct>getLookup(matchingModeEnum_row6);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row6", tHash_Lookup_row6);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row6 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_6.setFetchSize(1000);


		    String dbquery_tOracleInput_6 = "SELECT    V18\n        , PERSONAS_ID\nFROM ( \n    SELECT    '1' AS V18\n            , PA.PERSONAS_ID \n            , R"
+"OW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CIE10 GC\n    INNER JOIN HCL_DIAG"
+"NOSTICOS HD ON HD.CIE10_ID = GC.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HD.PROCESOSASISTENCIALES_ID\n"
+"    WHERE regexp_like (GC.codigo,'J0*')\n      AND HD.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND TRU"
+"NC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row6.V18 = null;
							} else {
	                         		
        	row6.V18 = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row6.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(2) != null) {
						row6.PERSONAS_ID = rs_tOracleInput_6.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					


			   
			   

					row6Struct row6_HashRow = new row6Struct();
		   	   	   
				
				row6_HashRow.V18 = row6.V18;
				
				row6_HashRow.PERSONAS_ID = row6.PERSONAS_ID;
				
			tHash_Lookup_row6.put(row6_HashRow);
			
            




 


	tos_count_tAdvancedHash_row6++;

/**
 * [tAdvancedHash_row6 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());




/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

tHash_Lookup_row6.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row6", true);
end_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());




/**
 * [tAdvancedHash_row6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V19;

				public String getV19 () {
					return this.V19;
				}

				public Boolean V19IsNullable(){
				    return true;
				}
				public Boolean V19IsKey(){
				    return false;
				}
				public Integer V19Length(){
				    return 0;
				}
				public Integer V19Precision(){
				    return 0;
				}
				public String V19Default(){
				
					return null;
				
				}
				public String V19Comment(){
				
				    return "";
				
				}
				public String V19Pattern(){
				
					return "";
				
				}
				public String V19OriginalDbColumnName(){
				
					return "V19";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.V19 = this.V19;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V19 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V19 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V19, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V19, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V19="+V19);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tOracleInput_7 - inputs:(after_tOracleInput_1) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_7.setFetchSize(1000);


		    String dbquery_tOracleInput_7 = "SELECT\nDISTINCT\n'21' AS V19,\nPER.ID AS PERSONAS_ID\nFROM HCL_DIAGNOSTICOS DIAG \nINNER JOIN HCL_PROCESOSASISTENCIALE"
+"S PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID\nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN "
+"GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID\nINNER JOIN GEN_CIE10 CIE ON  DIAG.CIE10_ID = CIE.ID\nWHERE CIE.CODIGO LIKE 'A15%'"
+" OR CIE.CODIGO LIKE 'A16%' OR CIE.CODIGO LIKE 'A17%'  OR CIE.CODIGO LIKE 'A18%'  OR CIE.CODIGO LIKE 'A19%'\nAND PROC.FFI"
+"NAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n													 AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row7.V19 = null;
							} else {
	                         		
        	row7.V19 = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row7.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(2) != null) {
						row7.PERSONAS_ID = rs_tOracleInput_7.getBigDecimal(2);
					} else {
				
						row7.PERSONAS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.V19 = row7.V19;
				
				row7_HashRow.PERSONAS_ID = row7.PERSONAS_ID;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V20;

				public String getV20 () {
					return this.V20;
				}

				public Boolean V20IsNullable(){
				    return true;
				}
				public Boolean V20IsKey(){
				    return false;
				}
				public Integer V20Length(){
				    return null;
				}
				public Integer V20Precision(){
				    return null;
				}
				public String V20Default(){
				
					return null;
				
				}
				public String V20Comment(){
				
				    return "";
				
				}
				public String V20Pattern(){
				
					return "";
				
				}
				public String V20OriginalDbColumnName(){
				
					return "V20";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.V20 = this.V20;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V20 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V20 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V20, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V20, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V20="+V20);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tOracleInput_8 - inputs:(after_tOracleInput_1) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				conn_tOracleInput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_8 = false;
				boolean isConnectionWrapped_tOracleInput_8 = !(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_8 = null;
                if (isConnectionWrapped_tOracleInput_8) {
					unwrappedOraConn_tOracleInput_8 = conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_8 != null) {
                        isTimeZoneNull_tOracleInput_8 = (unwrappedOraConn_tOracleInput_8.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_8 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_8).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_8) {
					java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_8.next()) {
						sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_8 && unwrappedOraConn_tOracleInput_8 != null) {
                        unwrappedOraConn_tOracleInput_8.setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_8.setFetchSize(1000);


		    String dbquery_tOracleInput_8 = "SELECT    V20\n        , PERSONAS_ID \nFROM ( \n    SELECT    CASE \n                WHEN CIE.CODIGO IN ('A305','A304',"
+"'A303') \n                THEN '2'\n                WHEN CIE.CODIGO IN ('A302','A301','A300') \n                THEN '1'"
+"\n              END AS  v20\n            , PA.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID"
+" ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CIE10 CIE \n    INNER JOIN HCL_DIAGNOSTICOS HD ON HD.CIE10_ID = CIE.ID\n    IN"
+"NER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HD.PROCESOSASISTENCIALES_ID \n    WHERE CIE.CODIGO IN ('A309','A308','A"
+"305','A304','A303','A302','A301','A300')\n      AND HD.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND PA"
+".FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row8.V20 = null;
							} else {
	                         		
        	row8.V20 = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row8.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(2) != null) {
						row8.PERSONAS_ID = rs_tOracleInput_8.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.V20 = row8.V20;
				
				row8_HashRow.PERSONAS_ID = row8.PERSONAS_ID;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());




/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V21;

				public String getV21 () {
					return this.V21;
				}

				public Boolean V21IsNullable(){
				    return true;
				}
				public Boolean V21IsKey(){
				    return false;
				}
				public Integer V21Length(){
				    return 1;
				}
				public Integer V21Precision(){
				    return 0;
				}
				public String V21Default(){
				
					return null;
				
				}
				public String V21Comment(){
				
				    return "";
				
				}
				public String V21Pattern(){
				
					return "";
				
				}
				public String V21OriginalDbColumnName(){
				
					return "V21";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.V21 = this.V21;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V21 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V21 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V21, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V21, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V21="+V21);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tAdvancedHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row9", false);
		start_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tAdvancedHash_row9 = 0;
		

			   		// connection name:row9
			   		// source node:tOracleInput_9 - inputs:(after_tOracleInput_1) outputs:(row9,row9) | target node:tAdvancedHash_row9 - inputs:(row9) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row9 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row9Struct> tHash_Lookup_row9 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row9Struct>getLookup(matchingModeEnum_row9);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row9", tHash_Lookup_row9);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row9 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_9.setFetchSize(1000);


		    String dbquery_tOracleInput_9 = "SELECT   CASE \n            WHEN DENUSTRICION_ID IS NOT NULL \n            THEN '2'\n            WHEN OBSERIDAD_ID IS N"
+"OT NULL \n              OR IMC_ID IS NOT NULL\n            THEN '1'\n         END AS v21\n	   , PERSONAS_ID 	\nFROM ( \n"
+"    SELECT    HP.PERSONAS_ID                                                  																																			AS PERS"
+"ONAS_ID  \n           ,  GC_DESNUTRICION.ID                                                   																										"
+"									AS DENUSTRICION_ID\n           ,  GC_OBESIDAD.ID                                                             		"
+"																																	AS OBSERIDAD_ID\n           ,  GH.ID                                                   "
+"                                  																																				AS IMC_ID \n           ,  ROW_NUMBER() OVER (PARTI"
+"TION BY HP.PERSONAS_ID ORDER BY HD.PROCESOSASISTENCIALES_ID DESC) AS R\n    FROM HCL_DIAGNOSTICOS HD\n    INNER JOIN HCL"
+"_PROCESOSASISTENCIALES HP ON HP.ID = HD.PROCESOSASISTENCIALES_ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID = HP.PERSONAS_"
+"ID \n    LEFT JOIN GEN_CIE10 GC_DESNUTRICION     ON GC_DESNUTRICION.ID = HD.CIE10_ID \n                                 "
+"          															AND GC_DESNUTRICION.CODIGO IN ( 'E40X', 'E41X', 'E42X', 'E43X', 'E440', 'E441','E45X', 'E46X')"
+"\n    LEFT JOIN GEN_CIE10 GC_OBESIDAD         		ON GC_OBESIDAD.ID = HD.CIE10_ID \n                                       "
+"    															AND GC_OBESIDAD.CODIGO IN ( 'E669', 'E668', 'E662', 'E661', 'E660')\n                                "
+"           															AND TRUNC ( MONTHS_BETWEEN ( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12 ) < 19 \n    LEFT JOIN GEN_MSIGNOSVITALES GM         		ON GM.PROCESOSASISTENC"
+"IALES_ID = HP.ID \n                                           															AND GM.ESTREGISTRO_ID = 1                  "
+"                    \n    LEFT JOIN GEN_HSIGNOSVITALES GH         		ON GH.MSIGNOSVITALES_ID = GM.ID\n                   "
+"                        															AND GH.TSIGNOSVITALES_ID = ( SELECT ID FROM GEN_TSIGNOSVITALES WHERE SIGLA = 'IMC"
+"' )\n                                           															AND GH.ESTREGISTRO_ID = 1\n                              "
+"             															AND GH.VALOR > = 30 \n                                           															AND TRUNC ( "
+"MONTHS_BETWEEN ( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12 ) > 18                            \n    WHERE HP.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        								  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND ( GC_DESNUTRICION.ID IS NOT NULL \n                   OR GC_OBESIDAD.ID IS NOT NULL \n  "
+"                 OR GH.ID IS NOT NULL )\n      AND HD.ESTREGISTRO_ID = 1\n      AND HP.ESTREGISTRO_ID = 1\n      AND GP."
+"ESTREGISTRO_ID = 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row9.V21 = null;
							} else {
	                         		
        	row9.V21 = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row9.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(2) != null) {
						row9.PERSONAS_ID = rs_tOracleInput_9.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


			   
			   

					row9Struct row9_HashRow = new row9Struct();
		   	   	   
				
				row9_HashRow.V21 = row9.V21;
				
				row9_HashRow.PERSONAS_ID = row9.PERSONAS_ID;
				
			tHash_Lookup_row9.put(row9_HashRow);
			
            




 


	tos_count_tAdvancedHash_row9++;

/**
 * [tAdvancedHash_row9 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());




/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

tHash_Lookup_row9.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row9", true);
end_Hash.put("tAdvancedHash_row9", System.currentTimeMillis());




/**
 * [tAdvancedHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row9";
	
	

 



/**
 * [tAdvancedHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V22;

				public String getV22 () {
					return this.V22;
				}

				public Boolean V22IsNullable(){
				    return true;
				}
				public Boolean V22IsKey(){
				    return false;
				}
				public Integer V22Length(){
				    return 1;
				}
				public Integer V22Precision(){
				    return 0;
				}
				public String V22Default(){
				
					return null;
				
				}
				public String V22Comment(){
				
				    return "";
				
				}
				public String V22Pattern(){
				
					return "";
				
				}
				public String V22OriginalDbColumnName(){
				
					return "V22";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.V22 = this.V22;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V22 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V22 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V22, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V22, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V22="+V22);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tOracleInput_10 - inputs:(after_tOracleInput_1) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_10.setFetchSize(1000);


		    String dbquery_tOracleInput_10 = "SELECT    V22\n        , PERSONAS_ID\nFROM ( \n    SELECT    CASE \n                WHEN SEX.SIGLA = 'F' AND TRUNC((TO_"
+"DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365) > 18 \n                THEN '1'\n                WHEN((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365) < 18 \n                THEN '2'\n              END AS v22\n            , PR"
+"OC.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n    FROM HCL_TANTECE"
+"DENTES TP\n    INNER JOIN HCL_TANTECEDENTES TA ON TA.PADRE_ID = TP.ID \n    INNER JOIN HCL_ANTECEDENTES AN ON AN.TANTECE"
+"DENTE_ID = TA.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = AN.PROCESOSASISTENCIALES_ID \n    INNER JOI"
+"N GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID\n    WHERE TP.SIGL"
+"A = 'AVG'\n      AND AN.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND ( ( SEX.SIGLA = 'F' AND TRUNC(("
+"TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365)>18 ) \n            OR TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365)<18 )\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row10.V22 = null;
							} else {
	                         		
        	row10.V22 = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 2) {
								row10.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(2) != null) {
						row10.PERSONAS_ID = rs_tOracleInput_10.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.V22 = row10.V22;
				
				row10_HashRow.PERSONAS_ID = row10.PERSONAS_ID;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());




/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V23;

				public String getV23 () {
					return this.V23;
				}

				public Boolean V23IsNullable(){
				    return true;
				}
				public Boolean V23IsKey(){
				    return false;
				}
				public Integer V23Length(){
				    return 1;
				}
				public Integer V23Precision(){
				    return 0;
				}
				public String V23Default(){
				
					return null;
				
				}
				public String V23Comment(){
				
				    return "";
				
				}
				public String V23Pattern(){
				
					return "";
				
				}
				public String V23OriginalDbColumnName(){
				
					return "V23";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.V23 = this.V23;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V23 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V23 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V23, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V23, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V23="+V23);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tOracleInput_11 - inputs:(after_tOracleInput_1) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_11.setFetchSize(1000);


		    String dbquery_tOracleInput_11 = "SELECT \n  DISTINCT \n  '1' AS v23,\n  PROC.PERSONAS_ID\nFROM ( SELECT  TA.ID FROM HCL_TANTECEDENTES TA WHERE TA.SIGLA "
+"IN ('AVGABS','AVGACS','AVGV','AVGEN','AVGESC','AVGTP','AVGVSCA')) TA\nINNER JOIN HCL_ANTECEDENTES AN ON AN.TANTECEDENTE_"
+"ID = TA.ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = AN.PROCESOSASISTENCIALES_ID\nINNER JOIN GEN_PERSONAS "
+"PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID\nWHERE PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row11.V23 = null;
							} else {
	                         		
        	row11.V23 = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row11.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(2) != null) {
						row11.PERSONAS_ID = rs_tOracleInput_11.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.V23 = row11.V23;
				
				row11_HashRow.PERSONAS_ID = row11.PERSONAS_ID;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());




/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableComparableLookupRow<row12Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V24;

				public String getV24 () {
					return this.V24;
				}

				public Boolean V24IsNullable(){
				    return true;
				}
				public Boolean V24IsKey(){
				    return false;
				}
				public Integer V24Length(){
				    return null;
				}
				public Integer V24Precision(){
				    return null;
				}
				public String V24Default(){
				
					return null;
				
				}
				public String V24Comment(){
				
				    return "";
				
				}
				public String V24Pattern(){
				
					return "";
				
				}
				public String V24OriginalDbColumnName(){
				
					return "V24";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.V24 = this.V24;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V24 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V24 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V24, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V24, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V24="+V24);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_58Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_58_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tAdvancedHash_row12 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row12", false);
		start_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tAdvancedHash_row12 = 0;
		

			   		// connection name:row12
			   		// source node:tOracleInput_58 - inputs:(after_tOracleInput_1) outputs:(row12,row12) | target node:tAdvancedHash_row12 - inputs:(row12) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row12 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row12Struct>getLookup(matchingModeEnum_row12);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row12", tHash_Lookup_row12);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row12 begin ] stop
 */



	
	/**
	 * [tOracleInput_58 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_58", false);
		start_Hash.put("tOracleInput_58", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_58";
	
	
		int tos_count_tOracleInput_58 = 0;
		
	


	
		    int nb_line_tOracleInput_58 = 0;
		    java.sql.Connection conn_tOracleInput_58 = null;
				conn_tOracleInput_58 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_58 = false;
				boolean isConnectionWrapped_tOracleInput_58 = !(conn_tOracleInput_58 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_58.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_58 = null;
                if (isConnectionWrapped_tOracleInput_58) {
					unwrappedOraConn_tOracleInput_58 = conn_tOracleInput_58.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_58 != null) {
                        isTimeZoneNull_tOracleInput_58 = (unwrappedOraConn_tOracleInput_58.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_58 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_58).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_58) {
					java.sql.Statement stmtGetTZ_tOracleInput_58 = conn_tOracleInput_58.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_58 = stmtGetTZ_tOracleInput_58.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_58 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_58.next()) {
						sessionTimezone_tOracleInput_58 = rsGetTZ_tOracleInput_58.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_58 && unwrappedOraConn_tOracleInput_58 != null) {
                        unwrappedOraConn_tOracleInput_58.setSessionTimeZone(sessionTimezone_tOracleInput_58);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_58).setSessionTimeZone(sessionTimezone_tOracleInput_58);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_58 = conn_tOracleInput_58.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_58.setFetchSize(1000);


		    String dbquery_tOracleInput_58 = "SELECT    V24 \n        , PERSONAS_ID \nFROM (         \n      SELECT    '1' v24\n              , PROC.PERSONAS_ID \n  "
+"            , ROW_NUMBER() OVER (PARTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n      FROM GEN_CIE10 CIE \n      INNE"
+"R JOIN HCL_DIAGNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID \n      INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DI"
+"AG.PROCESOSASISTENCIALES_ID\n      INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n      INNER JOIN GEN_SEXOS "
+"SEX ON SEX.ID = PER.SEXO_ID\n      WHERE DIAG.ESTREGISTRO_ID = 1\n        AND PROC.ESTREGISTRO_ID = 1\n        AND PROC."
+"FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                            AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n        AND CIE.CODIGO IN ( 'A500', 'A501', 'A502', 'A504', 'A505', 'A506', 'A507',  'A503',\n    "
+"                        'A509', 'A510', 'A511', 'A512', 'A513', 'A514', 'A515', \n                            'A519', 'A"
+"52X', 'A520', 'A521', 'A522', 'A523', 'A527',\n                            'A528', 'A529', 'A53X', 'A530', 'A539', 'A65X"
+"', 'I980',\n                            'M031', 'N290', 'N742', 'O981', 'R762', 'A54X', 'A540',\n                       "
+"     'A541', 'A542', 'A543', 'A544', 'A545', 'A546', 'A548',\n                            'A549', 'K671', 'M730', 'M731'"
+", 'N743', 'B20X', 'B200',\n                            'B201', 'B202', 'B203', 'B204', 'B205', 'B206', 'B207',\n        "
+"                    'B208', 'B209', 'B21X', 'B210', 'B211', 'B212', 'B213',\n                            'B217', 'B218',"
+" 'B219', 'B22X', 'B220', 'B221', 'B222',\n                            'B227', 'B23X', 'B230', 'B231', 'B232', 'B238', 'B"
+"24X',\n                            'F024', 'R75X', 'Z114', 'Z206', 'Z21X', 'Z717', 'Z830',\n                            "
+"'A60X', 'A600', 'A601', 'A609', 'B00X', 'B009', 'B270',\n                            'A55X', 'A56X', 'A560', 'A561', 'A5"
+"62', 'A563', 'A564',\n                            'A568', 'A74X', 'A740', 'A748', 'A749', 'J160', 'K670',\n             "
+"               'N744', 'JI7X', 'B16X', 'B160', 'B161', 'B162', 'B169',\n                            'B170', 'B251', 'A63"
+"0', 'A57X', 'A59X', 'A590', 'A598',\n                            'A599', 'A70X', 'P231', 'A71X', 'A710', 'A711', 'A719',"
+"\n                            'B940', 'B373', 'B374'  )\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_58_QUERY",dbquery_tOracleInput_58);

		    java.sql.ResultSet rs_tOracleInput_58 = null;

		    try {
		    	rs_tOracleInput_58 = stmt_tOracleInput_58.executeQuery(dbquery_tOracleInput_58);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_58 = rs_tOracleInput_58.getMetaData();
		    	int colQtyInRs_tOracleInput_58 = rsmd_tOracleInput_58.getColumnCount();

		    String tmpContent_tOracleInput_58 = null;
		    
		    
		    while (rs_tOracleInput_58.next()) {
		        nb_line_tOracleInput_58++;
		        
							if(colQtyInRs_tOracleInput_58 < 1) {
								row12.V24 = null;
							} else {
	                         		
        	row12.V24 = routines.system.JDBCUtil.getString(rs_tOracleInput_58, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_58 < 2) {
								row12.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_58.getObject(2) != null) {
						row12.PERSONAS_ID = rs_tOracleInput_58.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_58 begin ] stop
 */
	
	/**
	 * [tOracleInput_58 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 


	tos_count_tOracleInput_58++;

/**
 * [tOracleInput_58 main ] stop
 */
	
	/**
	 * [tOracleInput_58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					


			   
			   

					row12Struct row12_HashRow = new row12Struct();
		   	   	   
				
				row12_HashRow.V24 = row12.V24;
				
				row12_HashRow.PERSONAS_ID = row12.PERSONAS_ID;
				
			tHash_Lookup_row12.put(row12_HashRow);
			
            




 


	tos_count_tAdvancedHash_row12++;

/**
 * [tAdvancedHash_row12 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row12 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_58 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_58 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

}
}finally{
	if (rs_tOracleInput_58 != null) {
		rs_tOracleInput_58.close();
	}
	if (stmt_tOracleInput_58 != null) {
		stmt_tOracleInput_58.close();
	}
}

globalMap.put("tOracleInput_58_NB_LINE",nb_line_tOracleInput_58);
 

ok_Hash.put("tOracleInput_58", true);
end_Hash.put("tOracleInput_58", System.currentTimeMillis());




/**
 * [tOracleInput_58 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

tHash_Lookup_row12.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row12", true);
end_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());




/**
 * [tAdvancedHash_row12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_58 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_58";
	
	

 



/**
 * [tOracleInput_58 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row12 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row12";
	
	

 



/**
 * [tAdvancedHash_row12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_58_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V25;

				public String getV25 () {
					return this.V25;
				}

				public Boolean V25IsNullable(){
				    return true;
				}
				public Boolean V25IsKey(){
				    return false;
				}
				public Integer V25Length(){
				    return 1;
				}
				public Integer V25Precision(){
				    return 0;
				}
				public String V25Default(){
				
					return null;
				
				}
				public String V25Comment(){
				
				    return "";
				
				}
				public String V25Pattern(){
				
					return "";
				
				}
				public String V25OriginalDbColumnName(){
				
					return "V25";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.V25 = this.V25;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V25 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V25 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V25, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V25, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V25="+V25);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tOracleInput_12 - inputs:(after_tOracleInput_1) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_12.setFetchSize(1000);


		    String dbquery_tOracleInput_12 = "SELECT    V25\n        , PERSONAS_ID \nFROM ( \n    SELECT    CASE \n                  WHEN CIE.CODIGO IN ('F064', 'F40"
+"8', 'F409', 'F410', 'F411', 'F412', 'F413', 'F418', 'F419', 'F930', 'F931', 'F932')\n                  THEN '1'\n       "
+"           WHEN ( CIE.CODIGO LIKE '%F32%' OR CIE.CODIGO IN ('F204', 'F412') ) \n                  THEN '2'\n            "
+"      WHEN regexp_like(codigo,'F20*|F3(0)') \n                  THEN '3' \n                  WHEN CIE.CODIGO LIKE '%F90%"
+"' \n                  THEN '4'  \n                  WHEN ( CIE.CODIGO LIKE '%F10%' OR CIE.CODIGO IN ('F04X', 'Z864') ) "
+"\n                  THEN '5'  \n                  WHEN CIE.CODIGO LIKE '%F31%' THEN '6'\n              END AS  v25\n     "
+"       , PROC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n"
+"    FROM GEN_CIE10 CIE\n    INNER JOIN HCL_DIAGNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASIST"
+"ENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID \n    WHERE ( CIE.CODIGO IN ('F064', 'F408', 'F409', 'F410', 'F"
+"411', 'F412', 'F413', 'F418', 'F419', 'F930', 'F931', 'F932')\n            OR ( CIE.CODIGO LIKE '%F32%' OR CIE.CODIGO IN"
+" ('F204', 'F412') )\n            OR regexp_like(CIE.codigo,'F20*|F3(0)')\n            OR CIE.CODIGO LIKE '%F90%' \n     "
+"       OR ( CIE.CODIGO LIKE '%F10%' OR CIE.CODIGO IN ('F04X', 'Z864') )\n            OR CIE.CODIGO LIKE '%F31%' )\n     "
+" AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1 ";
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row13.V25 = null;
							} else {
	                         		
        	row13.V25 = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row13.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(2) != null) {
						row13.PERSONAS_ID = rs_tOracleInput_12.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.V25 = row13.V25;
				
				row13_HashRow.PERSONAS_ID = row13.PERSONAS_ID;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());




/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V26;

				public String getV26 () {
					return this.V26;
				}

				public Boolean V26IsNullable(){
				    return true;
				}
				public Boolean V26IsKey(){
				    return false;
				}
				public Integer V26Length(){
				    return 1;
				}
				public Integer V26Precision(){
				    return 0;
				}
				public String V26Default(){
				
					return null;
				
				}
				public String V26Comment(){
				
				    return "";
				
				}
				public String V26Pattern(){
				
					return "";
				
				}
				public String V26OriginalDbColumnName(){
				
					return "V26";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.V26 = this.V26;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V26 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V26 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V26, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V26, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V26="+V26);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tOracleInput_13 - inputs:(after_tOracleInput_1) outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tOracleInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_13", false);
		start_Hash.put("tOracleInput_13", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_13";
	
	
		int tos_count_tOracleInput_13 = 0;
		
	


	
		    int nb_line_tOracleInput_13 = 0;
		    java.sql.Connection conn_tOracleInput_13 = null;
				conn_tOracleInput_13 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_13 = false;
				boolean isConnectionWrapped_tOracleInput_13 = !(conn_tOracleInput_13 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_13.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_13 = null;
                if (isConnectionWrapped_tOracleInput_13) {
					unwrappedOraConn_tOracleInput_13 = conn_tOracleInput_13.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_13 != null) {
                        isTimeZoneNull_tOracleInput_13 = (unwrappedOraConn_tOracleInput_13.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_13 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_13).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_13) {
					java.sql.Statement stmtGetTZ_tOracleInput_13 = conn_tOracleInput_13.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_13 = stmtGetTZ_tOracleInput_13.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_13 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_13.next()) {
						sessionTimezone_tOracleInput_13 = rsGetTZ_tOracleInput_13.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_13 && unwrappedOraConn_tOracleInput_13 != null) {
                        unwrappedOraConn_tOracleInput_13.setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_13).setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_13 = conn_tOracleInput_13.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_13.setFetchSize(1000);


		    String dbquery_tOracleInput_13 = "SELECT    V26\n        , PERSONAS_ID\nFROM (\n    SELECT    '1' AS v26\n            , PROC.PERSONAS_ID\n            , R"
+"OW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN HCL"
+"_DIAGNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSAS"
+"ISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX ON SEX.ID ="
+" PER.SEXO_ID\n    WHERE CIE.CODIGO IN ( 'C530','C531','C538','C539','C543','C548','C549',\n                          'C5"
+"5X','D060','D061','D067','D069' )\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND PROC."
+"FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND SEX.SIGLA = 'F'\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_13_QUERY",dbquery_tOracleInput_13);

		    java.sql.ResultSet rs_tOracleInput_13 = null;

		    try {
		    	rs_tOracleInput_13 = stmt_tOracleInput_13.executeQuery(dbquery_tOracleInput_13);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_13 = rs_tOracleInput_13.getMetaData();
		    	int colQtyInRs_tOracleInput_13 = rsmd_tOracleInput_13.getColumnCount();

		    String tmpContent_tOracleInput_13 = null;
		    
		    
		    while (rs_tOracleInput_13.next()) {
		        nb_line_tOracleInput_13++;
		        
							if(colQtyInRs_tOracleInput_13 < 1) {
								row14.V26 = null;
							} else {
	                         		
        	row14.V26 = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 2) {
								row14.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_13.getObject(2) != null) {
						row14.PERSONAS_ID = rs_tOracleInput_13.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_13 begin ] stop
 */
	
	/**
	 * [tOracleInput_13 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 


	tos_count_tOracleInput_13++;

/**
 * [tOracleInput_13 main ] stop
 */
	
	/**
	 * [tOracleInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.V26 = row14.V26;
				
				row14_HashRow.PERSONAS_ID = row14.PERSONAS_ID;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_13 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

}
}finally{
	if (rs_tOracleInput_13 != null) {
		rs_tOracleInput_13.close();
	}
	if (stmt_tOracleInput_13 != null) {
		stmt_tOracleInput_13.close();
	}
}

globalMap.put("tOracleInput_13_NB_LINE",nb_line_tOracleInput_13);
 

ok_Hash.put("tOracleInput_13", true);
end_Hash.put("tOracleInput_13", System.currentTimeMillis());




/**
 * [tOracleInput_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

tHash_Lookup_row14.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_13 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V27;

				public String getV27 () {
					return this.V27;
				}

				public Boolean V27IsNullable(){
				    return true;
				}
				public Boolean V27IsKey(){
				    return false;
				}
				public Integer V27Length(){
				    return null;
				}
				public Integer V27Precision(){
				    return null;
				}
				public String V27Default(){
				
					return null;
				
				}
				public String V27Comment(){
				
				    return "";
				
				}
				public String V27Pattern(){
				
					return "";
				
				}
				public String V27OriginalDbColumnName(){
				
					return "V27";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.V27 = this.V27;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V27 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V27 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V27, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V27, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V27="+V27);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tOracleInput_14 - inputs:(after_tOracleInput_1) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tOracleInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_14", false);
		start_Hash.put("tOracleInput_14", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_14";
	
	
		int tos_count_tOracleInput_14 = 0;
		
	


	
		    int nb_line_tOracleInput_14 = 0;
		    java.sql.Connection conn_tOracleInput_14 = null;
				conn_tOracleInput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_14 = false;
				boolean isConnectionWrapped_tOracleInput_14 = !(conn_tOracleInput_14 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_14.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_14 = null;
                if (isConnectionWrapped_tOracleInput_14) {
					unwrappedOraConn_tOracleInput_14 = conn_tOracleInput_14.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_14 != null) {
                        isTimeZoneNull_tOracleInput_14 = (unwrappedOraConn_tOracleInput_14.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_14 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_14).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_14) {
					java.sql.Statement stmtGetTZ_tOracleInput_14 = conn_tOracleInput_14.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_14 = stmtGetTZ_tOracleInput_14.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_14 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_14.next()) {
						sessionTimezone_tOracleInput_14 = rsGetTZ_tOracleInput_14.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_14 && unwrappedOraConn_tOracleInput_14 != null) {
                        unwrappedOraConn_tOracleInput_14.setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_14).setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_14 = conn_tOracleInput_14.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_14.setFetchSize(1000);


		    String dbquery_tOracleInput_14 = "SELECT    V27 \n        , PERSONAS_ID \nFROM ( \n    SELECT    '1' AS  v27\n            , PROC.PERSONAS_ID\n           "
+" , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN"
+" HCL_DIAGNOSTICOS DIAG ON DIAG.CIE10_ID = CIE.ID \n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCE"
+"SOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID \n    WHERE regexp_like(CIE.codigo,'C"
+"500*|D05(7|9)')\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND PROC.FFINAL BETWEEN TO_"
+"DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_14_QUERY",dbquery_tOracleInput_14);

		    java.sql.ResultSet rs_tOracleInput_14 = null;

		    try {
		    	rs_tOracleInput_14 = stmt_tOracleInput_14.executeQuery(dbquery_tOracleInput_14);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_14 = rs_tOracleInput_14.getMetaData();
		    	int colQtyInRs_tOracleInput_14 = rsmd_tOracleInput_14.getColumnCount();

		    String tmpContent_tOracleInput_14 = null;
		    
		    
		    while (rs_tOracleInput_14.next()) {
		        nb_line_tOracleInput_14++;
		        
							if(colQtyInRs_tOracleInput_14 < 1) {
								row15.V27 = null;
							} else {
	                         		
        	row15.V27 = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 2) {
								row15.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_14.getObject(2) != null) {
						row15.PERSONAS_ID = rs_tOracleInput_14.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_14 begin ] stop
 */
	
	/**
	 * [tOracleInput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 


	tos_count_tOracleInput_14++;

/**
 * [tOracleInput_14 main ] stop
 */
	
	/**
	 * [tOracleInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.V27 = row15.V27;
				
				row15_HashRow.PERSONAS_ID = row15.PERSONAS_ID;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

}
}finally{
	if (rs_tOracleInput_14 != null) {
		rs_tOracleInput_14.close();
	}
	if (stmt_tOracleInput_14 != null) {
		stmt_tOracleInput_14.close();
	}
}

globalMap.put("tOracleInput_14_NB_LINE",nb_line_tOracleInput_14);
 

ok_Hash.put("tOracleInput_14", true);
end_Hash.put("tOracleInput_14", System.currentTimeMillis());




/**
 * [tOracleInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V28;

				public String getV28 () {
					return this.V28;
				}

				public Boolean V28IsNullable(){
				    return true;
				}
				public Boolean V28IsKey(){
				    return false;
				}
				public Integer V28Length(){
				    return null;
				}
				public Integer V28Precision(){
				    return null;
				}
				public String V28Default(){
				
					return null;
				
				}
				public String V28Comment(){
				
				    return "";
				
				}
				public String V28Pattern(){
				
					return "";
				
				}
				public String V28OriginalDbColumnName(){
				
					return "V28";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.V28 = this.V28;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V28 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V28 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V28, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V28, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V28="+V28);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tOracleInput_15 - inputs:(after_tOracleInput_1) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tOracleInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_15", false);
		start_Hash.put("tOracleInput_15", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_15";
	
	
		int tos_count_tOracleInput_15 = 0;
		
	


	
		    int nb_line_tOracleInput_15 = 0;
		    java.sql.Connection conn_tOracleInput_15 = null;
				conn_tOracleInput_15 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_15 = false;
				boolean isConnectionWrapped_tOracleInput_15 = !(conn_tOracleInput_15 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_15.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_15 = null;
                if (isConnectionWrapped_tOracleInput_15) {
					unwrappedOraConn_tOracleInput_15 = conn_tOracleInput_15.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_15 != null) {
                        isTimeZoneNull_tOracleInput_15 = (unwrappedOraConn_tOracleInput_15.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_15 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_15).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_15) {
					java.sql.Statement stmtGetTZ_tOracleInput_15 = conn_tOracleInput_15.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_15 = stmtGetTZ_tOracleInput_15.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_15 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_15.next()) {
						sessionTimezone_tOracleInput_15 = rsGetTZ_tOracleInput_15.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_15 && unwrappedOraConn_tOracleInput_15 != null) {
                        unwrappedOraConn_tOracleInput_15.setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_15).setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_15 = conn_tOracleInput_15.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_15.setFetchSize(1000);


		    String dbquery_tOracleInput_15 = "SELECT \n  DISTINCT \n '1' AS  v28,\n  PROC.PERSONAS_ID\nFROM HCL_DIAGNOSTICOS DIAG \nINNER JOIN GEN_CIE10 CIE ON  DIAG"
+".CIE10_ID = CIE.ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID\nINNER JOIN GEN"
+"_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID\nWHERE CIE.CODIGO = 'K003'"
+"\nAND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_15_QUERY",dbquery_tOracleInput_15);

		    java.sql.ResultSet rs_tOracleInput_15 = null;

		    try {
		    	rs_tOracleInput_15 = stmt_tOracleInput_15.executeQuery(dbquery_tOracleInput_15);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_15 = rs_tOracleInput_15.getMetaData();
		    	int colQtyInRs_tOracleInput_15 = rsmd_tOracleInput_15.getColumnCount();

		    String tmpContent_tOracleInput_15 = null;
		    
		    
		    while (rs_tOracleInput_15.next()) {
		        nb_line_tOracleInput_15++;
		        
							if(colQtyInRs_tOracleInput_15 < 1) {
								row16.V28 = null;
							} else {
	                         		
        	row16.V28 = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 2) {
								row16.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_15.getObject(2) != null) {
						row16.PERSONAS_ID = rs_tOracleInput_15.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_15 begin ] stop
 */
	
	/**
	 * [tOracleInput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 


	tos_count_tOracleInput_15++;

/**
 * [tOracleInput_15 main ] stop
 */
	
	/**
	 * [tOracleInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.V28 = row16.V28;
				
				row16_HashRow.PERSONAS_ID = row16.PERSONAS_ID;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

}
}finally{
	if (rs_tOracleInput_15 != null) {
		rs_tOracleInput_15.close();
	}
	if (stmt_tOracleInput_15 != null) {
		stmt_tOracleInput_15.close();
	}
}

globalMap.put("tOracleInput_15_NB_LINE",nb_line_tOracleInput_15);
 

ok_Hash.put("tOracleInput_15", true);
end_Hash.put("tOracleInput_15", System.currentTimeMillis());




/**
 * [tOracleInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableComparableLookupRow<row17Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V29;

				public String getV29 () {
					return this.V29;
				}

				public Boolean V29IsNullable(){
				    return true;
				}
				public Boolean V29IsKey(){
				    return false;
				}
				public Integer V29Length(){
				    return 10;
				}
				public Integer V29Precision(){
				    return 0;
				}
				public String V29Default(){
				
					return null;
				
				}
				public String V29Comment(){
				
				    return "";
				
				}
				public String V29Pattern(){
				
					return "";
				
				}
				public String V29OriginalDbColumnName(){
				
					return "V29";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row17Struct other = (row17Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row17Struct other) {

		other.V29 = this.V29;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row17Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V29 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V29 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V29, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V29, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V29="+V29);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tAdvancedHash_row17 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row17", false);
		start_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tAdvancedHash_row17 = 0;
		

			   		// connection name:row17
			   		// source node:tOracleInput_16 - inputs:(after_tOracleInput_1) outputs:(row17,row17) | target node:tAdvancedHash_row17 - inputs:(row17) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row17 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row17Struct>getLookup(matchingModeEnum_row17);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row17", tHash_Lookup_row17);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row17 begin ] stop
 */



	
	/**
	 * [tOracleInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_16", false);
		start_Hash.put("tOracleInput_16", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_16";
	
	
		int tos_count_tOracleInput_16 = 0;
		
	


	
		    int nb_line_tOracleInput_16 = 0;
		    java.sql.Connection conn_tOracleInput_16 = null;
				conn_tOracleInput_16 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_16 = false;
				boolean isConnectionWrapped_tOracleInput_16 = !(conn_tOracleInput_16 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_16.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_16 = null;
                if (isConnectionWrapped_tOracleInput_16) {
					unwrappedOraConn_tOracleInput_16 = conn_tOracleInput_16.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_16 != null) {
                        isTimeZoneNull_tOracleInput_16 = (unwrappedOraConn_tOracleInput_16.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_16 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_16).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_16) {
					java.sql.Statement stmtGetTZ_tOracleInput_16 = conn_tOracleInput_16.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_16 = stmtGetTZ_tOracleInput_16.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_16 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_16.next()) {
						sessionTimezone_tOracleInput_16 = rsGetTZ_tOracleInput_16.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_16 && unwrappedOraConn_tOracleInput_16 != null) {
                        unwrappedOraConn_tOracleInput_16.setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_16).setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_16 = conn_tOracleInput_16.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_16.setFetchSize(1000);


		    String dbquery_tOracleInput_16 = "SELECT    V29\n        , PERSONAS_ID       \nFROM (\n    SELECT    TO_CHAR(PA.FFINAL,'YYYY-MM-DD') AS v29          \n  "
+"          , PA.PERSONAS_ID        \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC"
+") R\n    FROM GEN_TSIGNOSVITALES TSIG\n    INNER JOIN GEN_HSIGNOSVITALES HSV ON HSV.TSIGNOSVITALES_ID = TSIG.ID\n    INN"
+"ER JOIN GEN_MSIGNOSVITALES MSIG ON MSIG.ID = HSV.MSIGNOSVITALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID"
+" = MSIG.PROCESOSASISTENCIALES_ID \n    WHERE TSIG.SIGLA = 'PESO'/*Kilogramos*/\n      AND HSV.ESTREGISTRO_ID = 1\n      "
+"AND MSIG.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND HSV.VALOR < 250\n      AND HSV.VALOR > 0\n      "
+"AND trunc(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_16_QUERY",dbquery_tOracleInput_16);

		    java.sql.ResultSet rs_tOracleInput_16 = null;

		    try {
		    	rs_tOracleInput_16 = stmt_tOracleInput_16.executeQuery(dbquery_tOracleInput_16);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_16 = rs_tOracleInput_16.getMetaData();
		    	int colQtyInRs_tOracleInput_16 = rsmd_tOracleInput_16.getColumnCount();

		    String tmpContent_tOracleInput_16 = null;
		    
		    
		    while (rs_tOracleInput_16.next()) {
		        nb_line_tOracleInput_16++;
		        
							if(colQtyInRs_tOracleInput_16 < 1) {
								row17.V29 = null;
							} else {
	                         		
        	row17.V29 = routines.system.JDBCUtil.getString(rs_tOracleInput_16, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_16 < 2) {
								row17.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_16.getObject(2) != null) {
						row17.PERSONAS_ID = rs_tOracleInput_16.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_16 begin ] stop
 */
	
	/**
	 * [tOracleInput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 


	tos_count_tOracleInput_16++;

/**
 * [tOracleInput_16 main ] stop
 */
	
	/**
	 * [tOracleInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					


			   
			   

					row17Struct row17_HashRow = new row17Struct();
		   	   	   
				
				row17_HashRow.V29 = row17.V29;
				
				row17_HashRow.PERSONAS_ID = row17.PERSONAS_ID;
				
			tHash_Lookup_row17.put(row17_HashRow);
			
            




 


	tos_count_tAdvancedHash_row17++;

/**
 * [tAdvancedHash_row17 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

}
}finally{
	if (rs_tOracleInput_16 != null) {
		rs_tOracleInput_16.close();
	}
	if (stmt_tOracleInput_16 != null) {
		stmt_tOracleInput_16.close();
	}
}

globalMap.put("tOracleInput_16_NB_LINE",nb_line_tOracleInput_16);
 

ok_Hash.put("tOracleInput_16", true);
end_Hash.put("tOracleInput_16", System.currentTimeMillis());




/**
 * [tOracleInput_16 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

tHash_Lookup_row17.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row17", true);
end_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());




/**
 * [tAdvancedHash_row17 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V30;

				public BigDecimal getV30 () {
					return this.V30;
				}

				public Boolean V30IsNullable(){
				    return true;
				}
				public Boolean V30IsKey(){
				    return false;
				}
				public Integer V30Length(){
				    return 0;
				}
				public Integer V30Precision(){
				    return null;
				}
				public String V30Default(){
				
					return "";
				
				}
				public String V30Comment(){
				
				    return "";
				
				}
				public String V30Pattern(){
				
					return "";
				
				}
				public String V30OriginalDbColumnName(){
				
					return "V30";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.V30 = this.V30;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V30 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V30 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V30);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V30);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V30="+String.valueOf(V30));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tAdvancedHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row18", false);
		start_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAdvancedHash_row18 = 0;
		

			   		// connection name:row18
			   		// source node:tOracleInput_17 - inputs:(after_tOracleInput_1) outputs:(row18,row18) | target node:tAdvancedHash_row18 - inputs:(row18) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row18 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row18Struct>getLookup(matchingModeEnum_row18);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row18", tHash_Lookup_row18);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row18 begin ] stop
 */



	
	/**
	 * [tOracleInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_17", false);
		start_Hash.put("tOracleInput_17", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_17";
	
	
		int tos_count_tOracleInput_17 = 0;
		
	


	
		    int nb_line_tOracleInput_17 = 0;
		    java.sql.Connection conn_tOracleInput_17 = null;
				conn_tOracleInput_17 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_17 = false;
				boolean isConnectionWrapped_tOracleInput_17 = !(conn_tOracleInput_17 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_17.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_17 = null;
                if (isConnectionWrapped_tOracleInput_17) {
					unwrappedOraConn_tOracleInput_17 = conn_tOracleInput_17.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_17 != null) {
                        isTimeZoneNull_tOracleInput_17 = (unwrappedOraConn_tOracleInput_17.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_17 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_17).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_17) {
					java.sql.Statement stmtGetTZ_tOracleInput_17 = conn_tOracleInput_17.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_17 = stmtGetTZ_tOracleInput_17.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_17 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_17.next()) {
						sessionTimezone_tOracleInput_17 = rsGetTZ_tOracleInput_17.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_17 && unwrappedOraConn_tOracleInput_17 != null) {
                        unwrappedOraConn_tOracleInput_17.setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_17).setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_17 = conn_tOracleInput_17.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_17.setFetchSize(1000);


		    String dbquery_tOracleInput_17 = "SELECT    V30\n        , PERSONAS_ID       \nFROM (\n    SELECT    CASE \n                WHEN HSV.VALOR < 1\n         "
+"       THEN trunc(HSV.VALOR ,3)\n                ELSE trunc( HSV.VALOR) \n              END  AS v30            \n       "
+"     , PA.PERSONAS_ID            \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC)"
+" R\n    FROM GEN_TSIGNOSVITALES TSIG\n    INNER JOIN GEN_HSIGNOSVITALES HSV ON HSV.TSIGNOSVITALES_ID = TSIG.ID\n    INNE"
+"R JOIN GEN_MSIGNOSVITALES MSIG ON MSIG.ID = HSV.MSIGNOSVITALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID "
+"= MSIG.PROCESOSASISTENCIALES_ID \n    WHERE TSIG.SIGLA = 'PESO'\n      AND HSV.ESTREGISTRO_ID = 1\n      AND MSIG.ESTREG"
+"ISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND HSV.VALOR < 250\n      AND HSV.VALOR > 0\n      AND PA.FFINAL B"
+"ETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_17_QUERY",dbquery_tOracleInput_17);

		    java.sql.ResultSet rs_tOracleInput_17 = null;

		    try {
		    	rs_tOracleInput_17 = stmt_tOracleInput_17.executeQuery(dbquery_tOracleInput_17);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_17 = rs_tOracleInput_17.getMetaData();
		    	int colQtyInRs_tOracleInput_17 = rsmd_tOracleInput_17.getColumnCount();

		    String tmpContent_tOracleInput_17 = null;
		    
		    
		    while (rs_tOracleInput_17.next()) {
		        nb_line_tOracleInput_17++;
		        
							if(colQtyInRs_tOracleInput_17 < 1) {
								row18.V30 = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(1) != null) {
						row18.V30 = rs_tOracleInput_17.getBigDecimal(1);
					} else {
				
						row18.V30 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 2) {
								row18.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(2) != null) {
						row18.PERSONAS_ID = rs_tOracleInput_17.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_17 begin ] stop
 */
	
	/**
	 * [tOracleInput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 


	tos_count_tOracleInput_17++;

/**
 * [tOracleInput_17 main ] stop
 */
	
	/**
	 * [tOracleInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


			   
			   

					row18Struct row18_HashRow = new row18Struct();
		   	   	   
				
				row18_HashRow.V30 = row18.V30;
				
				row18_HashRow.PERSONAS_ID = row18.PERSONAS_ID;
				
			tHash_Lookup_row18.put(row18_HashRow);
			
            




 


	tos_count_tAdvancedHash_row18++;

/**
 * [tAdvancedHash_row18 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

}
}finally{
	if (rs_tOracleInput_17 != null) {
		rs_tOracleInput_17.close();
	}
	if (stmt_tOracleInput_17 != null) {
		stmt_tOracleInput_17.close();
	}
}

globalMap.put("tOracleInput_17_NB_LINE",nb_line_tOracleInput_17);
 

ok_Hash.put("tOracleInput_17", true);
end_Hash.put("tOracleInput_17", System.currentTimeMillis());




/**
 * [tOracleInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

tHash_Lookup_row18.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row18", true);
end_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());




/**
 * [tAdvancedHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableComparableLookupRow<row19Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V31;

				public String getV31 () {
					return this.V31;
				}

				public Boolean V31IsNullable(){
				    return true;
				}
				public Boolean V31IsKey(){
				    return false;
				}
				public Integer V31Length(){
				    return 10;
				}
				public Integer V31Precision(){
				    return 0;
				}
				public String V31Default(){
				
					return null;
				
				}
				public String V31Comment(){
				
				    return "";
				
				}
				public String V31Pattern(){
				
					return "";
				
				}
				public String V31OriginalDbColumnName(){
				
					return "V31";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.V31 = this.V31;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V31 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V31 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V31, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V31, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V31="+V31);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tAdvancedHash_row19 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row19", false);
		start_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tAdvancedHash_row19 = 0;
		

			   		// connection name:row19
			   		// source node:tOracleInput_18 - inputs:(after_tOracleInput_1) outputs:(row19,row19) | target node:tAdvancedHash_row19 - inputs:(row19) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row19 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row19Struct>getLookup(matchingModeEnum_row19);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row19", tHash_Lookup_row19);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row19 begin ] stop
 */



	
	/**
	 * [tOracleInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_18", false);
		start_Hash.put("tOracleInput_18", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_18";
	
	
		int tos_count_tOracleInput_18 = 0;
		
	


	
		    int nb_line_tOracleInput_18 = 0;
		    java.sql.Connection conn_tOracleInput_18 = null;
				conn_tOracleInput_18 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_18 = false;
				boolean isConnectionWrapped_tOracleInput_18 = !(conn_tOracleInput_18 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_18.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_18 = null;
                if (isConnectionWrapped_tOracleInput_18) {
					unwrappedOraConn_tOracleInput_18 = conn_tOracleInput_18.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_18 != null) {
                        isTimeZoneNull_tOracleInput_18 = (unwrappedOraConn_tOracleInput_18.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_18 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_18).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_18) {
					java.sql.Statement stmtGetTZ_tOracleInput_18 = conn_tOracleInput_18.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_18 = stmtGetTZ_tOracleInput_18.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_18 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_18.next()) {
						sessionTimezone_tOracleInput_18 = rsGetTZ_tOracleInput_18.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_18 && unwrappedOraConn_tOracleInput_18 != null) {
                        unwrappedOraConn_tOracleInput_18.setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_18).setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_18 = conn_tOracleInput_18.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_18.setFetchSize(1000);


		    String dbquery_tOracleInput_18 = "SELECT    V31\n        , PERSONAS_ID       \nFROM (\n    SELECT    TO_CHAR(PA.FFINAL,'YYYY-MM-DD') AS v31         \n   "
+"         , PA.PERSONAS_ID        \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC)"
+" R\n    FROM GEN_TSIGNOSVITALES TSIG\n    INNER JOIN GEN_HSIGNOSVITALES HSV ON HSV.TSIGNOSVITALES_ID = TSIG.ID\n    INNE"
+"R JOIN GEN_MSIGNOSVITALES MSIG ON MSIG.ID = HSV.MSIGNOSVITALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID "
+"= MSIG.PROCESOSASISTENCIALES_ID \n    WHERE TSIG.SIGLA = 'E'\n      AND HSV.ESTREGISTRO_ID = 1\n      AND MSIG.ESTREGIST"
+"RO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND HSV.VALOR*100 < 225\n	  AND HSV.VALOR > 0     \n      AND PA.FFINA"
+"L BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_18_QUERY",dbquery_tOracleInput_18);

		    java.sql.ResultSet rs_tOracleInput_18 = null;

		    try {
		    	rs_tOracleInput_18 = stmt_tOracleInput_18.executeQuery(dbquery_tOracleInput_18);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_18 = rs_tOracleInput_18.getMetaData();
		    	int colQtyInRs_tOracleInput_18 = rsmd_tOracleInput_18.getColumnCount();

		    String tmpContent_tOracleInput_18 = null;
		    
		    
		    while (rs_tOracleInput_18.next()) {
		        nb_line_tOracleInput_18++;
		        
							if(colQtyInRs_tOracleInput_18 < 1) {
								row19.V31 = null;
							} else {
	                         		
        	row19.V31 = routines.system.JDBCUtil.getString(rs_tOracleInput_18, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_18 < 2) {
								row19.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_18.getObject(2) != null) {
						row19.PERSONAS_ID = rs_tOracleInput_18.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_18 begin ] stop
 */
	
	/**
	 * [tOracleInput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 


	tos_count_tOracleInput_18++;

/**
 * [tOracleInput_18 main ] stop
 */
	
	/**
	 * [tOracleInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					


			   
			   

					row19Struct row19_HashRow = new row19Struct();
		   	   	   
				
				row19_HashRow.V31 = row19.V31;
				
				row19_HashRow.PERSONAS_ID = row19.PERSONAS_ID;
				
			tHash_Lookup_row19.put(row19_HashRow);
			
            




 


	tos_count_tAdvancedHash_row19++;

/**
 * [tAdvancedHash_row19 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

}
}finally{
	if (rs_tOracleInput_18 != null) {
		rs_tOracleInput_18.close();
	}
	if (stmt_tOracleInput_18 != null) {
		stmt_tOracleInput_18.close();
	}
}

globalMap.put("tOracleInput_18_NB_LINE",nb_line_tOracleInput_18);
 

ok_Hash.put("tOracleInput_18", true);
end_Hash.put("tOracleInput_18", System.currentTimeMillis());




/**
 * [tOracleInput_18 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

tHash_Lookup_row19.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row19", true);
end_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());




/**
 * [tAdvancedHash_row19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableComparableLookupRow<row20Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V32;

				public BigDecimal getV32 () {
					return this.V32;
				}

				public Boolean V32IsNullable(){
				    return true;
				}
				public Boolean V32IsKey(){
				    return false;
				}
				public Integer V32Length(){
				    return 0;
				}
				public Integer V32Precision(){
				    return 0;
				}
				public String V32Default(){
				
					return "";
				
				}
				public String V32Comment(){
				
				    return "";
				
				}
				public String V32Pattern(){
				
					return "";
				
				}
				public String V32OriginalDbColumnName(){
				
					return "V32";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.V32 = this.V32;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V32 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V32 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V32);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V32);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V32="+String.valueOf(V32));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tAdvancedHash_row20 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row20", false);
		start_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tAdvancedHash_row20 = 0;
		

			   		// connection name:row20
			   		// source node:tOracleInput_19 - inputs:(after_tOracleInput_1) outputs:(row20,row20) | target node:tAdvancedHash_row20 - inputs:(row20) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row20 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row20Struct>getLookup(matchingModeEnum_row20);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row20", tHash_Lookup_row20);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row20 begin ] stop
 */



	
	/**
	 * [tOracleInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_19", false);
		start_Hash.put("tOracleInput_19", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_19";
	
	
		int tos_count_tOracleInput_19 = 0;
		
	


	
		    int nb_line_tOracleInput_19 = 0;
		    java.sql.Connection conn_tOracleInput_19 = null;
				conn_tOracleInput_19 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_19 = false;
				boolean isConnectionWrapped_tOracleInput_19 = !(conn_tOracleInput_19 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_19.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_19 = null;
                if (isConnectionWrapped_tOracleInput_19) {
					unwrappedOraConn_tOracleInput_19 = conn_tOracleInput_19.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_19 != null) {
                        isTimeZoneNull_tOracleInput_19 = (unwrappedOraConn_tOracleInput_19.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_19 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_19).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_19) {
					java.sql.Statement stmtGetTZ_tOracleInput_19 = conn_tOracleInput_19.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_19 = stmtGetTZ_tOracleInput_19.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_19 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_19.next()) {
						sessionTimezone_tOracleInput_19 = rsGetTZ_tOracleInput_19.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_19 && unwrappedOraConn_tOracleInput_19 != null) {
                        unwrappedOraConn_tOracleInput_19.setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_19).setSessionTimeZone(sessionTimezone_tOracleInput_19);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_19 = conn_tOracleInput_19.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_19.setFetchSize(1000);


		    String dbquery_tOracleInput_19 = "SELECT    V32\n        , PERSONAS_ID       \nFROM (\n    SELECT    HSV.VALOR*100 AS v32         \n            , PA.PERS"
+"ONAS_ID        \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_T"
+"SIGNOSVITALES TSIG\n    INNER JOIN GEN_HSIGNOSVITALES HSV ON HSV.TSIGNOSVITALES_ID = TSIG.ID\n    INNER JOIN GEN_MSIGNOS"
+"VITALES MSIG ON MSIG.ID = HSV.MSIGNOSVITALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = MSIG.PROCESOSASI"
+"STENCIALES_ID \n    WHERE TSIG.SIGLA = 'E'\n      AND HSV.ESTREGISTRO_ID = 1\n      AND MSIG.ESTREGISTRO_ID = 1\n      A"
+"ND PA.ESTREGISTRO_ID = 1\n      AND HSV.VALOR*100 < 225\n      AND HSV.VALOR > 0\n      AND PA.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_19_QUERY",dbquery_tOracleInput_19);

		    java.sql.ResultSet rs_tOracleInput_19 = null;

		    try {
		    	rs_tOracleInput_19 = stmt_tOracleInput_19.executeQuery(dbquery_tOracleInput_19);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_19 = rs_tOracleInput_19.getMetaData();
		    	int colQtyInRs_tOracleInput_19 = rsmd_tOracleInput_19.getColumnCount();

		    String tmpContent_tOracleInput_19 = null;
		    
		    
		    while (rs_tOracleInput_19.next()) {
		        nb_line_tOracleInput_19++;
		        
							if(colQtyInRs_tOracleInput_19 < 1) {
								row20.V32 = null;
							} else {
		                          
					if(rs_tOracleInput_19.getObject(1) != null) {
						row20.V32 = rs_tOracleInput_19.getBigDecimal(1);
					} else {
				
						row20.V32 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_19 < 2) {
								row20.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_19.getObject(2) != null) {
						row20.PERSONAS_ID = rs_tOracleInput_19.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_19 begin ] stop
 */
	
	/**
	 * [tOracleInput_19 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 


	tos_count_tOracleInput_19++;

/**
 * [tOracleInput_19 main ] stop
 */
	
	/**
	 * [tOracleInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


			   
			   

					row20Struct row20_HashRow = new row20Struct();
		   	   	   
				
				row20_HashRow.V32 = row20.V32;
				
				row20_HashRow.PERSONAS_ID = row20.PERSONAS_ID;
				
			tHash_Lookup_row20.put(row20_HashRow);
			
            




 


	tos_count_tAdvancedHash_row20++;

/**
 * [tAdvancedHash_row20 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_19 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

}
}finally{
	if (rs_tOracleInput_19 != null) {
		rs_tOracleInput_19.close();
	}
	if (stmt_tOracleInput_19 != null) {
		stmt_tOracleInput_19.close();
	}
}

globalMap.put("tOracleInput_19_NB_LINE",nb_line_tOracleInput_19);
 

ok_Hash.put("tOracleInput_19", true);
end_Hash.put("tOracleInput_19", System.currentTimeMillis());




/**
 * [tOracleInput_19 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

tHash_Lookup_row20.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row20", true);
end_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());




/**
 * [tAdvancedHash_row20 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_19 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_19";
	
	

 



/**
 * [tOracleInput_19 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableComparableLookupRow<row21Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V33;

				public String getV33 () {
					return this.V33;
				}

				public Boolean V33IsNullable(){
				    return true;
				}
				public Boolean V33IsKey(){
				    return false;
				}
				public Integer V33Length(){
				    return 10;
				}
				public Integer V33Precision(){
				    return 0;
				}
				public String V33Default(){
				
					return null;
				
				}
				public String V33Comment(){
				
				    return "";
				
				}
				public String V33Pattern(){
				
					return "";
				
				}
				public String V33OriginalDbColumnName(){
				
					return "V33";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.V33 = this.V33;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V33 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V33 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V33, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V33, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V33="+V33);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tAdvancedHash_row21 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row21", false);
		start_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tAdvancedHash_row21 = 0;
		

			   		// connection name:row21
			   		// source node:tOracleInput_20 - inputs:(after_tOracleInput_1) outputs:(row21,row21) | target node:tAdvancedHash_row21 - inputs:(row21) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row21 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row21Struct>getLookup(matchingModeEnum_row21);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row21", tHash_Lookup_row21);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row21 begin ] stop
 */



	
	/**
	 * [tOracleInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_20", false);
		start_Hash.put("tOracleInput_20", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_20";
	
	
		int tos_count_tOracleInput_20 = 0;
		
	


	
		    int nb_line_tOracleInput_20 = 0;
		    java.sql.Connection conn_tOracleInput_20 = null;
				conn_tOracleInput_20 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_20 = false;
				boolean isConnectionWrapped_tOracleInput_20 = !(conn_tOracleInput_20 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_20.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_20 = null;
                if (isConnectionWrapped_tOracleInput_20) {
					unwrappedOraConn_tOracleInput_20 = conn_tOracleInput_20.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_20 != null) {
                        isTimeZoneNull_tOracleInput_20 = (unwrappedOraConn_tOracleInput_20.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_20 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_20).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_20) {
					java.sql.Statement stmtGetTZ_tOracleInput_20 = conn_tOracleInput_20.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_20 = stmtGetTZ_tOracleInput_20.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_20 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_20.next()) {
						sessionTimezone_tOracleInput_20 = rsGetTZ_tOracleInput_20.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_20 && unwrappedOraConn_tOracleInput_20 != null) {
                        unwrappedOraConn_tOracleInput_20.setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_20).setSessionTimeZone(sessionTimezone_tOracleInput_20);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_20 = conn_tOracleInput_20.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_20.setFetchSize(1000);


		    String dbquery_tOracleInput_20 = "SELECT    V33\n        , PERSONAS_ID \nFROM (         \n    SELECT    CASE \n                  WHEN SEX.SIGLA = 'F' \n "
+"                 THEN \n                    CASE\n                  		WHEN HA.DESCRIPCION LIKE '%-%'\n                  "
+"		THEN TO_CHAR(TO_DATE(HA.DESCRIPCION), 'YYYY-MM-DD')\n                    	WHEN HA.DESCRIPCION LIKE '%/%'\n            "
+"        	THEN TO_CHAR(TO_DATE(HA.DESCRIPCION,'DD/MM/YYYY'),'YYYY-MM-DD')\n                    	WHEN HA.DESCRIPCION IS NU"
+"LL\n                    	THEN '1800-01-01'\n                    	END\n                  WHEN SEX.SIGLA = 'M' \n         "
+"         THEN '1845-01-01' END \n              AS v33        \n            , PA.PERSONAS_ID \n            , ROW_NUMBER()"
+" OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM HCL_TANTECEDENTES HT\n    INNER JOIN HCL_ANTECED"
+"ENTES HA ON HA.TANTECEDENTE_ID = HT.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HA.PROCESOSASISTENCIALES_"
+"ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = GP.SEXO_ID \n   "
+" WHERE HT.SIGLA IN ('FPPFUR','FPPECO')\n      AND HA.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND TRUN"
+"C( PA.FFINAL )  BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) \n				                              AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')  \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_20_QUERY",dbquery_tOracleInput_20);

		    java.sql.ResultSet rs_tOracleInput_20 = null;

		    try {
		    	rs_tOracleInput_20 = stmt_tOracleInput_20.executeQuery(dbquery_tOracleInput_20);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_20 = rs_tOracleInput_20.getMetaData();
		    	int colQtyInRs_tOracleInput_20 = rsmd_tOracleInput_20.getColumnCount();

		    String tmpContent_tOracleInput_20 = null;
		    
		    
		    while (rs_tOracleInput_20.next()) {
		        nb_line_tOracleInput_20++;
		        
							if(colQtyInRs_tOracleInput_20 < 1) {
								row21.V33 = null;
							} else {
	                         		
        	row21.V33 = routines.system.JDBCUtil.getString(rs_tOracleInput_20, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_20 < 2) {
								row21.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_20.getObject(2) != null) {
						row21.PERSONAS_ID = rs_tOracleInput_20.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_20 begin ] stop
 */
	
	/**
	 * [tOracleInput_20 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 


	tos_count_tOracleInput_20++;

/**
 * [tOracleInput_20 main ] stop
 */
	
	/**
	 * [tOracleInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


			   
			   

					row21Struct row21_HashRow = new row21Struct();
		   	   	   
				
				row21_HashRow.V33 = row21.V33;
				
				row21_HashRow.PERSONAS_ID = row21.PERSONAS_ID;
				
			tHash_Lookup_row21.put(row21_HashRow);
			
            




 


	tos_count_tAdvancedHash_row21++;

/**
 * [tAdvancedHash_row21 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_20 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

}
}finally{
	if (rs_tOracleInput_20 != null) {
		rs_tOracleInput_20.close();
	}
	if (stmt_tOracleInput_20 != null) {
		stmt_tOracleInput_20.close();
	}
}

globalMap.put("tOracleInput_20_NB_LINE",nb_line_tOracleInput_20);
 

ok_Hash.put("tOracleInput_20", true);
end_Hash.put("tOracleInput_20", System.currentTimeMillis());




/**
 * [tOracleInput_20 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

tHash_Lookup_row21.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row21", true);
end_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());




/**
 * [tAdvancedHash_row21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_20 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_20";
	
	

 



/**
 * [tOracleInput_20 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableComparableLookupRow<row22Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V34;

				public BigDecimal getV34 () {
					return this.V34;
				}

				public Boolean V34IsNullable(){
				    return true;
				}
				public Boolean V34IsKey(){
				    return false;
				}
				public Integer V34Length(){
				    return 0;
				}
				public Integer V34Precision(){
				    return 0;
				}
				public String V34Default(){
				
					return "";
				
				}
				public String V34Comment(){
				
				    return "";
				
				}
				public String V34Pattern(){
				
					return "";
				
				}
				public String V34OriginalDbColumnName(){
				
					return "V34";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row22Struct other = (row22Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row22Struct other) {

		other.V34 = this.V34;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row22Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V34 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V34 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V34);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V34);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V34="+String.valueOf(V34));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tAdvancedHash_row22 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row22", false);
		start_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tAdvancedHash_row22 = 0;
		

			   		// connection name:row22
			   		// source node:tOracleInput_21 - inputs:(after_tOracleInput_1) outputs:(row22,row22) | target node:tAdvancedHash_row22 - inputs:(row22) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row22 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row22Struct>getLookup(matchingModeEnum_row22);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row22", tHash_Lookup_row22);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row22 begin ] stop
 */



	
	/**
	 * [tOracleInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_21", false);
		start_Hash.put("tOracleInput_21", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_21";
	
	
		int tos_count_tOracleInput_21 = 0;
		
	


	
		    int nb_line_tOracleInput_21 = 0;
		    java.sql.Connection conn_tOracleInput_21 = null;
				conn_tOracleInput_21 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_21 = false;
				boolean isConnectionWrapped_tOracleInput_21 = !(conn_tOracleInput_21 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_21.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_21 = null;
                if (isConnectionWrapped_tOracleInput_21) {
					unwrappedOraConn_tOracleInput_21 = conn_tOracleInput_21.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_21 != null) {
                        isTimeZoneNull_tOracleInput_21 = (unwrappedOraConn_tOracleInput_21.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_21 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_21).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_21) {
					java.sql.Statement stmtGetTZ_tOracleInput_21 = conn_tOracleInput_21.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_21 = stmtGetTZ_tOracleInput_21.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_21 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_21.next()) {
						sessionTimezone_tOracleInput_21 = rsGetTZ_tOracleInput_21.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_21 && unwrappedOraConn_tOracleInput_21 != null) {
                        unwrappedOraConn_tOracleInput_21.setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_21).setSessionTimeZone(sessionTimezone_tOracleInput_21);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_21 = conn_tOracleInput_21.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_21.setFetchSize(1000);


		    String dbquery_tOracleInput_21 = "SELECT\nA.EDAD_GESTACIONAL AS V34,\nGP.ID AS PERSONAS_ID\nFROM HCL_NEONATOS N\nINNER JOIN GEN_PERSONAS GP ON GP.ID=N.NE"
+"ONATO\nINNER JOIN ADM_ESPTRATANTES AE ON AE.ID=N.ESPTRATANTES_ID\nINNER JOIN ADM_SERVTRATANTES ASE ON ASE.ID=AE.SERVTRAT"
+"ANTES_ID\nINNER JOIN (SELECT \nASE.ADMISIONES_ID\nFROM HCL_EVENTOBSTETRICO HE\nINNER JOIN HCL_PROCESOSASISTENCIALES HP O"
+"N HP.ID=HE.PROCESOSASISTENCIALES_ID\nINNER JOIN ADM_ESPTRATANTES AE ON AE.ID=HP.ESPTRATANTES_ID\nINNER JOIN ADM_SERVTRAT"
+"ANTES ASE ON ASE.ID=AE.SERVTRATANTES_ID)O ON O.ADMISIONES_ID=ASE.ADMISIONES_ID\nINNER JOIN ( SELECT \nASE.ADMISIONES_ID,"
+"\nP.EDAD_GESTACIONAL\nFROM HCL_PARTOGRAMA P \nINNER JOIN HCL_PROCESOSASISTENCIALES HP ON HP.ID=P.PROCESOSASISTENCIALES_I"
+"D\nINNER JOIN ADM_ESPTRATANTES AE ON AE.ID=HP.ESPTRATANTES_ID\nINNER JOIN ADM_SERVTRATANTES ASE ON ASE.ID=AE.SERVTRATANT"
+"ES_ID\n)A ON A.ADMISIONES_ID=ASE.ADMISIONES_ID\nWHERE  TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')  - GP.FECHA_NACIMIENTO)/365) < 6";
		    

		    globalMap.put("tOracleInput_21_QUERY",dbquery_tOracleInput_21);

		    java.sql.ResultSet rs_tOracleInput_21 = null;

		    try {
		    	rs_tOracleInput_21 = stmt_tOracleInput_21.executeQuery(dbquery_tOracleInput_21);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_21 = rs_tOracleInput_21.getMetaData();
		    	int colQtyInRs_tOracleInput_21 = rsmd_tOracleInput_21.getColumnCount();

		    String tmpContent_tOracleInput_21 = null;
		    
		    
		    while (rs_tOracleInput_21.next()) {
		        nb_line_tOracleInput_21++;
		        
							if(colQtyInRs_tOracleInput_21 < 1) {
								row22.V34 = null;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(1) != null) {
						row22.V34 = rs_tOracleInput_21.getBigDecimal(1);
					} else {
				
						row22.V34 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_21 < 2) {
								row22.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_21.getObject(2) != null) {
						row22.PERSONAS_ID = rs_tOracleInput_21.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_21 begin ] stop
 */
	
	/**
	 * [tOracleInput_21 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 


	tos_count_tOracleInput_21++;

/**
 * [tOracleInput_21 main ] stop
 */
	
	/**
	 * [tOracleInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					


			   
			   

					row22Struct row22_HashRow = new row22Struct();
		   	   	   
				
				row22_HashRow.V34 = row22.V34;
				
				row22_HashRow.PERSONAS_ID = row22.PERSONAS_ID;
				
			tHash_Lookup_row22.put(row22_HashRow);
			
            




 


	tos_count_tAdvancedHash_row22++;

/**
 * [tAdvancedHash_row22 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_21 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

}
}finally{
	if (rs_tOracleInput_21 != null) {
		rs_tOracleInput_21.close();
	}
	if (stmt_tOracleInput_21 != null) {
		stmt_tOracleInput_21.close();
	}
}

globalMap.put("tOracleInput_21_NB_LINE",nb_line_tOracleInput_21);
 

ok_Hash.put("tOracleInput_21", true);
end_Hash.put("tOracleInput_21", System.currentTimeMillis());




/**
 * [tOracleInput_21 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

tHash_Lookup_row22.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row22", true);
end_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());




/**
 * [tAdvancedHash_row22 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_21 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_21";
	
	

 



/**
 * [tOracleInput_21 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableComparableLookupRow<row23Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V35;

				public String getV35 () {
					return this.V35;
				}

				public Boolean V35IsNullable(){
				    return true;
				}
				public Boolean V35IsKey(){
				    return false;
				}
				public Integer V35Length(){
				    return null;
				}
				public Integer V35Precision(){
				    return null;
				}
				public String V35Default(){
				
					return null;
				
				}
				public String V35Comment(){
				
				    return "";
				
				}
				public String V35Pattern(){
				
					return "";
				
				}
				public String V35OriginalDbColumnName(){
				
					return "V35";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row23Struct other = (row23Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row23Struct other) {

		other.V35 = this.V35;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row23Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V35 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V35 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V35, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V35, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V35="+V35);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tAdvancedHash_row23 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row23", false);
		start_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tAdvancedHash_row23 = 0;
		

			   		// connection name:row23
			   		// source node:tOracleInput_22 - inputs:(after_tOracleInput_1) outputs:(row23,row23) | target node:tAdvancedHash_row23 - inputs:(row23) outputs:()
			   		// linked node: tMap_1 - inputs:(row1,row2,row3,row4,row5,row6,row7,row8,row9,row10,row11,row12,row13,row14,row15,row16,row17,row18,row19,row20,row21,row22,row23) outputs:(Salida_Pre1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row23 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row23Struct>getLookup(matchingModeEnum_row23);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row23", tHash_Lookup_row23);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row23 begin ] stop
 */



	
	/**
	 * [tOracleInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_22", false);
		start_Hash.put("tOracleInput_22", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_22";
	
	
		int tos_count_tOracleInput_22 = 0;
		
	


	
		    int nb_line_tOracleInput_22 = 0;
		    java.sql.Connection conn_tOracleInput_22 = null;
				conn_tOracleInput_22 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_22 = false;
				boolean isConnectionWrapped_tOracleInput_22 = !(conn_tOracleInput_22 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_22.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_22 = null;
                if (isConnectionWrapped_tOracleInput_22) {
					unwrappedOraConn_tOracleInput_22 = conn_tOracleInput_22.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_22 != null) {
                        isTimeZoneNull_tOracleInput_22 = (unwrappedOraConn_tOracleInput_22.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_22 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_22).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_22) {
					java.sql.Statement stmtGetTZ_tOracleInput_22 = conn_tOracleInput_22.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_22 = stmtGetTZ_tOracleInput_22.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_22 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_22.next()) {
						sessionTimezone_tOracleInput_22 = rsGetTZ_tOracleInput_22.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_22 && unwrappedOraConn_tOracleInput_22 != null) {
                        unwrappedOraConn_tOracleInput_22.setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_22).setSessionTimeZone(sessionTimezone_tOracleInput_22);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_22 = conn_tOracleInput_22.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_22.setFetchSize(1000);


		    String dbquery_tOracleInput_22 = "SELECT \n	DISTINCT\n	'1' AS v35,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOIN VAC_DAPLICADAS VDA ON VA.ID=VDA.AP"
+"LICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1"
+"\nINNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON "
+"MF.ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF"
+".GENERICOS_ID AND MG.DESCRIPCION LIKE '%TUBERCULOSIS%'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREG"
+"ISTRO_ID=1 AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_22_QUERY",dbquery_tOracleInput_22);

		    java.sql.ResultSet rs_tOracleInput_22 = null;

		    try {
		    	rs_tOracleInput_22 = stmt_tOracleInput_22.executeQuery(dbquery_tOracleInput_22);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_22 = rs_tOracleInput_22.getMetaData();
		    	int colQtyInRs_tOracleInput_22 = rsmd_tOracleInput_22.getColumnCount();

		    String tmpContent_tOracleInput_22 = null;
		    
		    
		    while (rs_tOracleInput_22.next()) {
		        nb_line_tOracleInput_22++;
		        
							if(colQtyInRs_tOracleInput_22 < 1) {
								row23.V35 = null;
							} else {
	                         		
        	row23.V35 = routines.system.JDBCUtil.getString(rs_tOracleInput_22, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_22 < 2) {
								row23.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_22.getObject(2) != null) {
						row23.PERSONAS_ID = rs_tOracleInput_22.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_22 begin ] stop
 */
	
	/**
	 * [tOracleInput_22 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 


	tos_count_tOracleInput_22++;

/**
 * [tOracleInput_22 main ] stop
 */
	
	/**
	 * [tOracleInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					


			   
			   

					row23Struct row23_HashRow = new row23Struct();
		   	   	   
				
				row23_HashRow.V35 = row23.V35;
				
				row23_HashRow.PERSONAS_ID = row23.PERSONAS_ID;
				
			tHash_Lookup_row23.put(row23_HashRow);
			
            




 


	tos_count_tAdvancedHash_row23++;

/**
 * [tAdvancedHash_row23 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_22 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

}
}finally{
	if (rs_tOracleInput_22 != null) {
		rs_tOracleInput_22.close();
	}
	if (stmt_tOracleInput_22 != null) {
		stmt_tOracleInput_22.close();
	}
}

globalMap.put("tOracleInput_22_NB_LINE",nb_line_tOracleInput_22);
 

ok_Hash.put("tOracleInput_22", true);
end_Hash.put("tOracleInput_22", System.currentTimeMillis());




/**
 * [tOracleInput_22 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

tHash_Lookup_row23.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row23", true);
end_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());




/**
 * [tAdvancedHash_row23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_22 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_22";
	
	

 



/**
 * [tOracleInput_22 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableComparableLookupRow<row24Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V36;

				public String getV36 () {
					return this.V36;
				}

				public Boolean V36IsNullable(){
				    return true;
				}
				public Boolean V36IsKey(){
				    return false;
				}
				public Integer V36Length(){
				    return null;
				}
				public Integer V36Precision(){
				    return null;
				}
				public String V36Default(){
				
					return null;
				
				}
				public String V36Comment(){
				
				    return "";
				
				}
				public String V36Pattern(){
				
					return "";
				
				}
				public String V36OriginalDbColumnName(){
				
					return "V36";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row24Struct other = (row24Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row24Struct other) {

		other.V36 = this.V36;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row24Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V36 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V36 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V36, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V36, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V36="+V36);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tAdvancedHash_row24 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row24", false);
		start_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tAdvancedHash_row24 = 0;
		

			   		// connection name:row24
			   		// source node:tOracleInput_23 - inputs:(after_tOracleInput_1) outputs:(row24,row24) | target node:tAdvancedHash_row24 - inputs:(row24) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row24 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row24Struct> tHash_Lookup_row24 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row24Struct>getLookup(matchingModeEnum_row24);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row24", tHash_Lookup_row24);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row24 begin ] stop
 */



	
	/**
	 * [tOracleInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_23", false);
		start_Hash.put("tOracleInput_23", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_23";
	
	
		int tos_count_tOracleInput_23 = 0;
		
	


	
		    int nb_line_tOracleInput_23 = 0;
		    java.sql.Connection conn_tOracleInput_23 = null;
				conn_tOracleInput_23 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_23 = false;
				boolean isConnectionWrapped_tOracleInput_23 = !(conn_tOracleInput_23 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_23.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_23 = null;
                if (isConnectionWrapped_tOracleInput_23) {
					unwrappedOraConn_tOracleInput_23 = conn_tOracleInput_23.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_23 != null) {
                        isTimeZoneNull_tOracleInput_23 = (unwrappedOraConn_tOracleInput_23.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_23 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_23).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_23) {
					java.sql.Statement stmtGetTZ_tOracleInput_23 = conn_tOracleInput_23.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_23 = stmtGetTZ_tOracleInput_23.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_23 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_23.next()) {
						sessionTimezone_tOracleInput_23 = rsGetTZ_tOracleInput_23.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_23 && unwrappedOraConn_tOracleInput_23 != null) {
                        unwrappedOraConn_tOracleInput_23.setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_23).setSessionTimeZone(sessionTimezone_tOracleInput_23);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_23 = conn_tOracleInput_23.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_23.setFetchSize(1000);


		    String dbquery_tOracleInput_23 = "SELECT \n	DISTINCT\n	'1' AS v36,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOIN VAC_DAPLICADAS VDA ON VA.ID=VDA.AP"
+"LICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1"
+"\nINNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON "
+"MF.ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF"
+".GENERICOS_ID AND MG.DESCRIPCION='VACUNA ANTIHEPATITIS B (PEDIATRICA)'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_"
+"ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_23_QUERY",dbquery_tOracleInput_23);

		    java.sql.ResultSet rs_tOracleInput_23 = null;

		    try {
		    	rs_tOracleInput_23 = stmt_tOracleInput_23.executeQuery(dbquery_tOracleInput_23);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_23 = rs_tOracleInput_23.getMetaData();
		    	int colQtyInRs_tOracleInput_23 = rsmd_tOracleInput_23.getColumnCount();

		    String tmpContent_tOracleInput_23 = null;
		    
		    
		    while (rs_tOracleInput_23.next()) {
		        nb_line_tOracleInput_23++;
		        
							if(colQtyInRs_tOracleInput_23 < 1) {
								row24.V36 = null;
							} else {
	                         		
        	row24.V36 = routines.system.JDBCUtil.getString(rs_tOracleInput_23, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_23 < 2) {
								row24.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_23.getObject(2) != null) {
						row24.PERSONAS_ID = rs_tOracleInput_23.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_23 begin ] stop
 */
	
	/**
	 * [tOracleInput_23 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 


	tos_count_tOracleInput_23++;

/**
 * [tOracleInput_23 main ] stop
 */
	
	/**
	 * [tOracleInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					


			   
			   

					row24Struct row24_HashRow = new row24Struct();
		   	   	   
				
				row24_HashRow.V36 = row24.V36;
				
				row24_HashRow.PERSONAS_ID = row24.PERSONAS_ID;
				
			tHash_Lookup_row24.put(row24_HashRow);
			
            




 


	tos_count_tAdvancedHash_row24++;

/**
 * [tAdvancedHash_row24 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";
	
	

 



/**
 * [tAdvancedHash_row24 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row24 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";
	
	

 



/**
 * [tAdvancedHash_row24 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_23 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

}
}finally{
	if (rs_tOracleInput_23 != null) {
		rs_tOracleInput_23.close();
	}
	if (stmt_tOracleInput_23 != null) {
		stmt_tOracleInput_23.close();
	}
}

globalMap.put("tOracleInput_23_NB_LINE",nb_line_tOracleInput_23);
 

ok_Hash.put("tOracleInput_23", true);
end_Hash.put("tOracleInput_23", System.currentTimeMillis());




/**
 * [tOracleInput_23 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";
	
	

tHash_Lookup_row24.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row24", true);
end_Hash.put("tAdvancedHash_row24", System.currentTimeMillis());




/**
 * [tAdvancedHash_row24 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_23 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_23";
	
	

 



/**
 * [tOracleInput_23 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row24 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row24";
	
	

 



/**
 * [tAdvancedHash_row24 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableComparableLookupRow<row25Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V37;

				public String getV37 () {
					return this.V37;
				}

				public Boolean V37IsNullable(){
				    return true;
				}
				public Boolean V37IsKey(){
				    return false;
				}
				public Integer V37Length(){
				    return 1;
				}
				public Integer V37Precision(){
				    return 0;
				}
				public String V37Default(){
				
					return null;
				
				}
				public String V37Comment(){
				
				    return "";
				
				}
				public String V37Pattern(){
				
					return "";
				
				}
				public String V37OriginalDbColumnName(){
				
					return "V37";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row25Struct other = (row25Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row25Struct other) {

		other.V37 = this.V37;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row25Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V37 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V37 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V37, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V37, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V37="+V37);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();




	
	/**
	 * [tAdvancedHash_row25 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row25", false);
		start_Hash.put("tAdvancedHash_row25", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tAdvancedHash_row25 = 0;
		

			   		// connection name:row25
			   		// source node:tOracleInput_24 - inputs:(after_tOracleInput_1) outputs:(row25,row25) | target node:tAdvancedHash_row25 - inputs:(row25) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row25 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct> tHash_Lookup_row25 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row25Struct>getLookup(matchingModeEnum_row25);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row25", tHash_Lookup_row25);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row25 begin ] stop
 */



	
	/**
	 * [tOracleInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_24", false);
		start_Hash.put("tOracleInput_24", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_24";
	
	
		int tos_count_tOracleInput_24 = 0;
		
	


	
		    int nb_line_tOracleInput_24 = 0;
		    java.sql.Connection conn_tOracleInput_24 = null;
				conn_tOracleInput_24 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_24 = false;
				boolean isConnectionWrapped_tOracleInput_24 = !(conn_tOracleInput_24 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_24.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_24 = null;
                if (isConnectionWrapped_tOracleInput_24) {
					unwrappedOraConn_tOracleInput_24 = conn_tOracleInput_24.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_24 != null) {
                        isTimeZoneNull_tOracleInput_24 = (unwrappedOraConn_tOracleInput_24.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_24 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_24).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_24) {
					java.sql.Statement stmtGetTZ_tOracleInput_24 = conn_tOracleInput_24.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_24 = stmtGetTZ_tOracleInput_24.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_24 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_24.next()) {
						sessionTimezone_tOracleInput_24 = rsGetTZ_tOracleInput_24.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_24 && unwrappedOraConn_tOracleInput_24 != null) {
                        unwrappedOraConn_tOracleInput_24.setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_24).setSessionTimeZone(sessionTimezone_tOracleInput_24);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_24 = conn_tOracleInput_24.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_24.setFetchSize(1000);


		    String dbquery_tOracleInput_24 = "SELECT \n	DISTINCT\n	MAX(CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE( "
+"'"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=4 THEN '2'\n	WHEN TDOC.SIGLA = 'T' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=6 THEN '3'\n	END) AS v37,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOI"
+"N VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDO"
+"SIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nIN"
+"NER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF."
+"ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GE"
+"NERICOS_ID AND MG.DESCRIPCION LIKE '%PENTAVALENTE%'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGIST"
+"RO_ID=1 AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_24_QUERY",dbquery_tOracleInput_24);

		    java.sql.ResultSet rs_tOracleInput_24 = null;

		    try {
		    	rs_tOracleInput_24 = stmt_tOracleInput_24.executeQuery(dbquery_tOracleInput_24);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_24 = rs_tOracleInput_24.getMetaData();
		    	int colQtyInRs_tOracleInput_24 = rsmd_tOracleInput_24.getColumnCount();

		    String tmpContent_tOracleInput_24 = null;
		    
		    
		    while (rs_tOracleInput_24.next()) {
		        nb_line_tOracleInput_24++;
		        
							if(colQtyInRs_tOracleInput_24 < 1) {
								row25.V37 = null;
							} else {
	                         		
        	row25.V37 = routines.system.JDBCUtil.getString(rs_tOracleInput_24, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_24 < 2) {
								row25.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_24.getObject(2) != null) {
						row25.PERSONAS_ID = rs_tOracleInput_24.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_24 begin ] stop
 */
	
	/**
	 * [tOracleInput_24 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 


	tos_count_tOracleInput_24++;

/**
 * [tOracleInput_24 main ] stop
 */
	
	/**
	 * [tOracleInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					


			   
			   

					row25Struct row25_HashRow = new row25Struct();
		   	   	   
				
				row25_HashRow.V37 = row25.V37;
				
				row25_HashRow.PERSONAS_ID = row25.PERSONAS_ID;
				
			tHash_Lookup_row25.put(row25_HashRow);
			
            




 


	tos_count_tAdvancedHash_row25++;

/**
 * [tAdvancedHash_row25 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row25 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_24 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

}
}finally{
	if (rs_tOracleInput_24 != null) {
		rs_tOracleInput_24.close();
	}
	if (stmt_tOracleInput_24 != null) {
		stmt_tOracleInput_24.close();
	}
}

globalMap.put("tOracleInput_24_NB_LINE",nb_line_tOracleInput_24);
 

ok_Hash.put("tOracleInput_24", true);
end_Hash.put("tOracleInput_24", System.currentTimeMillis());




/**
 * [tOracleInput_24 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

tHash_Lookup_row25.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row25", true);
end_Hash.put("tAdvancedHash_row25", System.currentTimeMillis());




/**
 * [tAdvancedHash_row25 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_24 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_24";
	
	

 



/**
 * [tOracleInput_24 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableComparableLookupRow<row26Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V38;

				public String getV38 () {
					return this.V38;
				}

				public Boolean V38IsNullable(){
				    return true;
				}
				public Boolean V38IsKey(){
				    return false;
				}
				public Integer V38Length(){
				    return null;
				}
				public Integer V38Precision(){
				    return null;
				}
				public String V38Default(){
				
					return null;
				
				}
				public String V38Comment(){
				
				    return "";
				
				}
				public String V38Pattern(){
				
					return "";
				
				}
				public String V38OriginalDbColumnName(){
				
					return "V38";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.V38 = this.V38;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V38 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V38 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V38, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V38, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V38="+V38);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tAdvancedHash_row26 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row26", false);
		start_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tAdvancedHash_row26 = 0;
		

			   		// connection name:row26
			   		// source node:tOracleInput_25 - inputs:(after_tOracleInput_1) outputs:(row26,row26) | target node:tAdvancedHash_row26 - inputs:(row26) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row26 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row26Struct>getLookup(matchingModeEnum_row26);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row26", tHash_Lookup_row26);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row26 begin ] stop
 */



	
	/**
	 * [tOracleInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_25", false);
		start_Hash.put("tOracleInput_25", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_25";
	
	
		int tos_count_tOracleInput_25 = 0;
		
	


	
		    int nb_line_tOracleInput_25 = 0;
		    java.sql.Connection conn_tOracleInput_25 = null;
				conn_tOracleInput_25 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_25 = false;
				boolean isConnectionWrapped_tOracleInput_25 = !(conn_tOracleInput_25 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_25.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_25 = null;
                if (isConnectionWrapped_tOracleInput_25) {
					unwrappedOraConn_tOracleInput_25 = conn_tOracleInput_25.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_25 != null) {
                        isTimeZoneNull_tOracleInput_25 = (unwrappedOraConn_tOracleInput_25.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_25 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_25).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_25) {
					java.sql.Statement stmtGetTZ_tOracleInput_25 = conn_tOracleInput_25.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_25 = stmtGetTZ_tOracleInput_25.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_25 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_25.next()) {
						sessionTimezone_tOracleInput_25 = rsGetTZ_tOracleInput_25.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_25 && unwrappedOraConn_tOracleInput_25 != null) {
                        unwrappedOraConn_tOracleInput_25.setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_25).setSessionTimeZone(sessionTimezone_tOracleInput_25);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_25 = conn_tOracleInput_25.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_25.setFetchSize(1000);


		    String dbquery_tOracleInput_25 = "SELECT \n	DISTINCT\n	MAX(CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE( "
+"'"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=4 THEN '2'\n	WHEN TDOC.SIGLA = 'T' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=6 THEN '3'\n	WHEN TDOC.SIGLA = 'PR' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=12 THEN '4'\n	WHEN TDOC.SIGLA = 'SR' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=18 THEN '5'\n	END) AS v38,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JO"
+"IN VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TD"
+"OSIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nI"
+"NNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF"
+".ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.G"
+"ENERICOS_ID AND MG.DESCRIPCION LIKE '%VACUNA ANTIPOLIOMIELITICA%'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AN"
+"D GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_25_QUERY",dbquery_tOracleInput_25);

		    java.sql.ResultSet rs_tOracleInput_25 = null;

		    try {
		    	rs_tOracleInput_25 = stmt_tOracleInput_25.executeQuery(dbquery_tOracleInput_25);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_25 = rs_tOracleInput_25.getMetaData();
		    	int colQtyInRs_tOracleInput_25 = rsmd_tOracleInput_25.getColumnCount();

		    String tmpContent_tOracleInput_25 = null;
		    
		    
		    while (rs_tOracleInput_25.next()) {
		        nb_line_tOracleInput_25++;
		        
							if(colQtyInRs_tOracleInput_25 < 1) {
								row26.V38 = null;
							} else {
	                         		
        	row26.V38 = routines.system.JDBCUtil.getString(rs_tOracleInput_25, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_25 < 2) {
								row26.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_25.getObject(2) != null) {
						row26.PERSONAS_ID = rs_tOracleInput_25.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_25 begin ] stop
 */
	
	/**
	 * [tOracleInput_25 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 


	tos_count_tOracleInput_25++;

/**
 * [tOracleInput_25 main ] stop
 */
	
	/**
	 * [tOracleInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					


			   
			   

					row26Struct row26_HashRow = new row26Struct();
		   	   	   
				
				row26_HashRow.V38 = row26.V38;
				
				row26_HashRow.PERSONAS_ID = row26.PERSONAS_ID;
				
			tHash_Lookup_row26.put(row26_HashRow);
			
            




 


	tos_count_tAdvancedHash_row26++;

/**
 * [tAdvancedHash_row26 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_25 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

}
}finally{
	if (rs_tOracleInput_25 != null) {
		rs_tOracleInput_25.close();
	}
	if (stmt_tOracleInput_25 != null) {
		stmt_tOracleInput_25.close();
	}
}

globalMap.put("tOracleInput_25_NB_LINE",nb_line_tOracleInput_25);
 

ok_Hash.put("tOracleInput_25", true);
end_Hash.put("tOracleInput_25", System.currentTimeMillis());




/**
 * [tOracleInput_25 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

tHash_Lookup_row26.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row26", true);
end_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());




/**
 * [tAdvancedHash_row26 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_25 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_25";
	
	

 



/**
 * [tOracleInput_25 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_25_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableComparableLookupRow<row27Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V39;

				public String getV39 () {
					return this.V39;
				}

				public Boolean V39IsNullable(){
				    return true;
				}
				public Boolean V39IsKey(){
				    return false;
				}
				public Integer V39Length(){
				    return null;
				}
				public Integer V39Precision(){
				    return null;
				}
				public String V39Default(){
				
					return null;
				
				}
				public String V39Comment(){
				
				    return "";
				
				}
				public String V39Pattern(){
				
					return "";
				
				}
				public String V39OriginalDbColumnName(){
				
					return "V39";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row27Struct other = (row27Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row27Struct other) {

		other.V39 = this.V39;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row27Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V39 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V39 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V39, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V39, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V39="+V39);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tAdvancedHash_row27 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row27", false);
		start_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tAdvancedHash_row27 = 0;
		

			   		// connection name:row27
			   		// source node:tOracleInput_26 - inputs:(after_tOracleInput_1) outputs:(row27,row27) | target node:tAdvancedHash_row27 - inputs:(row27) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row27 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row27Struct>getLookup(matchingModeEnum_row27);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row27", tHash_Lookup_row27);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row27 begin ] stop
 */



	
	/**
	 * [tOracleInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_26", false);
		start_Hash.put("tOracleInput_26", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_26";
	
	
		int tos_count_tOracleInput_26 = 0;
		
	


	
		    int nb_line_tOracleInput_26 = 0;
		    java.sql.Connection conn_tOracleInput_26 = null;
				conn_tOracleInput_26 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_26 = false;
				boolean isConnectionWrapped_tOracleInput_26 = !(conn_tOracleInput_26 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_26.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_26 = null;
                if (isConnectionWrapped_tOracleInput_26) {
					unwrappedOraConn_tOracleInput_26 = conn_tOracleInput_26.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_26 != null) {
                        isTimeZoneNull_tOracleInput_26 = (unwrappedOraConn_tOracleInput_26.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_26 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_26).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_26) {
					java.sql.Statement stmtGetTZ_tOracleInput_26 = conn_tOracleInput_26.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_26 = stmtGetTZ_tOracleInput_26.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_26 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_26.next()) {
						sessionTimezone_tOracleInput_26 = rsGetTZ_tOracleInput_26.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_26 && unwrappedOraConn_tOracleInput_26 != null) {
                        unwrappedOraConn_tOracleInput_26.setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_26).setSessionTimeZone(sessionTimezone_tOracleInput_26);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_26 = conn_tOracleInput_26.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_26.setFetchSize(1000);


		    String dbquery_tOracleInput_26 = "SELECT \nMAX( CASE WHEN TDOC.SIGLA = 'C' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=18 THEN '4'\nWHEN TDOC.SIGLA = 'Q' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=60 THEN '5' \nEND) AS v39,\nVA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOI"
+"N VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDO"
+"SIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nIN"
+"NER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF."
+"ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GE"
+"NERICOS_ID AND MG.DESCRIPCION ='VACUNA D.P.T.'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGISTRO_ID"
+"=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_26_QUERY",dbquery_tOracleInput_26);

		    java.sql.ResultSet rs_tOracleInput_26 = null;

		    try {
		    	rs_tOracleInput_26 = stmt_tOracleInput_26.executeQuery(dbquery_tOracleInput_26);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_26 = rs_tOracleInput_26.getMetaData();
		    	int colQtyInRs_tOracleInput_26 = rsmd_tOracleInput_26.getColumnCount();

		    String tmpContent_tOracleInput_26 = null;
		    
		    
		    while (rs_tOracleInput_26.next()) {
		        nb_line_tOracleInput_26++;
		        
							if(colQtyInRs_tOracleInput_26 < 1) {
								row27.V39 = null;
							} else {
	                         		
        	row27.V39 = routines.system.JDBCUtil.getString(rs_tOracleInput_26, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_26 < 2) {
								row27.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_26.getObject(2) != null) {
						row27.PERSONAS_ID = rs_tOracleInput_26.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_26 begin ] stop
 */
	
	/**
	 * [tOracleInput_26 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 


	tos_count_tOracleInput_26++;

/**
 * [tOracleInput_26 main ] stop
 */
	
	/**
	 * [tOracleInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					


			   
			   

					row27Struct row27_HashRow = new row27Struct();
		   	   	   
				
				row27_HashRow.V39 = row27.V39;
				
				row27_HashRow.PERSONAS_ID = row27.PERSONAS_ID;
				
			tHash_Lookup_row27.put(row27_HashRow);
			
            




 


	tos_count_tAdvancedHash_row27++;

/**
 * [tAdvancedHash_row27 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_26 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

}
}finally{
	if (rs_tOracleInput_26 != null) {
		rs_tOracleInput_26.close();
	}
	if (stmt_tOracleInput_26 != null) {
		stmt_tOracleInput_26.close();
	}
}

globalMap.put("tOracleInput_26_NB_LINE",nb_line_tOracleInput_26);
 

ok_Hash.put("tOracleInput_26", true);
end_Hash.put("tOracleInput_26", System.currentTimeMillis());




/**
 * [tOracleInput_26 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

tHash_Lookup_row27.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row27", true);
end_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());




/**
 * [tAdvancedHash_row27 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_26 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_26";
	
	

 



/**
 * [tOracleInput_26 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableComparableLookupRow<row28Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V40;

				public String getV40 () {
					return this.V40;
				}

				public Boolean V40IsNullable(){
				    return true;
				}
				public Boolean V40IsKey(){
				    return false;
				}
				public Integer V40Length(){
				    return null;
				}
				public Integer V40Precision(){
				    return null;
				}
				public String V40Default(){
				
					return null;
				
				}
				public String V40Comment(){
				
				    return "";
				
				}
				public String V40Pattern(){
				
					return "";
				
				}
				public String V40OriginalDbColumnName(){
				
					return "V40";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row28Struct other = (row28Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row28Struct other) {

		other.V40 = this.V40;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row28Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V40 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V40 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V40, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V40, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V40="+V40);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_27Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();




	
	/**
	 * [tAdvancedHash_row28 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row28", false);
		start_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tAdvancedHash_row28 = 0;
		

			   		// connection name:row28
			   		// source node:tOracleInput_27 - inputs:(after_tOracleInput_1) outputs:(row28,row28) | target node:tAdvancedHash_row28 - inputs:(row28) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row28 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row28Struct>getLookup(matchingModeEnum_row28);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row28", tHash_Lookup_row28);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row28 begin ] stop
 */



	
	/**
	 * [tOracleInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_27", false);
		start_Hash.put("tOracleInput_27", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_27";
	
	
		int tos_count_tOracleInput_27 = 0;
		
	


	
		    int nb_line_tOracleInput_27 = 0;
		    java.sql.Connection conn_tOracleInput_27 = null;
				conn_tOracleInput_27 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_27 = false;
				boolean isConnectionWrapped_tOracleInput_27 = !(conn_tOracleInput_27 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_27.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_27 = null;
                if (isConnectionWrapped_tOracleInput_27) {
					unwrappedOraConn_tOracleInput_27 = conn_tOracleInput_27.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_27 != null) {
                        isTimeZoneNull_tOracleInput_27 = (unwrappedOraConn_tOracleInput_27.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_27 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_27).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_27) {
					java.sql.Statement stmtGetTZ_tOracleInput_27 = conn_tOracleInput_27.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_27 = stmtGetTZ_tOracleInput_27.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_27 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_27.next()) {
						sessionTimezone_tOracleInput_27 = rsGetTZ_tOracleInput_27.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_27 && unwrappedOraConn_tOracleInput_27 != null) {
                        unwrappedOraConn_tOracleInput_27.setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_27).setSessionTimeZone(sessionTimezone_tOracleInput_27);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_27 = conn_tOracleInput_27.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_27.setFetchSize(1000);


		    String dbquery_tOracleInput_27 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE("
+" '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=4 THEN '2'\n	END) AS v40,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOI"
+"N VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDO"
+"SIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nIN"
+"NER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF."
+"ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GE"
+"NERICOS_ID AND MG.DESCRIPCION ='VACUNA ANTIROTAVIRUS'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGI"
+"STRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_27_QUERY",dbquery_tOracleInput_27);

		    java.sql.ResultSet rs_tOracleInput_27 = null;

		    try {
		    	rs_tOracleInput_27 = stmt_tOracleInput_27.executeQuery(dbquery_tOracleInput_27);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_27 = rs_tOracleInput_27.getMetaData();
		    	int colQtyInRs_tOracleInput_27 = rsmd_tOracleInput_27.getColumnCount();

		    String tmpContent_tOracleInput_27 = null;
		    
		    
		    while (rs_tOracleInput_27.next()) {
		        nb_line_tOracleInput_27++;
		        
							if(colQtyInRs_tOracleInput_27 < 1) {
								row28.V40 = null;
							} else {
	                         		
        	row28.V40 = routines.system.JDBCUtil.getString(rs_tOracleInput_27, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_27 < 2) {
								row28.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_27.getObject(2) != null) {
						row28.PERSONAS_ID = rs_tOracleInput_27.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_27 begin ] stop
 */
	
	/**
	 * [tOracleInput_27 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 


	tos_count_tOracleInput_27++;

/**
 * [tOracleInput_27 main ] stop
 */
	
	/**
	 * [tOracleInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					


			   
			   

					row28Struct row28_HashRow = new row28Struct();
		   	   	   
				
				row28_HashRow.V40 = row28.V40;
				
				row28_HashRow.PERSONAS_ID = row28.PERSONAS_ID;
				
			tHash_Lookup_row28.put(row28_HashRow);
			
            




 


	tos_count_tAdvancedHash_row28++;

/**
 * [tAdvancedHash_row28 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_27 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

}
}finally{
	if (rs_tOracleInput_27 != null) {
		rs_tOracleInput_27.close();
	}
	if (stmt_tOracleInput_27 != null) {
		stmt_tOracleInput_27.close();
	}
}

globalMap.put("tOracleInput_27_NB_LINE",nb_line_tOracleInput_27);
 

ok_Hash.put("tOracleInput_27", true);
end_Hash.put("tOracleInput_27", System.currentTimeMillis());




/**
 * [tOracleInput_27 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

tHash_Lookup_row28.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row28", true);
end_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());




/**
 * [tAdvancedHash_row28 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_27 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_27";
	
	

 



/**
 * [tOracleInput_27 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_27_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableComparableLookupRow<row29Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V41;

				public String getV41 () {
					return this.V41;
				}

				public Boolean V41IsNullable(){
				    return true;
				}
				public Boolean V41IsKey(){
				    return false;
				}
				public Integer V41Length(){
				    return null;
				}
				public Integer V41Precision(){
				    return null;
				}
				public String V41Default(){
				
					return null;
				
				}
				public String V41Comment(){
				
				    return "";
				
				}
				public String V41Pattern(){
				
					return "";
				
				}
				public String V41OriginalDbColumnName(){
				
					return "V41";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row29Struct other = (row29Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row29Struct other) {

		other.V41 = this.V41;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row29Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V41 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V41 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V41, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V41, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V41="+V41);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row29Struct row29 = new row29Struct();




	
	/**
	 * [tAdvancedHash_row29 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row29", false);
		start_Hash.put("tAdvancedHash_row29", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row29";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tAdvancedHash_row29 = 0;
		

			   		// connection name:row29
			   		// source node:tOracleInput_28 - inputs:(after_tOracleInput_1) outputs:(row29,row29) | target node:tAdvancedHash_row29 - inputs:(row29) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row29 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row29Struct> tHash_Lookup_row29 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row29Struct>getLookup(matchingModeEnum_row29);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row29", tHash_Lookup_row29);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row29 begin ] stop
 */



	
	/**
	 * [tOracleInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_28", false);
		start_Hash.put("tOracleInput_28", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_28";
	
	
		int tos_count_tOracleInput_28 = 0;
		
	


	
		    int nb_line_tOracleInput_28 = 0;
		    java.sql.Connection conn_tOracleInput_28 = null;
				conn_tOracleInput_28 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_28 = false;
				boolean isConnectionWrapped_tOracleInput_28 = !(conn_tOracleInput_28 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_28.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_28 = null;
                if (isConnectionWrapped_tOracleInput_28) {
					unwrappedOraConn_tOracleInput_28 = conn_tOracleInput_28.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_28 != null) {
                        isTimeZoneNull_tOracleInput_28 = (unwrappedOraConn_tOracleInput_28.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_28 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_28).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_28) {
					java.sql.Statement stmtGetTZ_tOracleInput_28 = conn_tOracleInput_28.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_28 = stmtGetTZ_tOracleInput_28.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_28 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_28.next()) {
						sessionTimezone_tOracleInput_28 = rsGetTZ_tOracleInput_28.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_28 && unwrappedOraConn_tOracleInput_28 != null) {
                        unwrappedOraConn_tOracleInput_28.setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_28).setSessionTimeZone(sessionTimezone_tOracleInput_28);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_28 = conn_tOracleInput_28.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_28.setFetchSize(1000);


		    String dbquery_tOracleInput_28 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE("
+" '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=4 THEN '2'\n	WHEN TDOC.SIGLA = 'T' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=6 THEN '3'\n	END) AS v41,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOI"
+"N VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDO"
+"SIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nIN"
+"NER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF."
+"ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GE"
+"NERICOS_ID AND MG.DESCRIPCION LIKE '%NEUMOCOC%'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGISTRO_I"
+"D=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_28_QUERY",dbquery_tOracleInput_28);

		    java.sql.ResultSet rs_tOracleInput_28 = null;

		    try {
		    	rs_tOracleInput_28 = stmt_tOracleInput_28.executeQuery(dbquery_tOracleInput_28);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_28 = rs_tOracleInput_28.getMetaData();
		    	int colQtyInRs_tOracleInput_28 = rsmd_tOracleInput_28.getColumnCount();

		    String tmpContent_tOracleInput_28 = null;
		    
		    
		    while (rs_tOracleInput_28.next()) {
		        nb_line_tOracleInput_28++;
		        
							if(colQtyInRs_tOracleInput_28 < 1) {
								row29.V41 = null;
							} else {
	                         		
        	row29.V41 = routines.system.JDBCUtil.getString(rs_tOracleInput_28, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_28 < 2) {
								row29.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_28.getObject(2) != null) {
						row29.PERSONAS_ID = rs_tOracleInput_28.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_28 begin ] stop
 */
	
	/**
	 * [tOracleInput_28 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 


	tos_count_tOracleInput_28++;

/**
 * [tOracleInput_28 main ] stop
 */
	
	/**
	 * [tOracleInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row29 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row29";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					


			   
			   

					row29Struct row29_HashRow = new row29Struct();
		   	   	   
				
				row29_HashRow.V41 = row29.V41;
				
				row29_HashRow.PERSONAS_ID = row29.PERSONAS_ID;
				
			tHash_Lookup_row29.put(row29_HashRow);
			
            




 


	tos_count_tAdvancedHash_row29++;

/**
 * [tAdvancedHash_row29 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row29";
	
	

 



/**
 * [tAdvancedHash_row29 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row29 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row29";
	
	

 



/**
 * [tAdvancedHash_row29 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_28 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

}
}finally{
	if (rs_tOracleInput_28 != null) {
		rs_tOracleInput_28.close();
	}
	if (stmt_tOracleInput_28 != null) {
		stmt_tOracleInput_28.close();
	}
}

globalMap.put("tOracleInput_28_NB_LINE",nb_line_tOracleInput_28);
 

ok_Hash.put("tOracleInput_28", true);
end_Hash.put("tOracleInput_28", System.currentTimeMillis());




/**
 * [tOracleInput_28 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row29 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row29";
	
	

tHash_Lookup_row29.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row29", true);
end_Hash.put("tAdvancedHash_row29", System.currentTimeMillis());




/**
 * [tAdvancedHash_row29 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_28 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_28";
	
	

 



/**
 * [tOracleInput_28 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row29 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row29";
	
	

 



/**
 * [tAdvancedHash_row29 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_28_SUBPROCESS_STATE", 1);
	}
	


public static class row30Struct implements routines.system.IPersistableComparableLookupRow<row30Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V42;

				public String getV42 () {
					return this.V42;
				}

				public Boolean V42IsNullable(){
				    return true;
				}
				public Boolean V42IsKey(){
				    return false;
				}
				public Integer V42Length(){
				    return null;
				}
				public Integer V42Precision(){
				    return null;
				}
				public String V42Default(){
				
					return null;
				
				}
				public String V42Comment(){
				
				    return "";
				
				}
				public String V42Pattern(){
				
					return "";
				
				}
				public String V42OriginalDbColumnName(){
				
					return "V42";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row30Struct other = (row30Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row30Struct other) {

		other.V42 = this.V42;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row30Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V42 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V42 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V42, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V42, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V42="+V42);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_29Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();




	
	/**
	 * [tAdvancedHash_row30 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row30", false);
		start_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tAdvancedHash_row30 = 0;
		

			   		// connection name:row30
			   		// source node:tOracleInput_29 - inputs:(after_tOracleInput_1) outputs:(row30,row30) | target node:tAdvancedHash_row30 - inputs:(row30) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row30 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row30Struct>getLookup(matchingModeEnum_row30);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row30", tHash_Lookup_row30);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row30 begin ] stop
 */



	
	/**
	 * [tOracleInput_29 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_29", false);
		start_Hash.put("tOracleInput_29", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_29";
	
	
		int tos_count_tOracleInput_29 = 0;
		
	


	
		    int nb_line_tOracleInput_29 = 0;
		    java.sql.Connection conn_tOracleInput_29 = null;
				conn_tOracleInput_29 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_29 = false;
				boolean isConnectionWrapped_tOracleInput_29 = !(conn_tOracleInput_29 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_29.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_29 = null;
                if (isConnectionWrapped_tOracleInput_29) {
					unwrappedOraConn_tOracleInput_29 = conn_tOracleInput_29.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_29 != null) {
                        isTimeZoneNull_tOracleInput_29 = (unwrappedOraConn_tOracleInput_29.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_29 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_29).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_29) {
					java.sql.Statement stmtGetTZ_tOracleInput_29 = conn_tOracleInput_29.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_29 = stmtGetTZ_tOracleInput_29.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_29 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_29.next()) {
						sessionTimezone_tOracleInput_29 = rsGetTZ_tOracleInput_29.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_29 && unwrappedOraConn_tOracleInput_29 != null) {
                        unwrappedOraConn_tOracleInput_29.setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_29).setSessionTimeZone(sessionTimezone_tOracleInput_29);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_29 = conn_tOracleInput_29.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_29.setFetchSize(1000);


		    String dbquery_tOracleInput_29 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE("
+" '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=4 THEN '2'\n	WHEN TDOC.SIGLA = 'T' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=6 THEN '3'\n	END) AS v42,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOI"
+"N VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDO"
+"SIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nIN"
+"NER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF."
+"ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GE"
+"NERICOS_ID AND MG.DESCRIPCION ='VACUNA CONTRA INFLUENZA VIRUS (PEDIATRICA)'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERS"
+"ONAS_ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_29_QUERY",dbquery_tOracleInput_29);

		    java.sql.ResultSet rs_tOracleInput_29 = null;

		    try {
		    	rs_tOracleInput_29 = stmt_tOracleInput_29.executeQuery(dbquery_tOracleInput_29);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_29 = rs_tOracleInput_29.getMetaData();
		    	int colQtyInRs_tOracleInput_29 = rsmd_tOracleInput_29.getColumnCount();

		    String tmpContent_tOracleInput_29 = null;
		    
		    
		    while (rs_tOracleInput_29.next()) {
		        nb_line_tOracleInput_29++;
		        
							if(colQtyInRs_tOracleInput_29 < 1) {
								row30.V42 = null;
							} else {
	                         		
        	row30.V42 = routines.system.JDBCUtil.getString(rs_tOracleInput_29, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_29 < 2) {
								row30.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_29.getObject(2) != null) {
						row30.PERSONAS_ID = rs_tOracleInput_29.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_29 begin ] stop
 */
	
	/**
	 * [tOracleInput_29 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 


	tos_count_tOracleInput_29++;

/**
 * [tOracleInput_29 main ] stop
 */
	
	/**
	 * [tOracleInput_29 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					


			   
			   

					row30Struct row30_HashRow = new row30Struct();
		   	   	   
				
				row30_HashRow.V42 = row30.V42;
				
				row30_HashRow.PERSONAS_ID = row30.PERSONAS_ID;
				
			tHash_Lookup_row30.put(row30_HashRow);
			
            




 


	tos_count_tAdvancedHash_row30++;

/**
 * [tAdvancedHash_row30 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_29 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_29 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

}
}finally{
	if (rs_tOracleInput_29 != null) {
		rs_tOracleInput_29.close();
	}
	if (stmt_tOracleInput_29 != null) {
		stmt_tOracleInput_29.close();
	}
}

globalMap.put("tOracleInput_29_NB_LINE",nb_line_tOracleInput_29);
 

ok_Hash.put("tOracleInput_29", true);
end_Hash.put("tOracleInput_29", System.currentTimeMillis());




/**
 * [tOracleInput_29 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

tHash_Lookup_row30.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row30", true);
end_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());




/**
 * [tAdvancedHash_row30 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_29 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_29";
	
	

 



/**
 * [tOracleInput_29 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_29_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableComparableLookupRow<row31Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V43;

				public String getV43 () {
					return this.V43;
				}

				public Boolean V43IsNullable(){
				    return true;
				}
				public Boolean V43IsKey(){
				    return false;
				}
				public Integer V43Length(){
				    return null;
				}
				public Integer V43Precision(){
				    return null;
				}
				public String V43Default(){
				
					return null;
				
				}
				public String V43Comment(){
				
				    return "";
				
				}
				public String V43Pattern(){
				
					return "";
				
				}
				public String V43OriginalDbColumnName(){
				
					return "V43";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row31Struct other = (row31Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row31Struct other) {

		other.V43 = this.V43;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row31Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V43 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V43 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V43, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V43, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V43="+V43);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_30Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();




	
	/**
	 * [tAdvancedHash_row31 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row31", false);
		start_Hash.put("tAdvancedHash_row31", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row31";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tAdvancedHash_row31 = 0;
		

			   		// connection name:row31
			   		// source node:tOracleInput_30 - inputs:(after_tOracleInput_1) outputs:(row31,row31) | target node:tAdvancedHash_row31 - inputs:(row31) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row31 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row31Struct> tHash_Lookup_row31 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row31Struct>getLookup(matchingModeEnum_row31);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row31", tHash_Lookup_row31);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row31 begin ] stop
 */



	
	/**
	 * [tOracleInput_30 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_30", false);
		start_Hash.put("tOracleInput_30", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_30";
	
	
		int tos_count_tOracleInput_30 = 0;
		
	


	
		    int nb_line_tOracleInput_30 = 0;
		    java.sql.Connection conn_tOracleInput_30 = null;
				conn_tOracleInput_30 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_30 = false;
				boolean isConnectionWrapped_tOracleInput_30 = !(conn_tOracleInput_30 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_30.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_30 = null;
                if (isConnectionWrapped_tOracleInput_30) {
					unwrappedOraConn_tOracleInput_30 = conn_tOracleInput_30.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_30 != null) {
                        isTimeZoneNull_tOracleInput_30 = (unwrappedOraConn_tOracleInput_30.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_30 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_30).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_30) {
					java.sql.Statement stmtGetTZ_tOracleInput_30 = conn_tOracleInput_30.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_30 = stmtGetTZ_tOracleInput_30.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_30 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_30.next()) {
						sessionTimezone_tOracleInput_30 = rsGetTZ_tOracleInput_30.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_30 && unwrappedOraConn_tOracleInput_30 != null) {
                        unwrappedOraConn_tOracleInput_30.setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_30).setSessionTimeZone(sessionTimezone_tOracleInput_30);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_30 = conn_tOracleInput_30.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_30.setFetchSize(1000);


		    String dbquery_tOracleInput_30 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	END) AS v43,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nI"
+"NNER JOIN VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID ="
+" VDA.TDOSIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_"
+"ID=1\nINNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS M"
+"F ON MF.ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG."
+"ID=MF.GENERICOS_ID AND MG.DESCRIPCION ='VACUNA CONTRA FIEBRE AMARILLA'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_"
+"ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_30_QUERY",dbquery_tOracleInput_30);

		    java.sql.ResultSet rs_tOracleInput_30 = null;

		    try {
		    	rs_tOracleInput_30 = stmt_tOracleInput_30.executeQuery(dbquery_tOracleInput_30);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_30 = rs_tOracleInput_30.getMetaData();
		    	int colQtyInRs_tOracleInput_30 = rsmd_tOracleInput_30.getColumnCount();

		    String tmpContent_tOracleInput_30 = null;
		    
		    
		    while (rs_tOracleInput_30.next()) {
		        nb_line_tOracleInput_30++;
		        
							if(colQtyInRs_tOracleInput_30 < 1) {
								row31.V43 = null;
							} else {
	                         		
        	row31.V43 = routines.system.JDBCUtil.getString(rs_tOracleInput_30, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_30 < 2) {
								row31.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_30.getObject(2) != null) {
						row31.PERSONAS_ID = rs_tOracleInput_30.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_30 begin ] stop
 */
	
	/**
	 * [tOracleInput_30 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 


	tos_count_tOracleInput_30++;

/**
 * [tOracleInput_30 main ] stop
 */
	
	/**
	 * [tOracleInput_30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row31 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row31";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					


			   
			   

					row31Struct row31_HashRow = new row31Struct();
		   	   	   
				
				row31_HashRow.V43 = row31.V43;
				
				row31_HashRow.PERSONAS_ID = row31.PERSONAS_ID;
				
			tHash_Lookup_row31.put(row31_HashRow);
			
            




 


	tos_count_tAdvancedHash_row31++;

/**
 * [tAdvancedHash_row31 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row31";
	
	

 



/**
 * [tAdvancedHash_row31 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row31 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row31";
	
	

 



/**
 * [tAdvancedHash_row31 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_30 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_30 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

}
}finally{
	if (rs_tOracleInput_30 != null) {
		rs_tOracleInput_30.close();
	}
	if (stmt_tOracleInput_30 != null) {
		stmt_tOracleInput_30.close();
	}
}

globalMap.put("tOracleInput_30_NB_LINE",nb_line_tOracleInput_30);
 

ok_Hash.put("tOracleInput_30", true);
end_Hash.put("tOracleInput_30", System.currentTimeMillis());




/**
 * [tOracleInput_30 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row31 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row31";
	
	

tHash_Lookup_row31.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row31", true);
end_Hash.put("tAdvancedHash_row31", System.currentTimeMillis());




/**
 * [tAdvancedHash_row31 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_30 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_30";
	
	

 



/**
 * [tOracleInput_30 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row31 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row31";
	
	

 



/**
 * [tAdvancedHash_row31 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_30_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableComparableLookupRow<row32Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V44;

				public String getV44 () {
					return this.V44;
				}

				public Boolean V44IsNullable(){
				    return true;
				}
				public Boolean V44IsKey(){
				    return false;
				}
				public Integer V44Length(){
				    return null;
				}
				public Integer V44Precision(){
				    return null;
				}
				public String V44Default(){
				
					return null;
				
				}
				public String V44Comment(){
				
				    return "";
				
				}
				public String V44Pattern(){
				
					return "";
				
				}
				public String V44OriginalDbColumnName(){
				
					return "V44";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row32Struct other = (row32Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row32Struct other) {

		other.V44 = this.V44;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row32Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V44 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V44 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V44, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V44, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V44="+V44);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_31Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tAdvancedHash_row32 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row32", false);
		start_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tAdvancedHash_row32 = 0;
		

			   		// connection name:row32
			   		// source node:tOracleInput_31 - inputs:(after_tOracleInput_1) outputs:(row32,row32) | target node:tAdvancedHash_row32 - inputs:(row32) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row32 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row32Struct>getLookup(matchingModeEnum_row32);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row32", tHash_Lookup_row32);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row32 begin ] stop
 */



	
	/**
	 * [tOracleInput_31 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_31", false);
		start_Hash.put("tOracleInput_31", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_31";
	
	
		int tos_count_tOracleInput_31 = 0;
		
	


	
		    int nb_line_tOracleInput_31 = 0;
		    java.sql.Connection conn_tOracleInput_31 = null;
				conn_tOracleInput_31 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_31 = false;
				boolean isConnectionWrapped_tOracleInput_31 = !(conn_tOracleInput_31 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_31.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_31 = null;
                if (isConnectionWrapped_tOracleInput_31) {
					unwrappedOraConn_tOracleInput_31 = conn_tOracleInput_31.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_31 != null) {
                        isTimeZoneNull_tOracleInput_31 = (unwrappedOraConn_tOracleInput_31.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_31 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_31).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_31) {
					java.sql.Statement stmtGetTZ_tOracleInput_31 = conn_tOracleInput_31.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_31 = stmtGetTZ_tOracleInput_31.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_31 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_31.next()) {
						sessionTimezone_tOracleInput_31 = rsGetTZ_tOracleInput_31.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_31 && unwrappedOraConn_tOracleInput_31 != null) {
                        unwrappedOraConn_tOracleInput_31.setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_31).setSessionTimeZone(sessionTimezone_tOracleInput_31);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_31 = conn_tOracleInput_31.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_31.setFetchSize(1000);


		    String dbquery_tOracleInput_31 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' THEN '1'\n	END) AS v44,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nI"
+"NNER JOIN VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID ="
+" VDA.TDOSIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_"
+"ID=1\nINNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS M"
+"F ON MF.ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG."
+"ID=MF.GENERICOS_ID AND MG.DESCRIPCION ='VACUNA ANTIHEPATITIS A PEDIATRICA'\nINNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSO"
+"NAS_ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_31_QUERY",dbquery_tOracleInput_31);

		    java.sql.ResultSet rs_tOracleInput_31 = null;

		    try {
		    	rs_tOracleInput_31 = stmt_tOracleInput_31.executeQuery(dbquery_tOracleInput_31);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_31 = rs_tOracleInput_31.getMetaData();
		    	int colQtyInRs_tOracleInput_31 = rsmd_tOracleInput_31.getColumnCount();

		    String tmpContent_tOracleInput_31 = null;
		    
		    
		    while (rs_tOracleInput_31.next()) {
		        nb_line_tOracleInput_31++;
		        
							if(colQtyInRs_tOracleInput_31 < 1) {
								row32.V44 = null;
							} else {
	                         		
        	row32.V44 = routines.system.JDBCUtil.getString(rs_tOracleInput_31, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_31 < 2) {
								row32.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_31.getObject(2) != null) {
						row32.PERSONAS_ID = rs_tOracleInput_31.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_31 begin ] stop
 */
	
	/**
	 * [tOracleInput_31 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 


	tos_count_tOracleInput_31++;

/**
 * [tOracleInput_31 main ] stop
 */
	
	/**
	 * [tOracleInput_31 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					


			   
			   

					row32Struct row32_HashRow = new row32Struct();
		   	   	   
				
				row32_HashRow.V44 = row32.V44;
				
				row32_HashRow.PERSONAS_ID = row32.PERSONAS_ID;
				
			tHash_Lookup_row32.put(row32_HashRow);
			
            




 


	tos_count_tAdvancedHash_row32++;

/**
 * [tAdvancedHash_row32 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_31 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_31 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

}
}finally{
	if (rs_tOracleInput_31 != null) {
		rs_tOracleInput_31.close();
	}
	if (stmt_tOracleInput_31 != null) {
		stmt_tOracleInput_31.close();
	}
}

globalMap.put("tOracleInput_31_NB_LINE",nb_line_tOracleInput_31);
 

ok_Hash.put("tOracleInput_31", true);
end_Hash.put("tOracleInput_31", System.currentTimeMillis());




/**
 * [tOracleInput_31 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

tHash_Lookup_row32.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row32", true);
end_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());




/**
 * [tAdvancedHash_row32 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_31 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_31";
	
	

 



/**
 * [tOracleInput_31 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_31_SUBPROCESS_STATE", 1);
	}
	


public static class row33Struct implements routines.system.IPersistableComparableLookupRow<row33Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V45;

				public String getV45 () {
					return this.V45;
				}

				public Boolean V45IsNullable(){
				    return true;
				}
				public Boolean V45IsKey(){
				    return false;
				}
				public Integer V45Length(){
				    return null;
				}
				public Integer V45Precision(){
				    return null;
				}
				public String V45Default(){
				
					return null;
				
				}
				public String V45Comment(){
				
				    return "";
				
				}
				public String V45Pattern(){
				
					return "";
				
				}
				public String V45OriginalDbColumnName(){
				
					return "V45";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row33Struct other = (row33Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row33Struct other) {

		other.V45 = this.V45;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row33Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V45 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V45 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V45, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V45, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V45="+V45);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_101Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_101_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row33Struct row33 = new row33Struct();




	
	/**
	 * [tAdvancedHash_row33 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row33", false);
		start_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row33";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tAdvancedHash_row33 = 0;
		

			   		// connection name:row33
			   		// source node:tOracleInput_101 - inputs:(after_tOracleInput_1) outputs:(row33,row33) | target node:tAdvancedHash_row33 - inputs:(row33) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row33 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row33Struct>getLookup(matchingModeEnum_row33);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row33", tHash_Lookup_row33);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row33 begin ] stop
 */



	
	/**
	 * [tOracleInput_101 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_101", false);
		start_Hash.put("tOracleInput_101", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_101";
	
	
		int tos_count_tOracleInput_101 = 0;
		
	


	
		    int nb_line_tOracleInput_101 = 0;
		    java.sql.Connection conn_tOracleInput_101 = null;
				conn_tOracleInput_101 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_101 = false;
				boolean isConnectionWrapped_tOracleInput_101 = !(conn_tOracleInput_101 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_101.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_101 = null;
                if (isConnectionWrapped_tOracleInput_101) {
					unwrappedOraConn_tOracleInput_101 = conn_tOracleInput_101.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_101 != null) {
                        isTimeZoneNull_tOracleInput_101 = (unwrappedOraConn_tOracleInput_101.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_101 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_101).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_101) {
					java.sql.Statement stmtGetTZ_tOracleInput_101 = conn_tOracleInput_101.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_101 = stmtGetTZ_tOracleInput_101.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_101 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_101.next()) {
						sessionTimezone_tOracleInput_101 = rsGetTZ_tOracleInput_101.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_101 && unwrappedOraConn_tOracleInput_101 != null) {
                        unwrappedOraConn_tOracleInput_101.setSessionTimeZone(sessionTimezone_tOracleInput_101);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_101).setSessionTimeZone(sessionTimezone_tOracleInput_101);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_101 = conn_tOracleInput_101.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_101.setFetchSize(1000);


		    String dbquery_tOracleInput_101 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=12  THEN '1'\n	WHEN TDOC.SIGLA = 'S' AND TRUNC(months_between(TO_DATE( '"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )) >=60 THEN '2'\n	END) AS v45,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JO"
+"IN VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TD"
+"OSIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nI"
+"NNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUCTOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF"
+".ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.G"
+"ENERICOS_ID AND MG.DESCRIPCION ='VACUNA TRIPLE VIRAL (SARAMPION - PAROTIDITIS Y RUBEOLA) SRP'\nINNER JOIN GEN_PERSONAS G"
+"P ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)<6\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_101_QUERY",dbquery_tOracleInput_101);

		    java.sql.ResultSet rs_tOracleInput_101 = null;

		    try {
		    	rs_tOracleInput_101 = stmt_tOracleInput_101.executeQuery(dbquery_tOracleInput_101);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_101 = rs_tOracleInput_101.getMetaData();
		    	int colQtyInRs_tOracleInput_101 = rsmd_tOracleInput_101.getColumnCount();

		    String tmpContent_tOracleInput_101 = null;
		    
		    
		    while (rs_tOracleInput_101.next()) {
		        nb_line_tOracleInput_101++;
		        
							if(colQtyInRs_tOracleInput_101 < 1) {
								row33.V45 = null;
							} else {
	                         		
        	row33.V45 = routines.system.JDBCUtil.getString(rs_tOracleInput_101, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_101 < 2) {
								row33.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_101.getObject(2) != null) {
						row33.PERSONAS_ID = rs_tOracleInput_101.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_101 begin ] stop
 */
	
	/**
	 * [tOracleInput_101 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_101";
	
	

 


	tos_count_tOracleInput_101++;

/**
 * [tOracleInput_101 main ] stop
 */
	
	/**
	 * [tOracleInput_101 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_101";
	
	

 



/**
 * [tOracleInput_101 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					


			   
			   

					row33Struct row33_HashRow = new row33Struct();
		   	   	   
				
				row33_HashRow.V45 = row33.V45;
				
				row33_HashRow.PERSONAS_ID = row33.PERSONAS_ID;
				
			tHash_Lookup_row33.put(row33_HashRow);
			
            




 


	tos_count_tAdvancedHash_row33++;

/**
 * [tAdvancedHash_row33 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_101 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_101";
	
	

 



/**
 * [tOracleInput_101 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_101 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_101";
	
	

}
}finally{
	if (rs_tOracleInput_101 != null) {
		rs_tOracleInput_101.close();
	}
	if (stmt_tOracleInput_101 != null) {
		stmt_tOracleInput_101.close();
	}
}

globalMap.put("tOracleInput_101_NB_LINE",nb_line_tOracleInput_101);
 

ok_Hash.put("tOracleInput_101", true);
end_Hash.put("tOracleInput_101", System.currentTimeMillis());




/**
 * [tOracleInput_101 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

tHash_Lookup_row33.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row33", true);
end_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());




/**
 * [tAdvancedHash_row33 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_101 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_101";
	
	

 



/**
 * [tOracleInput_101 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_101_SUBPROCESS_STATE", 1);
	}
	


public static class row34Struct implements routines.system.IPersistableComparableLookupRow<row34Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V46;

				public String getV46 () {
					return this.V46;
				}

				public Boolean V46IsNullable(){
				    return true;
				}
				public Boolean V46IsKey(){
				    return false;
				}
				public Integer V46Length(){
				    return null;
				}
				public Integer V46Precision(){
				    return null;
				}
				public String V46Default(){
				
					return null;
				
				}
				public String V46Comment(){
				
				    return "";
				
				}
				public String V46Pattern(){
				
					return "";
				
				}
				public String V46OriginalDbColumnName(){
				
					return "V46";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row34Struct other = (row34Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row34Struct other) {

		other.V46 = this.V46;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row34Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V46 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V46 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V46, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V46, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V46="+V46);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_106Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_106_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row34Struct row34 = new row34Struct();




	
	/**
	 * [tAdvancedHash_row34 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row34", false);
		start_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row34";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tAdvancedHash_row34 = 0;
		

			   		// connection name:row34
			   		// source node:tOracleInput_106 - inputs:(after_tOracleInput_1) outputs:(row34,row34) | target node:tAdvancedHash_row34 - inputs:(row34) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row34 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row34Struct>getLookup(matchingModeEnum_row34);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row34", tHash_Lookup_row34);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row34 begin ] stop
 */



	
	/**
	 * [tOracleInput_106 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_106", false);
		start_Hash.put("tOracleInput_106", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_106";
	
	
		int tos_count_tOracleInput_106 = 0;
		
	


	
		    int nb_line_tOracleInput_106 = 0;
		    java.sql.Connection conn_tOracleInput_106 = null;
				conn_tOracleInput_106 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_106 = false;
				boolean isConnectionWrapped_tOracleInput_106 = !(conn_tOracleInput_106 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_106.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_106 = null;
                if (isConnectionWrapped_tOracleInput_106) {
					unwrappedOraConn_tOracleInput_106 = conn_tOracleInput_106.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_106 != null) {
                        isTimeZoneNull_tOracleInput_106 = (unwrappedOraConn_tOracleInput_106.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_106 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_106).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_106) {
					java.sql.Statement stmtGetTZ_tOracleInput_106 = conn_tOracleInput_106.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_106 = stmtGetTZ_tOracleInput_106.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_106 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_106.next()) {
						sessionTimezone_tOracleInput_106 = rsGetTZ_tOracleInput_106.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_106 && unwrappedOraConn_tOracleInput_106 != null) {
                        unwrappedOraConn_tOracleInput_106.setSessionTimeZone(sessionTimezone_tOracleInput_106);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_106).setSessionTimeZone(sessionTimezone_tOracleInput_106);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_106 = conn_tOracleInput_106.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_106.setFetchSize(1000);


		    String dbquery_tOracleInput_106 = "SELECT \n	DISTINCT\n	MAX( CASE WHEN TDOC.SIGLA = 'P'  THEN '1'\n	WHEN TDOC.SIGLA = 'S'  THEN '2'\n	WHEN TDOC.SIGLA = 'T"
+"' THEN '3'\n	END) AS v46,\n	VA.PERSONAS_ID\nFROM VAC_APLICADAS VA\nINNER JOIN VAC_DAPLICADAS VDA ON VA.ID=VDA.APLICADAS_"
+"ID AND VDA.ESTREGISTRO_ID=1\nINNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VDA.TDOSIS_ID AND TDOC.ESTREGISTRO_ID=1\nINNER JOIN"
+" VAC_INVENTARIOS VI ON VI.ID= VDA.INVENTARIOS_ID AND VI.ESTREGISTRO_ID=1\nINNER JOIN MED_PRODUCTOS MP ON MP.ID=VI.PRODUC"
+"TOS_ID AND MP.ESTREGISTRO_ID=1\nINNER JOIN MED_FORMASFARMACEUTICAS MF ON MF.ESTREGISTRO_ID=1 AND MF.ID=MP.FORMASFARMACEU"
+"TICAS_ID\nINNER JOIN MED_GENERICOS MG ON MG.ESTREGISTRO_ID=1 AND MG.ID=MF.GENERICOS_ID AND MG.DESCRIPCION LIKE '%VPH%'\n"
+"INNER JOIN GEN_PERSONAS GP ON GP.ID=VA.PERSONAS_ID AND GP.ESTREGISTRO_ID=1 AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12)>=9\nINNER JOIN GEN_SEXOS GS ON GS.ID=GP.SEXO_ID AND GS.ESTREGISTRO_ID=1 AND"
+" GS.SIGLA='F'\nWHERE VA.ESTREGISTRO_ID=1\nAND VA.FAPLICACION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY VA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_106_QUERY",dbquery_tOracleInput_106);

		    java.sql.ResultSet rs_tOracleInput_106 = null;

		    try {
		    	rs_tOracleInput_106 = stmt_tOracleInput_106.executeQuery(dbquery_tOracleInput_106);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_106 = rs_tOracleInput_106.getMetaData();
		    	int colQtyInRs_tOracleInput_106 = rsmd_tOracleInput_106.getColumnCount();

		    String tmpContent_tOracleInput_106 = null;
		    
		    
		    while (rs_tOracleInput_106.next()) {
		        nb_line_tOracleInput_106++;
		        
							if(colQtyInRs_tOracleInput_106 < 1) {
								row34.V46 = null;
							} else {
	                         		
        	row34.V46 = routines.system.JDBCUtil.getString(rs_tOracleInput_106, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_106 < 2) {
								row34.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_106.getObject(2) != null) {
						row34.PERSONAS_ID = rs_tOracleInput_106.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_106 begin ] stop
 */
	
	/**
	 * [tOracleInput_106 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_106";
	
	

 


	tos_count_tOracleInput_106++;

/**
 * [tOracleInput_106 main ] stop
 */
	
	/**
	 * [tOracleInput_106 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_106";
	
	

 



/**
 * [tOracleInput_106 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					


			   
			   

					row34Struct row34_HashRow = new row34Struct();
		   	   	   
				
				row34_HashRow.V46 = row34.V46;
				
				row34_HashRow.PERSONAS_ID = row34.PERSONAS_ID;
				
			tHash_Lookup_row34.put(row34_HashRow);
			
            




 


	tos_count_tAdvancedHash_row34++;

/**
 * [tAdvancedHash_row34 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_106 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_106";
	
	

 



/**
 * [tOracleInput_106 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_106 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_106";
	
	

}
}finally{
	if (rs_tOracleInput_106 != null) {
		rs_tOracleInput_106.close();
	}
	if (stmt_tOracleInput_106 != null) {
		stmt_tOracleInput_106.close();
	}
}

globalMap.put("tOracleInput_106_NB_LINE",nb_line_tOracleInput_106);
 

ok_Hash.put("tOracleInput_106", true);
end_Hash.put("tOracleInput_106", System.currentTimeMillis());




/**
 * [tOracleInput_106 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

tHash_Lookup_row34.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row34", true);
end_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());




/**
 * [tAdvancedHash_row34 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_106 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_106";
	
	

 



/**
 * [tOracleInput_106 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_106_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableComparableLookupRow<row35Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V47;

				public String getV47 () {
					return this.V47;
				}

				public Boolean V47IsNullable(){
				    return true;
				}
				public Boolean V47IsKey(){
				    return false;
				}
				public Integer V47Length(){
				    return null;
				}
				public Integer V47Precision(){
				    return null;
				}
				public String V47Default(){
				
					return null;
				
				}
				public String V47Comment(){
				
				    return "";
				
				}
				public String V47Pattern(){
				
					return "";
				
				}
				public String V47OriginalDbColumnName(){
				
					return "V47";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row35Struct other = (row35Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row35Struct other) {

		other.V47 = this.V47;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row35Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V47 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V47 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V47, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V47, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V47="+V47);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_32Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();




	
	/**
	 * [tAdvancedHash_row35 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row35", false);
		start_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row35";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tAdvancedHash_row35 = 0;
		

			   		// connection name:row35
			   		// source node:tOracleInput_32 - inputs:(after_tOracleInput_1) outputs:(row35,row35) | target node:tAdvancedHash_row35 - inputs:(row35) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row35 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row35Struct> tHash_Lookup_row35 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row35Struct>getLookup(matchingModeEnum_row35);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row35", tHash_Lookup_row35);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row35 begin ] stop
 */



	
	/**
	 * [tOracleInput_32 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_32", false);
		start_Hash.put("tOracleInput_32", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_32";
	
	
		int tos_count_tOracleInput_32 = 0;
		
	


	
		    int nb_line_tOracleInput_32 = 0;
		    java.sql.Connection conn_tOracleInput_32 = null;
				conn_tOracleInput_32 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_32 = false;
				boolean isConnectionWrapped_tOracleInput_32 = !(conn_tOracleInput_32 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_32.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_32 = null;
                if (isConnectionWrapped_tOracleInput_32) {
					unwrappedOraConn_tOracleInput_32 = conn_tOracleInput_32.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_32 != null) {
                        isTimeZoneNull_tOracleInput_32 = (unwrappedOraConn_tOracleInput_32.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_32 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_32).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_32) {
					java.sql.Statement stmtGetTZ_tOracleInput_32 = conn_tOracleInput_32.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_32 = stmtGetTZ_tOracleInput_32.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_32 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_32.next()) {
						sessionTimezone_tOracleInput_32 = rsGetTZ_tOracleInput_32.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_32 && unwrappedOraConn_tOracleInput_32 != null) {
                        unwrappedOraConn_tOracleInput_32.setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_32).setSessionTimeZone(sessionTimezone_tOracleInput_32);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_32 = conn_tOracleInput_32.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_32.setFetchSize(1000);


		    String dbquery_tOracleInput_32 = "SELECT    V47\n        , PERSONAS_ID\nFROM (        \n    SELECT    CASE \n                 WHEN TDOC.SIGLA = 'P'  THEN"
+" '1'\n                 WHEN TDOC.SIGLA = 'S'  THEN '2'\n                 WHEN TDOC.SIGLA = 'T'  THEN '3'\n              "
+"   WHEN TDOC.SIGLA = 'PR' OR TDOC.SIGLA = 'C' THEN '4'\n                 WHEN TDOC.SIGLA = 'SR' OR TDOC.SIGLA = 'Q' THEN"
+" '5'\n              END AS v47\n            ,	VA.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY VA.PERSONAS_"
+"ID ORDER BY VA.FAPLICACION DESC) R\n    FROM MED_GENERICOS MG \n    INNER JOIN MED_FORMASFARMACEUTICAS MF ON MF.GENERICO"
+"S_ID = MG.ID \n    INNER JOIN MED_PRODUCTOS MP ON MP.FORMASFARMACEUTICAS_ID = MF.ID\n    INNER JOIN VAC_INVENTARIOS VI O"
+"N VI.PRODUCTOS_ID = MP.ID\n    INNER JOIN VAC_DAPLICADAS VD ON VD.INVENTARIOS_ID = VI.ID \n    INNER JOIN VAC_APLICADAS "
+"VA ON VA.ID = VD.APLICADAS_ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID = VA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS GS ON"
+" GS.ID = GP.SEXO_ID \n    INNER JOIN VAC_TDOSIS TDOC ON TDOC.ID = VD.TDOSIS_ID \n    WHERE MG.DESCRIPCION = 'VACUNA ANTI"
+"DIFTERICA Y ANTITETANICA'\n      AND VD.ESTREGISTRO_ID = 1\n      AND VA.ESTREGISTRO_ID = 1\n      AND GS.SIGLA = 'F'\n "
+"     AND TRUNC( VA.FAPLICACION )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                       AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n      AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12) BETWEEN 10 AND 49\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_32_QUERY",dbquery_tOracleInput_32);

		    java.sql.ResultSet rs_tOracleInput_32 = null;

		    try {
		    	rs_tOracleInput_32 = stmt_tOracleInput_32.executeQuery(dbquery_tOracleInput_32);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_32 = rs_tOracleInput_32.getMetaData();
		    	int colQtyInRs_tOracleInput_32 = rsmd_tOracleInput_32.getColumnCount();

		    String tmpContent_tOracleInput_32 = null;
		    
		    
		    while (rs_tOracleInput_32.next()) {
		        nb_line_tOracleInput_32++;
		        
							if(colQtyInRs_tOracleInput_32 < 1) {
								row35.V47 = null;
							} else {
	                         		
        	row35.V47 = routines.system.JDBCUtil.getString(rs_tOracleInput_32, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_32 < 2) {
								row35.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_32.getObject(2) != null) {
						row35.PERSONAS_ID = rs_tOracleInput_32.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_32 begin ] stop
 */
	
	/**
	 * [tOracleInput_32 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 


	tos_count_tOracleInput_32++;

/**
 * [tOracleInput_32 main ] stop
 */
	
	/**
	 * [tOracleInput_32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					


			   
			   

					row35Struct row35_HashRow = new row35Struct();
		   	   	   
				
				row35_HashRow.V47 = row35.V47;
				
				row35_HashRow.PERSONAS_ID = row35.PERSONAS_ID;
				
			tHash_Lookup_row35.put(row35_HashRow);
			
            




 


	tos_count_tAdvancedHash_row35++;

/**
 * [tAdvancedHash_row35 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row35 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_32 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_32 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

}
}finally{
	if (rs_tOracleInput_32 != null) {
		rs_tOracleInput_32.close();
	}
	if (stmt_tOracleInput_32 != null) {
		stmt_tOracleInput_32.close();
	}
}

globalMap.put("tOracleInput_32_NB_LINE",nb_line_tOracleInput_32);
 

ok_Hash.put("tOracleInput_32", true);
end_Hash.put("tOracleInput_32", System.currentTimeMillis());




/**
 * [tOracleInput_32 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

tHash_Lookup_row35.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row35", true);
end_Hash.put("tAdvancedHash_row35", System.currentTimeMillis());




/**
 * [tAdvancedHash_row35 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_32 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_32";
	
	

 



/**
 * [tOracleInput_32 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row35 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row35";
	
	

 



/**
 * [tAdvancedHash_row35 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_32_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String V48;

				public String getV48 () {
					return this.V48;
				}

				public Boolean V48IsNullable(){
				    return true;
				}
				public Boolean V48IsKey(){
				    return false;
				}
				public Integer V48Length(){
				    return 0;
				}
				public Integer V48Precision(){
				    return 0;
				}
				public String V48Default(){
				
					return null;
				
				}
				public String V48Comment(){
				
				    return "";
				
				}
				public String V48Pattern(){
				
					return "";
				
				}
				public String V48OriginalDbColumnName(){
				
					return "V48";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.V48 = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.V48 = readString(dis);
					
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.V48,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.V48,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V48="+V48);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_104Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_104_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tAdvancedHash_row36 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row36", false);
		start_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tAdvancedHash_row36 = 0;
		

			   		// connection name:row36
			   		// source node:tOracleInput_104 - inputs:(after_tOracleInput_1) outputs:(row36,row36) | target node:tAdvancedHash_row36 - inputs:(row36) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row36 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row36Struct>getLookup(matchingModeEnum_row36);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row36", tHash_Lookup_row36);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row36 begin ] stop
 */



	
	/**
	 * [tOracleInput_104 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_104", false);
		start_Hash.put("tOracleInput_104", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_104";
	
	
		int tos_count_tOracleInput_104 = 0;
		
	


	
		    int nb_line_tOracleInput_104 = 0;
		    java.sql.Connection conn_tOracleInput_104 = null;
				conn_tOracleInput_104 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_104 = false;
				boolean isConnectionWrapped_tOracleInput_104 = !(conn_tOracleInput_104 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_104.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_104 = null;
                if (isConnectionWrapped_tOracleInput_104) {
					unwrappedOraConn_tOracleInput_104 = conn_tOracleInput_104.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_104 != null) {
                        isTimeZoneNull_tOracleInput_104 = (unwrappedOraConn_tOracleInput_104.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_104 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_104).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_104) {
					java.sql.Statement stmtGetTZ_tOracleInput_104 = conn_tOracleInput_104.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_104 = stmtGetTZ_tOracleInput_104.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_104 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_104.next()) {
						sessionTimezone_tOracleInput_104 = rsGetTZ_tOracleInput_104.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_104 && unwrappedOraConn_tOracleInput_104 != null) {
                        unwrappedOraConn_tOracleInput_104.setSessionTimeZone(sessionTimezone_tOracleInput_104);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_104).setSessionTimeZone(sessionTimezone_tOracleInput_104);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_104 = conn_tOracleInput_104.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_104.setFetchSize(1000);


		    String dbquery_tOracleInput_104 = "SELECT\n	'' AS V48,\n	-1 AS PERSONAS_ID\nFROM DUAL";
		    

		    globalMap.put("tOracleInput_104_QUERY",dbquery_tOracleInput_104);

		    java.sql.ResultSet rs_tOracleInput_104 = null;

		    try {
		    	rs_tOracleInput_104 = stmt_tOracleInput_104.executeQuery(dbquery_tOracleInput_104);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_104 = rs_tOracleInput_104.getMetaData();
		    	int colQtyInRs_tOracleInput_104 = rsmd_tOracleInput_104.getColumnCount();

		    String tmpContent_tOracleInput_104 = null;
		    
		    
		    while (rs_tOracleInput_104.next()) {
		        nb_line_tOracleInput_104++;
		        
							if(colQtyInRs_tOracleInput_104 < 1) {
								row36.V48 = null;
							} else {
	                         		
        	row36.V48 = routines.system.JDBCUtil.getString(rs_tOracleInput_104, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_104 < 2) {
								row36.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_104.getObject(2) != null) {
						row36.PERSONAS_ID = rs_tOracleInput_104.getBigDecimal(2);
					} else {
				
						row36.PERSONAS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_104 begin ] stop
 */
	
	/**
	 * [tOracleInput_104 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_104";
	
	

 


	tos_count_tOracleInput_104++;

/**
 * [tOracleInput_104 main ] stop
 */
	
	/**
	 * [tOracleInput_104 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_104";
	
	

 



/**
 * [tOracleInput_104 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					


			   
			   

					row36Struct row36_HashRow = new row36Struct();
		   	   	   
				
				row36_HashRow.V48 = row36.V48;
				
				row36_HashRow.PERSONAS_ID = row36.PERSONAS_ID;
				
			tHash_Lookup_row36.put(row36_HashRow);
			
            




 


	tos_count_tAdvancedHash_row36++;

/**
 * [tAdvancedHash_row36 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_104 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_104";
	
	

 



/**
 * [tOracleInput_104 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_104 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_104";
	
	

}
}finally{
	if (rs_tOracleInput_104 != null) {
		rs_tOracleInput_104.close();
	}
	if (stmt_tOracleInput_104 != null) {
		stmt_tOracleInput_104.close();
	}
}

globalMap.put("tOracleInput_104_NB_LINE",nb_line_tOracleInput_104);
 

ok_Hash.put("tOracleInput_104", true);
end_Hash.put("tOracleInput_104", System.currentTimeMillis());




/**
 * [tOracleInput_104 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

tHash_Lookup_row36.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row36", true);
end_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());




/**
 * [tAdvancedHash_row36 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_104 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_104";
	
	

 



/**
 * [tOracleInput_104 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_104_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableComparableLookupRow<row37Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V49;

				public String getV49 () {
					return this.V49;
				}

				public Boolean V49IsNullable(){
				    return true;
				}
				public Boolean V49IsKey(){
				    return false;
				}
				public Integer V49Length(){
				    return 10;
				}
				public Integer V49Precision(){
				    return 0;
				}
				public String V49Default(){
				
					return null;
				
				}
				public String V49Comment(){
				
				    return "";
				
				}
				public String V49Pattern(){
				
					return "";
				
				}
				public String V49OriginalDbColumnName(){
				
					return "V49";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row37Struct other = (row37Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row37Struct other) {

		other.V49 = this.V49;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row37Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V49 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V49 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V49, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V49, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V49="+V49);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_33Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row37Struct row37 = new row37Struct();




	
	/**
	 * [tAdvancedHash_row37 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row37", false);
		start_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row37";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tAdvancedHash_row37 = 0;
		

			   		// connection name:row37
			   		// source node:tOracleInput_33 - inputs:(after_tOracleInput_1) outputs:(row37,row37) | target node:tAdvancedHash_row37 - inputs:(row37) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row37 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row37Struct>getLookup(matchingModeEnum_row37);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row37", tHash_Lookup_row37);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row37 begin ] stop
 */



	
	/**
	 * [tOracleInput_33 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_33", false);
		start_Hash.put("tOracleInput_33", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_33";
	
	
		int tos_count_tOracleInput_33 = 0;
		
	


	
		    int nb_line_tOracleInput_33 = 0;
		    java.sql.Connection conn_tOracleInput_33 = null;
				conn_tOracleInput_33 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_33 = false;
				boolean isConnectionWrapped_tOracleInput_33 = !(conn_tOracleInput_33 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_33.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_33 = null;
                if (isConnectionWrapped_tOracleInput_33) {
					unwrappedOraConn_tOracleInput_33 = conn_tOracleInput_33.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_33 != null) {
                        isTimeZoneNull_tOracleInput_33 = (unwrappedOraConn_tOracleInput_33.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_33 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_33).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_33) {
					java.sql.Statement stmtGetTZ_tOracleInput_33 = conn_tOracleInput_33.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_33 = stmtGetTZ_tOracleInput_33.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_33 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_33.next()) {
						sessionTimezone_tOracleInput_33 = rsGetTZ_tOracleInput_33.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_33 && unwrappedOraConn_tOracleInput_33 != null) {
                        unwrappedOraConn_tOracleInput_33.setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_33).setSessionTimeZone(sessionTimezone_tOracleInput_33);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_33 = conn_tOracleInput_33.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_33.setFetchSize(1000);


		    String dbquery_tOracleInput_33 = "SELECT \n  DISTINCT \n  TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS V49, \n  PROC.PERSONAS_ID\nFROM HCL_EVENTOBSTETRICO"
+" PARTO\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = PARTO.PROCESOSASISTENCIALES_ID\nWHERE PROC.FFINAL BETWEEN"
+" TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY  PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_33_QUERY",dbquery_tOracleInput_33);

		    java.sql.ResultSet rs_tOracleInput_33 = null;

		    try {
		    	rs_tOracleInput_33 = stmt_tOracleInput_33.executeQuery(dbquery_tOracleInput_33);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_33 = rs_tOracleInput_33.getMetaData();
		    	int colQtyInRs_tOracleInput_33 = rsmd_tOracleInput_33.getColumnCount();

		    String tmpContent_tOracleInput_33 = null;
		    
		    
		    while (rs_tOracleInput_33.next()) {
		        nb_line_tOracleInput_33++;
		        
							if(colQtyInRs_tOracleInput_33 < 1) {
								row37.V49 = null;
							} else {
	                         		
        	row37.V49 = routines.system.JDBCUtil.getString(rs_tOracleInput_33, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_33 < 2) {
								row37.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_33.getObject(2) != null) {
						row37.PERSONAS_ID = rs_tOracleInput_33.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_33 begin ] stop
 */
	
	/**
	 * [tOracleInput_33 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 


	tos_count_tOracleInput_33++;

/**
 * [tOracleInput_33 main ] stop
 */
	
	/**
	 * [tOracleInput_33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					


			   
			   

					row37Struct row37_HashRow = new row37Struct();
		   	   	   
				
				row37_HashRow.V49 = row37.V49;
				
				row37_HashRow.PERSONAS_ID = row37.PERSONAS_ID;
				
			tHash_Lookup_row37.put(row37_HashRow);
			
            




 


	tos_count_tAdvancedHash_row37++;

/**
 * [tAdvancedHash_row37 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_33 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_33 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

}
}finally{
	if (rs_tOracleInput_33 != null) {
		rs_tOracleInput_33.close();
	}
	if (stmt_tOracleInput_33 != null) {
		stmt_tOracleInput_33.close();
	}
}

globalMap.put("tOracleInput_33_NB_LINE",nb_line_tOracleInput_33);
 

ok_Hash.put("tOracleInput_33", true);
end_Hash.put("tOracleInput_33", System.currentTimeMillis());




/**
 * [tOracleInput_33 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

tHash_Lookup_row37.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row37", true);
end_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());




/**
 * [tAdvancedHash_row37 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_33 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_33";
	
	

 



/**
 * [tOracleInput_33 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_33_SUBPROCESS_STATE", 1);
	}
	


public static class row38Struct implements routines.system.IPersistableComparableLookupRow<row38Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V50;

				public String getV50 () {
					return this.V50;
				}

				public Boolean V50IsNullable(){
				    return true;
				}
				public Boolean V50IsKey(){
				    return false;
				}
				public Integer V50Length(){
				    return null;
				}
				public Integer V50Precision(){
				    return null;
				}
				public String V50Default(){
				
					return null;
				
				}
				public String V50Comment(){
				
				    return "";
				
				}
				public String V50Pattern(){
				
					return "";
				
				}
				public String V50OriginalDbColumnName(){
				
					return "V50";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row38Struct other = (row38Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row38Struct other) {

		other.V50 = this.V50;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row38Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V50 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V50 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V50, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V50, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V50="+V50);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_34Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_34_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row38Struct row38 = new row38Struct();




	
	/**
	 * [tAdvancedHash_row38 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row38", false);
		start_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row38";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tAdvancedHash_row38 = 0;
		

			   		// connection name:row38
			   		// source node:tOracleInput_34 - inputs:(after_tOracleInput_1) outputs:(row38,row38) | target node:tAdvancedHash_row38 - inputs:(row38) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row38 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row38Struct>getLookup(matchingModeEnum_row38);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row38", tHash_Lookup_row38);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row38 begin ] stop
 */



	
	/**
	 * [tOracleInput_34 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_34", false);
		start_Hash.put("tOracleInput_34", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_34";
	
	
		int tos_count_tOracleInput_34 = 0;
		
	


	
		    int nb_line_tOracleInput_34 = 0;
		    java.sql.Connection conn_tOracleInput_34 = null;
				conn_tOracleInput_34 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_34 = false;
				boolean isConnectionWrapped_tOracleInput_34 = !(conn_tOracleInput_34 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_34.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_34 = null;
                if (isConnectionWrapped_tOracleInput_34) {
					unwrappedOraConn_tOracleInput_34 = conn_tOracleInput_34.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_34 != null) {
                        isTimeZoneNull_tOracleInput_34 = (unwrappedOraConn_tOracleInput_34.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_34 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_34).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_34) {
					java.sql.Statement stmtGetTZ_tOracleInput_34 = conn_tOracleInput_34.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_34 = stmtGetTZ_tOracleInput_34.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_34 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_34.next()) {
						sessionTimezone_tOracleInput_34 = rsGetTZ_tOracleInput_34.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_34 && unwrappedOraConn_tOracleInput_34 != null) {
                        unwrappedOraConn_tOracleInput_34.setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_34).setSessionTimeZone(sessionTimezone_tOracleInput_34);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_34 = conn_tOracleInput_34.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_34.setFetchSize(1000);


		    String dbquery_tOracleInput_34 = "SELECT \n  TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS V50, \n  PROC.PERSONAS_ID\n\nFROM HCL_EVENTOBSTETRICO PARTO\nINN"
+"ER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = PARTO.PROCESOSASISTENCIALES_ID\nWHERE PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_34_QUERY",dbquery_tOracleInput_34);

		    java.sql.ResultSet rs_tOracleInput_34 = null;

		    try {
		    	rs_tOracleInput_34 = stmt_tOracleInput_34.executeQuery(dbquery_tOracleInput_34);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_34 = rs_tOracleInput_34.getMetaData();
		    	int colQtyInRs_tOracleInput_34 = rsmd_tOracleInput_34.getColumnCount();

		    String tmpContent_tOracleInput_34 = null;
		    
		    
		    while (rs_tOracleInput_34.next()) {
		        nb_line_tOracleInput_34++;
		        
							if(colQtyInRs_tOracleInput_34 < 1) {
								row38.V50 = null;
							} else {
	                         		
        	row38.V50 = routines.system.JDBCUtil.getString(rs_tOracleInput_34, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_34 < 2) {
								row38.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_34.getObject(2) != null) {
						row38.PERSONAS_ID = rs_tOracleInput_34.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_34 begin ] stop
 */
	
	/**
	 * [tOracleInput_34 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 


	tos_count_tOracleInput_34++;

/**
 * [tOracleInput_34 main ] stop
 */
	
	/**
	 * [tOracleInput_34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					


			   
			   

					row38Struct row38_HashRow = new row38Struct();
		   	   	   
				
				row38_HashRow.V50 = row38.V50;
				
				row38_HashRow.PERSONAS_ID = row38.PERSONAS_ID;
				
			tHash_Lookup_row38.put(row38_HashRow);
			
            




 


	tos_count_tAdvancedHash_row38++;

/**
 * [tAdvancedHash_row38 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_34 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_34 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

}
}finally{
	if (rs_tOracleInput_34 != null) {
		rs_tOracleInput_34.close();
	}
	if (stmt_tOracleInput_34 != null) {
		stmt_tOracleInput_34.close();
	}
}

globalMap.put("tOracleInput_34_NB_LINE",nb_line_tOracleInput_34);
 

ok_Hash.put("tOracleInput_34", true);
end_Hash.put("tOracleInput_34", System.currentTimeMillis());




/**
 * [tOracleInput_34 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

tHash_Lookup_row38.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row38", true);
end_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());




/**
 * [tAdvancedHash_row38 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_34 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_34";
	
	

 



/**
 * [tOracleInput_34 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_34_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableComparableLookupRow<row39Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V51;

				public String getV51 () {
					return this.V51;
				}

				public Boolean V51IsNullable(){
				    return true;
				}
				public Boolean V51IsKey(){
				    return false;
				}
				public Integer V51Length(){
				    return 10;
				}
				public Integer V51Precision(){
				    return 0;
				}
				public String V51Default(){
				
					return null;
				
				}
				public String V51Comment(){
				
				    return "";
				
				}
				public String V51Pattern(){
				
					return "";
				
				}
				public String V51OriginalDbColumnName(){
				
					return "V51";
				
				}

				
			    public BigDecimal MAXE;

				public BigDecimal getMAXE () {
					return this.MAXE;
				}

				public Boolean MAXEIsNullable(){
				    return true;
				}
				public Boolean MAXEIsKey(){
				    return false;
				}
				public Integer MAXELength(){
				    return 0;
				}
				public Integer MAXEPrecision(){
				    return 0;
				}
				public String MAXEDefault(){
				
					return "";
				
				}
				public String MAXEComment(){
				
				    return "";
				
				}
				public String MAXEPattern(){
				
					return "";
				
				}
				public String MAXEOriginalDbColumnName(){
				
					return "MAXE";
				
				}

				
			    public BigDecimal MAXP;

				public BigDecimal getMAXP () {
					return this.MAXP;
				}

				public Boolean MAXPIsNullable(){
				    return true;
				}
				public Boolean MAXPIsKey(){
				    return false;
				}
				public Integer MAXPLength(){
				    return 0;
				}
				public Integer MAXPPrecision(){
				    return 0;
				}
				public String MAXPDefault(){
				
					return "";
				
				}
				public String MAXPComment(){
				
				    return "";
				
				}
				public String MAXPPattern(){
				
					return "";
				
				}
				public String MAXPOriginalDbColumnName(){
				
					return "MAXP";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row39Struct other = (row39Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row39Struct other) {

		other.V51 = this.V51;
	            other.MAXE = this.MAXE;
	            other.MAXP = this.MAXP;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row39Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V51 = readString(dis,ois);
					
       			    	this.MAXE = (BigDecimal) ois.readObject();
					
       			    	this.MAXP = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V51 = readString(dis,objectIn);
					
       			    	this.MAXE = (BigDecimal) objectIn.readObject();
					
       			    	this.MAXP = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V51, dos, oos);
					
       			    	oos.writeObject(this.MAXE);
					
       			    	oos.writeObject(this.MAXP);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V51, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.MAXE);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.MAXP);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V51="+V51);
		sb.append(",MAXE="+String.valueOf(MAXE));
		sb.append(",MAXP="+String.valueOf(MAXP));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_94Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_94_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();




	
	/**
	 * [tAdvancedHash_row39 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row39", false);
		start_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row39";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tAdvancedHash_row39 = 0;
		

			   		// connection name:row39
			   		// source node:tOracleInput_94 - inputs:(after_tOracleInput_1) outputs:(row39,row39) | target node:tAdvancedHash_row39 - inputs:(row39) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row39 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row39Struct>getLookup(matchingModeEnum_row39);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row39", tHash_Lookup_row39);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row39 begin ] stop
 */



	
	/**
	 * [tOracleInput_94 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_94", false);
		start_Hash.put("tOracleInput_94", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_94";
	
	
		int tos_count_tOracleInput_94 = 0;
		
	


	
		    int nb_line_tOracleInput_94 = 0;
		    java.sql.Connection conn_tOracleInput_94 = null;
				conn_tOracleInput_94 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_94 = false;
				boolean isConnectionWrapped_tOracleInput_94 = !(conn_tOracleInput_94 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_94.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_94 = null;
                if (isConnectionWrapped_tOracleInput_94) {
					unwrappedOraConn_tOracleInput_94 = conn_tOracleInput_94.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_94 != null) {
                        isTimeZoneNull_tOracleInput_94 = (unwrappedOraConn_tOracleInput_94.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_94 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_94).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_94) {
					java.sql.Statement stmtGetTZ_tOracleInput_94 = conn_tOracleInput_94.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_94 = stmtGetTZ_tOracleInput_94.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_94 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_94.next()) {
						sessionTimezone_tOracleInput_94 = rsGetTZ_tOracleInput_94.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_94 && unwrappedOraConn_tOracleInput_94 != null) {
                        unwrappedOraConn_tOracleInput_94.setSessionTimeZone(sessionTimezone_tOracleInput_94);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_94).setSessionTimeZone(sessionTimezone_tOracleInput_94);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_94 = conn_tOracleInput_94.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_94.setFetchSize(1000);


		    String dbquery_tOracleInput_94 = "SELECT \n  CASE\n  WHEN MAX(EJE.ID) IS NOT NULL AND MAX(EJE.FEJECUCION)>NVL(MAX(HP.FINICIAL), MAX(EJE.FEJECUCION)-1) TH"
+"EN TO_CHAR(MAX(EJE.FEJECUCION),'YYYY-MM-DD') \n  WHEN MAX(HP.ID) IS NOT NULL AND MAX(HP.FINICIAL)>NVL(MAX(EJE.FEJECUCION"
+"),MAX(HP.FINICIAL)-1) THEN  TO_CHAR(MAX(HP.FINICIAL),'YYYY-MM-DD') END AS v51,\n  MAX(EJE.ID) AS MAXE,\n  MAX(HP.ID) AS "
+"MAXP,\n  PER.ID AS PERSONAS_ID\nFROM CGP_DEJECACTIVIDADES DACT\nINNER JOIN CGP_ACTIVIDADES ACT ON ACT.ID = DACT.ACTIVIDA"
+"DES_ID AND ACT.NOMBRE IN ('Consejer√≠a en lactancia materna')\nLEFT JOIN CGP_EJECACTIVIDADES EJE ON EJE.ID = DACT.EJECACT"
+"IVIDADES_ID AND EJE.FEJECUCION BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nLEFT JOIN HCL_PROCESOSASISTENCIALES HP ON HP.ID=DACT.PROCESOSASISTENCIALES_ID AND HP.FFINAL BETWEE"
+"N TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nINNER JOIN GEN_PERSONAS PER ON PER.ID = DACT.PERSONAS_ID \nGROUP BY PER.ID";
		    

		    globalMap.put("tOracleInput_94_QUERY",dbquery_tOracleInput_94);

		    java.sql.ResultSet rs_tOracleInput_94 = null;

		    try {
		    	rs_tOracleInput_94 = stmt_tOracleInput_94.executeQuery(dbquery_tOracleInput_94);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_94 = rs_tOracleInput_94.getMetaData();
		    	int colQtyInRs_tOracleInput_94 = rsmd_tOracleInput_94.getColumnCount();

		    String tmpContent_tOracleInput_94 = null;
		    
		    
		    while (rs_tOracleInput_94.next()) {
		        nb_line_tOracleInput_94++;
		        
							if(colQtyInRs_tOracleInput_94 < 1) {
								row39.V51 = null;
							} else {
	                         		
        	row39.V51 = routines.system.JDBCUtil.getString(rs_tOracleInput_94, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_94 < 2) {
								row39.MAXE = null;
							} else {
		                          
					if(rs_tOracleInput_94.getObject(2) != null) {
						row39.MAXE = rs_tOracleInput_94.getBigDecimal(2);
					} else {
				
						row39.MAXE = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_94 < 3) {
								row39.MAXP = null;
							} else {
		                          
					if(rs_tOracleInput_94.getObject(3) != null) {
						row39.MAXP = rs_tOracleInput_94.getBigDecimal(3);
					} else {
				
						row39.MAXP = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_94 < 4) {
								row39.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_94.getObject(4) != null) {
						row39.PERSONAS_ID = rs_tOracleInput_94.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_94 begin ] stop
 */
	
	/**
	 * [tOracleInput_94 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_94";
	
	

 


	tos_count_tOracleInput_94++;

/**
 * [tOracleInput_94 main ] stop
 */
	
	/**
	 * [tOracleInput_94 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_94";
	
	

 



/**
 * [tOracleInput_94 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					


			   
			   

					row39Struct row39_HashRow = new row39Struct();
		   	   	   
				
				row39_HashRow.V51 = row39.V51;
				
				row39_HashRow.MAXE = row39.MAXE;
				
				row39_HashRow.MAXP = row39.MAXP;
				
				row39_HashRow.PERSONAS_ID = row39.PERSONAS_ID;
				
			tHash_Lookup_row39.put(row39_HashRow);
			
            




 


	tos_count_tAdvancedHash_row39++;

/**
 * [tAdvancedHash_row39 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_94 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_94";
	
	

 



/**
 * [tOracleInput_94 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_94 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_94";
	
	

}
}finally{
	if (rs_tOracleInput_94 != null) {
		rs_tOracleInput_94.close();
	}
	if (stmt_tOracleInput_94 != null) {
		stmt_tOracleInput_94.close();
	}
}

globalMap.put("tOracleInput_94_NB_LINE",nb_line_tOracleInput_94);
 

ok_Hash.put("tOracleInput_94", true);
end_Hash.put("tOracleInput_94", System.currentTimeMillis());




/**
 * [tOracleInput_94 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

tHash_Lookup_row39.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row39", true);
end_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());




/**
 * [tAdvancedHash_row39 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_94 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_94";
	
	

 



/**
 * [tOracleInput_94 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_94_SUBPROCESS_STATE", 1);
	}
	


public static class row40Struct implements routines.system.IPersistableComparableLookupRow<row40Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V52;

				public String getV52 () {
					return this.V52;
				}

				public Boolean V52IsNullable(){
				    return true;
				}
				public Boolean V52IsKey(){
				    return false;
				}
				public Integer V52Length(){
				    return null;
				}
				public Integer V52Precision(){
				    return null;
				}
				public String V52Default(){
				
					return null;
				
				}
				public String V52Comment(){
				
				    return "";
				
				}
				public String V52Pattern(){
				
					return "";
				
				}
				public String V52OriginalDbColumnName(){
				
					return "V52";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row40Struct other = (row40Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row40Struct other) {

		other.V52 = this.V52;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row40Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V52 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V52 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V52, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V52, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V52="+V52);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_35Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row40Struct row40 = new row40Struct();




	
	/**
	 * [tAdvancedHash_row40 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row40", false);
		start_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row40";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tAdvancedHash_row40 = 0;
		

			   		// connection name:row40
			   		// source node:tOracleInput_35 - inputs:(after_tOracleInput_1) outputs:(row40,row40) | target node:tAdvancedHash_row40 - inputs:(row40) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row40 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row40Struct>getLookup(matchingModeEnum_row40);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row40", tHash_Lookup_row40);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row40 begin ] stop
 */



	
	/**
	 * [tOracleInput_35 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_35", false);
		start_Hash.put("tOracleInput_35", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_35";
	
	
		int tos_count_tOracleInput_35 = 0;
		
	


	
		    int nb_line_tOracleInput_35 = 0;
		    java.sql.Connection conn_tOracleInput_35 = null;
				conn_tOracleInput_35 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_35 = false;
				boolean isConnectionWrapped_tOracleInput_35 = !(conn_tOracleInput_35 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_35.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_35 = null;
                if (isConnectionWrapped_tOracleInput_35) {
					unwrappedOraConn_tOracleInput_35 = conn_tOracleInput_35.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_35 != null) {
                        isTimeZoneNull_tOracleInput_35 = (unwrappedOraConn_tOracleInput_35.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_35 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_35).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_35) {
					java.sql.Statement stmtGetTZ_tOracleInput_35 = conn_tOracleInput_35.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_35 = stmtGetTZ_tOracleInput_35.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_35 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_35.next()) {
						sessionTimezone_tOracleInput_35 = rsGetTZ_tOracleInput_35.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_35 && unwrappedOraConn_tOracleInput_35 != null) {
                        unwrappedOraConn_tOracleInput_35.setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_35).setSessionTimeZone(sessionTimezone_tOracleInput_35);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_35 = conn_tOracleInput_35.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_35.setFetchSize(1000);


		    String dbquery_tOracleInput_35 = "SELECT \n  TO_CHAR(PROC.FINICIAL,'YYYY-MM-DD') AS V52,\n  PROC.PERSONAS_ID\n\nFROM HCL_NEONATOS NEO \nINNER JOIN HCL_PR"
+"OCESOSASISTENCIALES PROC ON PROC.PERSONAS_ID = NEO.NEONATO\nINNER JOIN HCL_VALORACIONES VAL ON VAL.ID = ( SELECT MIN(VAL"
+".ID) FROM HCL_VALORACIONES VAL \n                                              INNER JOIN HCL_PROCESOSASISTENCIALES PROC"
+"1 ON PROC1.ID = VAL.PROCESOSASISTENCIALES_ID  \n                                              INNER JOIN GEN_PERSONAS GP"
+" ON GP.ID=PROC1.PERSONAS_ID AND (PROC1.FFINAL-GP.FECHA_NACIMIENTO <30)\n                                              WH"
+"ERE PROC1.PERSONAS_ID = PROC.PERSONAS_ID \n                                              AND  PROC.FFINAL BETWEEN TO_DAT"
+"E('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1                                              \n                                              )\n";
		    

		    globalMap.put("tOracleInput_35_QUERY",dbquery_tOracleInput_35);

		    java.sql.ResultSet rs_tOracleInput_35 = null;

		    try {
		    	rs_tOracleInput_35 = stmt_tOracleInput_35.executeQuery(dbquery_tOracleInput_35);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_35 = rs_tOracleInput_35.getMetaData();
		    	int colQtyInRs_tOracleInput_35 = rsmd_tOracleInput_35.getColumnCount();

		    String tmpContent_tOracleInput_35 = null;
		    
		    
		    while (rs_tOracleInput_35.next()) {
		        nb_line_tOracleInput_35++;
		        
							if(colQtyInRs_tOracleInput_35 < 1) {
								row40.V52 = null;
							} else {
	                         		
        	row40.V52 = routines.system.JDBCUtil.getString(rs_tOracleInput_35, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_35 < 2) {
								row40.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_35.getObject(2) != null) {
						row40.PERSONAS_ID = rs_tOracleInput_35.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_35 begin ] stop
 */
	
	/**
	 * [tOracleInput_35 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 


	tos_count_tOracleInput_35++;

/**
 * [tOracleInput_35 main ] stop
 */
	
	/**
	 * [tOracleInput_35 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					


			   
			   

					row40Struct row40_HashRow = new row40Struct();
		   	   	   
				
				row40_HashRow.V52 = row40.V52;
				
				row40_HashRow.PERSONAS_ID = row40.PERSONAS_ID;
				
			tHash_Lookup_row40.put(row40_HashRow);
			
            




 


	tos_count_tAdvancedHash_row40++;

/**
 * [tAdvancedHash_row40 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";
	
	

 



/**
 * [tAdvancedHash_row40 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row40 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";
	
	

 



/**
 * [tAdvancedHash_row40 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_35 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_35 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

}
}finally{
	if (rs_tOracleInput_35 != null) {
		rs_tOracleInput_35.close();
	}
	if (stmt_tOracleInput_35 != null) {
		stmt_tOracleInput_35.close();
	}
}

globalMap.put("tOracleInput_35_NB_LINE",nb_line_tOracleInput_35);
 

ok_Hash.put("tOracleInput_35", true);
end_Hash.put("tOracleInput_35", System.currentTimeMillis());




/**
 * [tOracleInput_35 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";
	
	

tHash_Lookup_row40.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row40", true);
end_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());




/**
 * [tAdvancedHash_row40 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_35 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_35";
	
	

 



/**
 * [tOracleInput_35 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row40 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row40";
	
	

 



/**
 * [tAdvancedHash_row40 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_35_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableComparableLookupRow<row41Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V53;

				public String getV53 () {
					return this.V53;
				}

				public Boolean V53IsNullable(){
				    return true;
				}
				public Boolean V53IsKey(){
				    return false;
				}
				public Integer V53Length(){
				    return 10;
				}
				public Integer V53Precision(){
				    return 0;
				}
				public String V53Default(){
				
					return null;
				
				}
				public String V53Comment(){
				
				    return "";
				
				}
				public String V53Pattern(){
				
					return "";
				
				}
				public String V53OriginalDbColumnName(){
				
					return "V53";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row41Struct other = (row41Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row41Struct other) {

		other.V53 = this.V53;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row41Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V53 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V53 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V53, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V53, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V53="+V53);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_36Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tAdvancedHash_row41 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row41", false);
		start_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tAdvancedHash_row41 = 0;
		

			   		// connection name:row41
			   		// source node:tOracleInput_36 - inputs:(after_tOracleInput_1) outputs:(row41,row41) | target node:tAdvancedHash_row41 - inputs:(row41) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row41 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row41Struct>getLookup(matchingModeEnum_row41);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row41", tHash_Lookup_row41);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row41 begin ] stop
 */



	
	/**
	 * [tOracleInput_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_36", false);
		start_Hash.put("tOracleInput_36", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_36";
	
	
		int tos_count_tOracleInput_36 = 0;
		
	


	
		    int nb_line_tOracleInput_36 = 0;
		    java.sql.Connection conn_tOracleInput_36 = null;
				conn_tOracleInput_36 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_36 = false;
				boolean isConnectionWrapped_tOracleInput_36 = !(conn_tOracleInput_36 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_36.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_36 = null;
                if (isConnectionWrapped_tOracleInput_36) {
					unwrappedOraConn_tOracleInput_36 = conn_tOracleInput_36.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_36 != null) {
                        isTimeZoneNull_tOracleInput_36 = (unwrappedOraConn_tOracleInput_36.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_36 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_36).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_36) {
					java.sql.Statement stmtGetTZ_tOracleInput_36 = conn_tOracleInput_36.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_36 = stmtGetTZ_tOracleInput_36.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_36 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_36.next()) {
						sessionTimezone_tOracleInput_36 = rsGetTZ_tOracleInput_36.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_36 && unwrappedOraConn_tOracleInput_36 != null) {
                        unwrappedOraConn_tOracleInput_36.setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_36).setSessionTimeZone(sessionTimezone_tOracleInput_36);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_36 = conn_tOracleInput_36.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_36.setFetchSize(1000);


		    String dbquery_tOracleInput_36 = "SELECT    V53\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR(HPA.FFINAL,'YYYY-MM-DD') AS V53\n            , HPA"
+".PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY HPA.PERSONAS_ID ORDER BY HPA.FFINAL DESC) R\n    FROM HCL_PR"
+"OCESOSASISTENCIALES HPA\n    INNER JOIN HCL_VALORACIONES HV ON HV.PROCESOSASISTENCIALES_ID = HPA.ID\n    INNER JOIN GEN_"
+"PYP PYP ON PYP.ID = HV.PYP_ID \n    INNER JOIN GEN_FINALIDADCONSULTA GFC ON GFC.ID = HV.FINALIDADCONSULTA_ID    \n    IN"
+"NER JOIN GEN_CUPS GC ON GC.ID = HV.CUPS_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = HPA.PERSONAS_ID \n    INNER JOIN "
+"GEN_SEXOS GS ON GS.ID = GP.SEXO_ID \n    INNER JOIN GEN_UORG UORG ON UORG.ID = HPA.UORG_ID \n    INNER JOIN GEN_FUERZAS "
+"GF ON GF.ID = UORG.FUERZA_ID \n    WHERE  (PYP.SIGLA ='SSR' OR GFC.CODIGO = '3')\n      AND GC.CODIGO IN ('890201','8902"
+"05')\n      AND TRUNC( HPA.FFINAL ) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_36_QUERY",dbquery_tOracleInput_36);

		    java.sql.ResultSet rs_tOracleInput_36 = null;

		    try {
		    	rs_tOracleInput_36 = stmt_tOracleInput_36.executeQuery(dbquery_tOracleInput_36);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_36 = rs_tOracleInput_36.getMetaData();
		    	int colQtyInRs_tOracleInput_36 = rsmd_tOracleInput_36.getColumnCount();

		    String tmpContent_tOracleInput_36 = null;
		    
		    
		    while (rs_tOracleInput_36.next()) {
		        nb_line_tOracleInput_36++;
		        
							if(colQtyInRs_tOracleInput_36 < 1) {
								row41.V53 = null;
							} else {
	                         		
        	row41.V53 = routines.system.JDBCUtil.getString(rs_tOracleInput_36, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_36 < 2) {
								row41.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_36.getObject(2) != null) {
						row41.PERSONAS_ID = rs_tOracleInput_36.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_36 begin ] stop
 */
	
	/**
	 * [tOracleInput_36 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 


	tos_count_tOracleInput_36++;

/**
 * [tOracleInput_36 main ] stop
 */
	
	/**
	 * [tOracleInput_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					


			   
			   

					row41Struct row41_HashRow = new row41Struct();
		   	   	   
				
				row41_HashRow.V53 = row41.V53;
				
				row41_HashRow.PERSONAS_ID = row41.PERSONAS_ID;
				
			tHash_Lookup_row41.put(row41_HashRow);
			
            




 


	tos_count_tAdvancedHash_row41++;

/**
 * [tAdvancedHash_row41 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_36 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

}
}finally{
	if (rs_tOracleInput_36 != null) {
		rs_tOracleInput_36.close();
	}
	if (stmt_tOracleInput_36 != null) {
		stmt_tOracleInput_36.close();
	}
}

globalMap.put("tOracleInput_36_NB_LINE",nb_line_tOracleInput_36);
 

ok_Hash.put("tOracleInput_36", true);
end_Hash.put("tOracleInput_36", System.currentTimeMillis());




/**
 * [tOracleInput_36 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

tHash_Lookup_row41.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row41", true);
end_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());




/**
 * [tAdvancedHash_row41 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_36 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_36";
	
	

 



/**
 * [tOracleInput_36 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_36_SUBPROCESS_STATE", 1);
	}
	


public static class row42Struct implements routines.system.IPersistableComparableLookupRow<row42Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V54;

				public String getV54 () {
					return this.V54;
				}

				public Boolean V54IsNullable(){
				    return true;
				}
				public Boolean V54IsKey(){
				    return false;
				}
				public Integer V54Length(){
				    return 2;
				}
				public Integer V54Precision(){
				    return 0;
				}
				public String V54Default(){
				
					return null;
				
				}
				public String V54Comment(){
				
				    return "";
				
				}
				public String V54Pattern(){
				
					return "";
				
				}
				public String V54OriginalDbColumnName(){
				
					return "V54";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row42Struct other = (row42Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row42Struct other) {

		other.V54 = this.V54;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row42Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V54 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V54 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V54, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V54, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V54="+V54);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_103Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_103_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row42Struct row42 = new row42Struct();




	
	/**
	 * [tAdvancedHash_row42 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row42", false);
		start_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row42";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tAdvancedHash_row42 = 0;
		

			   		// connection name:row42
			   		// source node:tOracleInput_103 - inputs:(after_tOracleInput_1) outputs:(row42,row42) | target node:tAdvancedHash_row42 - inputs:(row42) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row42 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row42Struct> tHash_Lookup_row42 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row42Struct>getLookup(matchingModeEnum_row42);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row42", tHash_Lookup_row42);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row42 begin ] stop
 */



	
	/**
	 * [tOracleInput_103 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_103", false);
		start_Hash.put("tOracleInput_103", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_103";
	
	
		int tos_count_tOracleInput_103 = 0;
		
	


	
		    int nb_line_tOracleInput_103 = 0;
		    java.sql.Connection conn_tOracleInput_103 = null;
				conn_tOracleInput_103 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_103 = false;
				boolean isConnectionWrapped_tOracleInput_103 = !(conn_tOracleInput_103 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_103.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_103 = null;
                if (isConnectionWrapped_tOracleInput_103) {
					unwrappedOraConn_tOracleInput_103 = conn_tOracleInput_103.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_103 != null) {
                        isTimeZoneNull_tOracleInput_103 = (unwrappedOraConn_tOracleInput_103.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_103 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_103).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_103) {
					java.sql.Statement stmtGetTZ_tOracleInput_103 = conn_tOracleInput_103.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_103 = stmtGetTZ_tOracleInput_103.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_103 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_103.next()) {
						sessionTimezone_tOracleInput_103 = rsGetTZ_tOracleInput_103.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_103 && unwrappedOraConn_tOracleInput_103 != null) {
                        unwrappedOraConn_tOracleInput_103.setSessionTimeZone(sessionTimezone_tOracleInput_103);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_103).setSessionTimeZone(sessionTimezone_tOracleInput_103);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_103 = conn_tOracleInput_103.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_103.setFetchSize(1000);


		    String dbquery_tOracleInput_103 = "SELECT\nCASE \nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Dispositivo Intrauterino' THE"
+"N '1' \nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Dispositivo Intrauterino%' \n AND"
+" (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Barrera%' THEN '2'\nWHEN (LISTAGG(F.ADMINISTR"
+"ACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Implante Subd√©rmico' THEN '3'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WI"
+"THIN GROUP (ORDER BY F.ID DESC)) LIKE '%Implante Subd√©rmico%' \n AND (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER"
+" BY F.ID DESC)) LIKE '%Barrera%' THEN '4'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Or"
+"al' THEN '5'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Oral%' \n AND (LISTAGG(F.AD"
+"MINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Barrera%' THEN '6'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WI"
+"THIN GROUP (ORDER BY F.ID DESC)) = 'Inyectable Mensual' THEN '7'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORD"
+"ER BY F.ID DESC)) LIKE '%Inyectable Mensual%' \n AND (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) "
+"LIKE '%Barrera%' THEN '8'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Inyectable Trimest"
+"ral' THEN '9'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Inyectable Trimestral%' \n"
+" AND (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Barrera%' THEN '10'\nWHEN (LISTAGG(F.ADMI"
+"NISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Esterilizacion' THEN '13'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') W"
+"ITHIN GROUP (ORDER BY F.ID DESC)) LIKE '%Esterilizacion%'\n AND (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F"
+".ID DESC)) LIKE '%Barrera%' THEN '14'\nWHEN (LISTAGG(F.ADMINISTRACION, '-') WITHIN GROUP (ORDER BY F.ID DESC)) = 'Barrer"
+"a' THEN '15'\nELSE '21'\nEND AS V54\n, F.ID AS PERSONAS_ID\nFROM((\nSELECT \n  GP.id,\n  CASE WHEN mi.NOMBRE LIKE '%COND"
+"ON%' THEN 'Barrera'\n  WHEN VA.NOMBRE = 'Parenteral' AND DHF.POSOLOGIA LIKE '%ensual%' THEN 'Inyectable Mensual'\n  WHEN"
+" VA.NOMBRE = 'Parenteral' AND DHF.POSOLOGIA LIKE '%rimestra%' THEN 'Inyectable Trimestral'\n  WHEN VA.NOMBRE = 'Subcut√°n"
+"ea' AND mg.descripcion LIKE '%IMPLANTE%'THEN 'Implante Subd√©rmico'\n  ELSE va.nombre END as administracion,\n  MM.FMOVIM"
+"IENTO AS FECHA\nFROM Hcl_Formmedinsumos hf \nLEFT JOIN Hcl_Dformmedinsumos dhf ON dhf.formmedinsumos_id = hf.id \nLEFT J"
+"OIN Med_Formasfarmaceuticas mff ON mff.id = dhf.FORMASFARMACEUTICAS_ID\nLEFT JOIN MED_GENERICOS mg ON mg.id = mff.generi"
+"cos_id\nLEFT JOIN MED_INSUMOS mi ON mi.id = mff.insumos_id\nLEFT JOIN MED_TVIADMIN va ON va.id = mg.tviadmin_id\nLEFT JO"
+"IN MED_UMEDIDA um ON um.id = dhf.umedida_id\nLEFT JOIN HCL_FORMMEDICAS HFM ON HFM.ID = HF.FORMMEDICAS_ID\nLEFT JOIN GEN_"
+"TFORMULAS GTF ON GTF.ID = HFM.TFORMULAS_ID\nLEFT JOIN MED_DACUERDOSFORMAS mdaf ON mdaf.formasfarmaceuticas_id = mff.id A"
+"ND mdaf.estregistro_id = 1 AND mdaf.estado = 'Activo'\nLEFT JOIN MED_DACUERDOS mda ON mda.id = mdaf.dacuerdos_id\nINNER "
+"JOIN hcl_formmedicas hfor ON hfor.id = hf.formmedicas_id\nINNER JOIN hcl_procesosasistenciales hpa ON hpa.id = hfor.proc"
+"esosasistenciales_id AND hpa.ESTREGISTRO_ID=1 AND HPA.ESTADO = 'Registrado'\nINNER JOIN SALUDSIS.HCL_VALORACIONES VAL ON"
+" VAL.PROCESOSASISTENCIALES_ID=hpa.ID AND VAL.ESTREGISTRO_ID=1 \nINNER JOIN gen_personas gp ON gp.id = hpa.personas_id\nI"
+"NNER JOIN SALUDSIS.CYD_MEDICAMENTOS CM ON CM.FORMAFARMACEUTICA_ID= mff.ID AND CM.PROGRAMA_ID IN (SELECT ID FROM GEN_PYP "
+"P WHERE P.SIGLA='PF')\ninner JOIN MED_MOVIMIENTOS MM ON MM.FORMMEDINSUMOS_ID = HF.ID \ninner JOIN MED_TMOVIMIENTOS TM ON"
+" TM.ID = MM.TMOVIMIENTOS_ID AND TM.SIGLA IN ('DA', 'DH') \nWHERE dhf.estregistro_id = 1 AND hf.estregistro_id = 1 AND dh"
+"f.estado <> 'Cancelada' \nAND ROUND(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 59\nAND  MM.FMOVIMIENTO IS NOT NULL\n)\nUNION \n(SELECT \n  GP."
+"ID,\n  CASE WHEN (C.NOMBRE LIKE '%LIGADURA DE TROMPAS%' OR C.NOMBRE LIKE '%VASECTOM%' ) THEN 'Esterilizacion' \n  WHEN C"
+".NOMBRE LIKE '%DISPOSITIVO INTRAUTERINO%' THEN 'Dispositivo Intrauterino' END as administracion,\n I.FECHA AS FECHA\nFRO"
+"M RCA_CUPSOLICITADOS CS\nINNER JOIN RCA_INFGENERAL I ON I.ID = CS.INFGENERAL_ID \nINNER JOIN HCL_PROCESOSASISTENCIALES P"
+"ROC ON PROC.ID = I.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS GP ON GP.ID = I.PACIENTE\nINNER JOIN GEN_CUPS C ON"
+" C.ID=CS.CUPS_ID\nINNER JOIN RCA_ESTSOLICITUDES ES ON ES.ID = I.ESTSOLICITUDES_ID\nINNER JOIN GEN_CUPSPYP CP ON CP.CUPS_"
+"ID = C.ID AND CP.PYP_ID = (SELECT ID FROM GEN_PYP P WHERE P.SIGLA='PF')\nLEFT JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICI"
+"TADOS_ID = C.ID\nWHERE ROUND(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 59\nAND I.FECHA IS NOT NULL\n)\n)F \n\nWHERE F.FECHA BETWEEN TO"
+"_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1  \ngroup by ID";
		    

		    globalMap.put("tOracleInput_103_QUERY",dbquery_tOracleInput_103);

		    java.sql.ResultSet rs_tOracleInput_103 = null;

		    try {
		    	rs_tOracleInput_103 = stmt_tOracleInput_103.executeQuery(dbquery_tOracleInput_103);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_103 = rs_tOracleInput_103.getMetaData();
		    	int colQtyInRs_tOracleInput_103 = rsmd_tOracleInput_103.getColumnCount();

		    String tmpContent_tOracleInput_103 = null;
		    
		    
		    while (rs_tOracleInput_103.next()) {
		        nb_line_tOracleInput_103++;
		        
							if(colQtyInRs_tOracleInput_103 < 1) {
								row42.V54 = null;
							} else {
	                         		
        	row42.V54 = routines.system.JDBCUtil.getString(rs_tOracleInput_103, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_103 < 2) {
								row42.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_103.getObject(2) != null) {
						row42.PERSONAS_ID = rs_tOracleInput_103.getBigDecimal(2);
					} else {
				
						row42.PERSONAS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_103 begin ] stop
 */
	
	/**
	 * [tOracleInput_103 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_103";
	
	

 


	tos_count_tOracleInput_103++;

/**
 * [tOracleInput_103 main ] stop
 */
	
	/**
	 * [tOracleInput_103 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_103";
	
	

 



/**
 * [tOracleInput_103 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					


			   
			   

					row42Struct row42_HashRow = new row42Struct();
		   	   	   
				
				row42_HashRow.V54 = row42.V54;
				
				row42_HashRow.PERSONAS_ID = row42.PERSONAS_ID;
				
			tHash_Lookup_row42.put(row42_HashRow);
			
            




 


	tos_count_tAdvancedHash_row42++;

/**
 * [tAdvancedHash_row42 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row42 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_103 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_103";
	
	

 



/**
 * [tOracleInput_103 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_103 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_103";
	
	

}
}finally{
	if (rs_tOracleInput_103 != null) {
		rs_tOracleInput_103.close();
	}
	if (stmt_tOracleInput_103 != null) {
		stmt_tOracleInput_103.close();
	}
}

globalMap.put("tOracleInput_103_NB_LINE",nb_line_tOracleInput_103);
 

ok_Hash.put("tOracleInput_103", true);
end_Hash.put("tOracleInput_103", System.currentTimeMillis());




/**
 * [tOracleInput_103 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

tHash_Lookup_row42.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row42", true);
end_Hash.put("tAdvancedHash_row42", System.currentTimeMillis());




/**
 * [tAdvancedHash_row42 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_103 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_103";
	
	

 



/**
 * [tOracleInput_103 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row42 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row42";
	
	

 



/**
 * [tAdvancedHash_row42 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_103_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableComparableLookupRow<row43Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V55;

				public String getV55 () {
					return this.V55;
				}

				public Boolean V55IsNullable(){
				    return true;
				}
				public Boolean V55IsKey(){
				    return false;
				}
				public Integer V55Length(){
				    return 10;
				}
				public Integer V55Precision(){
				    return 0;
				}
				public String V55Default(){
				
					return null;
				
				}
				public String V55Comment(){
				
				    return "";
				
				}
				public String V55Pattern(){
				
					return "";
				
				}
				public String V55OriginalDbColumnName(){
				
					return "V55";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row43Struct other = (row43Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row43Struct other) {

		other.V55 = this.V55;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row43Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V55 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V55 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V55, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V55, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V55="+V55);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_105Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_105_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row43Struct row43 = new row43Struct();




	
	/**
	 * [tAdvancedHash_row43 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row43", false);
		start_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tAdvancedHash_row43 = 0;
		

			   		// connection name:row43
			   		// source node:tOracleInput_105 - inputs:(after_tOracleInput_1) outputs:(row43,row43) | target node:tAdvancedHash_row43 - inputs:(row43) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row43 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row43Struct>getLookup(matchingModeEnum_row43);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row43", tHash_Lookup_row43);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row43 begin ] stop
 */



	
	/**
	 * [tOracleInput_105 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_105", false);
		start_Hash.put("tOracleInput_105", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_105";
	
	
		int tos_count_tOracleInput_105 = 0;
		
	


	
		    int nb_line_tOracleInput_105 = 0;
		    java.sql.Connection conn_tOracleInput_105 = null;
				conn_tOracleInput_105 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_105 = false;
				boolean isConnectionWrapped_tOracleInput_105 = !(conn_tOracleInput_105 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_105.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_105 = null;
                if (isConnectionWrapped_tOracleInput_105) {
					unwrappedOraConn_tOracleInput_105 = conn_tOracleInput_105.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_105 != null) {
                        isTimeZoneNull_tOracleInput_105 = (unwrappedOraConn_tOracleInput_105.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_105 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_105).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_105) {
					java.sql.Statement stmtGetTZ_tOracleInput_105 = conn_tOracleInput_105.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_105 = stmtGetTZ_tOracleInput_105.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_105 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_105.next()) {
						sessionTimezone_tOracleInput_105 = rsGetTZ_tOracleInput_105.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_105 && unwrappedOraConn_tOracleInput_105 != null) {
                        unwrappedOraConn_tOracleInput_105.setSessionTimeZone(sessionTimezone_tOracleInput_105);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_105).setSessionTimeZone(sessionTimezone_tOracleInput_105);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_105 = conn_tOracleInput_105.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_105.setFetchSize(1000);


		    String dbquery_tOracleInput_105 = "SELECT \n TO_CHAR(TO_CHAR(MAX(F.FECHA),'YYYY-MM-DD')) AS V55\n ,F.ID AS PERSONAS_ID \nFROM(\nSELECT \n  GP.id,\n  MM.FT"
+"RANSACCION AS FECHA\nFROM Hcl_Formmedinsumos hf \nLEFT JOIN Hcl_Dformmedinsumos dhf ON dhf.formmedinsumos_id = hf.id \nL"
+"EFT JOIN Med_Formasfarmaceuticas mff ON mff.id = dhf.FORMASFARMACEUTICAS_ID\nLEFT JOIN MED_GENERICOS mg ON mg.id = mff.g"
+"enericos_id\nLEFT JOIN MED_INSUMOS mi ON mi.id = mff.insumos_id\nLEFT JOIN MED_TVIADMIN va ON va.id = mg.tviadmin_id\nLE"
+"FT JOIN MED_UMEDIDA um ON um.id = dhf.umedida_id\nLEFT JOIN HCL_FORMMEDICAS HFM ON HFM.ID = HF.FORMMEDICAS_ID\nLEFT JOIN"
+" GEN_TFORMULAS GTF ON GTF.ID = HFM.TFORMULAS_ID\nLEFT JOIN MED_DACUERDOSFORMAS mdaf ON mdaf.formasfarmaceuticas_id = mff"
+".id AND mdaf.estregistro_id = 1 AND mdaf.estado = 'Activo'\nLEFT JOIN MED_DACUERDOS mda ON mda.id = mdaf.dacuerdos_id\nI"
+"NNER JOIN hcl_formmedicas hfor ON hfor.id = hf.formmedicas_id\nINNER JOIN hcl_procesosasistenciales hpa ON hpa.id = hfor"
+".procesosasistenciales_id AND hpa.ESTREGISTRO_ID=1 AND HPA.ESTADO = 'Registrado'\nINNER JOIN SALUDSIS.HCL_VALORACIONES V"
+"AL ON VAL.PROCESOSASISTENCIALES_ID=hpa.ID AND VAL.ESTREGISTRO_ID=1 \nINNER JOIN gen_personas gp ON gp.id = hpa.personas_"
+"id\nINNER JOIN SALUDSIS.CYD_MEDICAMENTOS CM ON CM.FORMAFARMACEUTICA_ID= mff.ID AND CM.PROGRAMA_ID IN (SELECT ID FROM GEN"
+"_PYP P WHERE P.SIGLA='PF')\nINNER JOIN MED_MOVIMIENTOS MM ON MM.FORMMEDINSUMOS_ID = HF.ID \nINNER JOIN MED_TMOVIMIENTOS "
+"TM ON TM.ID = MM.TMOVIMIENTOS_ID AND TM.SIGLA IN ('DA', 'DH') \nWHERE dhf.estregistro_id = 1 AND hf.estregistro_id = 1 A"
+"ND dhf.estado <> 'Cancelada' \nAND ROUND(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 59 \nUNION \nSELECT \n  GP.ID,\n	I.FECHA\nFROM RCA_CUPSOLICITAD"
+"OS CS\nINNER JOIN RCA_INFGENERAL I ON I.ID = CS.INFGENERAL_ID \nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = I"
+".PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS GP ON GP.ID = I.PACIENTE \nINNER JOIN GEN_CUPS C ON C.ID=CS.CUPS_ID"
+"\nINNER JOIN RCA_ESTSOLICITUDES ES ON ES.ID = I.ESTSOLICITUDES_ID\nINNER JOIN GEN_CUPSPYP CP ON CP.CUPS_ID = C.ID AND CP."
+"PYP_ID = (SELECT ID FROM GEN_PYP P WHERE P.SIGLA='PF')\nLEFT JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = C.ID\n"
+"WHERE ROUND(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 59\n) F\nWHERE F.FECHA BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY F.ID";
		    

		    globalMap.put("tOracleInput_105_QUERY",dbquery_tOracleInput_105);

		    java.sql.ResultSet rs_tOracleInput_105 = null;

		    try {
		    	rs_tOracleInput_105 = stmt_tOracleInput_105.executeQuery(dbquery_tOracleInput_105);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_105 = rs_tOracleInput_105.getMetaData();
		    	int colQtyInRs_tOracleInput_105 = rsmd_tOracleInput_105.getColumnCount();

		    String tmpContent_tOracleInput_105 = null;
		    
		    
		    while (rs_tOracleInput_105.next()) {
		        nb_line_tOracleInput_105++;
		        
							if(colQtyInRs_tOracleInput_105 < 1) {
								row43.V55 = null;
							} else {
	                         		
        	row43.V55 = routines.system.JDBCUtil.getString(rs_tOracleInput_105, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_105 < 2) {
								row43.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_105.getObject(2) != null) {
						row43.PERSONAS_ID = rs_tOracleInput_105.getBigDecimal(2);
					} else {
				
						row43.PERSONAS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_105 begin ] stop
 */
	
	/**
	 * [tOracleInput_105 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_105";
	
	

 


	tos_count_tOracleInput_105++;

/**
 * [tOracleInput_105 main ] stop
 */
	
	/**
	 * [tOracleInput_105 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_105";
	
	

 



/**
 * [tOracleInput_105 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					


			   
			   

					row43Struct row43_HashRow = new row43Struct();
		   	   	   
				
				row43_HashRow.V55 = row43.V55;
				
				row43_HashRow.PERSONAS_ID = row43.PERSONAS_ID;
				
			tHash_Lookup_row43.put(row43_HashRow);
			
            




 


	tos_count_tAdvancedHash_row43++;

/**
 * [tAdvancedHash_row43 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_105 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_105";
	
	

 



/**
 * [tOracleInput_105 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_105 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_105";
	
	

}
}finally{
	if (rs_tOracleInput_105 != null) {
		rs_tOracleInput_105.close();
	}
	if (stmt_tOracleInput_105 != null) {
		stmt_tOracleInput_105.close();
	}
}

globalMap.put("tOracleInput_105_NB_LINE",nb_line_tOracleInput_105);
 

ok_Hash.put("tOracleInput_105", true);
end_Hash.put("tOracleInput_105", System.currentTimeMillis());




/**
 * [tOracleInput_105 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

tHash_Lookup_row43.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row43", true);
end_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());




/**
 * [tAdvancedHash_row43 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_105 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_105";
	
	

 



/**
 * [tOracleInput_105 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_105_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableComparableLookupRow<row44Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V56;

				public String getV56 () {
					return this.V56;
				}

				public Boolean V56IsNullable(){
				    return true;
				}
				public Boolean V56IsKey(){
				    return false;
				}
				public Integer V56Length(){
				    return 10;
				}
				public Integer V56Precision(){
				    return 0;
				}
				public String V56Default(){
				
					return null;
				
				}
				public String V56Comment(){
				
				    return "";
				
				}
				public String V56Pattern(){
				
					return "";
				
				}
				public String V56OriginalDbColumnName(){
				
					return "V56";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row44Struct other = (row44Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row44Struct other) {

		other.V56 = this.V56;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row44Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V56 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V56 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V56, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V56, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V56="+V56);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_37Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tAdvancedHash_row44 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row44", false);
		start_Hash.put("tAdvancedHash_row44", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row44";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tAdvancedHash_row44 = 0;
		

			   		// connection name:row44
			   		// source node:tOracleInput_37 - inputs:(after_tOracleInput_1) outputs:(row44,row44) | target node:tAdvancedHash_row44 - inputs:(row44) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row44 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row44Struct> tHash_Lookup_row44 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row44Struct>getLookup(matchingModeEnum_row44);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row44", tHash_Lookup_row44);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row44 begin ] stop
 */



	
	/**
	 * [tOracleInput_37 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_37", false);
		start_Hash.put("tOracleInput_37", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_37";
	
	
		int tos_count_tOracleInput_37 = 0;
		
	


	
		    int nb_line_tOracleInput_37 = 0;
		    java.sql.Connection conn_tOracleInput_37 = null;
				conn_tOracleInput_37 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_37 = false;
				boolean isConnectionWrapped_tOracleInput_37 = !(conn_tOracleInput_37 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_37.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_37 = null;
                if (isConnectionWrapped_tOracleInput_37) {
					unwrappedOraConn_tOracleInput_37 = conn_tOracleInput_37.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_37 != null) {
                        isTimeZoneNull_tOracleInput_37 = (unwrappedOraConn_tOracleInput_37.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_37 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_37).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_37) {
					java.sql.Statement stmtGetTZ_tOracleInput_37 = conn_tOracleInput_37.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_37 = stmtGetTZ_tOracleInput_37.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_37 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_37.next()) {
						sessionTimezone_tOracleInput_37 = rsGetTZ_tOracleInput_37.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_37 && unwrappedOraConn_tOracleInput_37 != null) {
                        unwrappedOraConn_tOracleInput_37.setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_37).setSessionTimeZone(sessionTimezone_tOracleInput_37);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_37 = conn_tOracleInput_37.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_37.setFetchSize(1000);


		    String dbquery_tOracleInput_37 = "SELECT    V56\n        , PERSONAS_ID \nFROM ( \n    SELECT    TO_CHAR(PA.FFINAL,'YYYY-MM-DD') AS V56\n            , PA."
+"PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_PYP G"
+"PY\n    INNER JOIN HCL_VALORACIONES HV ON HV.PYP_ID = GPY.ID\n    INNER JOIN GEN_CUPS GC ON GC.ID = HV.CUPS_ID \n    INN"
+"ER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HV.PROCESOSASISTENCIALES_ID\n    WHERE GPY.SIGLA = 'PMP'\n      AND HV.E"
+"STREGISTRO_ID = 1\n      AND GC.CODIGO IN ('890201','890205')\n      AND PA.ESTREGISTRO_ID = 1\n      AND TRUNC( PA.FFIN"
+"AL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_37_QUERY",dbquery_tOracleInput_37);

		    java.sql.ResultSet rs_tOracleInput_37 = null;

		    try {
		    	rs_tOracleInput_37 = stmt_tOracleInput_37.executeQuery(dbquery_tOracleInput_37);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_37 = rs_tOracleInput_37.getMetaData();
		    	int colQtyInRs_tOracleInput_37 = rsmd_tOracleInput_37.getColumnCount();

		    String tmpContent_tOracleInput_37 = null;
		    
		    
		    while (rs_tOracleInput_37.next()) {
		        nb_line_tOracleInput_37++;
		        
							if(colQtyInRs_tOracleInput_37 < 1) {
								row44.V56 = null;
							} else {
	                         		
        	row44.V56 = routines.system.JDBCUtil.getString(rs_tOracleInput_37, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_37 < 2) {
								row44.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_37.getObject(2) != null) {
						row44.PERSONAS_ID = rs_tOracleInput_37.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_37 begin ] stop
 */
	
	/**
	 * [tOracleInput_37 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 


	tos_count_tOracleInput_37++;

/**
 * [tOracleInput_37 main ] stop
 */
	
	/**
	 * [tOracleInput_37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					


			   
			   

					row44Struct row44_HashRow = new row44Struct();
		   	   	   
				
				row44_HashRow.V56 = row44.V56;
				
				row44_HashRow.PERSONAS_ID = row44.PERSONAS_ID;
				
			tHash_Lookup_row44.put(row44_HashRow);
			
            




 


	tos_count_tAdvancedHash_row44++;

/**
 * [tAdvancedHash_row44 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row44 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_37 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_37 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

}
}finally{
	if (rs_tOracleInput_37 != null) {
		rs_tOracleInput_37.close();
	}
	if (stmt_tOracleInput_37 != null) {
		stmt_tOracleInput_37.close();
	}
}

globalMap.put("tOracleInput_37_NB_LINE",nb_line_tOracleInput_37);
 

ok_Hash.put("tOracleInput_37", true);
end_Hash.put("tOracleInput_37", System.currentTimeMillis());




/**
 * [tOracleInput_37 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

tHash_Lookup_row44.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row44", true);
end_Hash.put("tAdvancedHash_row44", System.currentTimeMillis());




/**
 * [tAdvancedHash_row44 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_37 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_37";
	
	

 



/**
 * [tOracleInput_37 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row44 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row44";
	
	

 



/**
 * [tAdvancedHash_row44 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_37_SUBPROCESS_STATE", 1);
	}
	


public static class row45Struct implements routines.system.IPersistableComparableLookupRow<row45Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V57;

				public String getV57 () {
					return this.V57;
				}

				public Boolean V57IsNullable(){
				    return true;
				}
				public Boolean V57IsKey(){
				    return false;
				}
				public Integer V57Length(){
				    return 40;
				}
				public Integer V57Precision(){
				    return 0;
				}
				public String V57Default(){
				
					return null;
				
				}
				public String V57Comment(){
				
				    return "";
				
				}
				public String V57Pattern(){
				
					return "";
				
				}
				public String V57OriginalDbColumnName(){
				
					return "V57";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row45Struct other = (row45Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row45Struct other) {

		other.V57 = this.V57;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row45Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V57 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V57 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V57, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V57, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V57="+V57);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_102Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_102_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();




	
	/**
	 * [tAdvancedHash_row45 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row45", false);
		start_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row45";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tAdvancedHash_row45 = 0;
		

			   		// connection name:row45
			   		// source node:tOracleInput_102 - inputs:(after_tOracleInput_1) outputs:(row45,row45) | target node:tAdvancedHash_row45 - inputs:(row45) outputs:()
			   		// linked node: tMap_2 - inputs:(Salida_1,row24,row25,row26,row27,row28,row29,row30,row31,row32,row33,row34,row35,row36,row37,row38,row39,row40,row41,row42,row43,row44,row45) outputs:(Salida_Pre2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row45 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row45Struct>getLookup(matchingModeEnum_row45);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row45", tHash_Lookup_row45);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row45 begin ] stop
 */



	
	/**
	 * [tOracleInput_102 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_102", false);
		start_Hash.put("tOracleInput_102", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_102";
	
	
		int tos_count_tOracleInput_102 = 0;
		
	


	
		    int nb_line_tOracleInput_102 = 0;
		    java.sql.Connection conn_tOracleInput_102 = null;
				conn_tOracleInput_102 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_102 = false;
				boolean isConnectionWrapped_tOracleInput_102 = !(conn_tOracleInput_102 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_102.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_102 = null;
                if (isConnectionWrapped_tOracleInput_102) {
					unwrappedOraConn_tOracleInput_102 = conn_tOracleInput_102.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_102 != null) {
                        isTimeZoneNull_tOracleInput_102 = (unwrappedOraConn_tOracleInput_102.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_102 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_102).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_102) {
					java.sql.Statement stmtGetTZ_tOracleInput_102 = conn_tOracleInput_102.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_102 = stmtGetTZ_tOracleInput_102.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_102 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_102.next()) {
						sessionTimezone_tOracleInput_102 = rsGetTZ_tOracleInput_102.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_102 && unwrappedOraConn_tOracleInput_102 != null) {
                        unwrappedOraConn_tOracleInput_102.setSessionTimeZone(sessionTimezone_tOracleInput_102);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_102).setSessionTimeZone(sessionTimezone_tOracleInput_102);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_102 = conn_tOracleInput_102.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_102.setFetchSize(1000);


		    String dbquery_tOracleInput_102 = " SELECT    PA.PERSONAS_ID \n        ,  CASE \n              WHEN COUNT ( PA.ID )=0 THEN '999'\n              WHEN COUNT"
+" ( PA.ID )>25 THEN '999'\n              ELSE TO_CHAR(COUNT ( PA.ID )) \n            END  AS V57\n FROM GEN_PYP GPY \n IN"
+"NER JOIN HCL_VALORACIONES VAL ON VAL.PYP_ID = GPY.ID\n INNER JOIN GEN_CUPS GC ON GC.ID = VAL.CUPS_ID \n INNER JOIN GEN_F"
+"INALIDADCONSULTA GF ON GF.ID = VAL.FINALIDADCONSULTA_ID \n INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = VAL.PROCES"
+"OSASISTENCIALES_ID  \n INNER JOIN GEN_PERSONAS GP ON GP.ID=PA.PERSONAS_ID \n INNER JOIN PMP_MATERNAS PMA ON PMA.PERSONAS"
+"_ID=GP.ID\n LEFT JOIN PMP_DESENLACE PD ON PD.MATERNAS_ID=PMA.ID \n LEFT JOIN HCL_PARTOGRAMA HPT ON HPT.PROCESOSASISTENCI"
+"ALES_ID=PA.ID \n WHERE GPY.SIGLA = 'PMP'\n   AND VAL.ESTREGISTRO_ID = 1\n   AND PD.ID IS NULL \n   AND HPT.ID IS NULL\n "
+"  AND PA.ESTREGISTRO_ID = 1\n   AND TRUNC(PMA.FECHA) <= TRUNC(PA.FFINAL)\n   AND (GC.CODIGO IN ('890201','890205','89030"
+"1','890305') OR GC.CODIGO LIKE '%Z32%' OR GC.CODIGO LIKE '%Z33%' OR GC.CODIGO LIKE '%Z34%' OR GC.CODIGO LIKE '%Z35%')\n "
+"  AND GF.CODIGO = '6'\n   AND TRUNC(MONTHS_BETWEEN(TO_DATE( '"+context.FECHA_FINAL+"', 'DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 59\n   AND TRUNC ( PA.FFINAL ) BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) \n				                              AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')   \n GROUP BY PA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_102_QUERY",dbquery_tOracleInput_102);

		    java.sql.ResultSet rs_tOracleInput_102 = null;

		    try {
		    	rs_tOracleInput_102 = stmt_tOracleInput_102.executeQuery(dbquery_tOracleInput_102);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_102 = rs_tOracleInput_102.getMetaData();
		    	int colQtyInRs_tOracleInput_102 = rsmd_tOracleInput_102.getColumnCount();

		    String tmpContent_tOracleInput_102 = null;
		    
		    
		    while (rs_tOracleInput_102.next()) {
		        nb_line_tOracleInput_102++;
		        
							if(colQtyInRs_tOracleInput_102 < 1) {
								row45.V57 = null;
							} else {
	                         		
        	row45.V57 = routines.system.JDBCUtil.getString(rs_tOracleInput_102, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_102 < 2) {
								row45.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_102.getObject(2) != null) {
						row45.PERSONAS_ID = rs_tOracleInput_102.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_102 begin ] stop
 */
	
	/**
	 * [tOracleInput_102 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_102";
	
	

 


	tos_count_tOracleInput_102++;

/**
 * [tOracleInput_102 main ] stop
 */
	
	/**
	 * [tOracleInput_102 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_102";
	
	

 



/**
 * [tOracleInput_102 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					


			   
			   

					row45Struct row45_HashRow = new row45Struct();
		   	   	   
				
				row45_HashRow.V57 = row45.V57;
				
				row45_HashRow.PERSONAS_ID = row45.PERSONAS_ID;
				
			tHash_Lookup_row45.put(row45_HashRow);
			
            




 


	tos_count_tAdvancedHash_row45++;

/**
 * [tAdvancedHash_row45 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_102 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_102";
	
	

 



/**
 * [tOracleInput_102 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_102 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_102";
	
	

}
}finally{
	if (rs_tOracleInput_102 != null) {
		rs_tOracleInput_102.close();
	}
	if (stmt_tOracleInput_102 != null) {
		stmt_tOracleInput_102.close();
	}
}

globalMap.put("tOracleInput_102_NB_LINE",nb_line_tOracleInput_102);
 

ok_Hash.put("tOracleInput_102", true);
end_Hash.put("tOracleInput_102", System.currentTimeMillis());




/**
 * [tOracleInput_102 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

tHash_Lookup_row45.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row45", true);
end_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());




/**
 * [tAdvancedHash_row45 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_102 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_102";
	
	

 



/**
 * [tOracleInput_102 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_102_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V58;

				public String getV58 () {
					return this.V58;
				}

				public Boolean V58IsNullable(){
				    return true;
				}
				public Boolean V58IsKey(){
				    return false;
				}
				public Integer V58Length(){
				    return 10;
				}
				public Integer V58Precision(){
				    return 0;
				}
				public String V58Default(){
				
					return null;
				
				}
				public String V58Comment(){
				
				    return "";
				
				}
				public String V58Pattern(){
				
					return "";
				
				}
				public String V58OriginalDbColumnName(){
				
					return "V58";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.V58 = this.V58;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V58 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V58 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V58, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V58, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V58="+V58);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_99Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_99_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tAdvancedHash_row47 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row47", false);
		start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tAdvancedHash_row47 = 0;
		

			   		// connection name:row47
			   		// source node:tOracleInput_99 - inputs:(after_tOracleInput_1) outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row47Struct>getLookup(matchingModeEnum_row47);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row47 begin ] stop
 */



	
	/**
	 * [tOracleInput_99 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_99", false);
		start_Hash.put("tOracleInput_99", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_99";
	
	
		int tos_count_tOracleInput_99 = 0;
		
	


	
		    int nb_line_tOracleInput_99 = 0;
		    java.sql.Connection conn_tOracleInput_99 = null;
				conn_tOracleInput_99 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_99 = false;
				boolean isConnectionWrapped_tOracleInput_99 = !(conn_tOracleInput_99 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_99.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_99 = null;
                if (isConnectionWrapped_tOracleInput_99) {
					unwrappedOraConn_tOracleInput_99 = conn_tOracleInput_99.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_99 != null) {
                        isTimeZoneNull_tOracleInput_99 = (unwrappedOraConn_tOracleInput_99.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_99 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_99).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_99) {
					java.sql.Statement stmtGetTZ_tOracleInput_99 = conn_tOracleInput_99.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_99 = stmtGetTZ_tOracleInput_99.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_99 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_99.next()) {
						sessionTimezone_tOracleInput_99 = rsGetTZ_tOracleInput_99.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_99 && unwrappedOraConn_tOracleInput_99 != null) {
                        unwrappedOraConn_tOracleInput_99.setSessionTimeZone(sessionTimezone_tOracleInput_99);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_99).setSessionTimeZone(sessionTimezone_tOracleInput_99);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_99 = conn_tOracleInput_99.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_99.setFetchSize(1000);


		    String dbquery_tOracleInput_99 = "SELECT \n  TO_CHAR(P.FINICIAL,'YYYY-MM-DD') AS v58,\n  P.PERSONAS_ID  \nFROM HCL_PROCESOSASISTENCIALES P\nINNER JOIN (S"
+"ELECT \n              MAX(PROC.ID) AS ID, \n              PROC.PERSONAS_ID              \n            FROM HCL_PROCESOSA"
+"SISTENCIALES PROC \n            INNER JOIN HCL_DIAGNOSTICOS HD ON HD.PROCESOSASISTENCIALES_ID = PROC.ID\n 			INNER JOIN "
+"GEN_CIE10 GC ON GC.ID = HD.CIE10_ID \n            INNER JOIN GEN_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID AND GP.ESTREGISTR"
+"O_ID=1\n            INNER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = PROC.ID\n            INNER JOIN GE"
+"N_CUPS GC ON GC.ID = VAL.CUPS_ID \n            	AND (GC.CODIGO IN ('890201','890205','890301','890302','890305','890402'"
+") OR GC.CODIGO LIKE '%Z32%' OR GC.CODIGO LIKE '%Z33%' OR GC.CODIGO LIKE '%Z34%' OR GC.CODIGO LIKE '%Z35%')\n            "
+"LEFT JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_ID\n            LEFT JOIN GEN_FINALIDADCONSULTA FIN ON FIN.ID = VAL.FINALIDADC"
+"ONSULTA_ID\n            WHERE (PYP.SIGLA = 'PMP' OR FIN.CODIGO IN (6,1))\n            AND ROUND(MONTHS_BETWEEN(PROC.FFIN"
+"AL,GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 60\n            AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1     \n            GROUP BY PROC.PERSONAS_ID) SUB ON SUB.ID = P.ID\nLEFT JOIN HCL_VALORACIONES VAL O"
+"N VAL.PROCESOSASISTENCIALES_ID = P.ID";
		    

		    globalMap.put("tOracleInput_99_QUERY",dbquery_tOracleInput_99);

		    java.sql.ResultSet rs_tOracleInput_99 = null;

		    try {
		    	rs_tOracleInput_99 = stmt_tOracleInput_99.executeQuery(dbquery_tOracleInput_99);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_99 = rs_tOracleInput_99.getMetaData();
		    	int colQtyInRs_tOracleInput_99 = rsmd_tOracleInput_99.getColumnCount();

		    String tmpContent_tOracleInput_99 = null;
		    
		    
		    while (rs_tOracleInput_99.next()) {
		        nb_line_tOracleInput_99++;
		        
							if(colQtyInRs_tOracleInput_99 < 1) {
								row47.V58 = null;
							} else {
	                         		
        	row47.V58 = routines.system.JDBCUtil.getString(rs_tOracleInput_99, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_99 < 2) {
								row47.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_99.getObject(2) != null) {
						row47.PERSONAS_ID = rs_tOracleInput_99.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_99 begin ] stop
 */
	
	/**
	 * [tOracleInput_99 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_99";
	
	

 


	tos_count_tOracleInput_99++;

/**
 * [tOracleInput_99 main ] stop
 */
	
	/**
	 * [tOracleInput_99 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_99";
	
	

 



/**
 * [tOracleInput_99 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


			   
			   

					row47Struct row47_HashRow = new row47Struct();
		   	   	   
				
				row47_HashRow.V58 = row47.V58;
				
				row47_HashRow.PERSONAS_ID = row47.PERSONAS_ID;
				
			tHash_Lookup_row47.put(row47_HashRow);
			
            




 


	tos_count_tAdvancedHash_row47++;

/**
 * [tAdvancedHash_row47 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_99 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_99";
	
	

 



/**
 * [tOracleInput_99 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_99 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_99";
	
	

}
}finally{
	if (rs_tOracleInput_99 != null) {
		rs_tOracleInput_99.close();
	}
	if (stmt_tOracleInput_99 != null) {
		stmt_tOracleInput_99.close();
	}
}

globalMap.put("tOracleInput_99_NB_LINE",nb_line_tOracleInput_99);
 

ok_Hash.put("tOracleInput_99", true);
end_Hash.put("tOracleInput_99", System.currentTimeMillis());




/**
 * [tOracleInput_99 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

tHash_Lookup_row47.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row47", true);
end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());




/**
 * [tAdvancedHash_row47 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_99 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_99";
	
	

 



/**
 * [tOracleInput_99 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_99_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableComparableLookupRow<row48Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V59;

				public String getV59 () {
					return this.V59;
				}

				public Boolean V59IsNullable(){
				    return true;
				}
				public Boolean V59IsKey(){
				    return false;
				}
				public Integer V59Length(){
				    return null;
				}
				public Integer V59Precision(){
				    return null;
				}
				public String V59Default(){
				
					return null;
				
				}
				public String V59Comment(){
				
				    return "";
				
				}
				public String V59Pattern(){
				
					return "";
				
				}
				public String V59OriginalDbColumnName(){
				
					return "V59";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.V59 = this.V59;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V59 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V59 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V59, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V59, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V59="+V59);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_95Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_95_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tAdvancedHash_row48 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row48", false);
		start_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tAdvancedHash_row48 = 0;
		

			   		// connection name:row48
			   		// source node:tOracleInput_95 - inputs:(after_tOracleInput_1) outputs:(row48,row48) | target node:tAdvancedHash_row48 - inputs:(row48) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row48 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row48Struct>getLookup(matchingModeEnum_row48);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row48", tHash_Lookup_row48);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row48 begin ] stop
 */



	
	/**
	 * [tOracleInput_95 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_95", false);
		start_Hash.put("tOracleInput_95", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_95";
	
	
		int tos_count_tOracleInput_95 = 0;
		
	


	
		    int nb_line_tOracleInput_95 = 0;
		    java.sql.Connection conn_tOracleInput_95 = null;
				conn_tOracleInput_95 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_95 = false;
				boolean isConnectionWrapped_tOracleInput_95 = !(conn_tOracleInput_95 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_95.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_95 = null;
                if (isConnectionWrapped_tOracleInput_95) {
					unwrappedOraConn_tOracleInput_95 = conn_tOracleInput_95.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_95 != null) {
                        isTimeZoneNull_tOracleInput_95 = (unwrappedOraConn_tOracleInput_95.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_95 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_95).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_95) {
					java.sql.Statement stmtGetTZ_tOracleInput_95 = conn_tOracleInput_95.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_95 = stmtGetTZ_tOracleInput_95.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_95 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_95.next()) {
						sessionTimezone_tOracleInput_95 = rsGetTZ_tOracleInput_95.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_95 && unwrappedOraConn_tOracleInput_95 != null) {
                        unwrappedOraConn_tOracleInput_95.setSessionTimeZone(sessionTimezone_tOracleInput_95);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_95).setSessionTimeZone(sessionTimezone_tOracleInput_95);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_95 = conn_tOracleInput_95.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_95.setFetchSize(1000);


		    String dbquery_tOracleInput_95 = "SELECT \n  '1' AS v59,\n  P.PERSONAS_ID\n \nFROM HCL_PROCESOSASISTENCIALES P\nINNER JOIN (SELECT \n              MAX(PR"
+"OC.ID) AS ID, \n              PROC.PERSONAS_ID\n            FROM HCL_PROCESOSASISTENCIALES PROC \n            INNER JOIN"
+" GEN_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID\n            INNER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID "
+"= PROC.ID\n            LEFT JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_ID\n            LEFT JOIN GEN_FINALIDADCONSULTA FIN ON "
+"FIN.ID = VAL.FINALIDADCONSULTA_ID\n            WHERE (PYP.SIGLA = 'PMP' AND FIN.CODIGO IN (6,1))\n            AND ROUND("
+"MONTHS_BETWEEN(PROC.FFINAL,GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 60\n            AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            GROUP BY PROC.PERSONAS_ID,PYP.ID ) SUB ON SUB.ID = P.ID\nINNER JOIN HCL_FORMMEDICAS HF"
+" ON HF.PROCESOSASISTENCIALES_ID = P.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HC"
+"L_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN MED_FORMASFARMACEUTICAS MFAR ON MFAR.ID=DHFI.FORM"
+"ASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MGEN ON  ( MGEN.ID = MFAR.GENERICOS_ID AND MED.MayusculasSinAcentos(MGEN.DE"
+"SCRIPCION) LIKE '%ACIDO%' AND MED.MayusculasSinAcentos(MGEN.DESCRIPCION) LIKE '%FOLICO%' )";
		    

		    globalMap.put("tOracleInput_95_QUERY",dbquery_tOracleInput_95);

		    java.sql.ResultSet rs_tOracleInput_95 = null;

		    try {
		    	rs_tOracleInput_95 = stmt_tOracleInput_95.executeQuery(dbquery_tOracleInput_95);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_95 = rs_tOracleInput_95.getMetaData();
		    	int colQtyInRs_tOracleInput_95 = rsmd_tOracleInput_95.getColumnCount();

		    String tmpContent_tOracleInput_95 = null;
		    
		    
		    while (rs_tOracleInput_95.next()) {
		        nb_line_tOracleInput_95++;
		        
							if(colQtyInRs_tOracleInput_95 < 1) {
								row48.V59 = null;
							} else {
	                         		
        	row48.V59 = routines.system.JDBCUtil.getString(rs_tOracleInput_95, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_95 < 2) {
								row48.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_95.getObject(2) != null) {
						row48.PERSONAS_ID = rs_tOracleInput_95.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_95 begin ] stop
 */
	
	/**
	 * [tOracleInput_95 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_95";
	
	

 


	tos_count_tOracleInput_95++;

/**
 * [tOracleInput_95 main ] stop
 */
	
	/**
	 * [tOracleInput_95 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_95";
	
	

 



/**
 * [tOracleInput_95 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					


			   
			   

					row48Struct row48_HashRow = new row48Struct();
		   	   	   
				
				row48_HashRow.V59 = row48.V59;
				
				row48_HashRow.PERSONAS_ID = row48.PERSONAS_ID;
				
			tHash_Lookup_row48.put(row48_HashRow);
			
            




 


	tos_count_tAdvancedHash_row48++;

/**
 * [tAdvancedHash_row48 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_95 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_95";
	
	

 



/**
 * [tOracleInput_95 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_95 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_95";
	
	

}
}finally{
	if (rs_tOracleInput_95 != null) {
		rs_tOracleInput_95.close();
	}
	if (stmt_tOracleInput_95 != null) {
		stmt_tOracleInput_95.close();
	}
}

globalMap.put("tOracleInput_95_NB_LINE",nb_line_tOracleInput_95);
 

ok_Hash.put("tOracleInput_95", true);
end_Hash.put("tOracleInput_95", System.currentTimeMillis());




/**
 * [tOracleInput_95 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

tHash_Lookup_row48.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row48", true);
end_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());




/**
 * [tAdvancedHash_row48 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_95 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_95";
	
	

 



/**
 * [tOracleInput_95 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_95_SUBPROCESS_STATE", 1);
	}
	


public static class row49Struct implements routines.system.IPersistableComparableLookupRow<row49Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V60;

				public String getV60 () {
					return this.V60;
				}

				public Boolean V60IsNullable(){
				    return true;
				}
				public Boolean V60IsKey(){
				    return false;
				}
				public Integer V60Length(){
				    return null;
				}
				public Integer V60Precision(){
				    return null;
				}
				public String V60Default(){
				
					return null;
				
				}
				public String V60Comment(){
				
				    return "";
				
				}
				public String V60Pattern(){
				
					return "";
				
				}
				public String V60OriginalDbColumnName(){
				
					return "V60";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row49Struct other = (row49Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row49Struct other) {

		other.V60 = this.V60;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row49Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V60 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V60 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V60, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V60, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V60="+V60);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_96Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_96_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row49Struct row49 = new row49Struct();




	
	/**
	 * [tAdvancedHash_row49 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row49", false);
		start_Hash.put("tAdvancedHash_row49", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row49";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tAdvancedHash_row49 = 0;
		

			   		// connection name:row49
			   		// source node:tOracleInput_96 - inputs:(after_tOracleInput_1) outputs:(row49,row49) | target node:tAdvancedHash_row49 - inputs:(row49) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row49 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct> tHash_Lookup_row49 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row49Struct>getLookup(matchingModeEnum_row49);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row49", tHash_Lookup_row49);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row49 begin ] stop
 */



	
	/**
	 * [tOracleInput_96 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_96", false);
		start_Hash.put("tOracleInput_96", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_96";
	
	
		int tos_count_tOracleInput_96 = 0;
		
	


	
		    int nb_line_tOracleInput_96 = 0;
		    java.sql.Connection conn_tOracleInput_96 = null;
				conn_tOracleInput_96 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_96 = false;
				boolean isConnectionWrapped_tOracleInput_96 = !(conn_tOracleInput_96 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_96.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_96 = null;
                if (isConnectionWrapped_tOracleInput_96) {
					unwrappedOraConn_tOracleInput_96 = conn_tOracleInput_96.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_96 != null) {
                        isTimeZoneNull_tOracleInput_96 = (unwrappedOraConn_tOracleInput_96.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_96 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_96).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_96) {
					java.sql.Statement stmtGetTZ_tOracleInput_96 = conn_tOracleInput_96.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_96 = stmtGetTZ_tOracleInput_96.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_96 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_96.next()) {
						sessionTimezone_tOracleInput_96 = rsGetTZ_tOracleInput_96.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_96 && unwrappedOraConn_tOracleInput_96 != null) {
                        unwrappedOraConn_tOracleInput_96.setSessionTimeZone(sessionTimezone_tOracleInput_96);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_96).setSessionTimeZone(sessionTimezone_tOracleInput_96);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_96 = conn_tOracleInput_96.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_96.setFetchSize(1000);


		    String dbquery_tOracleInput_96 = "SELECT \n  '1' AS v60,\n  P.PERSONAS_ID \nFROM HCL_PROCESOSASISTENCIALES P\nINNER JOIN (SELECT \n              MAX(PROC"
+".ID) AS ID, \n              PROC.PERSONAS_ID\n            FROM HCL_PROCESOSASISTENCIALES PROC \n            INNER JOIN G"
+"EN_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID\n            INNER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = "
+"PROC.ID\n            LEFT JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_ID\n            LEFT JOIN GEN_FINALIDADCONSULTA FIN ON FI"
+"N.ID = VAL.FINALIDADCONSULTA_ID\n            WHERE (PYP.SIGLA = 'PMP' AND FIN.CODIGO IN (6,1))\n            AND ROUND(MO"
+"NTHS_BETWEEN(PROC.FFINAL,GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 60\n            AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            GROUP BY PROC.PERSONAS_ID,PYP.ID) SUB ON SUB.ID = P.ID\nINNER JOIN HCL_FORMMEDICAS HF "
+"ON HF.PROCESOSASISTENCIALES_ID = P.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HCL"
+"_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN MED_FORMASFARMACEUTICAS MFAR ON MFAR.ID=DHFI.FORMA"
+"SFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MGEN ON MGEN.ID=MFAR.GENERICOS_ID AND MED.MayusculasSinAcentos(MGEN.DESCRIPC"
+"ION) LIKE '%SULFATO%' AND MED.MayusculasSinAcentos(MGEN.DESCRIPCION) LIKE '%HIERRO%'\nWHERE P.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_96_QUERY",dbquery_tOracleInput_96);

		    java.sql.ResultSet rs_tOracleInput_96 = null;

		    try {
		    	rs_tOracleInput_96 = stmt_tOracleInput_96.executeQuery(dbquery_tOracleInput_96);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_96 = rs_tOracleInput_96.getMetaData();
		    	int colQtyInRs_tOracleInput_96 = rsmd_tOracleInput_96.getColumnCount();

		    String tmpContent_tOracleInput_96 = null;
		    
		    
		    while (rs_tOracleInput_96.next()) {
		        nb_line_tOracleInput_96++;
		        
							if(colQtyInRs_tOracleInput_96 < 1) {
								row49.V60 = null;
							} else {
	                         		
        	row49.V60 = routines.system.JDBCUtil.getString(rs_tOracleInput_96, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_96 < 2) {
								row49.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_96.getObject(2) != null) {
						row49.PERSONAS_ID = rs_tOracleInput_96.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_96 begin ] stop
 */
	
	/**
	 * [tOracleInput_96 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_96";
	
	

 


	tos_count_tOracleInput_96++;

/**
 * [tOracleInput_96 main ] stop
 */
	
	/**
	 * [tOracleInput_96 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_96";
	
	

 



/**
 * [tOracleInput_96 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					


			   
			   

					row49Struct row49_HashRow = new row49Struct();
		   	   	   
				
				row49_HashRow.V60 = row49.V60;
				
				row49_HashRow.PERSONAS_ID = row49.PERSONAS_ID;
				
			tHash_Lookup_row49.put(row49_HashRow);
			
            




 


	tos_count_tAdvancedHash_row49++;

/**
 * [tAdvancedHash_row49 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row49 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row49 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_96 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_96";
	
	

 



/**
 * [tOracleInput_96 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_96 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_96";
	
	

}
}finally{
	if (rs_tOracleInput_96 != null) {
		rs_tOracleInput_96.close();
	}
	if (stmt_tOracleInput_96 != null) {
		stmt_tOracleInput_96.close();
	}
}

globalMap.put("tOracleInput_96_NB_LINE",nb_line_tOracleInput_96);
 

ok_Hash.put("tOracleInput_96", true);
end_Hash.put("tOracleInput_96", System.currentTimeMillis());




/**
 * [tOracleInput_96 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

tHash_Lookup_row49.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row49", true);
end_Hash.put("tAdvancedHash_row49", System.currentTimeMillis());




/**
 * [tAdvancedHash_row49 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_96 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_96";
	
	

 



/**
 * [tOracleInput_96 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_96_SUBPROCESS_STATE", 1);
	}
	


public static class row50Struct implements routines.system.IPersistableComparableLookupRow<row50Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V61;

				public String getV61 () {
					return this.V61;
				}

				public Boolean V61IsNullable(){
				    return true;
				}
				public Boolean V61IsKey(){
				    return false;
				}
				public Integer V61Length(){
				    return null;
				}
				public Integer V61Precision(){
				    return null;
				}
				public String V61Default(){
				
					return null;
				
				}
				public String V61Comment(){
				
				    return "";
				
				}
				public String V61Pattern(){
				
					return "";
				
				}
				public String V61OriginalDbColumnName(){
				
					return "V61";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row50Struct other = (row50Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row50Struct other) {

		other.V61 = this.V61;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row50Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V61 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V61 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V61, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V61, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V61="+V61);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_97Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_97_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row50Struct row50 = new row50Struct();




	
	/**
	 * [tAdvancedHash_row50 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row50", false);
		start_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tAdvancedHash_row50 = 0;
		

			   		// connection name:row50
			   		// source node:tOracleInput_97 - inputs:(after_tOracleInput_1) outputs:(row50,row50) | target node:tAdvancedHash_row50 - inputs:(row50) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row50 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row50Struct>getLookup(matchingModeEnum_row50);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row50", tHash_Lookup_row50);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row50 begin ] stop
 */



	
	/**
	 * [tOracleInput_97 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_97", false);
		start_Hash.put("tOracleInput_97", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_97";
	
	
		int tos_count_tOracleInput_97 = 0;
		
	


	
		    int nb_line_tOracleInput_97 = 0;
		    java.sql.Connection conn_tOracleInput_97 = null;
				conn_tOracleInput_97 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_97 = false;
				boolean isConnectionWrapped_tOracleInput_97 = !(conn_tOracleInput_97 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_97.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_97 = null;
                if (isConnectionWrapped_tOracleInput_97) {
					unwrappedOraConn_tOracleInput_97 = conn_tOracleInput_97.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_97 != null) {
                        isTimeZoneNull_tOracleInput_97 = (unwrappedOraConn_tOracleInput_97.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_97 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_97).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_97) {
					java.sql.Statement stmtGetTZ_tOracleInput_97 = conn_tOracleInput_97.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_97 = stmtGetTZ_tOracleInput_97.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_97 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_97.next()) {
						sessionTimezone_tOracleInput_97 = rsGetTZ_tOracleInput_97.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_97 && unwrappedOraConn_tOracleInput_97 != null) {
                        unwrappedOraConn_tOracleInput_97.setSessionTimeZone(sessionTimezone_tOracleInput_97);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_97).setSessionTimeZone(sessionTimezone_tOracleInput_97);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_97 = conn_tOracleInput_97.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_97.setFetchSize(1000);


		    String dbquery_tOracleInput_97 = "SELECT \n  '1' AS v61,\n  P.PERSONAS_ID\nFROM HCL_PROCESOSASISTENCIALES P\nINNER JOIN (SELECT \n              MAX(PROC."
+"ID) AS ID, \n              PROC.PERSONAS_ID,\n              PYP.ID AS PYP_ID\n            FROM HCL_PROCESOSASISTENCIALES"
+" PROC \n            INNER JOIN GEN_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID\n            INNER JOIN HCL_VALORACIONES VAL ON"
+" VAL.PROCESOSASISTENCIALES_ID = PROC.ID\n            LEFT JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_ID\n            LEFT JOIN"
+" GEN_FINALIDADCONSULTA FIN ON FIN.ID = VAL.FINALIDADCONSULTA_ID\n            WHERE (PYP.SIGLA = 'PMP' AND FIN.CODIGO IN "
+"(6,1))\n            AND ROUND(MONTHS_BETWEEN(PROC.FFINAL,GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 60\n            AND PRO"
+"C.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            GROUP BY PROC.PERSONAS_ID,PYP.ID) SUB ON SUB.ID = P.ID\nINNER JOIN HCL_FORMMEDICAS HF "
+"ON HF.PROCESOSASISTENCIALES_ID = P.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HCL"
+"_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN MED_FORMASFARMACEUTICAS MFAR ON MFAR.ID=DHFI.FORMA"
+"SFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MGEN ON MGEN.ID=MFAR.GENERICOS_ID AND MGEN.DESCRIPCION LIKE '%CARBONATO%' AN"
+"D MGEN.DESCRIPCION LIKE '%CALCIO%'\nWHERE P.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_97_QUERY",dbquery_tOracleInput_97);

		    java.sql.ResultSet rs_tOracleInput_97 = null;

		    try {
		    	rs_tOracleInput_97 = stmt_tOracleInput_97.executeQuery(dbquery_tOracleInput_97);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_97 = rs_tOracleInput_97.getMetaData();
		    	int colQtyInRs_tOracleInput_97 = rsmd_tOracleInput_97.getColumnCount();

		    String tmpContent_tOracleInput_97 = null;
		    
		    
		    while (rs_tOracleInput_97.next()) {
		        nb_line_tOracleInput_97++;
		        
							if(colQtyInRs_tOracleInput_97 < 1) {
								row50.V61 = null;
							} else {
	                         		
        	row50.V61 = routines.system.JDBCUtil.getString(rs_tOracleInput_97, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_97 < 2) {
								row50.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_97.getObject(2) != null) {
						row50.PERSONAS_ID = rs_tOracleInput_97.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_97 begin ] stop
 */
	
	/**
	 * [tOracleInput_97 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_97";
	
	

 


	tos_count_tOracleInput_97++;

/**
 * [tOracleInput_97 main ] stop
 */
	
	/**
	 * [tOracleInput_97 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_97";
	
	

 



/**
 * [tOracleInput_97 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					


			   
			   

					row50Struct row50_HashRow = new row50Struct();
		   	   	   
				
				row50_HashRow.V61 = row50.V61;
				
				row50_HashRow.PERSONAS_ID = row50.PERSONAS_ID;
				
			tHash_Lookup_row50.put(row50_HashRow);
			
            




 


	tos_count_tAdvancedHash_row50++;

/**
 * [tAdvancedHash_row50 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row50 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_97 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_97";
	
	

 



/**
 * [tOracleInput_97 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_97 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_97";
	
	

}
}finally{
	if (rs_tOracleInput_97 != null) {
		rs_tOracleInput_97.close();
	}
	if (stmt_tOracleInput_97 != null) {
		stmt_tOracleInput_97.close();
	}
}

globalMap.put("tOracleInput_97_NB_LINE",nb_line_tOracleInput_97);
 

ok_Hash.put("tOracleInput_97", true);
end_Hash.put("tOracleInput_97", System.currentTimeMillis());




/**
 * [tOracleInput_97 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

tHash_Lookup_row50.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row50", true);
end_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());




/**
 * [tAdvancedHash_row50 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_97 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_97";
	
	

 



/**
 * [tOracleInput_97 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row50 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row50";
	
	

 



/**
 * [tAdvancedHash_row50 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_97_SUBPROCESS_STATE", 1);
	}
	


public static class row51Struct implements routines.system.IPersistableComparableLookupRow<row51Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V62;

				public String getV62 () {
					return this.V62;
				}

				public Boolean V62IsNullable(){
				    return true;
				}
				public Boolean V62IsKey(){
				    return false;
				}
				public Integer V62Length(){
				    return 10;
				}
				public Integer V62Precision(){
				    return 0;
				}
				public String V62Default(){
				
					return null;
				
				}
				public String V62Comment(){
				
				    return "";
				
				}
				public String V62Pattern(){
				
					return "";
				
				}
				public String V62OriginalDbColumnName(){
				
					return "V62";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row51Struct other = (row51Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row51Struct other) {

		other.V62 = this.V62;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row51Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V62 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V62 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V62, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V62, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V62="+V62);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_98Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_98_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row51Struct row51 = new row51Struct();




	
	/**
	 * [tAdvancedHash_row51 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row51", false);
		start_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tAdvancedHash_row51 = 0;
		

			   		// connection name:row51
			   		// source node:tOracleInput_98 - inputs:(after_tOracleInput_1) outputs:(row51,row51) | target node:tAdvancedHash_row51 - inputs:(row51) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row51 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row51Struct> tHash_Lookup_row51 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row51Struct>getLookup(matchingModeEnum_row51);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row51", tHash_Lookup_row51);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row51 begin ] stop
 */



	
	/**
	 * [tOracleInput_98 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_98", false);
		start_Hash.put("tOracleInput_98", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_98";
	
	
		int tos_count_tOracleInput_98 = 0;
		
	


	
		    int nb_line_tOracleInput_98 = 0;
		    java.sql.Connection conn_tOracleInput_98 = null;
				conn_tOracleInput_98 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_98 = false;
				boolean isConnectionWrapped_tOracleInput_98 = !(conn_tOracleInput_98 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_98.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_98 = null;
                if (isConnectionWrapped_tOracleInput_98) {
					unwrappedOraConn_tOracleInput_98 = conn_tOracleInput_98.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_98 != null) {
                        isTimeZoneNull_tOracleInput_98 = (unwrappedOraConn_tOracleInput_98.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_98 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_98).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_98) {
					java.sql.Statement stmtGetTZ_tOracleInput_98 = conn_tOracleInput_98.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_98 = stmtGetTZ_tOracleInput_98.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_98 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_98.next()) {
						sessionTimezone_tOracleInput_98 = rsGetTZ_tOracleInput_98.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_98 && unwrappedOraConn_tOracleInput_98 != null) {
                        unwrappedOraConn_tOracleInput_98.setSessionTimeZone(sessionTimezone_tOracleInput_98);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_98).setSessionTimeZone(sessionTimezone_tOracleInput_98);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_98 = conn_tOracleInput_98.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_98.setFetchSize(1000);


		    String dbquery_tOracleInput_98 = "SELECT    V62\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR( PROC.FFINAL , 'YYYY-MM-DD' ) AS V62\n            "
+", PROC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FRO"
+"M GEN_TEXAMENES TE\n    INNER JOIN GEN_PARAMEXAMENES PAR ON PAR.TEXAMENES_ID = TE.ID \n    INNER JOIN GEN_HEXAMENES GH O"
+"N GH.PARAMEXAMENES_ID = PAR.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = GH.PROCESOSASISTENCIALES_ID\n"
+"    WHERE TE.SIGLA IN ('TS','TJ')\n      AND PROC.ESTREGISTRO_ID = 1\n      AND GH.ESTREGISTRO_ID = 1\n      AND TRUNC( "
+"PROC.FFINAL ) BETWEEN TO_DATE( '"+context.FECHA_INICIAL+"', 'DD/MM/YYYY') \n                                   AND TO_DATE( '"+context.FECHA_FINAL+"', 'DD/MM/YYYY')   \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_98_QUERY",dbquery_tOracleInput_98);

		    java.sql.ResultSet rs_tOracleInput_98 = null;

		    try {
		    	rs_tOracleInput_98 = stmt_tOracleInput_98.executeQuery(dbquery_tOracleInput_98);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_98 = rs_tOracleInput_98.getMetaData();
		    	int colQtyInRs_tOracleInput_98 = rsmd_tOracleInput_98.getColumnCount();

		    String tmpContent_tOracleInput_98 = null;
		    
		    
		    while (rs_tOracleInput_98.next()) {
		        nb_line_tOracleInput_98++;
		        
							if(colQtyInRs_tOracleInput_98 < 1) {
								row51.V62 = null;
							} else {
	                         		
        	row51.V62 = routines.system.JDBCUtil.getString(rs_tOracleInput_98, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_98 < 2) {
								row51.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_98.getObject(2) != null) {
						row51.PERSONAS_ID = rs_tOracleInput_98.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_98 begin ] stop
 */
	
	/**
	 * [tOracleInput_98 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_98";
	
	

 


	tos_count_tOracleInput_98++;

/**
 * [tOracleInput_98 main ] stop
 */
	
	/**
	 * [tOracleInput_98 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_98";
	
	

 



/**
 * [tOracleInput_98 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					


			   
			   

					row51Struct row51_HashRow = new row51Struct();
		   	   	   
				
				row51_HashRow.V62 = row51.V62;
				
				row51_HashRow.PERSONAS_ID = row51.PERSONAS_ID;
				
			tHash_Lookup_row51.put(row51_HashRow);
			
            




 


	tos_count_tAdvancedHash_row51++;

/**
 * [tAdvancedHash_row51 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row51 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_98 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_98";
	
	

 



/**
 * [tOracleInput_98 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_98 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_98";
	
	

}
}finally{
	if (rs_tOracleInput_98 != null) {
		rs_tOracleInput_98.close();
	}
	if (stmt_tOracleInput_98 != null) {
		stmt_tOracleInput_98.close();
	}
}

globalMap.put("tOracleInput_98_NB_LINE",nb_line_tOracleInput_98);
 

ok_Hash.put("tOracleInput_98", true);
end_Hash.put("tOracleInput_98", System.currentTimeMillis());




/**
 * [tOracleInput_98 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

tHash_Lookup_row51.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row51", true);
end_Hash.put("tAdvancedHash_row51", System.currentTimeMillis());




/**
 * [tAdvancedHash_row51 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_98 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_98";
	
	

 



/**
 * [tOracleInput_98 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row51 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row51";
	
	

 



/**
 * [tAdvancedHash_row51 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_98_SUBPROCESS_STATE", 1);
	}
	


public static class row52Struct implements routines.system.IPersistableComparableLookupRow<row52Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V63;

				public String getV63 () {
					return this.V63;
				}

				public Boolean V63IsNullable(){
				    return true;
				}
				public Boolean V63IsKey(){
				    return false;
				}
				public Integer V63Length(){
				    return null;
				}
				public Integer V63Precision(){
				    return null;
				}
				public String V63Default(){
				
					return null;
				
				}
				public String V63Comment(){
				
				    return "";
				
				}
				public String V63Pattern(){
				
					return "";
				
				}
				public String V63OriginalDbColumnName(){
				
					return "V63";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row52Struct other = (row52Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row52Struct other) {

		other.V63 = this.V63;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row52Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V63 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V63 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V63, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V63, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V63="+V63);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_100Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_100_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row52Struct row52 = new row52Struct();




	
	/**
	 * [tAdvancedHash_row52 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row52", false);
		start_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tAdvancedHash_row52 = 0;
		

			   		// connection name:row52
			   		// source node:tOracleInput_100 - inputs:(after_tOracleInput_1) outputs:(row52,row52) | target node:tAdvancedHash_row52 - inputs:(row52) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row52 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row52Struct> tHash_Lookup_row52 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row52Struct>getLookup(matchingModeEnum_row52);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row52", tHash_Lookup_row52);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row52 begin ] stop
 */



	
	/**
	 * [tOracleInput_100 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_100", false);
		start_Hash.put("tOracleInput_100", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_100";
	
	
		int tos_count_tOracleInput_100 = 0;
		
	


	
		    int nb_line_tOracleInput_100 = 0;
		    java.sql.Connection conn_tOracleInput_100 = null;
				conn_tOracleInput_100 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_100 = false;
				boolean isConnectionWrapped_tOracleInput_100 = !(conn_tOracleInput_100 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_100.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_100 = null;
                if (isConnectionWrapped_tOracleInput_100) {
					unwrappedOraConn_tOracleInput_100 = conn_tOracleInput_100.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_100 != null) {
                        isTimeZoneNull_tOracleInput_100 = (unwrappedOraConn_tOracleInput_100.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_100 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_100).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_100) {
					java.sql.Statement stmtGetTZ_tOracleInput_100 = conn_tOracleInput_100.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_100 = stmtGetTZ_tOracleInput_100.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_100 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_100.next()) {
						sessionTimezone_tOracleInput_100 = rsGetTZ_tOracleInput_100.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_100 && unwrappedOraConn_tOracleInput_100 != null) {
                        unwrappedOraConn_tOracleInput_100.setSessionTimeZone(sessionTimezone_tOracleInput_100);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_100).setSessionTimeZone(sessionTimezone_tOracleInput_100);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_100 = conn_tOracleInput_100.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_100.setFetchSize(1000);


		    String dbquery_tOracleInput_100 = "SELECT \n  TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS V63,\n  PROC.PERSONAS_ID\n\nFROM HCL_PROCESOSASISTENCIALES PROC"
+"\nINNER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = PROC.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = VAL.CUPS_I"
+"D AND CU.NOMBRE LIKE '%OFTALMOLOGIA%'\nWHERE PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_100_QUERY",dbquery_tOracleInput_100);

		    java.sql.ResultSet rs_tOracleInput_100 = null;

		    try {
		    	rs_tOracleInput_100 = stmt_tOracleInput_100.executeQuery(dbquery_tOracleInput_100);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_100 = rs_tOracleInput_100.getMetaData();
		    	int colQtyInRs_tOracleInput_100 = rsmd_tOracleInput_100.getColumnCount();

		    String tmpContent_tOracleInput_100 = null;
		    
		    
		    while (rs_tOracleInput_100.next()) {
		        nb_line_tOracleInput_100++;
		        
							if(colQtyInRs_tOracleInput_100 < 1) {
								row52.V63 = null;
							} else {
	                         		
        	row52.V63 = routines.system.JDBCUtil.getString(rs_tOracleInput_100, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_100 < 2) {
								row52.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_100.getObject(2) != null) {
						row52.PERSONAS_ID = rs_tOracleInput_100.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_100 begin ] stop
 */
	
	/**
	 * [tOracleInput_100 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_100";
	
	

 


	tos_count_tOracleInput_100++;

/**
 * [tOracleInput_100 main ] stop
 */
	
	/**
	 * [tOracleInput_100 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_100";
	
	

 



/**
 * [tOracleInput_100 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					


			   
			   

					row52Struct row52_HashRow = new row52Struct();
		   	   	   
				
				row52_HashRow.V63 = row52.V63;
				
				row52_HashRow.PERSONAS_ID = row52.PERSONAS_ID;
				
			tHash_Lookup_row52.put(row52_HashRow);
			
            




 


	tos_count_tAdvancedHash_row52++;

/**
 * [tAdvancedHash_row52 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row52 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_100 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_100";
	
	

 



/**
 * [tOracleInput_100 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_100 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_100";
	
	

}
}finally{
	if (rs_tOracleInput_100 != null) {
		rs_tOracleInput_100.close();
	}
	if (stmt_tOracleInput_100 != null) {
		stmt_tOracleInput_100.close();
	}
}

globalMap.put("tOracleInput_100_NB_LINE",nb_line_tOracleInput_100);
 

ok_Hash.put("tOracleInput_100", true);
end_Hash.put("tOracleInput_100", System.currentTimeMillis());




/**
 * [tOracleInput_100 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

tHash_Lookup_row52.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row52", true);
end_Hash.put("tAdvancedHash_row52", System.currentTimeMillis());




/**
 * [tAdvancedHash_row52 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_100 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_100";
	
	

 



/**
 * [tOracleInput_100 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row52 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row52";
	
	

 



/**
 * [tAdvancedHash_row52 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_100_SUBPROCESS_STATE", 1);
	}
	


public static class row53Struct implements routines.system.IPersistableComparableLookupRow<row53Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V64;

				public String getV64 () {
					return this.V64;
				}

				public Boolean V64IsNullable(){
				    return true;
				}
				public Boolean V64IsKey(){
				    return false;
				}
				public Integer V64Length(){
				    return null;
				}
				public Integer V64Precision(){
				    return null;
				}
				public String V64Default(){
				
					return null;
				
				}
				public String V64Comment(){
				
				    return "";
				
				}
				public String V64Pattern(){
				
					return "";
				
				}
				public String V64OriginalDbColumnName(){
				
					return "V64";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row53Struct other = (row53Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row53Struct other) {

		other.V64 = this.V64;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row53Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V64 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V64 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V64, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V64, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V64="+V64);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_90Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_90_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row53Struct row53 = new row53Struct();




	
	/**
	 * [tAdvancedHash_row53 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row53", false);
		start_Hash.put("tAdvancedHash_row53", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row53";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tAdvancedHash_row53 = 0;
		

			   		// connection name:row53
			   		// source node:tOracleInput_90 - inputs:(after_tOracleInput_1) outputs:(row53,row53) | target node:tAdvancedHash_row53 - inputs:(row53) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row53 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row53Struct> tHash_Lookup_row53 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row53Struct>getLookup(matchingModeEnum_row53);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row53", tHash_Lookup_row53);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row53 begin ] stop
 */



	
	/**
	 * [tOracleInput_90 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_90", false);
		start_Hash.put("tOracleInput_90", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_90";
	
	
		int tos_count_tOracleInput_90 = 0;
		
	


	
		    int nb_line_tOracleInput_90 = 0;
		    java.sql.Connection conn_tOracleInput_90 = null;
				conn_tOracleInput_90 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_90 = false;
				boolean isConnectionWrapped_tOracleInput_90 = !(conn_tOracleInput_90 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_90.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_90 = null;
                if (isConnectionWrapped_tOracleInput_90) {
					unwrappedOraConn_tOracleInput_90 = conn_tOracleInput_90.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_90 != null) {
                        isTimeZoneNull_tOracleInput_90 = (unwrappedOraConn_tOracleInput_90.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_90 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_90).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_90) {
					java.sql.Statement stmtGetTZ_tOracleInput_90 = conn_tOracleInput_90.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_90 = stmtGetTZ_tOracleInput_90.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_90 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_90.next()) {
						sessionTimezone_tOracleInput_90 = rsGetTZ_tOracleInput_90.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_90 && unwrappedOraConn_tOracleInput_90 != null) {
                        unwrappedOraConn_tOracleInput_90.setSessionTimeZone(sessionTimezone_tOracleInput_90);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_90).setSessionTimeZone(sessionTimezone_tOracleInput_90);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_90 = conn_tOracleInput_90.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_90.setFetchSize(1000);


		    String dbquery_tOracleInput_90 = "SELECT    V64\n        , PERSONAS_ID \nFROM (         \nSELECT    TO_CHAR(PA.FFINAL,'YYYY-MM-DD') AS v64\n        , PA."
+"PERSONAS_ID\n        , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\nFROM GEN_CIE10 GC \nIN"
+"NER JOIN HCL_DIAGNOSTICOS HD ON HD.CIE10_ID = GC.ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HD.PROCESOSASIST"
+"ENCIALES_ID \nINNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID\nWHERE GC.CODIGO IN ( 'E40X', 'E41X', 'E42X', 'E43X',"
+" 'E440', 'E441','E45X', 'E46X')\n  AND HD.ESTREGISTRO_ID = 1\n  AND PA.ESTREGISTRO_ID = 1\n  AND GP.ESTREGISTRO_ID = 1\n"
+"  AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                              AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_90_QUERY",dbquery_tOracleInput_90);

		    java.sql.ResultSet rs_tOracleInput_90 = null;

		    try {
		    	rs_tOracleInput_90 = stmt_tOracleInput_90.executeQuery(dbquery_tOracleInput_90);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_90 = rs_tOracleInput_90.getMetaData();
		    	int colQtyInRs_tOracleInput_90 = rsmd_tOracleInput_90.getColumnCount();

		    String tmpContent_tOracleInput_90 = null;
		    
		    
		    while (rs_tOracleInput_90.next()) {
		        nb_line_tOracleInput_90++;
		        
							if(colQtyInRs_tOracleInput_90 < 1) {
								row53.V64 = null;
							} else {
	                         		
        	row53.V64 = routines.system.JDBCUtil.getString(rs_tOracleInput_90, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_90 < 2) {
								row53.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_90.getObject(2) != null) {
						row53.PERSONAS_ID = rs_tOracleInput_90.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_90 begin ] stop
 */
	
	/**
	 * [tOracleInput_90 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_90";
	
	

 


	tos_count_tOracleInput_90++;

/**
 * [tOracleInput_90 main ] stop
 */
	
	/**
	 * [tOracleInput_90 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_90";
	
	

 



/**
 * [tOracleInput_90 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					


			   
			   

					row53Struct row53_HashRow = new row53Struct();
		   	   	   
				
				row53_HashRow.V64 = row53.V64;
				
				row53_HashRow.PERSONAS_ID = row53.PERSONAS_ID;
				
			tHash_Lookup_row53.put(row53_HashRow);
			
            




 


	tos_count_tAdvancedHash_row53++;

/**
 * [tAdvancedHash_row53 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";
	
	

 



/**
 * [tAdvancedHash_row53 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row53 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";
	
	

 



/**
 * [tAdvancedHash_row53 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_90 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_90";
	
	

 



/**
 * [tOracleInput_90 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_90 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_90";
	
	

}
}finally{
	if (rs_tOracleInput_90 != null) {
		rs_tOracleInput_90.close();
	}
	if (stmt_tOracleInput_90 != null) {
		stmt_tOracleInput_90.close();
	}
}

globalMap.put("tOracleInput_90_NB_LINE",nb_line_tOracleInput_90);
 

ok_Hash.put("tOracleInput_90", true);
end_Hash.put("tOracleInput_90", System.currentTimeMillis());




/**
 * [tOracleInput_90 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";
	
	

tHash_Lookup_row53.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row53", true);
end_Hash.put("tAdvancedHash_row53", System.currentTimeMillis());




/**
 * [tAdvancedHash_row53 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_90 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_90";
	
	

 



/**
 * [tOracleInput_90 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row53 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row53";
	
	

 



/**
 * [tAdvancedHash_row53 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_90_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableComparableLookupRow<row54Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V65;

				public String getV65 () {
					return this.V65;
				}

				public Boolean V65IsNullable(){
				    return true;
				}
				public Boolean V65IsKey(){
				    return false;
				}
				public Integer V65Length(){
				    return 10;
				}
				public Integer V65Precision(){
				    return 0;
				}
				public String V65Default(){
				
					return null;
				
				}
				public String V65Comment(){
				
				    return "";
				
				}
				public String V65Pattern(){
				
					return "";
				
				}
				public String V65OriginalDbColumnName(){
				
					return "V65";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.V65 = this.V65;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V65 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V65 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V65, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V65, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V65="+V65);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_88Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_88_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tAdvancedHash_row54 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row54", false);
		start_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tAdvancedHash_row54 = 0;
		

			   		// connection name:row54
			   		// source node:tOracleInput_88 - inputs:(after_tOracleInput_1) outputs:(row54,row54) | target node:tAdvancedHash_row54 - inputs:(row54) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row54 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row54Struct>getLookup(matchingModeEnum_row54);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row54", tHash_Lookup_row54);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row54 begin ] stop
 */



	
	/**
	 * [tOracleInput_88 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_88", false);
		start_Hash.put("tOracleInput_88", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_88";
	
	
		int tos_count_tOracleInput_88 = 0;
		
	


	
		    int nb_line_tOracleInput_88 = 0;
		    java.sql.Connection conn_tOracleInput_88 = null;
				conn_tOracleInput_88 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_88 = false;
				boolean isConnectionWrapped_tOracleInput_88 = !(conn_tOracleInput_88 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_88.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_88 = null;
                if (isConnectionWrapped_tOracleInput_88) {
					unwrappedOraConn_tOracleInput_88 = conn_tOracleInput_88.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_88 != null) {
                        isTimeZoneNull_tOracleInput_88 = (unwrappedOraConn_tOracleInput_88.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_88 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_88).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_88) {
					java.sql.Statement stmtGetTZ_tOracleInput_88 = conn_tOracleInput_88.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_88 = stmtGetTZ_tOracleInput_88.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_88 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_88.next()) {
						sessionTimezone_tOracleInput_88 = rsGetTZ_tOracleInput_88.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_88 && unwrappedOraConn_tOracleInput_88 != null) {
                        unwrappedOraConn_tOracleInput_88.setSessionTimeZone(sessionTimezone_tOracleInput_88);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_88).setSessionTimeZone(sessionTimezone_tOracleInput_88);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_88 = conn_tOracleInput_88.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_88.setFetchSize(1000);


		    String dbquery_tOracleInput_88 = "SELECT    V65\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR(PROC.FFINAL,'YYYY-MM-DD') AS V65\n            , PR"
+"OC.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n    FROM HCL_TANTECE"
+"DENTES TP\n    INNER JOIN HCL_TANTECEDENTES TA ON TA.PADRE_ID = TP.ID \n    INNER JOIN HCL_ANTECEDENTES AN ON AN.TANTECE"
+"DENTE_ID = TA.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = AN.PROCESOSASISTENCIALES_ID \n    INNER JOI"
+"N GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID\n    WHERE TP.SIGL"
+"A = 'AVG'\n      AND AN.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n      AND ( ( SEX.SIGLA = 'F' AND TRUNC(("
+"TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365)>18 ) \n            OR TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') -PER.FECHA_NACIMIENTO)/365)<18 )\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_88_QUERY",dbquery_tOracleInput_88);

		    java.sql.ResultSet rs_tOracleInput_88 = null;

		    try {
		    	rs_tOracleInput_88 = stmt_tOracleInput_88.executeQuery(dbquery_tOracleInput_88);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_88 = rs_tOracleInput_88.getMetaData();
		    	int colQtyInRs_tOracleInput_88 = rsmd_tOracleInput_88.getColumnCount();

		    String tmpContent_tOracleInput_88 = null;
		    
		    
		    while (rs_tOracleInput_88.next()) {
		        nb_line_tOracleInput_88++;
		        
							if(colQtyInRs_tOracleInput_88 < 1) {
								row54.V65 = null;
							} else {
	                         		
        	row54.V65 = routines.system.JDBCUtil.getString(rs_tOracleInput_88, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_88 < 2) {
								row54.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_88.getObject(2) != null) {
						row54.PERSONAS_ID = rs_tOracleInput_88.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_88 begin ] stop
 */
	
	/**
	 * [tOracleInput_88 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_88";
	
	

 


	tos_count_tOracleInput_88++;

/**
 * [tOracleInput_88 main ] stop
 */
	
	/**
	 * [tOracleInput_88 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_88";
	
	

 



/**
 * [tOracleInput_88 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					


			   
			   

					row54Struct row54_HashRow = new row54Struct();
		   	   	   
				
				row54_HashRow.V65 = row54.V65;
				
				row54_HashRow.PERSONAS_ID = row54.PERSONAS_ID;
				
			tHash_Lookup_row54.put(row54_HashRow);
			
            




 


	tos_count_tAdvancedHash_row54++;

/**
 * [tAdvancedHash_row54 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_88 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_88";
	
	

 



/**
 * [tOracleInput_88 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_88 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_88";
	
	

}
}finally{
	if (rs_tOracleInput_88 != null) {
		rs_tOracleInput_88.close();
	}
	if (stmt_tOracleInput_88 != null) {
		stmt_tOracleInput_88.close();
	}
}

globalMap.put("tOracleInput_88_NB_LINE",nb_line_tOracleInput_88);
 

ok_Hash.put("tOracleInput_88", true);
end_Hash.put("tOracleInput_88", System.currentTimeMillis());




/**
 * [tOracleInput_88 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

tHash_Lookup_row54.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row54", true);
end_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());




/**
 * [tAdvancedHash_row54 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_88 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_88";
	
	

 



/**
 * [tOracleInput_88 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_88_SUBPROCESS_STATE", 1);
	}
	


public static class row55Struct implements routines.system.IPersistableComparableLookupRow<row55Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V66;

				public String getV66 () {
					return this.V66;
				}

				public Boolean V66IsNullable(){
				    return true;
				}
				public Boolean V66IsKey(){
				    return false;
				}
				public Integer V66Length(){
				    return 10;
				}
				public Integer V66Precision(){
				    return 0;
				}
				public String V66Default(){
				
					return null;
				
				}
				public String V66Comment(){
				
				    return "";
				
				}
				public String V66Pattern(){
				
					return "";
				
				}
				public String V66OriginalDbColumnName(){
				
					return "V66";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row55Struct other = (row55Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row55Struct other) {

		other.V66 = this.V66;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row55Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V66 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V66 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V66, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V66, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V66="+V66);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_89Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_89_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();




	
	/**
	 * [tAdvancedHash_row55 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row55", false);
		start_Hash.put("tAdvancedHash_row55", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row55";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tAdvancedHash_row55 = 0;
		

			   		// connection name:row55
			   		// source node:tOracleInput_89 - inputs:(after_tOracleInput_1) outputs:(row55,row55) | target node:tAdvancedHash_row55 - inputs:(row55) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row55 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row55Struct> tHash_Lookup_row55 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row55Struct>getLookup(matchingModeEnum_row55);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row55", tHash_Lookup_row55);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row55 begin ] stop
 */



	
	/**
	 * [tOracleInput_89 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_89", false);
		start_Hash.put("tOracleInput_89", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_89";
	
	
		int tos_count_tOracleInput_89 = 0;
		
	


	
		    int nb_line_tOracleInput_89 = 0;
		    java.sql.Connection conn_tOracleInput_89 = null;
				conn_tOracleInput_89 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_89 = false;
				boolean isConnectionWrapped_tOracleInput_89 = !(conn_tOracleInput_89 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_89.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_89 = null;
                if (isConnectionWrapped_tOracleInput_89) {
					unwrappedOraConn_tOracleInput_89 = conn_tOracleInput_89.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_89 != null) {
                        isTimeZoneNull_tOracleInput_89 = (unwrappedOraConn_tOracleInput_89.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_89 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_89).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_89) {
					java.sql.Statement stmtGetTZ_tOracleInput_89 = conn_tOracleInput_89.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_89 = stmtGetTZ_tOracleInput_89.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_89 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_89.next()) {
						sessionTimezone_tOracleInput_89 = rsGetTZ_tOracleInput_89.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_89 && unwrappedOraConn_tOracleInput_89 != null) {
                        unwrappedOraConn_tOracleInput_89.setSessionTimeZone(sessionTimezone_tOracleInput_89);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_89).setSessionTimeZone(sessionTimezone_tOracleInput_89);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_89 = conn_tOracleInput_89.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_89.setFetchSize(1000);


		    String dbquery_tOracleInput_89 = "/*AGREGAR PERO ESPERAR QUE TOCA CREAR UNA FINALIDAD DE CONSULTA A LA ATENCION A LAS VICTIMAS DE MALTRATO */\nSELECT \n "
+" TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS v66, \n  PROC.PERSONAS_ID\n\nFROM HCL_PROCESOSASISTENCIALES PROC \nINNER JO"
+"IN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = PROC.ID\nINNER JOIN GEN_FINALIDADCONSULTA FIN ON FIN.ID = VAL."
+"FINALIDADCONSULTA_ID\nWHERE PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_89_QUERY",dbquery_tOracleInput_89);

		    java.sql.ResultSet rs_tOracleInput_89 = null;

		    try {
		    	rs_tOracleInput_89 = stmt_tOracleInput_89.executeQuery(dbquery_tOracleInput_89);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_89 = rs_tOracleInput_89.getMetaData();
		    	int colQtyInRs_tOracleInput_89 = rsmd_tOracleInput_89.getColumnCount();

		    String tmpContent_tOracleInput_89 = null;
		    
		    
		    while (rs_tOracleInput_89.next()) {
		        nb_line_tOracleInput_89++;
		        
							if(colQtyInRs_tOracleInput_89 < 1) {
								row55.V66 = null;
							} else {
	                         		
        	row55.V66 = routines.system.JDBCUtil.getString(rs_tOracleInput_89, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_89 < 2) {
								row55.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_89.getObject(2) != null) {
						row55.PERSONAS_ID = rs_tOracleInput_89.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_89 begin ] stop
 */
	
	/**
	 * [tOracleInput_89 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_89";
	
	

 


	tos_count_tOracleInput_89++;

/**
 * [tOracleInput_89 main ] stop
 */
	
	/**
	 * [tOracleInput_89 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_89";
	
	

 



/**
 * [tOracleInput_89 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row55 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row55";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					


			   
			   

					row55Struct row55_HashRow = new row55Struct();
		   	   	   
				
				row55_HashRow.V66 = row55.V66;
				
				row55_HashRow.PERSONAS_ID = row55.PERSONAS_ID;
				
			tHash_Lookup_row55.put(row55_HashRow);
			
            




 


	tos_count_tAdvancedHash_row55++;

/**
 * [tAdvancedHash_row55 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row55 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row55";
	
	

 



/**
 * [tAdvancedHash_row55 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row55 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row55";
	
	

 



/**
 * [tAdvancedHash_row55 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_89 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_89";
	
	

 



/**
 * [tOracleInput_89 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_89 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_89";
	
	

}
}finally{
	if (rs_tOracleInput_89 != null) {
		rs_tOracleInput_89.close();
	}
	if (stmt_tOracleInput_89 != null) {
		stmt_tOracleInput_89.close();
	}
}

globalMap.put("tOracleInput_89_NB_LINE",nb_line_tOracleInput_89);
 

ok_Hash.put("tOracleInput_89", true);
end_Hash.put("tOracleInput_89", System.currentTimeMillis());




/**
 * [tOracleInput_89 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row55 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row55";
	
	

tHash_Lookup_row55.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row55", true);
end_Hash.put("tAdvancedHash_row55", System.currentTimeMillis());




/**
 * [tAdvancedHash_row55 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_89 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_89";
	
	

 



/**
 * [tOracleInput_89 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row55 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row55";
	
	

 



/**
 * [tAdvancedHash_row55 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_89_SUBPROCESS_STATE", 1);
	}
	


public static class row56Struct implements routines.system.IPersistableComparableLookupRow<row56Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V67;

				public String getV67 () {
					return this.V67;
				}

				public Boolean V67IsNullable(){
				    return true;
				}
				public Boolean V67IsKey(){
				    return false;
				}
				public Integer V67Length(){
				    return null;
				}
				public Integer V67Precision(){
				    return null;
				}
				public String V67Default(){
				
					return null;
				
				}
				public String V67Comment(){
				
				    return "";
				
				}
				public String V67Pattern(){
				
					return "";
				
				}
				public String V67OriginalDbColumnName(){
				
					return "V67";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row56Struct other = (row56Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row56Struct other) {

		other.V67 = this.V67;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row56Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V67 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V67 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V67, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V67, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V67="+V67);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row56Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_91Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_91_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row56Struct row56 = new row56Struct();




	
	/**
	 * [tAdvancedHash_row56 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row56", false);
		start_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row56";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row56");
					}
				
		int tos_count_tAdvancedHash_row56 = 0;
		

			   		// connection name:row56
			   		// source node:tOracleInput_91 - inputs:(after_tOracleInput_1) outputs:(row56,row56) | target node:tAdvancedHash_row56 - inputs:(row56) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row56 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row56Struct>getLookup(matchingModeEnum_row56);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row56", tHash_Lookup_row56);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row56 begin ] stop
 */



	
	/**
	 * [tOracleInput_91 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_91", false);
		start_Hash.put("tOracleInput_91", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_91";
	
	
		int tos_count_tOracleInput_91 = 0;
		
	


	
		    int nb_line_tOracleInput_91 = 0;
		    java.sql.Connection conn_tOracleInput_91 = null;
				conn_tOracleInput_91 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_91 = false;
				boolean isConnectionWrapped_tOracleInput_91 = !(conn_tOracleInput_91 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_91.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_91 = null;
                if (isConnectionWrapped_tOracleInput_91) {
					unwrappedOraConn_tOracleInput_91 = conn_tOracleInput_91.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_91 != null) {
                        isTimeZoneNull_tOracleInput_91 = (unwrappedOraConn_tOracleInput_91.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_91 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_91).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_91) {
					java.sql.Statement stmtGetTZ_tOracleInput_91 = conn_tOracleInput_91.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_91 = stmtGetTZ_tOracleInput_91.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_91 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_91.next()) {
						sessionTimezone_tOracleInput_91 = rsGetTZ_tOracleInput_91.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_91 && unwrappedOraConn_tOracleInput_91 != null) {
                        unwrappedOraConn_tOracleInput_91.setSessionTimeZone(sessionTimezone_tOracleInput_91);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_91).setSessionTimeZone(sessionTimezone_tOracleInput_91);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_91 = conn_tOracleInput_91.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_91.setFetchSize(1000);


		    String dbquery_tOracleInput_91 = "SELECT \n  TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS v67, \n  PROC.PERSONAS_ID\n\nFROM HCL_PROCESOSASISTENCIALES PROC"
+"\nINNER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = PROC.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = VAL.CUPS_"
+"ID AND CU.CODIGO IN ('890206','890306','890406')\nWHERE PROC.FFINAL BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')   + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_91_QUERY",dbquery_tOracleInput_91);

		    java.sql.ResultSet rs_tOracleInput_91 = null;

		    try {
		    	rs_tOracleInput_91 = stmt_tOracleInput_91.executeQuery(dbquery_tOracleInput_91);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_91 = rs_tOracleInput_91.getMetaData();
		    	int colQtyInRs_tOracleInput_91 = rsmd_tOracleInput_91.getColumnCount();

		    String tmpContent_tOracleInput_91 = null;
		    
		    
		    while (rs_tOracleInput_91.next()) {
		        nb_line_tOracleInput_91++;
		        
							if(colQtyInRs_tOracleInput_91 < 1) {
								row56.V67 = null;
							} else {
	                         		
        	row56.V67 = routines.system.JDBCUtil.getString(rs_tOracleInput_91, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_91 < 2) {
								row56.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_91.getObject(2) != null) {
						row56.PERSONAS_ID = rs_tOracleInput_91.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_91 begin ] stop
 */
	
	/**
	 * [tOracleInput_91 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_91";
	
	

 


	tos_count_tOracleInput_91++;

/**
 * [tOracleInput_91 main ] stop
 */
	
	/**
	 * [tOracleInput_91 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_91";
	
	

 



/**
 * [tOracleInput_91 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row56"
						
						);
					}
					


			   
			   

					row56Struct row56_HashRow = new row56Struct();
		   	   	   
				
				row56_HashRow.V67 = row56.V67;
				
				row56_HashRow.PERSONAS_ID = row56.PERSONAS_ID;
				
			tHash_Lookup_row56.put(row56_HashRow);
			
            




 


	tos_count_tAdvancedHash_row56++;

/**
 * [tAdvancedHash_row56 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row56 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row56 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_91 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_91";
	
	

 



/**
 * [tOracleInput_91 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_91 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_91";
	
	

}
}finally{
	if (rs_tOracleInput_91 != null) {
		rs_tOracleInput_91.close();
	}
	if (stmt_tOracleInput_91 != null) {
		stmt_tOracleInput_91.close();
	}
}

globalMap.put("tOracleInput_91_NB_LINE",nb_line_tOracleInput_91);
 

ok_Hash.put("tOracleInput_91", true);
end_Hash.put("tOracleInput_91", System.currentTimeMillis());




/**
 * [tOracleInput_91 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

tHash_Lookup_row56.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row56");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row56", true);
end_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());




/**
 * [tAdvancedHash_row56 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_91 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_91";
	
	

 



/**
 * [tOracleInput_91 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row56 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row56";
	
	

 



/**
 * [tAdvancedHash_row56 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_91_SUBPROCESS_STATE", 1);
	}
	


public static class row57Struct implements routines.system.IPersistableComparableLookupRow<row57Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return 10;
				}
				public Integer V69Precision(){
				    return 0;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row57Struct other = (row57Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row57Struct other) {

		other.V69 = this.V69;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row57Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V69 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V69 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V69, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V69, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V69="+V69);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_92Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_92_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row57Struct row57 = new row57Struct();




	
	/**
	 * [tAdvancedHash_row57 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row57", false);
		start_Hash.put("tAdvancedHash_row57", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row57";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tAdvancedHash_row57 = 0;
		

			   		// connection name:row57
			   		// source node:tOracleInput_92 - inputs:(after_tOracleInput_1) outputs:(row57,row57) | target node:tAdvancedHash_row57 - inputs:(row57) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row57 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row57Struct> tHash_Lookup_row57 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row57Struct>getLookup(matchingModeEnum_row57);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row57", tHash_Lookup_row57);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row57 begin ] stop
 */



	
	/**
	 * [tOracleInput_92 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_92", false);
		start_Hash.put("tOracleInput_92", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_92";
	
	
		int tos_count_tOracleInput_92 = 0;
		
	


	
		    int nb_line_tOracleInput_92 = 0;
		    java.sql.Connection conn_tOracleInput_92 = null;
				conn_tOracleInput_92 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_92 = false;
				boolean isConnectionWrapped_tOracleInput_92 = !(conn_tOracleInput_92 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_92.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_92 = null;
                if (isConnectionWrapped_tOracleInput_92) {
					unwrappedOraConn_tOracleInput_92 = conn_tOracleInput_92.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_92 != null) {
                        isTimeZoneNull_tOracleInput_92 = (unwrappedOraConn_tOracleInput_92.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_92 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_92).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_92) {
					java.sql.Statement stmtGetTZ_tOracleInput_92 = conn_tOracleInput_92.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_92 = stmtGetTZ_tOracleInput_92.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_92 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_92.next()) {
						sessionTimezone_tOracleInput_92 = rsGetTZ_tOracleInput_92.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_92 && unwrappedOraConn_tOracleInput_92 != null) {
                        unwrappedOraConn_tOracleInput_92.setSessionTimeZone(sessionTimezone_tOracleInput_92);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_92).setSessionTimeZone(sessionTimezone_tOracleInput_92);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_92 = conn_tOracleInput_92.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_92.setFetchSize(1000);


		    String dbquery_tOracleInput_92 = "SELECT    V68\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR(PROC.FFINAL,'YYYY-MM-DD') AS v68\n            , PR"
+"OC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GE"
+"N_CUPS GC\n    INNER JOIN HCL_VALORACIONES VAL ON VAL.CUPS_ID = GC.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON "
+"PROC.ID = VAL.PROCESOSASISTENCIALES_ID \n    WHERE GC.CODIGO IN ('890108', '890208' ,'890297'\n                       ,'"
+"890308','890397','890408'\n					   ,'890608','940901','943102'\n					   ,'944002','944102','990206')\n      AND VAL.ESTR"
+"EGISTRO_ID = 1\n      AND TRUNC( PROC.FFINAL ) BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_92_QUERY",dbquery_tOracleInput_92);

		    java.sql.ResultSet rs_tOracleInput_92 = null;

		    try {
		    	rs_tOracleInput_92 = stmt_tOracleInput_92.executeQuery(dbquery_tOracleInput_92);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_92 = rs_tOracleInput_92.getMetaData();
		    	int colQtyInRs_tOracleInput_92 = rsmd_tOracleInput_92.getColumnCount();

		    String tmpContent_tOracleInput_92 = null;
		    
		    
		    while (rs_tOracleInput_92.next()) {
		        nb_line_tOracleInput_92++;
		        
							if(colQtyInRs_tOracleInput_92 < 1) {
								row57.V69 = null;
							} else {
	                         		
        	row57.V69 = routines.system.JDBCUtil.getString(rs_tOracleInput_92, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_92 < 2) {
								row57.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_92.getObject(2) != null) {
						row57.PERSONAS_ID = rs_tOracleInput_92.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_92 begin ] stop
 */
	
	/**
	 * [tOracleInput_92 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_92";
	
	

 


	tos_count_tOracleInput_92++;

/**
 * [tOracleInput_92 main ] stop
 */
	
	/**
	 * [tOracleInput_92 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_92";
	
	

 



/**
 * [tOracleInput_92 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row57 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row57";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					


			   
			   

					row57Struct row57_HashRow = new row57Struct();
		   	   	   
				
				row57_HashRow.V69 = row57.V69;
				
				row57_HashRow.PERSONAS_ID = row57.PERSONAS_ID;
				
			tHash_Lookup_row57.put(row57_HashRow);
			
            




 


	tos_count_tAdvancedHash_row57++;

/**
 * [tAdvancedHash_row57 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row57 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row57";
	
	

 



/**
 * [tAdvancedHash_row57 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row57 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row57";
	
	

 



/**
 * [tAdvancedHash_row57 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_92 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_92";
	
	

 



/**
 * [tOracleInput_92 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_92 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_92";
	
	

}
}finally{
	if (rs_tOracleInput_92 != null) {
		rs_tOracleInput_92.close();
	}
	if (stmt_tOracleInput_92 != null) {
		stmt_tOracleInput_92.close();
	}
}

globalMap.put("tOracleInput_92_NB_LINE",nb_line_tOracleInput_92);
 

ok_Hash.put("tOracleInput_92", true);
end_Hash.put("tOracleInput_92", System.currentTimeMillis());




/**
 * [tOracleInput_92 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row57 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row57";
	
	

tHash_Lookup_row57.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row57", true);
end_Hash.put("tAdvancedHash_row57", System.currentTimeMillis());




/**
 * [tAdvancedHash_row57 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_92 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_92";
	
	

 



/**
 * [tOracleInput_92 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row57 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row57";
	
	

 



/**
 * [tAdvancedHash_row57 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_92_SUBPROCESS_STATE", 1);
	}
	


public static class row58Struct implements routines.system.IPersistableComparableLookupRow<row58Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V69;

				public String getV69 () {
					return this.V69;
				}

				public Boolean V69IsNullable(){
				    return true;
				}
				public Boolean V69IsKey(){
				    return false;
				}
				public Integer V69Length(){
				    return null;
				}
				public Integer V69Precision(){
				    return null;
				}
				public String V69Default(){
				
					return null;
				
				}
				public String V69Comment(){
				
				    return "";
				
				}
				public String V69Pattern(){
				
					return "";
				
				}
				public String V69OriginalDbColumnName(){
				
					return "V69";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row58Struct other = (row58Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row58Struct other) {

		other.V69 = this.V69;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row58Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V69 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V69 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V69, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V69, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V69="+V69);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_93Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_93_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row58Struct row58 = new row58Struct();




	
	/**
	 * [tAdvancedHash_row58 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row58", false);
		start_Hash.put("tAdvancedHash_row58", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row58";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tAdvancedHash_row58 = 0;
		

			   		// connection name:row58
			   		// source node:tOracleInput_93 - inputs:(after_tOracleInput_1) outputs:(row58,row58) | target node:tAdvancedHash_row58 - inputs:(row58) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row58 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row58Struct> tHash_Lookup_row58 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row58Struct>getLookup(matchingModeEnum_row58);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row58", tHash_Lookup_row58);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row58 begin ] stop
 */



	
	/**
	 * [tOracleInput_93 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_93", false);
		start_Hash.put("tOracleInput_93", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_93";
	
	
		int tos_count_tOracleInput_93 = 0;
		
	


	
		    int nb_line_tOracleInput_93 = 0;
		    java.sql.Connection conn_tOracleInput_93 = null;
				conn_tOracleInput_93 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_93 = false;
				boolean isConnectionWrapped_tOracleInput_93 = !(conn_tOracleInput_93 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_93.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_93 = null;
                if (isConnectionWrapped_tOracleInput_93) {
					unwrappedOraConn_tOracleInput_93 = conn_tOracleInput_93.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_93 != null) {
                        isTimeZoneNull_tOracleInput_93 = (unwrappedOraConn_tOracleInput_93.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_93 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_93).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_93) {
					java.sql.Statement stmtGetTZ_tOracleInput_93 = conn_tOracleInput_93.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_93 = stmtGetTZ_tOracleInput_93.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_93 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_93.next()) {
						sessionTimezone_tOracleInput_93 = rsGetTZ_tOracleInput_93.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_93 && unwrappedOraConn_tOracleInput_93 != null) {
                        unwrappedOraConn_tOracleInput_93.setSessionTimeZone(sessionTimezone_tOracleInput_93);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_93).setSessionTimeZone(sessionTimezone_tOracleInput_93);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_93 = conn_tOracleInput_93.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_93.setFetchSize(1000);


		    String dbquery_tOracleInput_93 = "SELECT    V69\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR(PROC.FFINAL,'YYYY-MM-DD') AS v69\n            , PR"
+"OC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GE"
+"N_CUPS CU \n    INNER JOIN HCL_VALORACIONES VAL ON VAL.CUPS_ID = CU.ID\n    INNER JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_I"
+"D\n    INNER JOIN GEN_FINALIDADCONSULTA FIN ON FIN.ID = VAL.FINALIDADCONSULTA_ID\n    INNER JOIN HCL_PROCESOSASISTENCIAL"
+"ES PROC ON PROC.ID = VAL.PROCESOSASISTENCIALES_ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID\n    WHERE C"
+"U.CODIGO IN ('890201','890205')\n      AND (PYP.SIGLA = 'CYD' OR FIN.CODIGO = 4) \n      AND VAL.ESTREGISTRO_ID = 1\n   "
+"   AND TRUNC(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12)<10\n      AND TRUNC( PROC.FFINAL ) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                   AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_93_QUERY",dbquery_tOracleInput_93);

		    java.sql.ResultSet rs_tOracleInput_93 = null;

		    try {
		    	rs_tOracleInput_93 = stmt_tOracleInput_93.executeQuery(dbquery_tOracleInput_93);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_93 = rs_tOracleInput_93.getMetaData();
		    	int colQtyInRs_tOracleInput_93 = rsmd_tOracleInput_93.getColumnCount();

		    String tmpContent_tOracleInput_93 = null;
		    
		    
		    while (rs_tOracleInput_93.next()) {
		        nb_line_tOracleInput_93++;
		        
							if(colQtyInRs_tOracleInput_93 < 1) {
								row58.V69 = null;
							} else {
	                         		
        	row58.V69 = routines.system.JDBCUtil.getString(rs_tOracleInput_93, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_93 < 2) {
								row58.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_93.getObject(2) != null) {
						row58.PERSONAS_ID = rs_tOracleInput_93.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_93 begin ] stop
 */
	
	/**
	 * [tOracleInput_93 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_93";
	
	

 


	tos_count_tOracleInput_93++;

/**
 * [tOracleInput_93 main ] stop
 */
	
	/**
	 * [tOracleInput_93 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_93";
	
	

 



/**
 * [tOracleInput_93 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					


			   
			   

					row58Struct row58_HashRow = new row58Struct();
		   	   	   
				
				row58_HashRow.V69 = row58.V69;
				
				row58_HashRow.PERSONAS_ID = row58.PERSONAS_ID;
				
			tHash_Lookup_row58.put(row58_HashRow);
			
            




 


	tos_count_tAdvancedHash_row58++;

/**
 * [tAdvancedHash_row58 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";
	
	

 



/**
 * [tAdvancedHash_row58 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row58 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";
	
	

 



/**
 * [tAdvancedHash_row58 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_93 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_93";
	
	

 



/**
 * [tOracleInput_93 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_93 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_93";
	
	

}
}finally{
	if (rs_tOracleInput_93 != null) {
		rs_tOracleInput_93.close();
	}
	if (stmt_tOracleInput_93 != null) {
		stmt_tOracleInput_93.close();
	}
}

globalMap.put("tOracleInput_93_NB_LINE",nb_line_tOracleInput_93);
 

ok_Hash.put("tOracleInput_93", true);
end_Hash.put("tOracleInput_93", System.currentTimeMillis());




/**
 * [tOracleInput_93 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";
	
	

tHash_Lookup_row58.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row58", true);
end_Hash.put("tAdvancedHash_row58", System.currentTimeMillis());




/**
 * [tAdvancedHash_row58 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_93 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_93";
	
	

 



/**
 * [tOracleInput_93 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row58 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row58";
	
	

 



/**
 * [tAdvancedHash_row58 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_93_SUBPROCESS_STATE", 1);
	}
	


public static class row59Struct implements routines.system.IPersistableComparableLookupRow<row59Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V70;

				public String getV70 () {
					return this.V70;
				}

				public Boolean V70IsNullable(){
				    return true;
				}
				public Boolean V70IsKey(){
				    return false;
				}
				public Integer V70Length(){
				    return null;
				}
				public Integer V70Precision(){
				    return null;
				}
				public String V70Default(){
				
					return null;
				
				}
				public String V70Comment(){
				
				    return "";
				
				}
				public String V70Pattern(){
				
					return "";
				
				}
				public String V70OriginalDbColumnName(){
				
					return "V70";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row59Struct other = (row59Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row59Struct other) {

		other.V70 = this.V70;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row59Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V70 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V70 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V70, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V70, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V70="+V70);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row59Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_87Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_87_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row59Struct row59 = new row59Struct();




	
	/**
	 * [tAdvancedHash_row59 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row59", false);
		start_Hash.put("tAdvancedHash_row59", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row59";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row59");
					}
				
		int tos_count_tAdvancedHash_row59 = 0;
		

			   		// connection name:row59
			   		// source node:tOracleInput_87 - inputs:(after_tOracleInput_1) outputs:(row59,row59) | target node:tAdvancedHash_row59 - inputs:(row59) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row59 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row59Struct> tHash_Lookup_row59 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row59Struct>getLookup(matchingModeEnum_row59);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row59", tHash_Lookup_row59);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row59 begin ] stop
 */



	
	/**
	 * [tOracleInput_87 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_87", false);
		start_Hash.put("tOracleInput_87", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_87";
	
	
		int tos_count_tOracleInput_87 = 0;
		
	


	
		    int nb_line_tOracleInput_87 = 0;
		    java.sql.Connection conn_tOracleInput_87 = null;
				conn_tOracleInput_87 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_87 = false;
				boolean isConnectionWrapped_tOracleInput_87 = !(conn_tOracleInput_87 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_87.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_87 = null;
                if (isConnectionWrapped_tOracleInput_87) {
					unwrappedOraConn_tOracleInput_87 = conn_tOracleInput_87.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_87 != null) {
                        isTimeZoneNull_tOracleInput_87 = (unwrappedOraConn_tOracleInput_87.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_87 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_87).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_87) {
					java.sql.Statement stmtGetTZ_tOracleInput_87 = conn_tOracleInput_87.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_87 = stmtGetTZ_tOracleInput_87.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_87 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_87.next()) {
						sessionTimezone_tOracleInput_87 = rsGetTZ_tOracleInput_87.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_87 && unwrappedOraConn_tOracleInput_87 != null) {
                        unwrappedOraConn_tOracleInput_87.setSessionTimeZone(sessionTimezone_tOracleInput_87);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_87).setSessionTimeZone(sessionTimezone_tOracleInput_87);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_87 = conn_tOracleInput_87.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_87.setFetchSize(1000);


		    String dbquery_tOracleInput_87 = "SELECT    V70\n        , PERSONAS_ID \nFROM ( \n    SELECT    '1' AS v70\n            , PA.PERSONAS_ID\n            , R"
+"OW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM MED_GENERICOS MGEN\n    INNER JOIN ME"
+"D_FORMASFARMACEUTICAS MFAR ON MFAR.GENERICOS_ID = MGEN.ID\n    INNER JOIN HCL_DFORMMEDINSUMOS DHFI ON DHFI.FORMASFARMACE"
+"UTICAS_ID = MFAR.ID\n    INNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.ID = DHFI.FORMMEDINSUMOS_ID \n    INNER JOIN HCL_FOR"
+"MMEDICAS HF ON HF.ID = HFMI.FORMMEDICAS_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HF.PROCESOSASISTENCIA"
+"LES_ID\n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    WHERE PA.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY')\n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND MGEN.DESCRIPCION LIKE '%SULFATO%' \n      AND MGEN.DESCRIPCION LIKE '%HIERRO%'\n      AN"
+"D TRUNC(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12) < 10\n      AND DHFI.ESTREGISTRO_ID = 1\n      AND HFMI.ESTREGISTRO_ID = 1\n  "
+"    AND HF.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_87_QUERY",dbquery_tOracleInput_87);

		    java.sql.ResultSet rs_tOracleInput_87 = null;

		    try {
		    	rs_tOracleInput_87 = stmt_tOracleInput_87.executeQuery(dbquery_tOracleInput_87);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_87 = rs_tOracleInput_87.getMetaData();
		    	int colQtyInRs_tOracleInput_87 = rsmd_tOracleInput_87.getColumnCount();

		    String tmpContent_tOracleInput_87 = null;
		    
		    
		    while (rs_tOracleInput_87.next()) {
		        nb_line_tOracleInput_87++;
		        
							if(colQtyInRs_tOracleInput_87 < 1) {
								row59.V70 = null;
							} else {
	                         		
        	row59.V70 = routines.system.JDBCUtil.getString(rs_tOracleInput_87, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_87 < 2) {
								row59.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_87.getObject(2) != null) {
						row59.PERSONAS_ID = rs_tOracleInput_87.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_87 begin ] stop
 */
	
	/**
	 * [tOracleInput_87 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_87";
	
	

 


	tos_count_tOracleInput_87++;

/**
 * [tOracleInput_87 main ] stop
 */
	
	/**
	 * [tOracleInput_87 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_87";
	
	

 



/**
 * [tOracleInput_87 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row59 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row59";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row59"
						
						);
					}
					


			   
			   

					row59Struct row59_HashRow = new row59Struct();
		   	   	   
				
				row59_HashRow.V70 = row59.V70;
				
				row59_HashRow.PERSONAS_ID = row59.PERSONAS_ID;
				
			tHash_Lookup_row59.put(row59_HashRow);
			
            




 


	tos_count_tAdvancedHash_row59++;

/**
 * [tAdvancedHash_row59 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row59 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row59";
	
	

 



/**
 * [tAdvancedHash_row59 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row59 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row59";
	
	

 



/**
 * [tAdvancedHash_row59 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_87 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_87";
	
	

 



/**
 * [tOracleInput_87 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_87 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_87";
	
	

}
}finally{
	if (rs_tOracleInput_87 != null) {
		rs_tOracleInput_87.close();
	}
	if (stmt_tOracleInput_87 != null) {
		stmt_tOracleInput_87.close();
	}
}

globalMap.put("tOracleInput_87_NB_LINE",nb_line_tOracleInput_87);
 

ok_Hash.put("tOracleInput_87", true);
end_Hash.put("tOracleInput_87", System.currentTimeMillis());




/**
 * [tOracleInput_87 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row59 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row59";
	
	

tHash_Lookup_row59.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row59");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row59", true);
end_Hash.put("tAdvancedHash_row59", System.currentTimeMillis());




/**
 * [tAdvancedHash_row59 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_87 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_87";
	
	

 



/**
 * [tOracleInput_87 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row59 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row59";
	
	

 



/**
 * [tAdvancedHash_row59 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_87_SUBPROCESS_STATE", 1);
	}
	


public static class row60Struct implements routines.system.IPersistableComparableLookupRow<row60Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V71;

				public String getV71 () {
					return this.V71;
				}

				public Boolean V71IsNullable(){
				    return true;
				}
				public Boolean V71IsKey(){
				    return false;
				}
				public Integer V71Length(){
				    return null;
				}
				public Integer V71Precision(){
				    return null;
				}
				public String V71Default(){
				
					return null;
				
				}
				public String V71Comment(){
				
				    return "";
				
				}
				public String V71Pattern(){
				
					return "";
				
				}
				public String V71OriginalDbColumnName(){
				
					return "V71";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row60Struct other = (row60Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row60Struct other) {

		other.V71 = this.V71;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row60Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V71 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V71 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V71, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V71, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V71="+V71);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row60Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_78Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_78_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row60Struct row60 = new row60Struct();




	
	/**
	 * [tAdvancedHash_row60 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row60", false);
		start_Hash.put("tAdvancedHash_row60", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row60";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row60");
					}
				
		int tos_count_tAdvancedHash_row60 = 0;
		

			   		// connection name:row60
			   		// source node:tOracleInput_78 - inputs:(after_tOracleInput_1) outputs:(row60,row60) | target node:tAdvancedHash_row60 - inputs:(row60) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row60 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct> tHash_Lookup_row60 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row60Struct>getLookup(matchingModeEnum_row60);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row60", tHash_Lookup_row60);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row60 begin ] stop
 */



	
	/**
	 * [tOracleInput_78 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_78", false);
		start_Hash.put("tOracleInput_78", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_78";
	
	
		int tos_count_tOracleInput_78 = 0;
		
	


	
		    int nb_line_tOracleInput_78 = 0;
		    java.sql.Connection conn_tOracleInput_78 = null;
				conn_tOracleInput_78 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_78 = false;
				boolean isConnectionWrapped_tOracleInput_78 = !(conn_tOracleInput_78 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_78.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_78 = null;
                if (isConnectionWrapped_tOracleInput_78) {
					unwrappedOraConn_tOracleInput_78 = conn_tOracleInput_78.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_78 != null) {
                        isTimeZoneNull_tOracleInput_78 = (unwrappedOraConn_tOracleInput_78.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_78 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_78).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_78) {
					java.sql.Statement stmtGetTZ_tOracleInput_78 = conn_tOracleInput_78.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_78 = stmtGetTZ_tOracleInput_78.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_78 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_78.next()) {
						sessionTimezone_tOracleInput_78 = rsGetTZ_tOracleInput_78.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_78 && unwrappedOraConn_tOracleInput_78 != null) {
                        unwrappedOraConn_tOracleInput_78.setSessionTimeZone(sessionTimezone_tOracleInput_78);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_78).setSessionTimeZone(sessionTimezone_tOracleInput_78);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_78 = conn_tOracleInput_78.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_78.setFetchSize(1000);


		    String dbquery_tOracleInput_78 = "SELECT \n  '1' AS v71,\n  P.PERSONAS_ID\nFROM HCL_PROCESOSASISTENCIALES P\nINNER JOIN (\n            SELECT MAX(PROC.ID"
+") AS ID, PROC.PERSONAS_ID FROM HCL_PROCESOSASISTENCIALES PROC \n            INNER JOIN GEN_PERSONAS  PERN ON PERN.ID = P"
+"ROC.PERSONAS_ID\n            WHERE ROUND(MONTHS_BETWEEN(PROC.FINICIAL,PERN.FECHA_NACIMIENTO)/12)<10\n            AND PRO"
+"C.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1              \n            GROUP BY PROC.PERSONAS_ID ) PROC ON PROC.ID = P.ID\nINNER JOIN HCL_FORMM"
+"EDICAS HF ON HF.PROCESOSASISTENCIALES_ID = P.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNE"
+"R JOIN HCL_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN MED_FORMASFARMACEUTICAS MFAR ON MFAR.ID="
+"DHFI.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_GENERICOS MGEN ON MGEN.ID=MFAR.GENERICOS_ID AND MGEN.DESCRIPCION LIKE '%VITA"
+"MINA A%' \nWHERE P.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1";
		    

		    globalMap.put("tOracleInput_78_QUERY",dbquery_tOracleInput_78);

		    java.sql.ResultSet rs_tOracleInput_78 = null;

		    try {
		    	rs_tOracleInput_78 = stmt_tOracleInput_78.executeQuery(dbquery_tOracleInput_78);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_78 = rs_tOracleInput_78.getMetaData();
		    	int colQtyInRs_tOracleInput_78 = rsmd_tOracleInput_78.getColumnCount();

		    String tmpContent_tOracleInput_78 = null;
		    
		    
		    while (rs_tOracleInput_78.next()) {
		        nb_line_tOracleInput_78++;
		        
							if(colQtyInRs_tOracleInput_78 < 1) {
								row60.V71 = null;
							} else {
	                         		
        	row60.V71 = routines.system.JDBCUtil.getString(rs_tOracleInput_78, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_78 < 2) {
								row60.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_78.getObject(2) != null) {
						row60.PERSONAS_ID = rs_tOracleInput_78.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_78 begin ] stop
 */
	
	/**
	 * [tOracleInput_78 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_78";
	
	

 


	tos_count_tOracleInput_78++;

/**
 * [tOracleInput_78 main ] stop
 */
	
	/**
	 * [tOracleInput_78 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_78";
	
	

 



/**
 * [tOracleInput_78 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row60 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row60";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row60"
						
						);
					}
					


			   
			   

					row60Struct row60_HashRow = new row60Struct();
		   	   	   
				
				row60_HashRow.V71 = row60.V71;
				
				row60_HashRow.PERSONAS_ID = row60.PERSONAS_ID;
				
			tHash_Lookup_row60.put(row60_HashRow);
			
            




 


	tos_count_tAdvancedHash_row60++;

/**
 * [tAdvancedHash_row60 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row60 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row60";
	
	

 



/**
 * [tAdvancedHash_row60 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row60 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row60";
	
	

 



/**
 * [tAdvancedHash_row60 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_78 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_78";
	
	

 



/**
 * [tOracleInput_78 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_78 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_78";
	
	

}
}finally{
	if (rs_tOracleInput_78 != null) {
		rs_tOracleInput_78.close();
	}
	if (stmt_tOracleInput_78 != null) {
		stmt_tOracleInput_78.close();
	}
}

globalMap.put("tOracleInput_78_NB_LINE",nb_line_tOracleInput_78);
 

ok_Hash.put("tOracleInput_78", true);
end_Hash.put("tOracleInput_78", System.currentTimeMillis());




/**
 * [tOracleInput_78 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row60 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row60";
	
	

tHash_Lookup_row60.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row60");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row60", true);
end_Hash.put("tAdvancedHash_row60", System.currentTimeMillis());




/**
 * [tAdvancedHash_row60 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_78 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_78";
	
	

 



/**
 * [tOracleInput_78 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row60 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row60";
	
	

 



/**
 * [tAdvancedHash_row60 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_78_SUBPROCESS_STATE", 1);
	}
	


public static class row61Struct implements routines.system.IPersistableComparableLookupRow<row61Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V72;

				public String getV72 () {
					return this.V72;
				}

				public Boolean V72IsNullable(){
				    return true;
				}
				public Boolean V72IsKey(){
				    return false;
				}
				public Integer V72Length(){
				    return 10;
				}
				public Integer V72Precision(){
				    return 0;
				}
				public String V72Default(){
				
					return null;
				
				}
				public String V72Comment(){
				
				    return "";
				
				}
				public String V72Pattern(){
				
					return "";
				
				}
				public String V72OriginalDbColumnName(){
				
					return "V72";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row61Struct other = (row61Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row61Struct other) {

		other.V72 = this.V72;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row61Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V72 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V72 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V72, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V72, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V72="+V72);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row61Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_79Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_79_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row61Struct row61 = new row61Struct();




	
	/**
	 * [tAdvancedHash_row61 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row61", false);
		start_Hash.put("tAdvancedHash_row61", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row61";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row61");
					}
				
		int tos_count_tAdvancedHash_row61 = 0;
		

			   		// connection name:row61
			   		// source node:tOracleInput_79 - inputs:(after_tOracleInput_1) outputs:(row61,row61) | target node:tAdvancedHash_row61 - inputs:(row61) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row61 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row61Struct> tHash_Lookup_row61 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row61Struct>getLookup(matchingModeEnum_row61);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row61", tHash_Lookup_row61);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row61 begin ] stop
 */



	
	/**
	 * [tOracleInput_79 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_79", false);
		start_Hash.put("tOracleInput_79", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_79";
	
	
		int tos_count_tOracleInput_79 = 0;
		
	


	
		    int nb_line_tOracleInput_79 = 0;
		    java.sql.Connection conn_tOracleInput_79 = null;
				conn_tOracleInput_79 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_79 = false;
				boolean isConnectionWrapped_tOracleInput_79 = !(conn_tOracleInput_79 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_79.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_79 = null;
                if (isConnectionWrapped_tOracleInput_79) {
					unwrappedOraConn_tOracleInput_79 = conn_tOracleInput_79.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_79 != null) {
                        isTimeZoneNull_tOracleInput_79 = (unwrappedOraConn_tOracleInput_79.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_79 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_79).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_79) {
					java.sql.Statement stmtGetTZ_tOracleInput_79 = conn_tOracleInput_79.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_79 = stmtGetTZ_tOracleInput_79.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_79 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_79.next()) {
						sessionTimezone_tOracleInput_79 = rsGetTZ_tOracleInput_79.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_79 && unwrappedOraConn_tOracleInput_79 != null) {
                        unwrappedOraConn_tOracleInput_79.setSessionTimeZone(sessionTimezone_tOracleInput_79);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_79).setSessionTimeZone(sessionTimezone_tOracleInput_79);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_79 = conn_tOracleInput_79.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_79.setFetchSize(1000);


		    String dbquery_tOracleInput_79 = "SELECT \n	TO_CHAR(MAX(PROC.FINICIAL),'YYYY-MM-DD') AS v72, \n	PROC.PERSONAS_ID\nFROM HCL_PROCESOSASISTENCIALES PROC\nIN"
+"NER JOIN HCL_VALORACIONES VAL ON VAL.PROCESOSASISTENCIALES_ID = PROC.ID\nINNER JOIN GEN_PERSONAS GP ON GP.ID=PROC.PERSON"
+"AS_ID\nINNER JOIN GEN_PYP PYP ON PYP.ID = VAL.PYP_ID\nINNER  JOIN GEN_FINALIDADCONSULTA FIN ON FIN.ID = VAL.FINALIDADCON"
+"SULTA_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = VAL.CUPS_ID AND CU.CODIGO IN ('890201','890205')\nWHERE  (PYP.SIGLA = 'ADJ' "
+"OR FIN.CODIGO = 5)\nAND ROUND(MONTHS_BETWEEN(PROC.FFINAL,GP.FECHA_NACIMIENTO)/12) BETWEEN 10 AND 29\nAND PROC.FFINAL BET"
+"WEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_79_QUERY",dbquery_tOracleInput_79);

		    java.sql.ResultSet rs_tOracleInput_79 = null;

		    try {
		    	rs_tOracleInput_79 = stmt_tOracleInput_79.executeQuery(dbquery_tOracleInput_79);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_79 = rs_tOracleInput_79.getMetaData();
		    	int colQtyInRs_tOracleInput_79 = rsmd_tOracleInput_79.getColumnCount();

		    String tmpContent_tOracleInput_79 = null;
		    
		    
		    while (rs_tOracleInput_79.next()) {
		        nb_line_tOracleInput_79++;
		        
							if(colQtyInRs_tOracleInput_79 < 1) {
								row61.V72 = null;
							} else {
	                         		
        	row61.V72 = routines.system.JDBCUtil.getString(rs_tOracleInput_79, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_79 < 2) {
								row61.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_79.getObject(2) != null) {
						row61.PERSONAS_ID = rs_tOracleInput_79.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_79 begin ] stop
 */
	
	/**
	 * [tOracleInput_79 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_79";
	
	

 


	tos_count_tOracleInput_79++;

/**
 * [tOracleInput_79 main ] stop
 */
	
	/**
	 * [tOracleInput_79 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_79";
	
	

 



/**
 * [tOracleInput_79 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row61 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row61";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row61"
						
						);
					}
					


			   
			   

					row61Struct row61_HashRow = new row61Struct();
		   	   	   
				
				row61_HashRow.V72 = row61.V72;
				
				row61_HashRow.PERSONAS_ID = row61.PERSONAS_ID;
				
			tHash_Lookup_row61.put(row61_HashRow);
			
            




 


	tos_count_tAdvancedHash_row61++;

/**
 * [tAdvancedHash_row61 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row61 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row61";
	
	

 



/**
 * [tAdvancedHash_row61 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row61 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row61";
	
	

 



/**
 * [tAdvancedHash_row61 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_79 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_79";
	
	

 



/**
 * [tOracleInput_79 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_79 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_79";
	
	

}
}finally{
	if (rs_tOracleInput_79 != null) {
		rs_tOracleInput_79.close();
	}
	if (stmt_tOracleInput_79 != null) {
		stmt_tOracleInput_79.close();
	}
}

globalMap.put("tOracleInput_79_NB_LINE",nb_line_tOracleInput_79);
 

ok_Hash.put("tOracleInput_79", true);
end_Hash.put("tOracleInput_79", System.currentTimeMillis());




/**
 * [tOracleInput_79 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row61 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row61";
	
	

tHash_Lookup_row61.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row61");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row61", true);
end_Hash.put("tAdvancedHash_row61", System.currentTimeMillis());




/**
 * [tAdvancedHash_row61 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_79 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_79";
	
	

 



/**
 * [tOracleInput_79 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row61 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row61";
	
	

 



/**
 * [tAdvancedHash_row61 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_79_SUBPROCESS_STATE", 1);
	}
	


public static class row62Struct implements routines.system.IPersistableComparableLookupRow<row62Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V73;

				public String getV73 () {
					return this.V73;
				}

				public Boolean V73IsNullable(){
				    return true;
				}
				public Boolean V73IsKey(){
				    return false;
				}
				public Integer V73Length(){
				    return 10;
				}
				public Integer V73Precision(){
				    return 0;
				}
				public String V73Default(){
				
					return null;
				
				}
				public String V73Comment(){
				
				    return "";
				
				}
				public String V73Pattern(){
				
					return "";
				
				}
				public String V73OriginalDbColumnName(){
				
					return "V73";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row62Struct other = (row62Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row62Struct other) {

		other.V73 = this.V73;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row62Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V73 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V73 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V73, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V73, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V73="+V73);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row62Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_80Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_80_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row62Struct row62 = new row62Struct();




	
	/**
	 * [tAdvancedHash_row62 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row62", false);
		start_Hash.put("tAdvancedHash_row62", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row62";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row62");
					}
				
		int tos_count_tAdvancedHash_row62 = 0;
		

			   		// connection name:row62
			   		// source node:tOracleInput_80 - inputs:(after_tOracleInput_1) outputs:(row62,row62) | target node:tAdvancedHash_row62 - inputs:(row62) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row62 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row62Struct> tHash_Lookup_row62 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row62Struct>getLookup(matchingModeEnum_row62);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row62", tHash_Lookup_row62);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row62 begin ] stop
 */



	
	/**
	 * [tOracleInput_80 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_80", false);
		start_Hash.put("tOracleInput_80", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_80";
	
	
		int tos_count_tOracleInput_80 = 0;
		
	


	
		    int nb_line_tOracleInput_80 = 0;
		    java.sql.Connection conn_tOracleInput_80 = null;
				conn_tOracleInput_80 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_80 = false;
				boolean isConnectionWrapped_tOracleInput_80 = !(conn_tOracleInput_80 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_80.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_80 = null;
                if (isConnectionWrapped_tOracleInput_80) {
					unwrappedOraConn_tOracleInput_80 = conn_tOracleInput_80.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_80 != null) {
                        isTimeZoneNull_tOracleInput_80 = (unwrappedOraConn_tOracleInput_80.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_80 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_80).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_80) {
					java.sql.Statement stmtGetTZ_tOracleInput_80 = conn_tOracleInput_80.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_80 = stmtGetTZ_tOracleInput_80.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_80 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_80.next()) {
						sessionTimezone_tOracleInput_80 = rsGetTZ_tOracleInput_80.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_80 && unwrappedOraConn_tOracleInput_80 != null) {
                        unwrappedOraConn_tOracleInput_80.setSessionTimeZone(sessionTimezone_tOracleInput_80);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_80).setSessionTimeZone(sessionTimezone_tOracleInput_80);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_80 = conn_tOracleInput_80.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_80.setFetchSize(1000);


		    String dbquery_tOracleInput_80 = "SELECT    V73\n        , PERSONAS_ID\nFROM ( \n    SELECT    TO_CHAR ( PA.FFINAL , 'YYYY-MM-DD' ) AS V73\n            ,"
+" PA.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_"
+"PYP GPY\n    INNER JOIN HCL_VALORACIONES HV ON HV.PYP_ID = GPY.ID\n    INNER JOIN GEN_CUPS GC ON GC.ID = HV.CUPS_ID\n   "
+" INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = HV.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.I"
+"D = PA.PERSONAS_ID \n    WHERE GPY.SIGLA = 'DAM'\n      AND GC.CODIGO IN ('890201','890205')\n      AND HV.ESTREGISTRO_I"
+"D = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n      AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12) >= 45  \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_80_QUERY",dbquery_tOracleInput_80);

		    java.sql.ResultSet rs_tOracleInput_80 = null;

		    try {
		    	rs_tOracleInput_80 = stmt_tOracleInput_80.executeQuery(dbquery_tOracleInput_80);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_80 = rs_tOracleInput_80.getMetaData();
		    	int colQtyInRs_tOracleInput_80 = rsmd_tOracleInput_80.getColumnCount();

		    String tmpContent_tOracleInput_80 = null;
		    
		    
		    while (rs_tOracleInput_80.next()) {
		        nb_line_tOracleInput_80++;
		        
							if(colQtyInRs_tOracleInput_80 < 1) {
								row62.V73 = null;
							} else {
	                         		
        	row62.V73 = routines.system.JDBCUtil.getString(rs_tOracleInput_80, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_80 < 2) {
								row62.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_80.getObject(2) != null) {
						row62.PERSONAS_ID = rs_tOracleInput_80.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_80 begin ] stop
 */
	
	/**
	 * [tOracleInput_80 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_80";
	
	

 


	tos_count_tOracleInput_80++;

/**
 * [tOracleInput_80 main ] stop
 */
	
	/**
	 * [tOracleInput_80 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_80";
	
	

 



/**
 * [tOracleInput_80 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row62 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row62";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row62"
						
						);
					}
					


			   
			   

					row62Struct row62_HashRow = new row62Struct();
		   	   	   
				
				row62_HashRow.V73 = row62.V73;
				
				row62_HashRow.PERSONAS_ID = row62.PERSONAS_ID;
				
			tHash_Lookup_row62.put(row62_HashRow);
			
            




 


	tos_count_tAdvancedHash_row62++;

/**
 * [tAdvancedHash_row62 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row62 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row62";
	
	

 



/**
 * [tAdvancedHash_row62 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row62 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row62";
	
	

 



/**
 * [tAdvancedHash_row62 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_80 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_80";
	
	

 



/**
 * [tOracleInput_80 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_80 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_80";
	
	

}
}finally{
	if (rs_tOracleInput_80 != null) {
		rs_tOracleInput_80.close();
	}
	if (stmt_tOracleInput_80 != null) {
		stmt_tOracleInput_80.close();
	}
}

globalMap.put("tOracleInput_80_NB_LINE",nb_line_tOracleInput_80);
 

ok_Hash.put("tOracleInput_80", true);
end_Hash.put("tOracleInput_80", System.currentTimeMillis());




/**
 * [tOracleInput_80 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row62 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row62";
	
	

tHash_Lookup_row62.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row62");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row62", true);
end_Hash.put("tAdvancedHash_row62", System.currentTimeMillis());




/**
 * [tAdvancedHash_row62 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_80 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_80";
	
	

 



/**
 * [tOracleInput_80 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row62 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row62";
	
	

 



/**
 * [tAdvancedHash_row62 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_80_SUBPROCESS_STATE", 1);
	}
	


public static class row63Struct implements routines.system.IPersistableComparableLookupRow<row63Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V74;

				public BigDecimal getV74 () {
					return this.V74;
				}

				public Boolean V74IsNullable(){
				    return true;
				}
				public Boolean V74IsKey(){
				    return false;
				}
				public Integer V74Length(){
				    return null;
				}
				public Integer V74Precision(){
				    return null;
				}
				public String V74Default(){
				
					return "";
				
				}
				public String V74Comment(){
				
				    return "";
				
				}
				public String V74Pattern(){
				
					return "";
				
				}
				public String V74OriginalDbColumnName(){
				
					return "V74";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row63Struct other = (row63Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row63Struct other) {

		other.V74 = this.V74;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row63Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V74 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V74 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V74);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V74);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V74="+String.valueOf(V74));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row63Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_81Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_81_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row63Struct row63 = new row63Struct();




	
	/**
	 * [tAdvancedHash_row63 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row63", false);
		start_Hash.put("tAdvancedHash_row63", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row63";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row63");
					}
				
		int tos_count_tAdvancedHash_row63 = 0;
		

			   		// connection name:row63
			   		// source node:tOracleInput_81 - inputs:(after_tOracleInput_1) outputs:(row63,row63) | target node:tAdvancedHash_row63 - inputs:(row63) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row63 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct> tHash_Lookup_row63 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row63Struct>getLookup(matchingModeEnum_row63);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row63", tHash_Lookup_row63);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row63 begin ] stop
 */



	
	/**
	 * [tOracleInput_81 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_81", false);
		start_Hash.put("tOracleInput_81", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_81";
	
	
		int tos_count_tOracleInput_81 = 0;
		
	


	
		    int nb_line_tOracleInput_81 = 0;
		    java.sql.Connection conn_tOracleInput_81 = null;
				conn_tOracleInput_81 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_81 = false;
				boolean isConnectionWrapped_tOracleInput_81 = !(conn_tOracleInput_81 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_81.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_81 = null;
                if (isConnectionWrapped_tOracleInput_81) {
					unwrappedOraConn_tOracleInput_81 = conn_tOracleInput_81.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_81 != null) {
                        isTimeZoneNull_tOracleInput_81 = (unwrappedOraConn_tOracleInput_81.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_81 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_81).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_81) {
					java.sql.Statement stmtGetTZ_tOracleInput_81 = conn_tOracleInput_81.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_81 = stmtGetTZ_tOracleInput_81.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_81 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_81.next()) {
						sessionTimezone_tOracleInput_81 = rsGetTZ_tOracleInput_81.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_81 && unwrappedOraConn_tOracleInput_81 != null) {
                        unwrappedOraConn_tOracleInput_81.setSessionTimeZone(sessionTimezone_tOracleInput_81);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_81).setSessionTimeZone(sessionTimezone_tOracleInput_81);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_81 = conn_tOracleInput_81.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_81.setFetchSize(1000);


		    String dbquery_tOracleInput_81 = "SELECT \n  SUM (DHFI.CANTIDAD) AS V74,\n  PER.PERSONAS_ID AS PERSONAS_ID\nFROM HCL_PROCESOSASISTENCIALES PROC\nINNER JO"
+"IN (SELECT \n              DISTINCT PROC.PERSONAS_ID \n            FROM HCL_PROCESOSASISTENCIALES PROC\n            INNE"
+"R JOIN HCL_DIAGNOSTICOS D ON D.PROCESOSASISTENCIALES_ID  = PROC.ID\n            INNER JOIN GEN_CIE10 CIE ON CIE.ID = D.C"
+"IE10_ID AND CIE.CODIGO IN ('A540','A541','A542','A543','A544','A545','A546','A548','A549','A54X','A55','A55X','A56','A56"
+"0','A561','A562','A563','A564','A568','A56X','A57','A57X','A58','A58X','A59','A590','A598','A599','A59X','A60','A600','A"
+"601','A609','A60X','A63','A630','A638','A63X','A64','A64X','A70','A70X','A71','A710','A711','A719','A71X','A74','A740','"
+"A748','A749','A74X','B16','B160','B161','B162','B169','B16X','B373','B374','I980','M730','M731')\n            WHERE D.FE"
+"CHA BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            ) PER ON PER.PERSONAS_ID = PROC.PERSONAS_ID\nINNER JOIN HCL_FORMMEDICAS HF ON HF.PROCE"
+"SOSASISTENCIALES_ID = PROC.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HCL_DFORMME"
+"DINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN MED_FORMASFARMACEUTICAS MFAR ON MFAR.ID=DHFI.FORMASFARMACE"
+"UTICAS_ID\nINNER JOIN MED_INSUMOS MI ON MI.ID=MFAR.INSUMOS_ID AND MI.NOMBRE LIKE '%PRESERVATIVO%' OR MI.NOMBRE LIKE '%CO"
+"NDON%'\nINNER JOIN CYD_MEDICAMENTOS CM ON CM.FORMAFARMACEUTICA_ID= MFAR.ID AND CM.PROGRAMA_ID IN (SELECT ID FROM GEN_PYP"
+" P WHERE P.SIGLA='PF')\nWHERE PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PER.PERSONAS_ID\nHAVING SUM (DHFI.CANTIDAD) <150";
		    

		    globalMap.put("tOracleInput_81_QUERY",dbquery_tOracleInput_81);

		    java.sql.ResultSet rs_tOracleInput_81 = null;

		    try {
		    	rs_tOracleInput_81 = stmt_tOracleInput_81.executeQuery(dbquery_tOracleInput_81);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_81 = rs_tOracleInput_81.getMetaData();
		    	int colQtyInRs_tOracleInput_81 = rsmd_tOracleInput_81.getColumnCount();

		    String tmpContent_tOracleInput_81 = null;
		    
		    
		    while (rs_tOracleInput_81.next()) {
		        nb_line_tOracleInput_81++;
		        
							if(colQtyInRs_tOracleInput_81 < 1) {
								row63.V74 = null;
							} else {
		                          
					if(rs_tOracleInput_81.getObject(1) != null) {
						row63.V74 = rs_tOracleInput_81.getBigDecimal(1);
					} else {
				
						row63.V74 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_81 < 2) {
								row63.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_81.getObject(2) != null) {
						row63.PERSONAS_ID = rs_tOracleInput_81.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_81 begin ] stop
 */
	
	/**
	 * [tOracleInput_81 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_81";
	
	

 


	tos_count_tOracleInput_81++;

/**
 * [tOracleInput_81 main ] stop
 */
	
	/**
	 * [tOracleInput_81 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_81";
	
	

 



/**
 * [tOracleInput_81 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row63 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row63";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row63"
						
						);
					}
					


			   
			   

					row63Struct row63_HashRow = new row63Struct();
		   	   	   
				
				row63_HashRow.V74 = row63.V74;
				
				row63_HashRow.PERSONAS_ID = row63.PERSONAS_ID;
				
			tHash_Lookup_row63.put(row63_HashRow);
			
            




 


	tos_count_tAdvancedHash_row63++;

/**
 * [tAdvancedHash_row63 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row63 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row63";
	
	

 



/**
 * [tAdvancedHash_row63 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row63 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row63";
	
	

 



/**
 * [tAdvancedHash_row63 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_81 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_81";
	
	

 



/**
 * [tOracleInput_81 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_81 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_81";
	
	

}
}finally{
	if (rs_tOracleInput_81 != null) {
		rs_tOracleInput_81.close();
	}
	if (stmt_tOracleInput_81 != null) {
		stmt_tOracleInput_81.close();
	}
}

globalMap.put("tOracleInput_81_NB_LINE",nb_line_tOracleInput_81);
 

ok_Hash.put("tOracleInput_81", true);
end_Hash.put("tOracleInput_81", System.currentTimeMillis());




/**
 * [tOracleInput_81 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row63 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row63";
	
	

tHash_Lookup_row63.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row63");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row63", true);
end_Hash.put("tAdvancedHash_row63", System.currentTimeMillis());




/**
 * [tAdvancedHash_row63 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_81 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_81";
	
	

 



/**
 * [tOracleInput_81 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row63 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row63";
	
	

 



/**
 * [tAdvancedHash_row63 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_81_SUBPROCESS_STATE", 1);
	}
	


public static class row64Struct implements routines.system.IPersistableComparableLookupRow<row64Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V75;

				public String getV75 () {
					return this.V75;
				}

				public Boolean V75IsNullable(){
				    return true;
				}
				public Boolean V75IsKey(){
				    return false;
				}
				public Integer V75Length(){
				    return 10;
				}
				public Integer V75Precision(){
				    return 0;
				}
				public String V75Default(){
				
					return null;
				
				}
				public String V75Comment(){
				
				    return "";
				
				}
				public String V75Pattern(){
				
					return "";
				
				}
				public String V75OriginalDbColumnName(){
				
					return "V75";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row64Struct other = (row64Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row64Struct other) {

		other.V75 = this.V75;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row64Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V75 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V75 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V75, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V75, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V75="+V75);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row64Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_82Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_82_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row64Struct row64 = new row64Struct();




	
	/**
	 * [tAdvancedHash_row64 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row64", false);
		start_Hash.put("tAdvancedHash_row64", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row64";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row64");
					}
				
		int tos_count_tAdvancedHash_row64 = 0;
		

			   		// connection name:row64
			   		// source node:tOracleInput_82 - inputs:(after_tOracleInput_1) outputs:(row64,row64) | target node:tAdvancedHash_row64 - inputs:(row64) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row64 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row64Struct> tHash_Lookup_row64 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row64Struct>getLookup(matchingModeEnum_row64);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row64", tHash_Lookup_row64);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row64 begin ] stop
 */



	
	/**
	 * [tOracleInput_82 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_82", false);
		start_Hash.put("tOracleInput_82", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_82";
	
	
		int tos_count_tOracleInput_82 = 0;
		
	


	
		    int nb_line_tOracleInput_82 = 0;
		    java.sql.Connection conn_tOracleInput_82 = null;
				conn_tOracleInput_82 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_82 = false;
				boolean isConnectionWrapped_tOracleInput_82 = !(conn_tOracleInput_82 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_82.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_82 = null;
                if (isConnectionWrapped_tOracleInput_82) {
					unwrappedOraConn_tOracleInput_82 = conn_tOracleInput_82.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_82 != null) {
                        isTimeZoneNull_tOracleInput_82 = (unwrappedOraConn_tOracleInput_82.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_82 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_82).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_82) {
					java.sql.Statement stmtGetTZ_tOracleInput_82 = conn_tOracleInput_82.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_82 = stmtGetTZ_tOracleInput_82.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_82 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_82.next()) {
						sessionTimezone_tOracleInput_82 = rsGetTZ_tOracleInput_82.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_82 && unwrappedOraConn_tOracleInput_82 != null) {
                        unwrappedOraConn_tOracleInput_82.setSessionTimeZone(sessionTimezone_tOracleInput_82);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_82).setSessionTimeZone(sessionTimezone_tOracleInput_82);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_82 = conn_tOracleInput_82.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_82.setFetchSize(1000);


		    String dbquery_tOracleInput_82 = "SELECT    V75\n        , PERSONAS_ID \nFROM (\n		SELECT CASE \n				WHEN GS.SIGLA = 'F'\n				THEN NVL(TO_CHAR(HP.FINICIA"
+"L,'YYYY-MM-DD'),'1800-01-01')\n				WHEN GS.SIGLA = 'M'\n				THEN '1845-01-01'\n			   END AS V75,\n		  ROW_NUMBER() OVER "
+"(PARTITION BY HP.PERSONAS_ID ORDER BY HP.FFINAL ASC) R,\n		  HP.PERSONAS_ID\n		FROM GEN_PERSONAS GP\n		INNER JOIN GEN_SE"
+"XOS GS ON GS.ID = GP.SEXO_ID \n		LEFT JOIN HCL_PROCESOSASISTENCIALES HP ON HP.PERSONAS_ID = GP.ID AND TRUNC(HP.FINICIAL)"
+" BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n		LEFT JOIN HCL_DIAGNOSTICOS HD ON HD.PROCESOSASISTENCIALES_ID = HP.ID\n		LEFT JOIN GEN_CIE10 GC O"
+"N GC.ID = HD.CIE10_ID AND GC.CODIGO = 'Z717'\n)WHERE R = 1 AND PERSONAS_ID IS NOT NULL";
		    

		    globalMap.put("tOracleInput_82_QUERY",dbquery_tOracleInput_82);

		    java.sql.ResultSet rs_tOracleInput_82 = null;

		    try {
		    	rs_tOracleInput_82 = stmt_tOracleInput_82.executeQuery(dbquery_tOracleInput_82);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_82 = rs_tOracleInput_82.getMetaData();
		    	int colQtyInRs_tOracleInput_82 = rsmd_tOracleInput_82.getColumnCount();

		    String tmpContent_tOracleInput_82 = null;
		    
		    
		    while (rs_tOracleInput_82.next()) {
		        nb_line_tOracleInput_82++;
		        
							if(colQtyInRs_tOracleInput_82 < 1) {
								row64.V75 = null;
							} else {
	                         		
        	row64.V75 = routines.system.JDBCUtil.getString(rs_tOracleInput_82, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_82 < 2) {
								row64.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_82.getObject(2) != null) {
						row64.PERSONAS_ID = rs_tOracleInput_82.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_82 begin ] stop
 */
	
	/**
	 * [tOracleInput_82 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_82";
	
	

 


	tos_count_tOracleInput_82++;

/**
 * [tOracleInput_82 main ] stop
 */
	
	/**
	 * [tOracleInput_82 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_82";
	
	

 



/**
 * [tOracleInput_82 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row64"
						
						);
					}
					


			   
			   

					row64Struct row64_HashRow = new row64Struct();
		   	   	   
				
				row64_HashRow.V75 = row64.V75;
				
				row64_HashRow.PERSONAS_ID = row64.PERSONAS_ID;
				
			tHash_Lookup_row64.put(row64_HashRow);
			
            




 


	tos_count_tAdvancedHash_row64++;

/**
 * [tAdvancedHash_row64 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row64 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row64 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_82 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_82";
	
	

 



/**
 * [tOracleInput_82 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_82 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_82";
	
	

}
}finally{
	if (rs_tOracleInput_82 != null) {
		rs_tOracleInput_82.close();
	}
	if (stmt_tOracleInput_82 != null) {
		stmt_tOracleInput_82.close();
	}
}

globalMap.put("tOracleInput_82_NB_LINE",nb_line_tOracleInput_82);
 

ok_Hash.put("tOracleInput_82", true);
end_Hash.put("tOracleInput_82", System.currentTimeMillis());




/**
 * [tOracleInput_82 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

tHash_Lookup_row64.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row64");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row64", true);
end_Hash.put("tAdvancedHash_row64", System.currentTimeMillis());




/**
 * [tAdvancedHash_row64 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_82 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_82";
	
	

 



/**
 * [tOracleInput_82 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row64 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row64";
	
	

 



/**
 * [tAdvancedHash_row64 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_82_SUBPROCESS_STATE", 1);
	}
	


public static class row65Struct implements routines.system.IPersistableComparableLookupRow<row65Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V76;

				public String getV76 () {
					return this.V76;
				}

				public Boolean V76IsNullable(){
				    return true;
				}
				public Boolean V76IsKey(){
				    return false;
				}
				public Integer V76Length(){
				    return 10;
				}
				public Integer V76Precision(){
				    return 0;
				}
				public String V76Default(){
				
					return null;
				
				}
				public String V76Comment(){
				
				    return "";
				
				}
				public String V76Pattern(){
				
					return "";
				
				}
				public String V76OriginalDbColumnName(){
				
					return "V76";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row65Struct other = (row65Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row65Struct other) {

		other.V76 = this.V76;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row65Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V76 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V76 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V76, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V76, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V76="+V76);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row65Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_83Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_83_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row65Struct row65 = new row65Struct();




	
	/**
	 * [tAdvancedHash_row65 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row65", false);
		start_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row65");
					}
				
		int tos_count_tAdvancedHash_row65 = 0;
		

			   		// connection name:row65
			   		// source node:tOracleInput_83 - inputs:(after_tOracleInput_1) outputs:(row65,row65) | target node:tAdvancedHash_row65 - inputs:(row65) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row65 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row65Struct>getLookup(matchingModeEnum_row65);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row65", tHash_Lookup_row65);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row65 begin ] stop
 */



	
	/**
	 * [tOracleInput_83 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_83", false);
		start_Hash.put("tOracleInput_83", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_83";
	
	
		int tos_count_tOracleInput_83 = 0;
		
	


	
		    int nb_line_tOracleInput_83 = 0;
		    java.sql.Connection conn_tOracleInput_83 = null;
				conn_tOracleInput_83 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_83 = false;
				boolean isConnectionWrapped_tOracleInput_83 = !(conn_tOracleInput_83 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_83.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_83 = null;
                if (isConnectionWrapped_tOracleInput_83) {
					unwrappedOraConn_tOracleInput_83 = conn_tOracleInput_83.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_83 != null) {
                        isTimeZoneNull_tOracleInput_83 = (unwrappedOraConn_tOracleInput_83.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_83 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_83).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_83) {
					java.sql.Statement stmtGetTZ_tOracleInput_83 = conn_tOracleInput_83.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_83 = stmtGetTZ_tOracleInput_83.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_83 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_83.next()) {
						sessionTimezone_tOracleInput_83 = rsGetTZ_tOracleInput_83.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_83 && unwrappedOraConn_tOracleInput_83 != null) {
                        unwrappedOraConn_tOracleInput_83.setSessionTimeZone(sessionTimezone_tOracleInput_83);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_83).setSessionTimeZone(sessionTimezone_tOracleInput_83);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_83 = conn_tOracleInput_83.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_83.setFetchSize(1000);


		    String dbquery_tOracleInput_83 = "SELECT \n  NVL(TO_CHAR(MAX(EJE.FEJECUCION),'YYYY-MM-DD'),TO_CHAR(MAX(HP.FINICIAL) ,'YYYY-MM-DD')) AS V76,\n  DACT.PERSO"
+"NAS_ID\n\nFROM CGP_DEJECACTIVIDADES DACT\nINNER JOIN CGP_ACTIVIDADES ACT ON ACT.ID = DACT.ACTIVIDADES_ID AND ACT.NOMBRE "
+"IN ('POS para VIH')\nLEFT JOIN CGP_EJECACTIVIDADES EJE ON EJE.ID = DACT.EJECACTIVIDADES_ID\nLEFT JOIN HCL_PROCESOSASISTE"
+"NCIALES HP ON HP.ID=DACT.PROCESOSASISTENCIALES_ID\nINNER JOIN GEN_PERSONAS PER ON PER.ID = DACT.PERSONAS_ID \nWHERE DACT"
+".FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY DACT.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_83_QUERY",dbquery_tOracleInput_83);

		    java.sql.ResultSet rs_tOracleInput_83 = null;

		    try {
		    	rs_tOracleInput_83 = stmt_tOracleInput_83.executeQuery(dbquery_tOracleInput_83);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_83 = rs_tOracleInput_83.getMetaData();
		    	int colQtyInRs_tOracleInput_83 = rsmd_tOracleInput_83.getColumnCount();

		    String tmpContent_tOracleInput_83 = null;
		    
		    
		    while (rs_tOracleInput_83.next()) {
		        nb_line_tOracleInput_83++;
		        
							if(colQtyInRs_tOracleInput_83 < 1) {
								row65.V76 = null;
							} else {
	                         		
        	row65.V76 = routines.system.JDBCUtil.getString(rs_tOracleInput_83, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_83 < 2) {
								row65.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_83.getObject(2) != null) {
						row65.PERSONAS_ID = rs_tOracleInput_83.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_83 begin ] stop
 */
	
	/**
	 * [tOracleInput_83 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_83";
	
	

 


	tos_count_tOracleInput_83++;

/**
 * [tOracleInput_83 main ] stop
 */
	
	/**
	 * [tOracleInput_83 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_83";
	
	

 



/**
 * [tOracleInput_83 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row65"
						
						);
					}
					


			   
			   

					row65Struct row65_HashRow = new row65Struct();
		   	   	   
				
				row65_HashRow.V76 = row65.V76;
				
				row65_HashRow.PERSONAS_ID = row65.PERSONAS_ID;
				
			tHash_Lookup_row65.put(row65_HashRow);
			
            




 


	tos_count_tAdvancedHash_row65++;

/**
 * [tAdvancedHash_row65 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row65 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_83 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_83";
	
	

 



/**
 * [tOracleInput_83 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_83 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_83";
	
	

}
}finally{
	if (rs_tOracleInput_83 != null) {
		rs_tOracleInput_83.close();
	}
	if (stmt_tOracleInput_83 != null) {
		stmt_tOracleInput_83.close();
	}
}

globalMap.put("tOracleInput_83_NB_LINE",nb_line_tOracleInput_83);
 

ok_Hash.put("tOracleInput_83", true);
end_Hash.put("tOracleInput_83", System.currentTimeMillis());




/**
 * [tOracleInput_83 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

tHash_Lookup_row65.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row65");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row65", true);
end_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());




/**
 * [tAdvancedHash_row65 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_83 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_83";
	
	

 



/**
 * [tOracleInput_83 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row65 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row65";
	
	

 



/**
 * [tAdvancedHash_row65 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_83_SUBPROCESS_STATE", 1);
	}
	


public static class row66Struct implements routines.system.IPersistableComparableLookupRow<row66Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V77;

				public String getV77 () {
					return this.V77;
				}

				public Boolean V77IsNullable(){
				    return true;
				}
				public Boolean V77IsKey(){
				    return false;
				}
				public Integer V77Length(){
				    return null;
				}
				public Integer V77Precision(){
				    return null;
				}
				public String V77Default(){
				
					return null;
				
				}
				public String V77Comment(){
				
				    return "";
				
				}
				public String V77Pattern(){
				
					return "";
				
				}
				public String V77OriginalDbColumnName(){
				
					return "V77";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row66Struct other = (row66Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row66Struct other) {

		other.V77 = this.V77;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row66Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V77 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V77 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V77, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V77, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V77="+V77);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row66Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_84Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_84_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row66Struct row66 = new row66Struct();




	
	/**
	 * [tAdvancedHash_row66 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row66", false);
		start_Hash.put("tAdvancedHash_row66", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row66";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row66");
					}
				
		int tos_count_tAdvancedHash_row66 = 0;
		

			   		// connection name:row66
			   		// source node:tOracleInput_84 - inputs:(after_tOracleInput_1) outputs:(row66,row66) | target node:tAdvancedHash_row66 - inputs:(row66) outputs:()
			   		// linked node: tMap_3 - inputs:(Salida_2,row47,row48,row49,row50,row51,row52,row53,row54,row55,row56,row57,row58,row59,row60,row61,row62,row63,row64,row65,row66) outputs:(Salida_Prev3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row66 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row66Struct> tHash_Lookup_row66 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row66Struct>getLookup(matchingModeEnum_row66);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row66", tHash_Lookup_row66);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row66 begin ] stop
 */



	
	/**
	 * [tOracleInput_84 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_84", false);
		start_Hash.put("tOracleInput_84", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_84";
	
	
		int tos_count_tOracleInput_84 = 0;
		
	


	
		    int nb_line_tOracleInput_84 = 0;
		    java.sql.Connection conn_tOracleInput_84 = null;
				conn_tOracleInput_84 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_84 = false;
				boolean isConnectionWrapped_tOracleInput_84 = !(conn_tOracleInput_84 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_84.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_84 = null;
                if (isConnectionWrapped_tOracleInput_84) {
					unwrappedOraConn_tOracleInput_84 = conn_tOracleInput_84.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_84 != null) {
                        isTimeZoneNull_tOracleInput_84 = (unwrappedOraConn_tOracleInput_84.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_84 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_84).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_84) {
					java.sql.Statement stmtGetTZ_tOracleInput_84 = conn_tOracleInput_84.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_84 = stmtGetTZ_tOracleInput_84.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_84 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_84.next()) {
						sessionTimezone_tOracleInput_84 = rsGetTZ_tOracleInput_84.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_84 && unwrappedOraConn_tOracleInput_84 != null) {
                        unwrappedOraConn_tOracleInput_84.setSessionTimeZone(sessionTimezone_tOracleInput_84);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_84).setSessionTimeZone(sessionTimezone_tOracleInput_84);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_84 = conn_tOracleInput_84.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_84.setFetchSize(1000);


		    String dbquery_tOracleInput_84 = "SELECT    PERSONAS_ID \n        , V77\nFROM (\n    SELECT    PROC.PERSONAS_ID \n            , CASE \n                 W"
+"HEN ATENCION.PSICOLOGIA  IS NOT NULL \n                  AND ATENCION.PSIQUIATRIA IS NOT NULL \n                  AND AT"
+"ENCION.ENFERMERIA  IS NOT NULL \n                  AND ATENCION.TRABAJO_SOCIAL IS NOT NULL\n                 THEN '2' \n"
+"                 WHEN ( ATENCION.PSICOLOGIA  IS NOT NULL \n                  OR ATENCION.PSIQUIATRIA IS NOT NULL \n     "
+"             OR ATENCION.ENFERMERIA  IS NOT NULL \n                  OR ATENCION.TRABAJO_SOCIAL IS NOT NULL )\n         "
+"        THEN '1' \n                 ELSE '20' \n              END AS V77\n            , ROW_NUMBER() OVER (PARTITION BY "
+"PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN HCL_DIAGNOSTICOS DIAG ON DIAG.CIE1"
+"0_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID \n    LEFT JOIN "
+"( \n        SELECT *\n        FROM ( \n          SELECT    P.PERSONAS_ID\n                  , MAX( P.ID ) AS ID\n       "
+"           , CASE \n                      WHEN  MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%'\n                  "
+"    THEN 1\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n                      THE"
+"N 2\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERMERIA%' \n                      THEN 3\n   "
+"                   WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%'\n                      THEN 4\n        "
+"            END AS CODIGO \n          FROM HCL_PROCESOSASISTENCIALES P \n          INNER JOIN HCL_VALORACIONES V ON V.PR"
+"OCESOSASISTENCIALES_ID = P.ID\n          INNER JOIN GEN_CUPS CU ON CU.ID = V.CUPS_ID \n          WHERE P.FFINAL BETWEEN "
+"TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')-180 \n                             AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n            AND ( MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%' \n                  OR MED."
+"MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n                  OR MED.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERME"
+"RIA%' \n                  OR MED.MayusculasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%' ) \n          GROUP BY  P.PERSONAS"
+"_ID   \n                    , CASE \n                      WHEN  MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSICOLOGIA%'\n "
+"                     THEN 1\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%PSIQUIATRIA%' \n        "
+"              THEN 2\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%ENFERMERIA%' \n                "
+"      THEN 3\n                      WHEN MED.MayusculasSinAcentos(NOMBRE) LIKE '%TRABAJO%SOCIAL%'\n                     "
+" THEN 4\n                     END\n          ) PIVOT ( MAX ( ID ) FOR CODIGO IN ( 1 AS PSICOLOGIA, 2 AS PSIQUIATRIA , 3 "
+"AS ENFERMERIA, 4 AS TRABAJO_SOCIAL ) )  \n    )  ATENCION ON ATENCION.PERSONAS_ID = PROC.PERSONAS_ID         \n    WHERE"
+" ( CIE.CODIGO IN ('F064', 'F408', 'F409', 'F410', 'F411', 'F412', 'F413', 'F418', 'F419', 'F930', 'F931', 'F932')\n     "
+"       OR ( CIE.CODIGO LIKE '%F32%' OR CIE.CODIGO IN ('F204', 'F412') )\n            OR regexp_like(CIE.codigo,'F20*|F3("
+"0)')\n            OR CIE.CODIGO LIKE '%F90%' \n            OR ( CIE.CODIGO LIKE '%F10%' OR CIE.CODIGO IN ('F04X', 'Z864'"
+") )\n            OR CIE.CODIGO LIKE '%F31%' )\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n   "
+"   AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_84_QUERY",dbquery_tOracleInput_84);

		    java.sql.ResultSet rs_tOracleInput_84 = null;

		    try {
		    	rs_tOracleInput_84 = stmt_tOracleInput_84.executeQuery(dbquery_tOracleInput_84);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_84 = rs_tOracleInput_84.getMetaData();
		    	int colQtyInRs_tOracleInput_84 = rsmd_tOracleInput_84.getColumnCount();

		    String tmpContent_tOracleInput_84 = null;
		    
		    
		    while (rs_tOracleInput_84.next()) {
		        nb_line_tOracleInput_84++;
		        
							if(colQtyInRs_tOracleInput_84 < 1) {
								row66.V77 = null;
							} else {
	                         		
        	row66.V77 = routines.system.JDBCUtil.getString(rs_tOracleInput_84, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_84 < 2) {
								row66.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_84.getObject(2) != null) {
						row66.PERSONAS_ID = rs_tOracleInput_84.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_84 begin ] stop
 */
	
	/**
	 * [tOracleInput_84 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_84";
	
	

 


	tos_count_tOracleInput_84++;

/**
 * [tOracleInput_84 main ] stop
 */
	
	/**
	 * [tOracleInput_84 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_84";
	
	

 



/**
 * [tOracleInput_84 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row66"
						
						);
					}
					


			   
			   

					row66Struct row66_HashRow = new row66Struct();
		   	   	   
				
				row66_HashRow.V77 = row66.V77;
				
				row66_HashRow.PERSONAS_ID = row66.PERSONAS_ID;
				
			tHash_Lookup_row66.put(row66_HashRow);
			
            




 


	tos_count_tAdvancedHash_row66++;

/**
 * [tAdvancedHash_row66 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row66 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row66 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_84 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_84";
	
	

 



/**
 * [tOracleInput_84 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_84 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_84";
	
	

}
}finally{
	if (rs_tOracleInput_84 != null) {
		rs_tOracleInput_84.close();
	}
	if (stmt_tOracleInput_84 != null) {
		stmt_tOracleInput_84.close();
	}
}

globalMap.put("tOracleInput_84_NB_LINE",nb_line_tOracleInput_84);
 

ok_Hash.put("tOracleInput_84", true);
end_Hash.put("tOracleInput_84", System.currentTimeMillis());




/**
 * [tOracleInput_84 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

tHash_Lookup_row66.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row66");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row66", true);
end_Hash.put("tAdvancedHash_row66", System.currentTimeMillis());




/**
 * [tAdvancedHash_row66 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_84 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_84";
	
	

 



/**
 * [tOracleInput_84 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row66 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row66";
	
	

 



/**
 * [tAdvancedHash_row66 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_84_SUBPROCESS_STATE", 1);
	}
	


public static class row67Struct implements routines.system.IPersistableComparableLookupRow<row67Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V78;

				public String getV78 () {
					return this.V78;
				}

				public Boolean V78IsNullable(){
				    return true;
				}
				public Boolean V78IsKey(){
				    return false;
				}
				public Integer V78Length(){
				    return null;
				}
				public Integer V78Precision(){
				    return null;
				}
				public String V78Default(){
				
					return null;
				
				}
				public String V78Comment(){
				
				    return "";
				
				}
				public String V78Pattern(){
				
					return "";
				
				}
				public String V78OriginalDbColumnName(){
				
					return "V78";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row67Struct other = (row67Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row67Struct other) {

		other.V78 = this.V78;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row67Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V78 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V78 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V78, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V78, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V78="+V78);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row67Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_85Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_85_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row67Struct row67 = new row67Struct();




	
	/**
	 * [tAdvancedHash_row67 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row67", false);
		start_Hash.put("tAdvancedHash_row67", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row67";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row67");
					}
				
		int tos_count_tAdvancedHash_row67 = 0;
		

			   		// connection name:row67
			   		// source node:tOracleInput_85 - inputs:(after_tOracleInput_1) outputs:(row67,row67) | target node:tAdvancedHash_row67 - inputs:(row67) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row67 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct> tHash_Lookup_row67 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row67Struct>getLookup(matchingModeEnum_row67);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row67", tHash_Lookup_row67);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row67 begin ] stop
 */



	
	/**
	 * [tOracleInput_85 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_85", false);
		start_Hash.put("tOracleInput_85", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_85";
	
	
		int tos_count_tOracleInput_85 = 0;
		
	


	
		    int nb_line_tOracleInput_85 = 0;
		    java.sql.Connection conn_tOracleInput_85 = null;
				conn_tOracleInput_85 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_85 = false;
				boolean isConnectionWrapped_tOracleInput_85 = !(conn_tOracleInput_85 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_85.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_85 = null;
                if (isConnectionWrapped_tOracleInput_85) {
					unwrappedOraConn_tOracleInput_85 = conn_tOracleInput_85.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_85 != null) {
                        isTimeZoneNull_tOracleInput_85 = (unwrappedOraConn_tOracleInput_85.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_85 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_85).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_85) {
					java.sql.Statement stmtGetTZ_tOracleInput_85 = conn_tOracleInput_85.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_85 = stmtGetTZ_tOracleInput_85.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_85 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_85.next()) {
						sessionTimezone_tOracleInput_85 = rsGetTZ_tOracleInput_85.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_85 && unwrappedOraConn_tOracleInput_85 != null) {
                        unwrappedOraConn_tOracleInput_85.setSessionTimeZone(sessionTimezone_tOracleInput_85);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_85).setSessionTimeZone(sessionTimezone_tOracleInput_85);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_85 = conn_tOracleInput_85.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_85.setFetchSize(1000);


		    String dbquery_tOracleInput_85 = "SELECT    V78\n        , PERSONAS_ID \nFROM ( \n    SELECT    NVL ( TO_CHAR ( PA.FFINAL, 'YYYY-MM-DD' ), '1800-01-01' )"
+" AS V78\n            , PA.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL D"
+"ESC) R\n    FROM HCL_PROCESOSASISTENCIALES PA \n    INNER JOIN GEN_PERSONAS GP            ON GP.ID = PA.PERSONAS_ID \n  "
+"  INNER JOIN GEN_SEXOS SEX              ON SEX.ID = GP.SEXO_ID\n    INNER JOIN PMP_MATERNAS PM            ON PM.PERSONAS"
+"_ID = GP.ID\n    LEFT JOIN PMP_DESENLACE PD            ON PD.MATERNAS_ID = PM.ID \n                                     "
+"     AND PD.ESTREGISTRO_ID = 1\n    LEFT JOIN HCL_PARTOGRAMA HPT          ON HPT.PROCESOSASISTENCIALES_ID = PA.ID\n     "
+"                                     AND HPT.ESTREGISTRO_ID = 1\n    INNER JOIN RCA_INFGENERAL RI          ON RI.PROCESO"
+"SASISTENCIALES_ID = PA.ID\n    INNER JOIN RCA_CUPSOLICITADOS CUPS    ON CUPS.INFGENERAL_ID = RI.ID\n    INNER JOIN GEN_C"
+"UPS CU                ON CU.ID = CUPS.CUPS_ID \n    INNER JOIN RCA_RESULTADOSCUPS RR      ON RR.CUPSOLICITADOS_ID = CUPS"
+".ID\n    INNER JOIN GEN_HEXAMENES GH           ON RR.PROCESOSASISTENCIALES_ID = GH.PROCESOSASISTENCIALES_ID\n    INNER J"
+"OIN GEN_PARAMEXAMENES GPA      ON GH.PARAMEXAMENES_ID = GPA.ID\n    INNER JOIN GEN_TEXAMENES GT           ON GT.CUPS_ID "
+"= CU.ID \n    WHERE TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') +1\n      AND PA.ESTREGISTRO_ID = 1\n      AND PD.ID IS NULL \n      AND HPT.ID IS NULL\n      AND CU.C"
+"ODIGO = '906318'\n      AND SEX.SIGLA = 'F'\n      AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12) BETWEEN 10 AND 59\n) WHERE R = 1 \n";
		    

		    globalMap.put("tOracleInput_85_QUERY",dbquery_tOracleInput_85);

		    java.sql.ResultSet rs_tOracleInput_85 = null;

		    try {
		    	rs_tOracleInput_85 = stmt_tOracleInput_85.executeQuery(dbquery_tOracleInput_85);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_85 = rs_tOracleInput_85.getMetaData();
		    	int colQtyInRs_tOracleInput_85 = rsmd_tOracleInput_85.getColumnCount();

		    String tmpContent_tOracleInput_85 = null;
		    
		    
		    while (rs_tOracleInput_85.next()) {
		        nb_line_tOracleInput_85++;
		        
							if(colQtyInRs_tOracleInput_85 < 1) {
								row67.V78 = null;
							} else {
	                         		
        	row67.V78 = routines.system.JDBCUtil.getString(rs_tOracleInput_85, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_85 < 2) {
								row67.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_85.getObject(2) != null) {
						row67.PERSONAS_ID = rs_tOracleInput_85.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_85 begin ] stop
 */
	
	/**
	 * [tOracleInput_85 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_85";
	
	

 


	tos_count_tOracleInput_85++;

/**
 * [tOracleInput_85 main ] stop
 */
	
	/**
	 * [tOracleInput_85 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_85";
	
	

 



/**
 * [tOracleInput_85 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row67 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row67";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row67"
						
						);
					}
					


			   
			   

					row67Struct row67_HashRow = new row67Struct();
		   	   	   
				
				row67_HashRow.V78 = row67.V78;
				
				row67_HashRow.PERSONAS_ID = row67.PERSONAS_ID;
				
			tHash_Lookup_row67.put(row67_HashRow);
			
            




 


	tos_count_tAdvancedHash_row67++;

/**
 * [tAdvancedHash_row67 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row67 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row67";
	
	

 



/**
 * [tAdvancedHash_row67 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row67 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row67";
	
	

 



/**
 * [tAdvancedHash_row67 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_85 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_85";
	
	

 



/**
 * [tOracleInput_85 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_85 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_85";
	
	

}
}finally{
	if (rs_tOracleInput_85 != null) {
		rs_tOracleInput_85.close();
	}
	if (stmt_tOracleInput_85 != null) {
		stmt_tOracleInput_85.close();
	}
}

globalMap.put("tOracleInput_85_NB_LINE",nb_line_tOracleInput_85);
 

ok_Hash.put("tOracleInput_85", true);
end_Hash.put("tOracleInput_85", System.currentTimeMillis());




/**
 * [tOracleInput_85 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row67 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row67";
	
	

tHash_Lookup_row67.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row67");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row67", true);
end_Hash.put("tAdvancedHash_row67", System.currentTimeMillis());




/**
 * [tAdvancedHash_row67 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_85 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_85";
	
	

 



/**
 * [tOracleInput_85 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row67 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row67";
	
	

 



/**
 * [tAdvancedHash_row67 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_85_SUBPROCESS_STATE", 1);
	}
	


public static class row68Struct implements routines.system.IPersistableComparableLookupRow<row68Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V79;

				public String getV79 () {
					return this.V79;
				}

				public Boolean V79IsNullable(){
				    return true;
				}
				public Boolean V79IsKey(){
				    return false;
				}
				public Integer V79Length(){
				    return null;
				}
				public Integer V79Precision(){
				    return null;
				}
				public String V79Default(){
				
					return null;
				
				}
				public String V79Comment(){
				
				    return "";
				
				}
				public String V79Pattern(){
				
					return "";
				
				}
				public String V79OriginalDbColumnName(){
				
					return "V79";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row68Struct other = (row68Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row68Struct other) {

		other.V79 = this.V79;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row68Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V79 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V79 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V79, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V79, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V79="+V79);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_86Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_86_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();




	
	/**
	 * [tAdvancedHash_row68 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row68", false);
		start_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tAdvancedHash_row68 = 0;
		

			   		// connection name:row68
			   		// source node:tOracleInput_86 - inputs:(after_tOracleInput_1) outputs:(row68,row68) | target node:tAdvancedHash_row68 - inputs:(row68) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row68 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row68Struct> tHash_Lookup_row68 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row68Struct>getLookup(matchingModeEnum_row68);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row68", tHash_Lookup_row68);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row68 begin ] stop
 */



	
	/**
	 * [tOracleInput_86 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_86", false);
		start_Hash.put("tOracleInput_86", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_86";
	
	
		int tos_count_tOracleInput_86 = 0;
		
	


	
		    int nb_line_tOracleInput_86 = 0;
		    java.sql.Connection conn_tOracleInput_86 = null;
				conn_tOracleInput_86 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_86 = false;
				boolean isConnectionWrapped_tOracleInput_86 = !(conn_tOracleInput_86 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_86.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_86 = null;
                if (isConnectionWrapped_tOracleInput_86) {
					unwrappedOraConn_tOracleInput_86 = conn_tOracleInput_86.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_86 != null) {
                        isTimeZoneNull_tOracleInput_86 = (unwrappedOraConn_tOracleInput_86.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_86 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_86).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_86) {
					java.sql.Statement stmtGetTZ_tOracleInput_86 = conn_tOracleInput_86.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_86 = stmtGetTZ_tOracleInput_86.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_86 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_86.next()) {
						sessionTimezone_tOracleInput_86 = rsGetTZ_tOracleInput_86.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_86 && unwrappedOraConn_tOracleInput_86 != null) {
                        unwrappedOraConn_tOracleInput_86.setSessionTimeZone(sessionTimezone_tOracleInput_86);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_86).setSessionTimeZone(sessionTimezone_tOracleInput_86);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_86 = conn_tOracleInput_86.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_86.setFetchSize(1000);


		    String dbquery_tOracleInput_86 = "SELECT    V79\n        , PERSONAS_ID \nFROM ( \n    SELECT    CASE \n                WHEN GH.VALOR=1 THEN '1'\n        "
+"        WHEN GH.VALOR=2 THEN '2'\n                ELSE '22' \n              END AS v79\n            , PA.PERSONAS_ID\n  "
+"          , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM HCL_PROCESOSASISTENCIALE"
+"S PA \n    INNER JOIN GEN_PERSONAS GP            ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX              O"
+"N SEX.ID = GP.SEXO_ID\n    INNER JOIN PMP_MATERNAS PM            ON PM.PERSONAS_ID = GP.ID\n    LEFT JOIN PMP_DESENLACE "
+"PD            ON PD.MATERNAS_ID = PM.ID \n                                          AND PD.ESTREGISTRO_ID = 1\n    LEFT "
+"JOIN HCL_PARTOGRAMA HPT          ON HPT.PROCESOSASISTENCIALES_ID = PA.ID\n                                          AND "
+"HPT.ESTREGISTRO_ID = 1\n    INNER JOIN RCA_INFGENERAL RI          ON RI.PROCESOSASISTENCIALES_ID = PA.ID\n    INNER JOIN"
+" RCA_CUPSOLICITADOS CUPS    ON CUPS.INFGENERAL_ID = RI.ID\n    INNER JOIN GEN_CUPS CU                ON CU.ID = CUPS.CUP"
+"S_ID \n    INNER JOIN RCA_RESULTADOSCUPS RR      ON RR.CUPSOLICITADOS_ID = CUPS.ID\n    INNER JOIN GEN_HEXAMENES GH     "
+"      ON RR.PROCESOSASISTENCIALES_ID = GH.PROCESOSASISTENCIALES_ID\n    INNER JOIN GEN_PARAMEXAMENES GPA      ON GH.PARA"
+"MEXAMENES_ID = GPA.ID\n    INNER JOIN GEN_TEXAMENES GT           ON GT.CUPS_ID = CU.ID \n    WHERE TRUNC( PA.FFINAL )  B"
+"ETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') +1\n      AND PA.ESTREGISTRO_ID = 1\n      AND PD.ID IS NULL \n      AND HPT.ID IS NULL\n      AND CU.C"
+"ODIGO = '906318'\n      AND SEX.SIGLA = 'F'\n      AND TRUNC(months_between(TO_DATE('"+context.FECHA_FINAL+"' ,'DD/MM/YYYY'), GP.FECHA_NACIMIENTO )/12) BETWEEN 10 AND 59\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_86_QUERY",dbquery_tOracleInput_86);

		    java.sql.ResultSet rs_tOracleInput_86 = null;

		    try {
		    	rs_tOracleInput_86 = stmt_tOracleInput_86.executeQuery(dbquery_tOracleInput_86);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_86 = rs_tOracleInput_86.getMetaData();
		    	int colQtyInRs_tOracleInput_86 = rsmd_tOracleInput_86.getColumnCount();

		    String tmpContent_tOracleInput_86 = null;
		    
		    
		    while (rs_tOracleInput_86.next()) {
		        nb_line_tOracleInput_86++;
		        
							if(colQtyInRs_tOracleInput_86 < 1) {
								row68.V79 = null;
							} else {
	                         		
        	row68.V79 = routines.system.JDBCUtil.getString(rs_tOracleInput_86, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_86 < 2) {
								row68.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_86.getObject(2) != null) {
						row68.PERSONAS_ID = rs_tOracleInput_86.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_86 begin ] stop
 */
	
	/**
	 * [tOracleInput_86 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_86";
	
	

 


	tos_count_tOracleInput_86++;

/**
 * [tOracleInput_86 main ] stop
 */
	
	/**
	 * [tOracleInput_86 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_86";
	
	

 



/**
 * [tOracleInput_86 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					


			   
			   

					row68Struct row68_HashRow = new row68Struct();
		   	   	   
				
				row68_HashRow.V79 = row68.V79;
				
				row68_HashRow.PERSONAS_ID = row68.PERSONAS_ID;
				
			tHash_Lookup_row68.put(row68_HashRow);
			
            




 


	tos_count_tAdvancedHash_row68++;

/**
 * [tAdvancedHash_row68 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row68 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_86 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_86";
	
	

 



/**
 * [tOracleInput_86 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_86 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_86";
	
	

}
}finally{
	if (rs_tOracleInput_86 != null) {
		rs_tOracleInput_86.close();
	}
	if (stmt_tOracleInput_86 != null) {
		stmt_tOracleInput_86.close();
	}
}

globalMap.put("tOracleInput_86_NB_LINE",nb_line_tOracleInput_86);
 

ok_Hash.put("tOracleInput_86", true);
end_Hash.put("tOracleInput_86", System.currentTimeMillis());




/**
 * [tOracleInput_86 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

tHash_Lookup_row68.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row68", true);
end_Hash.put("tAdvancedHash_row68", System.currentTimeMillis());




/**
 * [tAdvancedHash_row68 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_86 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_86";
	
	

 



/**
 * [tOracleInput_86 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row68 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row68";
	
	

 



/**
 * [tAdvancedHash_row68 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_86_SUBPROCESS_STATE", 1);
	}
	


public static class row69Struct implements routines.system.IPersistableComparableLookupRow<row69Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V80;

				public String getV80 () {
					return this.V80;
				}

				public Boolean V80IsNullable(){
				    return true;
				}
				public Boolean V80IsKey(){
				    return false;
				}
				public Integer V80Length(){
				    return null;
				}
				public Integer V80Precision(){
				    return null;
				}
				public String V80Default(){
				
					return null;
				
				}
				public String V80Comment(){
				
				    return "";
				
				}
				public String V80Pattern(){
				
					return "";
				
				}
				public String V80OriginalDbColumnName(){
				
					return "V80";
				
				}

				
			    public BigDecimal PACIENTE;

				public BigDecimal getPACIENTE () {
					return this.PACIENTE;
				}

				public Boolean PACIENTEIsNullable(){
				    return false;
				}
				public Boolean PACIENTEIsKey(){
				    return false;
				}
				public Integer PACIENTELength(){
				    return null;
				}
				public Integer PACIENTEPrecision(){
				    return null;
				}
				public String PACIENTEDefault(){
				
					return "";
				
				}
				public String PACIENTEComment(){
				
				    return "";
				
				}
				public String PACIENTEPattern(){
				
					return "";
				
				}
				public String PACIENTEOriginalDbColumnName(){
				
					return "PACIENTE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PACIENTE == null) ? 0 : this.PACIENTE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row69Struct other = (row69Struct) obj;
		
						if (this.PACIENTE == null) {
							if (other.PACIENTE != null)
								return false;
						
						} else if (!this.PACIENTE.equals(other.PACIENTE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row69Struct other) {

		other.V80 = this.V80;
	            other.PACIENTE = this.PACIENTE;
	            
	}

	public void copyKeysDataTo(row69Struct other) {

		other.PACIENTE = this.PACIENTE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PACIENTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PACIENTE = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PACIENTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PACIENTE);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V80 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V80 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V80, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V80, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V80="+V80);
		sb.append(",PACIENTE="+String.valueOf(PACIENTE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row69Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PACIENTE, other.PACIENTE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_77Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_77_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row69Struct row69 = new row69Struct();




	
	/**
	 * [tAdvancedHash_row69 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row69", false);
		start_Hash.put("tAdvancedHash_row69", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row69";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row69");
					}
				
		int tos_count_tAdvancedHash_row69 = 0;
		

			   		// connection name:row69
			   		// source node:tOracleInput_77 - inputs:(after_tOracleInput_1) outputs:(row69,row69) | target node:tAdvancedHash_row69 - inputs:(row69) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row69 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct> tHash_Lookup_row69 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row69Struct>getLookup(matchingModeEnum_row69);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row69", tHash_Lookup_row69);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row69 begin ] stop
 */



	
	/**
	 * [tOracleInput_77 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_77", false);
		start_Hash.put("tOracleInput_77", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_77";
	
	
		int tos_count_tOracleInput_77 = 0;
		
	


	
		    int nb_line_tOracleInput_77 = 0;
		    java.sql.Connection conn_tOracleInput_77 = null;
				conn_tOracleInput_77 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_77 = false;
				boolean isConnectionWrapped_tOracleInput_77 = !(conn_tOracleInput_77 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_77.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_77 = null;
                if (isConnectionWrapped_tOracleInput_77) {
					unwrappedOraConn_tOracleInput_77 = conn_tOracleInput_77.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_77 != null) {
                        isTimeZoneNull_tOracleInput_77 = (unwrappedOraConn_tOracleInput_77.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_77 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_77).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_77) {
					java.sql.Statement stmtGetTZ_tOracleInput_77 = conn_tOracleInput_77.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_77 = stmtGetTZ_tOracleInput_77.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_77 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_77.next()) {
						sessionTimezone_tOracleInput_77 = rsGetTZ_tOracleInput_77.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_77 && unwrappedOraConn_tOracleInput_77 != null) {
                        unwrappedOraConn_tOracleInput_77.setSessionTimeZone(sessionTimezone_tOracleInput_77);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_77).setSessionTimeZone(sessionTimezone_tOracleInput_77);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_77 = conn_tOracleInput_77.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_77.setFetchSize(1000);


		    String dbquery_tOracleInput_77 = "SELECT    V80\n        , PERSONAS_ID \nFROM (    \nSELECT CASE \n		WHEN GS.SIGLA = 'F'\n		THEN NVL(TO_CHAR(RR.FTOMA ,'Y"
+"YYY-MM-DD'),'1800-01-01')\n		WHEN GS.SIGLA = 'M'\n		THEN '1845-01-01'\n	   END AS V80,\n	  ROW_NUMBER() OVER (PARTITION "
+"BY HP.PERSONAS_ID ORDER BY RR.FTOMA DESC) R,\n	  HP.PERSONAS_ID \nFROM GEN_PERSONAS GP\nINNER JOIN GEN_SEXOS GS ON GS.ID"
+" = GP.SEXO_ID \nLEFT JOIN HCL_PROCESOSASISTENCIALES HP ON HP.PERSONAS_ID = GP.ID\nLEFT JOIN HCL_DIAGNOSTICOS HD ON HD.PR"
+"OCESOSASISTENCIALES_ID = HP.ID\nLEFT JOIN GEN_CIE10 GC ON GC.ID = HD.CIE10_ID \nLEFT JOIN RCA_INFGENERAL RI ON RI.PROCES"
+"OSASISTENCIALES_ID = HP.ID \nLEFT JOIN RCA_CUPSOLICITADOS RC ON RC.INFGENERAL_ID = RI.ID \nLEFT JOIN GEN_CUPS CU ON CU.I"
+"D = RC.CUPS_ID AND (CU.CODIGO = '906916' OR GC.CODIGO = 'Z113') \nLEFT JOIN RCA_RESULTADOSCUPS RR ON RR.CUPSOLICITADOS_I"
+"D = RC.ID\nWHERE TRUNC(RR.FTOMA) BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R= 1";
		    

		    globalMap.put("tOracleInput_77_QUERY",dbquery_tOracleInput_77);

		    java.sql.ResultSet rs_tOracleInput_77 = null;

		    try {
		    	rs_tOracleInput_77 = stmt_tOracleInput_77.executeQuery(dbquery_tOracleInput_77);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_77 = rs_tOracleInput_77.getMetaData();
		    	int colQtyInRs_tOracleInput_77 = rsmd_tOracleInput_77.getColumnCount();

		    String tmpContent_tOracleInput_77 = null;
		    
		    
		    while (rs_tOracleInput_77.next()) {
		        nb_line_tOracleInput_77++;
		        
							if(colQtyInRs_tOracleInput_77 < 1) {
								row69.V80 = null;
							} else {
	                         		
        	row69.V80 = routines.system.JDBCUtil.getString(rs_tOracleInput_77, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_77 < 2) {
								row69.PACIENTE = null;
							} else {
		                          
					if(rs_tOracleInput_77.getObject(2) != null) {
						row69.PACIENTE = rs_tOracleInput_77.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_77 begin ] stop
 */
	
	/**
	 * [tOracleInput_77 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_77";
	
	

 


	tos_count_tOracleInput_77++;

/**
 * [tOracleInput_77 main ] stop
 */
	
	/**
	 * [tOracleInput_77 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_77";
	
	

 



/**
 * [tOracleInput_77 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row69 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row69";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row69"
						
						);
					}
					


			   
			   

					row69Struct row69_HashRow = new row69Struct();
		   	   	   
				
				row69_HashRow.V80 = row69.V80;
				
				row69_HashRow.PACIENTE = row69.PACIENTE;
				
			tHash_Lookup_row69.put(row69_HashRow);
			
            




 


	tos_count_tAdvancedHash_row69++;

/**
 * [tAdvancedHash_row69 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row69 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row69";
	
	

 



/**
 * [tAdvancedHash_row69 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row69 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row69";
	
	

 



/**
 * [tAdvancedHash_row69 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_77 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_77";
	
	

 



/**
 * [tOracleInput_77 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_77 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_77";
	
	

}
}finally{
	if (rs_tOracleInput_77 != null) {
		rs_tOracleInput_77.close();
	}
	if (stmt_tOracleInput_77 != null) {
		stmt_tOracleInput_77.close();
	}
}

globalMap.put("tOracleInput_77_NB_LINE",nb_line_tOracleInput_77);
 

ok_Hash.put("tOracleInput_77", true);
end_Hash.put("tOracleInput_77", System.currentTimeMillis());




/**
 * [tOracleInput_77 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row69 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row69";
	
	

tHash_Lookup_row69.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row69");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row69", true);
end_Hash.put("tAdvancedHash_row69", System.currentTimeMillis());




/**
 * [tAdvancedHash_row69 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_77 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_77";
	
	

 



/**
 * [tOracleInput_77 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row69 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row69";
	
	

 



/**
 * [tAdvancedHash_row69 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_77_SUBPROCESS_STATE", 1);
	}
	


public static class row70Struct implements routines.system.IPersistableComparableLookupRow<row70Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V81;

				public String getV81 () {
					return this.V81;
				}

				public Boolean V81IsNullable(){
				    return true;
				}
				public Boolean V81IsKey(){
				    return false;
				}
				public Integer V81Length(){
				    return null;
				}
				public Integer V81Precision(){
				    return null;
				}
				public String V81Default(){
				
					return null;
				
				}
				public String V81Comment(){
				
				    return "";
				
				}
				public String V81Pattern(){
				
					return "";
				
				}
				public String V81OriginalDbColumnName(){
				
					return "V81";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row70Struct other = (row70Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row70Struct other) {

		other.V81 = this.V81;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row70Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V81 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V81 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V81, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V81, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V81="+V81);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row70Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_76Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_76_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row70Struct row70 = new row70Struct();




	
	/**
	 * [tAdvancedHash_row70 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row70", false);
		start_Hash.put("tAdvancedHash_row70", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row70";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row70");
					}
				
		int tos_count_tAdvancedHash_row70 = 0;
		

			   		// connection name:row70
			   		// source node:tOracleInput_76 - inputs:(after_tOracleInput_1) outputs:(row70,row70) | target node:tAdvancedHash_row70 - inputs:(row70) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row70 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row70Struct> tHash_Lookup_row70 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row70Struct>getLookup(matchingModeEnum_row70);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row70", tHash_Lookup_row70);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row70 begin ] stop
 */



	
	/**
	 * [tOracleInput_76 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_76", false);
		start_Hash.put("tOracleInput_76", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_76";
	
	
		int tos_count_tOracleInput_76 = 0;
		
	


	
		    int nb_line_tOracleInput_76 = 0;
		    java.sql.Connection conn_tOracleInput_76 = null;
				conn_tOracleInput_76 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_76 = false;
				boolean isConnectionWrapped_tOracleInput_76 = !(conn_tOracleInput_76 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_76.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_76 = null;
                if (isConnectionWrapped_tOracleInput_76) {
					unwrappedOraConn_tOracleInput_76 = conn_tOracleInput_76.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_76 != null) {
                        isTimeZoneNull_tOracleInput_76 = (unwrappedOraConn_tOracleInput_76.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_76 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_76).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_76) {
					java.sql.Statement stmtGetTZ_tOracleInput_76 = conn_tOracleInput_76.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_76 = stmtGetTZ_tOracleInput_76.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_76 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_76.next()) {
						sessionTimezone_tOracleInput_76 = rsGetTZ_tOracleInput_76.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_76 && unwrappedOraConn_tOracleInput_76 != null) {
                        unwrappedOraConn_tOracleInput_76.setSessionTimeZone(sessionTimezone_tOracleInput_76);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_76).setSessionTimeZone(sessionTimezone_tOracleInput_76);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_76 = conn_tOracleInput_76.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_76.setFetchSize(1000);


		    String dbquery_tOracleInput_76 = "SELECT    V81\n        , PERSONAS_ID \nFROM (    \nSELECT CASE \n		WHEN GS.SIGLA = 'F'\n		THEN DECODE(GT.SIGLA,'REAC','"
+"2','NREAC','1','22')\n		WHEN GS.SIGLA = 'M'\n		THEN '0'\n	   END AS V81,\n	  ROW_NUMBER() OVER (PARTITION BY HP.PERSONAS"
+"_ID ORDER BY RR.FTOMA DESC) R,\n	  HP.PERSONAS_ID \nFROM GEN_PERSONAS GP\nINNER JOIN GEN_SEXOS GS ON GS.ID = GP.SEXO_ID "
+"\nLEFT JOIN HCL_PROCESOSASISTENCIALES HP ON HP.PERSONAS_ID = GP.ID\nLEFT JOIN HCL_DIAGNOSTICOS HD ON HD.PROCESOSASISTENC"
+"IALES_ID = HP.ID\nLEFT JOIN GEN_CIE10 GC ON GC.ID = HD.CIE10_ID \nLEFT JOIN RCA_INFGENERAL RI ON RI.PROCESOSASISTENCIALE"
+"S_ID = HP.ID \nLEFT JOIN RCA_CUPSOLICITADOS RC ON RC.INFGENERAL_ID = RI.ID \nLEFT JOIN GEN_CUPS CU ON CU.ID = RC.CUPS_ID"
+" AND (CU.CODIGO = '906916' OR GC.CODIGO = 'Z113') \nLEFT JOIN RCA_RESULTADOSCUPS RR ON RR.CUPSOLICITADOS_ID = RC.ID\nLEF"
+"T JOIN GEN_TRESULTADOSCUPS GT ON GT.ID = RR.TRESULTADOSCUPS_ID \nWHERE TRUNC(RR.FTOMA) BETWEEN ADD_MONTHS(TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY'),-7) AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R= 1";
		    

		    globalMap.put("tOracleInput_76_QUERY",dbquery_tOracleInput_76);

		    java.sql.ResultSet rs_tOracleInput_76 = null;

		    try {
		    	rs_tOracleInput_76 = stmt_tOracleInput_76.executeQuery(dbquery_tOracleInput_76);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_76 = rs_tOracleInput_76.getMetaData();
		    	int colQtyInRs_tOracleInput_76 = rsmd_tOracleInput_76.getColumnCount();

		    String tmpContent_tOracleInput_76 = null;
		    
		    
		    while (rs_tOracleInput_76.next()) {
		        nb_line_tOracleInput_76++;
		        
							if(colQtyInRs_tOracleInput_76 < 1) {
								row70.V81 = null;
							} else {
	                         		
        	row70.V81 = routines.system.JDBCUtil.getString(rs_tOracleInput_76, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_76 < 2) {
								row70.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_76.getObject(2) != null) {
						row70.PERSONAS_ID = rs_tOracleInput_76.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_76 begin ] stop
 */
	
	/**
	 * [tOracleInput_76 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_76";
	
	

 


	tos_count_tOracleInput_76++;

/**
 * [tOracleInput_76 main ] stop
 */
	
	/**
	 * [tOracleInput_76 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_76";
	
	

 



/**
 * [tOracleInput_76 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row70"
						
						);
					}
					


			   
			   

					row70Struct row70_HashRow = new row70Struct();
		   	   	   
				
				row70_HashRow.V81 = row70.V81;
				
				row70_HashRow.PERSONAS_ID = row70.PERSONAS_ID;
				
			tHash_Lookup_row70.put(row70_HashRow);
			
            




 


	tos_count_tAdvancedHash_row70++;

/**
 * [tAdvancedHash_row70 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row70 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row70 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_76 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_76";
	
	

 



/**
 * [tOracleInput_76 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_76 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_76";
	
	

}
}finally{
	if (rs_tOracleInput_76 != null) {
		rs_tOracleInput_76.close();
	}
	if (stmt_tOracleInput_76 != null) {
		stmt_tOracleInput_76.close();
	}
}

globalMap.put("tOracleInput_76_NB_LINE",nb_line_tOracleInput_76);
 

ok_Hash.put("tOracleInput_76", true);
end_Hash.put("tOracleInput_76", System.currentTimeMillis());




/**
 * [tOracleInput_76 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

tHash_Lookup_row70.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row70");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row70", true);
end_Hash.put("tAdvancedHash_row70", System.currentTimeMillis());




/**
 * [tAdvancedHash_row70 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_76 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_76";
	
	

 



/**
 * [tOracleInput_76 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row70 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row70";
	
	

 



/**
 * [tAdvancedHash_row70 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_76_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableComparableLookupRow<row46Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V82;

				public String getV82 () {
					return this.V82;
				}

				public Boolean V82IsNullable(){
				    return true;
				}
				public Boolean V82IsKey(){
				    return false;
				}
				public Integer V82Length(){
				    return 10;
				}
				public Integer V82Precision(){
				    return 0;
				}
				public String V82Default(){
				
					return null;
				
				}
				public String V82Comment(){
				
				    return "";
				
				}
				public String V82Pattern(){
				
					return "";
				
				}
				public String V82OriginalDbColumnName(){
				
					return "V82";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row46Struct other = (row46Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row46Struct other) {

		other.V82 = this.V82;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row46Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V82 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V82 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V82, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V82, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V82="+V82);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_75Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_75_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();




	
	/**
	 * [tAdvancedHash_row46 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row46", false);
		start_Hash.put("tAdvancedHash_row46", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row46";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tAdvancedHash_row46 = 0;
		

			   		// connection name:row46
			   		// source node:tOracleInput_75 - inputs:(after_tOracleInput_1) outputs:(row46,row46) | target node:tAdvancedHash_row46 - inputs:(row46) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row46 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row46Struct> tHash_Lookup_row46 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row46Struct>getLookup(matchingModeEnum_row46);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row46", tHash_Lookup_row46);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row46 begin ] stop
 */



	
	/**
	 * [tOracleInput_75 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_75", false);
		start_Hash.put("tOracleInput_75", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_75";
	
	
		int tos_count_tOracleInput_75 = 0;
		
	


	
		    int nb_line_tOracleInput_75 = 0;
		    java.sql.Connection conn_tOracleInput_75 = null;
				conn_tOracleInput_75 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_75 = false;
				boolean isConnectionWrapped_tOracleInput_75 = !(conn_tOracleInput_75 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_75.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_75 = null;
                if (isConnectionWrapped_tOracleInput_75) {
					unwrappedOraConn_tOracleInput_75 = conn_tOracleInput_75.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_75 != null) {
                        isTimeZoneNull_tOracleInput_75 = (unwrappedOraConn_tOracleInput_75.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_75 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_75).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_75) {
					java.sql.Statement stmtGetTZ_tOracleInput_75 = conn_tOracleInput_75.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_75 = stmtGetTZ_tOracleInput_75.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_75 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_75.next()) {
						sessionTimezone_tOracleInput_75 = rsGetTZ_tOracleInput_75.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_75 && unwrappedOraConn_tOracleInput_75 != null) {
                        unwrappedOraConn_tOracleInput_75.setSessionTimeZone(sessionTimezone_tOracleInput_75);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_75).setSessionTimeZone(sessionTimezone_tOracleInput_75);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_75 = conn_tOracleInput_75.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_75.setFetchSize(1000);


		    String dbquery_tOracleInput_75 = "SELECT \n  TO_CHAR (MAX(R.FREGISTRO),'YYYY-MM-DD') AS v82,\n  PROC.PERSONAS_ID\n\nFROM RCA_INFGENERAL INF \nINNER JOIN "
+"HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.IN"
+"FGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID AND CU.CODIGO = '906249'\nINNER JOIN RCA_RESULTADOS"
+"CUPS R ON R.CUPSOLICITADOS_ID = CUPS.ID\nWHERE  R.FTOMA BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_75_QUERY",dbquery_tOracleInput_75);

		    java.sql.ResultSet rs_tOracleInput_75 = null;

		    try {
		    	rs_tOracleInput_75 = stmt_tOracleInput_75.executeQuery(dbquery_tOracleInput_75);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_75 = rs_tOracleInput_75.getMetaData();
		    	int colQtyInRs_tOracleInput_75 = rsmd_tOracleInput_75.getColumnCount();

		    String tmpContent_tOracleInput_75 = null;
		    
		    
		    while (rs_tOracleInput_75.next()) {
		        nb_line_tOracleInput_75++;
		        
							if(colQtyInRs_tOracleInput_75 < 1) {
								row46.V82 = null;
							} else {
	                         		
        	row46.V82 = routines.system.JDBCUtil.getString(rs_tOracleInput_75, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_75 < 2) {
								row46.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_75.getObject(2) != null) {
						row46.PERSONAS_ID = rs_tOracleInput_75.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_75 begin ] stop
 */
	
	/**
	 * [tOracleInput_75 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_75";
	
	

 


	tos_count_tOracleInput_75++;

/**
 * [tOracleInput_75 main ] stop
 */
	
	/**
	 * [tOracleInput_75 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_75";
	
	

 



/**
 * [tOracleInput_75 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					


			   
			   

					row46Struct row46_HashRow = new row46Struct();
		   	   	   
				
				row46_HashRow.V82 = row46.V82;
				
				row46_HashRow.PERSONAS_ID = row46.PERSONAS_ID;
				
			tHash_Lookup_row46.put(row46_HashRow);
			
            




 


	tos_count_tAdvancedHash_row46++;

/**
 * [tAdvancedHash_row46 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row46 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";
	
	

 



/**
 * [tAdvancedHash_row46 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row46 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";
	
	

 



/**
 * [tAdvancedHash_row46 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_75 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_75";
	
	

 



/**
 * [tOracleInput_75 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_75 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_75";
	
	

}
}finally{
	if (rs_tOracleInput_75 != null) {
		rs_tOracleInput_75.close();
	}
	if (stmt_tOracleInput_75 != null) {
		stmt_tOracleInput_75.close();
	}
}

globalMap.put("tOracleInput_75_NB_LINE",nb_line_tOracleInput_75);
 

ok_Hash.put("tOracleInput_75", true);
end_Hash.put("tOracleInput_75", System.currentTimeMillis());




/**
 * [tOracleInput_75 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";
	
	

tHash_Lookup_row46.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row46", true);
end_Hash.put("tAdvancedHash_row46", System.currentTimeMillis());




/**
 * [tAdvancedHash_row46 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_75 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_75";
	
	

 



/**
 * [tOracleInput_75 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row46 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row46";
	
	

 



/**
 * [tAdvancedHash_row46 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_75_SUBPROCESS_STATE", 1);
	}
	


public static class row71Struct implements routines.system.IPersistableComparableLookupRow<row71Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V83;

				public String getV83 () {
					return this.V83;
				}

				public Boolean V83IsNullable(){
				    return true;
				}
				public Boolean V83IsKey(){
				    return false;
				}
				public Integer V83Length(){
				    return 2;
				}
				public Integer V83Precision(){
				    return 0;
				}
				public String V83Default(){
				
					return null;
				
				}
				public String V83Comment(){
				
				    return "";
				
				}
				public String V83Pattern(){
				
					return "";
				
				}
				public String V83OriginalDbColumnName(){
				
					return "V83";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row71Struct other = (row71Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row71Struct other) {

		other.V83 = this.V83;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row71Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V83 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V83 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V83, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V83, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V83="+V83);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row71Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_74Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_74_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row71Struct row71 = new row71Struct();




	
	/**
	 * [tAdvancedHash_row71 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row71", false);
		start_Hash.put("tAdvancedHash_row71", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row71";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row71");
					}
				
		int tos_count_tAdvancedHash_row71 = 0;
		

			   		// connection name:row71
			   		// source node:tOracleInput_74 - inputs:(after_tOracleInput_1) outputs:(row71,row71) | target node:tAdvancedHash_row71 - inputs:(row71) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row71 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row71Struct> tHash_Lookup_row71 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row71Struct>getLookup(matchingModeEnum_row71);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row71", tHash_Lookup_row71);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row71 begin ] stop
 */



	
	/**
	 * [tOracleInput_74 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_74", false);
		start_Hash.put("tOracleInput_74", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_74";
	
	
		int tos_count_tOracleInput_74 = 0;
		
	


	
		    int nb_line_tOracleInput_74 = 0;
		    java.sql.Connection conn_tOracleInput_74 = null;
				conn_tOracleInput_74 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_74 = false;
				boolean isConnectionWrapped_tOracleInput_74 = !(conn_tOracleInput_74 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_74.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_74 = null;
                if (isConnectionWrapped_tOracleInput_74) {
					unwrappedOraConn_tOracleInput_74 = conn_tOracleInput_74.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_74 != null) {
                        isTimeZoneNull_tOracleInput_74 = (unwrappedOraConn_tOracleInput_74.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_74 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_74).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_74) {
					java.sql.Statement stmtGetTZ_tOracleInput_74 = conn_tOracleInput_74.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_74 = stmtGetTZ_tOracleInput_74.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_74 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_74.next()) {
						sessionTimezone_tOracleInput_74 = rsGetTZ_tOracleInput_74.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_74 && unwrappedOraConn_tOracleInput_74 != null) {
                        unwrappedOraConn_tOracleInput_74.setSessionTimeZone(sessionTimezone_tOracleInput_74);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_74).setSessionTimeZone(sessionTimezone_tOracleInput_74);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_74 = conn_tOracleInput_74.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_74.setFetchSize(1000);


		    String dbquery_tOracleInput_74 = "SELECT \n  CASE WHEN TR.NOMBRE = 'Reactivo' THEN '2'\n  WHEN TR.NOMBRE = 'No reactivo' THEN '1'\n  ELSE '22'\n  END AS "
+"v83,\n  I.PACIENTE AS PERSONAS_ID\nFROM  (\nSELECT \nMAX(R.ID) AS ID,\nINF.PACIENTE\nFROM RCA_INFGENERAL INF \nINNER JOI"
+"N RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID AND CU.CODIGO ="
+" '906249'\nINNER JOIN RCA_RESULTADOSCUPS R ON R.CUPSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID "
+"= R.TRESULTADOSCUPS_ID\nWHERE R.FTOMA BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY INF.PACIENTE\n)I \nINNER JOIN RCA_RESULTADOSCUPS R ON R.ID=I.ID\nINNER JOIN GEN_TRESULTAD"
+"OSCUPS TR ON TR.ID = R.TRESULTADOSCUPS_ID";
		    

		    globalMap.put("tOracleInput_74_QUERY",dbquery_tOracleInput_74);

		    java.sql.ResultSet rs_tOracleInput_74 = null;

		    try {
		    	rs_tOracleInput_74 = stmt_tOracleInput_74.executeQuery(dbquery_tOracleInput_74);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_74 = rs_tOracleInput_74.getMetaData();
		    	int colQtyInRs_tOracleInput_74 = rsmd_tOracleInput_74.getColumnCount();

		    String tmpContent_tOracleInput_74 = null;
		    
		    
		    while (rs_tOracleInput_74.next()) {
		        nb_line_tOracleInput_74++;
		        
							if(colQtyInRs_tOracleInput_74 < 1) {
								row71.V83 = null;
							} else {
	                         		
        	row71.V83 = routines.system.JDBCUtil.getString(rs_tOracleInput_74, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_74 < 2) {
								row71.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_74.getObject(2) != null) {
						row71.PERSONAS_ID = rs_tOracleInput_74.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_74 begin ] stop
 */
	
	/**
	 * [tOracleInput_74 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_74";
	
	

 


	tos_count_tOracleInput_74++;

/**
 * [tOracleInput_74 main ] stop
 */
	
	/**
	 * [tOracleInput_74 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_74";
	
	

 



/**
 * [tOracleInput_74 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row71"
						
						);
					}
					


			   
			   

					row71Struct row71_HashRow = new row71Struct();
		   	   	   
				
				row71_HashRow.V83 = row71.V83;
				
				row71_HashRow.PERSONAS_ID = row71.PERSONAS_ID;
				
			tHash_Lookup_row71.put(row71_HashRow);
			
            




 


	tos_count_tAdvancedHash_row71++;

/**
 * [tAdvancedHash_row71 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row71 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row71 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_74 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_74";
	
	

 



/**
 * [tOracleInput_74 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_74 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_74";
	
	

}
}finally{
	if (rs_tOracleInput_74 != null) {
		rs_tOracleInput_74.close();
	}
	if (stmt_tOracleInput_74 != null) {
		stmt_tOracleInput_74.close();
	}
}

globalMap.put("tOracleInput_74_NB_LINE",nb_line_tOracleInput_74);
 

ok_Hash.put("tOracleInput_74", true);
end_Hash.put("tOracleInput_74", System.currentTimeMillis());




/**
 * [tOracleInput_74 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

tHash_Lookup_row71.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row71");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row71", true);
end_Hash.put("tAdvancedHash_row71", System.currentTimeMillis());




/**
 * [tAdvancedHash_row71 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_74 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_74";
	
	

 



/**
 * [tOracleInput_74 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row71 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row71";
	
	

 



/**
 * [tAdvancedHash_row71 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_74_SUBPROCESS_STATE", 1);
	}
	


public static class row72Struct implements routines.system.IPersistableComparableLookupRow<row72Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V84;

				public String getV84 () {
					return this.V84;
				}

				public Boolean V84IsNullable(){
				    return true;
				}
				public Boolean V84IsKey(){
				    return false;
				}
				public Integer V84Length(){
				    return null;
				}
				public Integer V84Precision(){
				    return null;
				}
				public String V84Default(){
				
					return null;
				
				}
				public String V84Comment(){
				
				    return "";
				
				}
				public String V84Pattern(){
				
					return "";
				
				}
				public String V84OriginalDbColumnName(){
				
					return "V84";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row72Struct other = (row72Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row72Struct other) {

		other.V84 = this.V84;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row72Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V84 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V84 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V84, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V84, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V84="+V84);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row72Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_73Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_73_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row72Struct row72 = new row72Struct();




	
	/**
	 * [tAdvancedHash_row72 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row72", false);
		start_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row72";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row72");
					}
				
		int tos_count_tAdvancedHash_row72 = 0;
		

			   		// connection name:row72
			   		// source node:tOracleInput_73 - inputs:(after_tOracleInput_1) outputs:(row72,row72) | target node:tAdvancedHash_row72 - inputs:(row72) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row72 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row72Struct>getLookup(matchingModeEnum_row72);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row72", tHash_Lookup_row72);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row72 begin ] stop
 */



	
	/**
	 * [tOracleInput_73 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_73", false);
		start_Hash.put("tOracleInput_73", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_73";
	
	
		int tos_count_tOracleInput_73 = 0;
		
	


	
		    int nb_line_tOracleInput_73 = 0;
		    java.sql.Connection conn_tOracleInput_73 = null;
				conn_tOracleInput_73 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_73 = false;
				boolean isConnectionWrapped_tOracleInput_73 = !(conn_tOracleInput_73 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_73.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_73 = null;
                if (isConnectionWrapped_tOracleInput_73) {
					unwrappedOraConn_tOracleInput_73 = conn_tOracleInput_73.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_73 != null) {
                        isTimeZoneNull_tOracleInput_73 = (unwrappedOraConn_tOracleInput_73.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_73 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_73).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_73) {
					java.sql.Statement stmtGetTZ_tOracleInput_73 = conn_tOracleInput_73.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_73 = stmtGetTZ_tOracleInput_73.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_73 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_73.next()) {
						sessionTimezone_tOracleInput_73 = rsGetTZ_tOracleInput_73.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_73 && unwrappedOraConn_tOracleInput_73 != null) {
                        unwrappedOraConn_tOracleInput_73.setSessionTimeZone(sessionTimezone_tOracleInput_73);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_73).setSessionTimeZone(sessionTimezone_tOracleInput_73);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_73 = conn_tOracleInput_73.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_73.setFetchSize(1000);


		    String dbquery_tOracleInput_73 = "SELECT    V84\n        , PERSONAS_ID \nFROM ( \n    SELECT    TO_CHAR (PROC.FFINAL,'YYYY-MM-DD') AS V84\n            , "
+"PER.ID AS PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    "
+"FROM GEN_CUPS CU \n    INNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.CUPS_ID = CU.ID\n    INNER JOIN RCA_RESULTADOSCUPS R O"
+"N R.CUPSOLICITADOS_ID = CUPS.ID\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = CUPS.INFGENERAL_ID\n    INNER JOIN HCL_PR"
+"OCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PE"
+"RSONAS_ID\n    WHERE CU.CODIGO = '904903'\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND TRUNC(( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')- PER.FECHA_NACIMIENTO)/365) BETWEEN 0 AND 2\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_73_QUERY",dbquery_tOracleInput_73);

		    java.sql.ResultSet rs_tOracleInput_73 = null;

		    try {
		    	rs_tOracleInput_73 = stmt_tOracleInput_73.executeQuery(dbquery_tOracleInput_73);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_73 = rs_tOracleInput_73.getMetaData();
		    	int colQtyInRs_tOracleInput_73 = rsmd_tOracleInput_73.getColumnCount();

		    String tmpContent_tOracleInput_73 = null;
		    
		    
		    while (rs_tOracleInput_73.next()) {
		        nb_line_tOracleInput_73++;
		        
							if(colQtyInRs_tOracleInput_73 < 1) {
								row72.V84 = null;
							} else {
	                         		
        	row72.V84 = routines.system.JDBCUtil.getString(rs_tOracleInput_73, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_73 < 2) {
								row72.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_73.getObject(2) != null) {
						row72.PERSONAS_ID = rs_tOracleInput_73.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_73 begin ] stop
 */
	
	/**
	 * [tOracleInput_73 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_73";
	
	

 


	tos_count_tOracleInput_73++;

/**
 * [tOracleInput_73 main ] stop
 */
	
	/**
	 * [tOracleInput_73 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_73";
	
	

 



/**
 * [tOracleInput_73 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row72"
						
						);
					}
					


			   
			   

					row72Struct row72_HashRow = new row72Struct();
		   	   	   
				
				row72_HashRow.V84 = row72.V84;
				
				row72_HashRow.PERSONAS_ID = row72.PERSONAS_ID;
				
			tHash_Lookup_row72.put(row72_HashRow);
			
            




 


	tos_count_tAdvancedHash_row72++;

/**
 * [tAdvancedHash_row72 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row72 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row72 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_73 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_73";
	
	

 



/**
 * [tOracleInput_73 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_73 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_73";
	
	

}
}finally{
	if (rs_tOracleInput_73 != null) {
		rs_tOracleInput_73.close();
	}
	if (stmt_tOracleInput_73 != null) {
		stmt_tOracleInput_73.close();
	}
}

globalMap.put("tOracleInput_73_NB_LINE",nb_line_tOracleInput_73);
 

ok_Hash.put("tOracleInput_73", true);
end_Hash.put("tOracleInput_73", System.currentTimeMillis());




/**
 * [tOracleInput_73 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

tHash_Lookup_row72.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row72");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row72", true);
end_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());




/**
 * [tAdvancedHash_row72 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_73 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_73";
	
	

 



/**
 * [tOracleInput_73 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row72 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row72";
	
	

 



/**
 * [tAdvancedHash_row72 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_73_SUBPROCESS_STATE", 1);
	}
	


public static class row73Struct implements routines.system.IPersistableComparableLookupRow<row73Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V85;

				public String getV85 () {
					return this.V85;
				}

				public Boolean V85IsNullable(){
				    return true;
				}
				public Boolean V85IsKey(){
				    return false;
				}
				public Integer V85Length(){
				    return null;
				}
				public Integer V85Precision(){
				    return null;
				}
				public String V85Default(){
				
					return null;
				
				}
				public String V85Comment(){
				
				    return "";
				
				}
				public String V85Pattern(){
				
					return "";
				
				}
				public String V85OriginalDbColumnName(){
				
					return "V85";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row73Struct other = (row73Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row73Struct other) {

		other.V85 = this.V85;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row73Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V85 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V85 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V85, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V85, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V85="+V85);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row73Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_72Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_72_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row73Struct row73 = new row73Struct();




	
	/**
	 * [tAdvancedHash_row73 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row73", false);
		start_Hash.put("tAdvancedHash_row73", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row73";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row73");
					}
				
		int tos_count_tAdvancedHash_row73 = 0;
		

			   		// connection name:row73
			   		// source node:tOracleInput_72 - inputs:(after_tOracleInput_1) outputs:(row73,row73) | target node:tAdvancedHash_row73 - inputs:(row73) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row73 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row73Struct> tHash_Lookup_row73 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row73Struct>getLookup(matchingModeEnum_row73);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row73", tHash_Lookup_row73);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row73 begin ] stop
 */



	
	/**
	 * [tOracleInput_72 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_72", false);
		start_Hash.put("tOracleInput_72", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_72";
	
	
		int tos_count_tOracleInput_72 = 0;
		
	


	
		    int nb_line_tOracleInput_72 = 0;
		    java.sql.Connection conn_tOracleInput_72 = null;
				conn_tOracleInput_72 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_72 = false;
				boolean isConnectionWrapped_tOracleInput_72 = !(conn_tOracleInput_72 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_72.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_72 = null;
                if (isConnectionWrapped_tOracleInput_72) {
					unwrappedOraConn_tOracleInput_72 = conn_tOracleInput_72.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_72 != null) {
                        isTimeZoneNull_tOracleInput_72 = (unwrappedOraConn_tOracleInput_72.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_72 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_72).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_72) {
					java.sql.Statement stmtGetTZ_tOracleInput_72 = conn_tOracleInput_72.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_72 = stmtGetTZ_tOracleInput_72.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_72 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_72.next()) {
						sessionTimezone_tOracleInput_72 = rsGetTZ_tOracleInput_72.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_72 && unwrappedOraConn_tOracleInput_72 != null) {
                        unwrappedOraConn_tOracleInput_72.setSessionTimeZone(sessionTimezone_tOracleInput_72);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_72).setSessionTimeZone(sessionTimezone_tOracleInput_72);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_72 = conn_tOracleInput_72.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_72.setFetchSize(1000);


		    String dbquery_tOracleInput_72 = "SELECT    V85\n        , PERSONAS_ID \nFROM ( \n    SELECT    '22' AS V85\n            , PER.ID AS PERSONAS_ID\n       "
+"     , ROW_NUMBER() OVER (PARTITION BY PROC.PERSONAS_ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CUPS CU \n    INNER J"
+"OIN RCA_CUPSOLICITADOS CUPS ON CUPS.CUPS_ID = CU.ID\n    INNER JOIN RCA_RESULTADOSCUPS R ON R.CUPSOLICITADOS_ID = CUPS.I"
+"D\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = CUPS.INFGENERAL_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PR"
+"OC.ID = INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n    WHERE CU.CODIGO"
+" = '904903'\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND TRUNC(( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')- PER.FECHA_NACIMIENTO)/365) BETWEEN 0 AND 2\n) WHERE R = 1  ";
		    

		    globalMap.put("tOracleInput_72_QUERY",dbquery_tOracleInput_72);

		    java.sql.ResultSet rs_tOracleInput_72 = null;

		    try {
		    	rs_tOracleInput_72 = stmt_tOracleInput_72.executeQuery(dbquery_tOracleInput_72);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_72 = rs_tOracleInput_72.getMetaData();
		    	int colQtyInRs_tOracleInput_72 = rsmd_tOracleInput_72.getColumnCount();

		    String tmpContent_tOracleInput_72 = null;
		    
		    
		    while (rs_tOracleInput_72.next()) {
		        nb_line_tOracleInput_72++;
		        
							if(colQtyInRs_tOracleInput_72 < 1) {
								row73.V85 = null;
							} else {
	                         		
        	row73.V85 = routines.system.JDBCUtil.getString(rs_tOracleInput_72, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_72 < 2) {
								row73.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_72.getObject(2) != null) {
						row73.PERSONAS_ID = rs_tOracleInput_72.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_72 begin ] stop
 */
	
	/**
	 * [tOracleInput_72 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_72";
	
	

 


	tos_count_tOracleInput_72++;

/**
 * [tOracleInput_72 main ] stop
 */
	
	/**
	 * [tOracleInput_72 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_72";
	
	

 



/**
 * [tOracleInput_72 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row73 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row73";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row73"
						
						);
					}
					


			   
			   

					row73Struct row73_HashRow = new row73Struct();
		   	   	   
				
				row73_HashRow.V85 = row73.V85;
				
				row73_HashRow.PERSONAS_ID = row73.PERSONAS_ID;
				
			tHash_Lookup_row73.put(row73_HashRow);
			
            




 


	tos_count_tAdvancedHash_row73++;

/**
 * [tAdvancedHash_row73 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row73 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row73";
	
	

 



/**
 * [tAdvancedHash_row73 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row73 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row73";
	
	

 



/**
 * [tAdvancedHash_row73 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_72 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_72";
	
	

 



/**
 * [tOracleInput_72 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_72 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_72";
	
	

}
}finally{
	if (rs_tOracleInput_72 != null) {
		rs_tOracleInput_72.close();
	}
	if (stmt_tOracleInput_72 != null) {
		stmt_tOracleInput_72.close();
	}
}

globalMap.put("tOracleInput_72_NB_LINE",nb_line_tOracleInput_72);
 

ok_Hash.put("tOracleInput_72", true);
end_Hash.put("tOracleInput_72", System.currentTimeMillis());




/**
 * [tOracleInput_72 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row73 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row73";
	
	

tHash_Lookup_row73.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row73");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row73", true);
end_Hash.put("tAdvancedHash_row73", System.currentTimeMillis());




/**
 * [tAdvancedHash_row73 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_72 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_72";
	
	

 



/**
 * [tOracleInput_72 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row73 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row73";
	
	

 



/**
 * [tAdvancedHash_row73 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_72_SUBPROCESS_STATE", 1);
	}
	


public static class row74Struct implements routines.system.IPersistableComparableLookupRow<row74Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V86;

				public String getV86 () {
					return this.V86;
				}

				public Boolean V86IsNullable(){
				    return true;
				}
				public Boolean V86IsKey(){
				    return false;
				}
				public Integer V86Length(){
				    return 1;
				}
				public Integer V86Precision(){
				    return 0;
				}
				public String V86Default(){
				
					return null;
				
				}
				public String V86Comment(){
				
				    return "";
				
				}
				public String V86Pattern(){
				
					return "";
				
				}
				public String V86OriginalDbColumnName(){
				
					return "V86";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row74Struct other = (row74Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row74Struct other) {

		other.V86 = this.V86;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row74Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V86 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V86 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V86, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V86, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V86="+V86);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row74Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_71Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_71_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row74Struct row74 = new row74Struct();




	
	/**
	 * [tAdvancedHash_row74 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row74", false);
		start_Hash.put("tAdvancedHash_row74", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row74";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row74");
					}
				
		int tos_count_tAdvancedHash_row74 = 0;
		

			   		// connection name:row74
			   		// source node:tOracleInput_71 - inputs:(after_tOracleInput_1) outputs:(row74,row74) | target node:tAdvancedHash_row74 - inputs:(row74) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row74 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct> tHash_Lookup_row74 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row74Struct>getLookup(matchingModeEnum_row74);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row74", tHash_Lookup_row74);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row74 begin ] stop
 */



	
	/**
	 * [tOracleInput_71 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_71", false);
		start_Hash.put("tOracleInput_71", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_71";
	
	
		int tos_count_tOracleInput_71 = 0;
		
	


	
		    int nb_line_tOracleInput_71 = 0;
		    java.sql.Connection conn_tOracleInput_71 = null;
				conn_tOracleInput_71 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_71 = false;
				boolean isConnectionWrapped_tOracleInput_71 = !(conn_tOracleInput_71 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_71.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_71 = null;
                if (isConnectionWrapped_tOracleInput_71) {
					unwrappedOraConn_tOracleInput_71 = conn_tOracleInput_71.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_71 != null) {
                        isTimeZoneNull_tOracleInput_71 = (unwrappedOraConn_tOracleInput_71.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_71 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_71).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_71) {
					java.sql.Statement stmtGetTZ_tOracleInput_71 = conn_tOracleInput_71.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_71 = stmtGetTZ_tOracleInput_71.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_71 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_71.next()) {
						sessionTimezone_tOracleInput_71 = rsGetTZ_tOracleInput_71.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_71 && unwrappedOraConn_tOracleInput_71 != null) {
                        unwrappedOraConn_tOracleInput_71.setSessionTimeZone(sessionTimezone_tOracleInput_71);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_71).setSessionTimeZone(sessionTimezone_tOracleInput_71);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_71 = conn_tOracleInput_71.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_71.setFetchSize(1000);


		    String dbquery_tOracleInput_71 = "SELECT \n  DISTINCT CASE WHEN CU.CODIGO = '892901' THEN '1'\n  WHEN CU.CODIGO = '908436' THEN '2'\n  WHEN CU.CODIGO = '"
+"702202' THEN '3'\n  END AS V86,\n  I.PACIENTE AS PERSONAS_ID\nFROM (\nSELECT \nMAX(CUPS.ID) AS ID,\nINF.PACIENTE\nFROM R"
+"CA_INFGENERAL INF \nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN"
+"_PERSONAS GP ON GP.ID=PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS GSX ON GSX.ID=GP.SEXO_ID AND GSX.SIGLA='F'\nINNER JOIN RCA_"
+"CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID AND CU.CODIGO IN ('89"
+"2901','908436','702202','892904','898001','898005')\nINNER JOIN RCA_RESULTADOSCUPS R ON R.CUPSOLICITADOS_ID = CUPS.ID\nW"
+"HERE ROUND(MONTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),GP.FECHA_NACIMIENTO)/12)>10\nAND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY INF.PACIENTE\n)I \nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.ID = I.ID\nINNER JOIN GEN_C"
+"UPS CU ON CU.ID = CUPS.CUPS_ID AND CU.CODIGO IN ('892901','908436','702202','892904','898001','898005')\nINNER JOIN RCA_"
+"RESULTADOSCUPS R ON R.CUPSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = R.TRESULTADOSCUPS_ID";
		    

		    globalMap.put("tOracleInput_71_QUERY",dbquery_tOracleInput_71);

		    java.sql.ResultSet rs_tOracleInput_71 = null;

		    try {
		    	rs_tOracleInput_71 = stmt_tOracleInput_71.executeQuery(dbquery_tOracleInput_71);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_71 = rs_tOracleInput_71.getMetaData();
		    	int colQtyInRs_tOracleInput_71 = rsmd_tOracleInput_71.getColumnCount();

		    String tmpContent_tOracleInput_71 = null;
		    
		    
		    while (rs_tOracleInput_71.next()) {
		        nb_line_tOracleInput_71++;
		        
							if(colQtyInRs_tOracleInput_71 < 1) {
								row74.V86 = null;
							} else {
	                         		
        	row74.V86 = routines.system.JDBCUtil.getString(rs_tOracleInput_71, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_71 < 2) {
								row74.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_71.getObject(2) != null) {
						row74.PERSONAS_ID = rs_tOracleInput_71.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_71 begin ] stop
 */
	
	/**
	 * [tOracleInput_71 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_71";
	
	

 


	tos_count_tOracleInput_71++;

/**
 * [tOracleInput_71 main ] stop
 */
	
	/**
	 * [tOracleInput_71 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_71";
	
	

 



/**
 * [tOracleInput_71 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row74 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row74";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row74"
						
						);
					}
					


			   
			   

					row74Struct row74_HashRow = new row74Struct();
		   	   	   
				
				row74_HashRow.V86 = row74.V86;
				
				row74_HashRow.PERSONAS_ID = row74.PERSONAS_ID;
				
			tHash_Lookup_row74.put(row74_HashRow);
			
            




 


	tos_count_tAdvancedHash_row74++;

/**
 * [tAdvancedHash_row74 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row74 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row74";
	
	

 



/**
 * [tAdvancedHash_row74 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row74 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row74";
	
	

 



/**
 * [tAdvancedHash_row74 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_71 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_71";
	
	

 



/**
 * [tOracleInput_71 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_71 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_71";
	
	

}
}finally{
	if (rs_tOracleInput_71 != null) {
		rs_tOracleInput_71.close();
	}
	if (stmt_tOracleInput_71 != null) {
		stmt_tOracleInput_71.close();
	}
}

globalMap.put("tOracleInput_71_NB_LINE",nb_line_tOracleInput_71);
 

ok_Hash.put("tOracleInput_71", true);
end_Hash.put("tOracleInput_71", System.currentTimeMillis());




/**
 * [tOracleInput_71 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row74 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row74";
	
	

tHash_Lookup_row74.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row74");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row74", true);
end_Hash.put("tAdvancedHash_row74", System.currentTimeMillis());




/**
 * [tAdvancedHash_row74 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_71 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_71";
	
	

 



/**
 * [tOracleInput_71 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row74 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row74";
	
	

 



/**
 * [tAdvancedHash_row74 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_71_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableComparableLookupRow<row75Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V87;

				public String getV87 () {
					return this.V87;
				}

				public Boolean V87IsNullable(){
				    return true;
				}
				public Boolean V87IsKey(){
				    return false;
				}
				public Integer V87Length(){
				    return 10;
				}
				public Integer V87Precision(){
				    return 0;
				}
				public String V87Default(){
				
					return null;
				
				}
				public String V87Comment(){
				
				    return "";
				
				}
				public String V87Pattern(){
				
					return "";
				
				}
				public String V87OriginalDbColumnName(){
				
					return "V87";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row75Struct other = (row75Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row75Struct other) {

		other.V87 = this.V87;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row75Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V87 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V87 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V87, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V87, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V87="+V87);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_70Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_70_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tAdvancedHash_row75 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row75", false);
		start_Hash.put("tAdvancedHash_row75", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row75";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tAdvancedHash_row75 = 0;
		

			   		// connection name:row75
			   		// source node:tOracleInput_70 - inputs:(after_tOracleInput_1) outputs:(row75,row75) | target node:tAdvancedHash_row75 - inputs:(row75) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row75 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row75Struct> tHash_Lookup_row75 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row75Struct>getLookup(matchingModeEnum_row75);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row75", tHash_Lookup_row75);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row75 begin ] stop
 */



	
	/**
	 * [tOracleInput_70 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_70", false);
		start_Hash.put("tOracleInput_70", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_70";
	
	
		int tos_count_tOracleInput_70 = 0;
		
	


	
		    int nb_line_tOracleInput_70 = 0;
		    java.sql.Connection conn_tOracleInput_70 = null;
				conn_tOracleInput_70 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_70 = false;
				boolean isConnectionWrapped_tOracleInput_70 = !(conn_tOracleInput_70 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_70.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_70 = null;
                if (isConnectionWrapped_tOracleInput_70) {
					unwrappedOraConn_tOracleInput_70 = conn_tOracleInput_70.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_70 != null) {
                        isTimeZoneNull_tOracleInput_70 = (unwrappedOraConn_tOracleInput_70.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_70 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_70).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_70) {
					java.sql.Statement stmtGetTZ_tOracleInput_70 = conn_tOracleInput_70.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_70 = stmtGetTZ_tOracleInput_70.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_70 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_70.next()) {
						sessionTimezone_tOracleInput_70 = rsGetTZ_tOracleInput_70.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_70 && unwrappedOraConn_tOracleInput_70 != null) {
                        unwrappedOraConn_tOracleInput_70.setSessionTimeZone(sessionTimezone_tOracleInput_70);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_70).setSessionTimeZone(sessionTimezone_tOracleInput_70);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_70 = conn_tOracleInput_70.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_70.setFetchSize(1000);


		    String dbquery_tOracleInput_70 = "SELECT \nTO_CHAR (MAX(RE.FENTREGA),'YYYY-MM-DD') AS V87,\nPER.ID AS PERSONAS_ID\nFROM RCA_INFGENERAL INF\nINNER JOIN HC"
+"L_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PE"
+"RSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS."
+"INFGENERAL_ID = INF.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.ID\nINNER JOIN GEN_TRESULTADOSC"
+"UPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nWHERE CU.CODIGO = '892901'\nAND"
+" PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')  - PER.FECHA_NACIMIENTO)/365) >= 10\nAND RE.FENTREGA IS NOT NULL\nGROUP BY PER.ID";
		    

		    globalMap.put("tOracleInput_70_QUERY",dbquery_tOracleInput_70);

		    java.sql.ResultSet rs_tOracleInput_70 = null;

		    try {
		    	rs_tOracleInput_70 = stmt_tOracleInput_70.executeQuery(dbquery_tOracleInput_70);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_70 = rs_tOracleInput_70.getMetaData();
		    	int colQtyInRs_tOracleInput_70 = rsmd_tOracleInput_70.getColumnCount();

		    String tmpContent_tOracleInput_70 = null;
		    
		    
		    while (rs_tOracleInput_70.next()) {
		        nb_line_tOracleInput_70++;
		        
							if(colQtyInRs_tOracleInput_70 < 1) {
								row75.V87 = null;
							} else {
	                         		
        	row75.V87 = routines.system.JDBCUtil.getString(rs_tOracleInput_70, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_70 < 2) {
								row75.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_70.getObject(2) != null) {
						row75.PERSONAS_ID = rs_tOracleInput_70.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_70 begin ] stop
 */
	
	/**
	 * [tOracleInput_70 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_70";
	
	

 


	tos_count_tOracleInput_70++;

/**
 * [tOracleInput_70 main ] stop
 */
	
	/**
	 * [tOracleInput_70 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_70";
	
	

 



/**
 * [tOracleInput_70 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row75 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row75";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					


			   
			   

					row75Struct row75_HashRow = new row75Struct();
		   	   	   
				
				row75_HashRow.V87 = row75.V87;
				
				row75_HashRow.PERSONAS_ID = row75.PERSONAS_ID;
				
			tHash_Lookup_row75.put(row75_HashRow);
			
            




 


	tos_count_tAdvancedHash_row75++;

/**
 * [tAdvancedHash_row75 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row75 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row75";
	
	

 



/**
 * [tAdvancedHash_row75 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row75 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row75";
	
	

 



/**
 * [tAdvancedHash_row75 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_70 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_70";
	
	

 



/**
 * [tOracleInput_70 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_70 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_70";
	
	

}
}finally{
	if (rs_tOracleInput_70 != null) {
		rs_tOracleInput_70.close();
	}
	if (stmt_tOracleInput_70 != null) {
		stmt_tOracleInput_70.close();
	}
}

globalMap.put("tOracleInput_70_NB_LINE",nb_line_tOracleInput_70);
 

ok_Hash.put("tOracleInput_70", true);
end_Hash.put("tOracleInput_70", System.currentTimeMillis());




/**
 * [tOracleInput_70 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row75 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row75";
	
	

tHash_Lookup_row75.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row75", true);
end_Hash.put("tAdvancedHash_row75", System.currentTimeMillis());




/**
 * [tAdvancedHash_row75 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_70 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_70";
	
	

 



/**
 * [tOracleInput_70 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row75 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row75";
	
	

 



/**
 * [tAdvancedHash_row75 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_70_SUBPROCESS_STATE", 1);
	}
	


public static class row76Struct implements routines.system.IPersistableComparableLookupRow<row76Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V88;

				public String getV88 () {
					return this.V88;
				}

				public Boolean V88IsNullable(){
				    return true;
				}
				public Boolean V88IsKey(){
				    return false;
				}
				public Integer V88Length(){
				    return 3;
				}
				public Integer V88Precision(){
				    return 0;
				}
				public String V88Default(){
				
					return null;
				
				}
				public String V88Comment(){
				
				    return "";
				
				}
				public String V88Pattern(){
				
					return "";
				
				}
				public String V88OriginalDbColumnName(){
				
					return "V88";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return true;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row76Struct other = (row76Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row76Struct other) {

		other.V88 = this.V88;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row76Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V88 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V88 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V88, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V88, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V88="+V88);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_69Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_69_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();




	
	/**
	 * [tAdvancedHash_row76 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row76", false);
		start_Hash.put("tAdvancedHash_row76", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row76";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tAdvancedHash_row76 = 0;
		

			   		// connection name:row76
			   		// source node:tOracleInput_69 - inputs:(after_tOracleInput_1) outputs:(row76,row76) | target node:tAdvancedHash_row76 - inputs:(row76) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row76 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row76Struct> tHash_Lookup_row76 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row76Struct>getLookup(matchingModeEnum_row76);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row76", tHash_Lookup_row76);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row76 begin ] stop
 */



	
	/**
	 * [tOracleInput_69 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_69", false);
		start_Hash.put("tOracleInput_69", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_69";
	
	
		int tos_count_tOracleInput_69 = 0;
		
	


	
		    int nb_line_tOracleInput_69 = 0;
		    java.sql.Connection conn_tOracleInput_69 = null;
				conn_tOracleInput_69 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_69 = false;
				boolean isConnectionWrapped_tOracleInput_69 = !(conn_tOracleInput_69 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_69.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_69 = null;
                if (isConnectionWrapped_tOracleInput_69) {
					unwrappedOraConn_tOracleInput_69 = conn_tOracleInput_69.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_69 != null) {
                        isTimeZoneNull_tOracleInput_69 = (unwrappedOraConn_tOracleInput_69.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_69 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_69).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_69) {
					java.sql.Statement stmtGetTZ_tOracleInput_69 = conn_tOracleInput_69.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_69 = stmtGetTZ_tOracleInput_69.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_69 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_69.next()) {
						sessionTimezone_tOracleInput_69 = rsGetTZ_tOracleInput_69.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_69 && unwrappedOraConn_tOracleInput_69 != null) {
                        unwrappedOraConn_tOracleInput_69.setSessionTimeZone(sessionTimezone_tOracleInput_69);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_69).setSessionTimeZone(sessionTimezone_tOracleInput_69);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_69 = conn_tOracleInput_69.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_69.setFetchSize(1000);


		    String dbquery_tOracleInput_69 = "SELECT\nDISTINCT CASE WHEN I.SIGLA IN ('AGUSAEU','ASCUS') THEN '1'\nWHEN I.SIGLA = 'ACECE' THEN '2'\nWHEN I.SIGLA = 'NI"
+"CI' THEN '3'\nWHEN I.SIGLA IN ('NICII','NICIII') THEN '4'\nWHEN I.SIGLA = 'ONM' THEN '16'\nWHEN I.SIGLA = 'LEIAGCE' THEN"
+" '6'\nWHEN I.SIGLA = 'AGUSAEM' THEN '15'\nWHEN I.SIGLA = 'NoN' THEN '17'\nWHEN I.SIGLA = 'AGUSAEC' THEN '14'\nWHEN I.SIG"
+"LA = 'AGUSASNE' THEN '13'\nWHEN I.SIGLA = 'LEIAGCG' THEN '12'\nWHEN I.SIGLA = 'IND' THEN '18'\nWHEN I.SIGLA = 'CEABPPM' "
+"THEN '8'\nWHEN I.SIGLA = 'CCBI' THEN '9'\nWHEN I.SIGLA = 'CCBCR' THEN '7'\nELSE '999' END AS V88,\nI.ID AS PERSONAS_ID\n"
+"FROM (\nSELECT \n  MAX(RE.ID) AS ID,\n  INF.PACIENTE,\n  TR.SIGLA \nFROM RCA_INFGENERAL INF \nINNER JOIN HCL_PROCESOSASI"
+"STENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID\nINNER JOIN GEN_PERSONAS PER ON PER.ID=PROC.PERSONAS_ID\nINNER"
+" JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F' \nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID ="
+" INF.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID "
+"= RE.TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nWHERE CU.CODIGO IN ('892901')\nAND PROC.FFINAL "
+"BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) >= 10\nGROUP BY INF.PACIENTE, TR.SIGLA \n)I \nINNER JOIN RCA_RESULTADOSCUP"
+"S R ON R.ID=I.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = R.TRESULTADOSCUPS_ID";
		    

		    globalMap.put("tOracleInput_69_QUERY",dbquery_tOracleInput_69);

		    java.sql.ResultSet rs_tOracleInput_69 = null;

		    try {
		    	rs_tOracleInput_69 = stmt_tOracleInput_69.executeQuery(dbquery_tOracleInput_69);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_69 = rs_tOracleInput_69.getMetaData();
		    	int colQtyInRs_tOracleInput_69 = rsmd_tOracleInput_69.getColumnCount();

		    String tmpContent_tOracleInput_69 = null;
		    
		    
		    while (rs_tOracleInput_69.next()) {
		        nb_line_tOracleInput_69++;
		        
							if(colQtyInRs_tOracleInput_69 < 1) {
								row76.V88 = null;
							} else {
	                         		
        	row76.V88 = routines.system.JDBCUtil.getString(rs_tOracleInput_69, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_69 < 2) {
								row76.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_69.getObject(2) != null) {
						row76.PERSONAS_ID = rs_tOracleInput_69.getBigDecimal(2);
					} else {
				
						row76.PERSONAS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_69 begin ] stop
 */
	
	/**
	 * [tOracleInput_69 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_69";
	
	

 


	tos_count_tOracleInput_69++;

/**
 * [tOracleInput_69 main ] stop
 */
	
	/**
	 * [tOracleInput_69 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_69";
	
	

 



/**
 * [tOracleInput_69 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row76 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row76";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					


			   
			   

					row76Struct row76_HashRow = new row76Struct();
		   	   	   
				
				row76_HashRow.V88 = row76.V88;
				
				row76_HashRow.PERSONAS_ID = row76.PERSONAS_ID;
				
			tHash_Lookup_row76.put(row76_HashRow);
			
            




 


	tos_count_tAdvancedHash_row76++;

/**
 * [tAdvancedHash_row76 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row76 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row76";
	
	

 



/**
 * [tAdvancedHash_row76 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row76 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row76";
	
	

 



/**
 * [tAdvancedHash_row76 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_69 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_69";
	
	

 



/**
 * [tOracleInput_69 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_69 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_69";
	
	

}
}finally{
	if (rs_tOracleInput_69 != null) {
		rs_tOracleInput_69.close();
	}
	if (stmt_tOracleInput_69 != null) {
		stmt_tOracleInput_69.close();
	}
}

globalMap.put("tOracleInput_69_NB_LINE",nb_line_tOracleInput_69);
 

ok_Hash.put("tOracleInput_69", true);
end_Hash.put("tOracleInput_69", System.currentTimeMillis());




/**
 * [tOracleInput_69 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row76 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row76";
	
	

tHash_Lookup_row76.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row76", true);
end_Hash.put("tAdvancedHash_row76", System.currentTimeMillis());




/**
 * [tAdvancedHash_row76 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_69 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_69";
	
	

 



/**
 * [tOracleInput_69 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row76 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row76";
	
	

 



/**
 * [tAdvancedHash_row76 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_69_SUBPROCESS_STATE", 1);
	}
	


public static class row77Struct implements routines.system.IPersistableComparableLookupRow<row77Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V89;

				public String getV89 () {
					return this.V89;
				}

				public Boolean V89IsNullable(){
				    return true;
				}
				public Boolean V89IsKey(){
				    return false;
				}
				public Integer V89Length(){
				    return 3;
				}
				public Integer V89Precision(){
				    return 0;
				}
				public String V89Default(){
				
					return null;
				
				}
				public String V89Comment(){
				
				    return "";
				
				}
				public String V89Pattern(){
				
					return "";
				
				}
				public String V89OriginalDbColumnName(){
				
					return "V89";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row77Struct other = (row77Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row77Struct other) {

		other.V89 = this.V89;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row77Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V89 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V89 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V89, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V89, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V89="+V89);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row77Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_68Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_68_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row77Struct row77 = new row77Struct();




	
	/**
	 * [tAdvancedHash_row77 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row77", false);
		start_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row77";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row77");
					}
				
		int tos_count_tAdvancedHash_row77 = 0;
		

			   		// connection name:row77
			   		// source node:tOracleInput_68 - inputs:(after_tOracleInput_1) outputs:(row77,row77) | target node:tAdvancedHash_row77 - inputs:(row77) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row77 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row77Struct>getLookup(matchingModeEnum_row77);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row77", tHash_Lookup_row77);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row77 begin ] stop
 */



	
	/**
	 * [tOracleInput_68 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_68", false);
		start_Hash.put("tOracleInput_68", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_68";
	
	
		int tos_count_tOracleInput_68 = 0;
		
	


	
		    int nb_line_tOracleInput_68 = 0;
		    java.sql.Connection conn_tOracleInput_68 = null;
				conn_tOracleInput_68 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_68 = false;
				boolean isConnectionWrapped_tOracleInput_68 = !(conn_tOracleInput_68 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_68.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_68 = null;
                if (isConnectionWrapped_tOracleInput_68) {
					unwrappedOraConn_tOracleInput_68 = conn_tOracleInput_68.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_68 != null) {
                        isTimeZoneNull_tOracleInput_68 = (unwrappedOraConn_tOracleInput_68.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_68 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_68).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_68) {
					java.sql.Statement stmtGetTZ_tOracleInput_68 = conn_tOracleInput_68.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_68 = stmtGetTZ_tOracleInput_68.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_68 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_68.next()) {
						sessionTimezone_tOracleInput_68 = rsGetTZ_tOracleInput_68.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_68 && unwrappedOraConn_tOracleInput_68 != null) {
                        unwrappedOraConn_tOracleInput_68.setSessionTimeZone(sessionTimezone_tOracleInput_68);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_68).setSessionTimeZone(sessionTimezone_tOracleInput_68);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_68 = conn_tOracleInput_68.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_68.setFetchSize(1000);


		    String dbquery_tOracleInput_68 = "SELECT\n  DISTINCT \n  '999' AS V89,\nPER.ID AS PERSONAS_ID\nFROM RCA_INFGENERAL INF \nINNER JOIN HCL_PROCESOSASISTENCI"
+"ALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JO"
+"IN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF"
+".ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE"
+".TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nWHERE CU.CODIGO IN ('892901')\nAND PROC.FFINAL BETW"
+"EEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 10";
		    

		    globalMap.put("tOracleInput_68_QUERY",dbquery_tOracleInput_68);

		    java.sql.ResultSet rs_tOracleInput_68 = null;

		    try {
		    	rs_tOracleInput_68 = stmt_tOracleInput_68.executeQuery(dbquery_tOracleInput_68);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_68 = rs_tOracleInput_68.getMetaData();
		    	int colQtyInRs_tOracleInput_68 = rsmd_tOracleInput_68.getColumnCount();

		    String tmpContent_tOracleInput_68 = null;
		    
		    
		    while (rs_tOracleInput_68.next()) {
		        nb_line_tOracleInput_68++;
		        
							if(colQtyInRs_tOracleInput_68 < 1) {
								row77.V89 = null;
							} else {
	                         		
        	row77.V89 = routines.system.JDBCUtil.getString(rs_tOracleInput_68, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_68 < 2) {
								row77.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_68.getObject(2) != null) {
						row77.PERSONAS_ID = rs_tOracleInput_68.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_68 begin ] stop
 */
	
	/**
	 * [tOracleInput_68 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_68";
	
	

 


	tos_count_tOracleInput_68++;

/**
 * [tOracleInput_68 main ] stop
 */
	
	/**
	 * [tOracleInput_68 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_68";
	
	

 



/**
 * [tOracleInput_68 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row77"
						
						);
					}
					


			   
			   

					row77Struct row77_HashRow = new row77Struct();
		   	   	   
				
				row77_HashRow.V89 = row77.V89;
				
				row77_HashRow.PERSONAS_ID = row77.PERSONAS_ID;
				
			tHash_Lookup_row77.put(row77_HashRow);
			
            




 


	tos_count_tAdvancedHash_row77++;

/**
 * [tAdvancedHash_row77 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row77 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row77 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_68 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_68";
	
	

 



/**
 * [tOracleInput_68 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_68 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_68";
	
	

}
}finally{
	if (rs_tOracleInput_68 != null) {
		rs_tOracleInput_68.close();
	}
	if (stmt_tOracleInput_68 != null) {
		stmt_tOracleInput_68.close();
	}
}

globalMap.put("tOracleInput_68_NB_LINE",nb_line_tOracleInput_68);
 

ok_Hash.put("tOracleInput_68", true);
end_Hash.put("tOracleInput_68", System.currentTimeMillis());




/**
 * [tOracleInput_68 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

tHash_Lookup_row77.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row77");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row77", true);
end_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());




/**
 * [tAdvancedHash_row77 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_68 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_68";
	
	

 



/**
 * [tOracleInput_68 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row77 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row77";
	
	

 



/**
 * [tAdvancedHash_row77 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_68_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableComparableLookupRow<row78Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V90;

				public String getV90 () {
					return this.V90;
				}

				public Boolean V90IsNullable(){
				    return true;
				}
				public Boolean V90IsKey(){
				    return false;
				}
				public Integer V90Length(){
				    return 100;
				}
				public Integer V90Precision(){
				    return 0;
				}
				public String V90Default(){
				
					return null;
				
				}
				public String V90Comment(){
				
				    return "";
				
				}
				public String V90Pattern(){
				
					return "";
				
				}
				public String V90OriginalDbColumnName(){
				
					return "V90";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row78Struct other = (row78Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row78Struct other) {

		other.V90 = this.V90;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row78Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V90 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V90 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V90, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V90, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V90="+V90);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_60Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_60_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row78Struct row78 = new row78Struct();




	
	/**
	 * [tAdvancedHash_row78 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row78", false);
		start_Hash.put("tAdvancedHash_row78", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row78";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tAdvancedHash_row78 = 0;
		

			   		// connection name:row78
			   		// source node:tOracleInput_60 - inputs:(after_tOracleInput_1) outputs:(row78,row78) | target node:tAdvancedHash_row78 - inputs:(row78) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row78 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row78Struct> tHash_Lookup_row78 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row78Struct>getLookup(matchingModeEnum_row78);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row78", tHash_Lookup_row78);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row78 begin ] stop
 */



	
	/**
	 * [tOracleInput_60 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_60", false);
		start_Hash.put("tOracleInput_60", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_60";
	
	
		int tos_count_tOracleInput_60 = 0;
		
	


	
		    int nb_line_tOracleInput_60 = 0;
		    java.sql.Connection conn_tOracleInput_60 = null;
				conn_tOracleInput_60 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_60 = false;
				boolean isConnectionWrapped_tOracleInput_60 = !(conn_tOracleInput_60 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_60.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_60 = null;
                if (isConnectionWrapped_tOracleInput_60) {
					unwrappedOraConn_tOracleInput_60 = conn_tOracleInput_60.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_60 != null) {
                        isTimeZoneNull_tOracleInput_60 = (unwrappedOraConn_tOracleInput_60.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_60 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_60).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_60) {
					java.sql.Statement stmtGetTZ_tOracleInput_60 = conn_tOracleInput_60.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_60 = stmtGetTZ_tOracleInput_60.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_60 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_60.next()) {
						sessionTimezone_tOracleInput_60 = rsGetTZ_tOracleInput_60.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_60 && unwrappedOraConn_tOracleInput_60 != null) {
                        unwrappedOraConn_tOracleInput_60.setSessionTimeZone(sessionTimezone_tOracleInput_60);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_60).setSessionTimeZone(sessionTimezone_tOracleInput_60);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_60 = conn_tOracleInput_60.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_60.setFetchSize(1000);


		    String dbquery_tOracleInput_60 = "SELECT \n  UORG.CODIGO AS V90,\n  R.PACIENTE AS PERSONAS_ID\nFROM\n(\nSELECT \nMAX(RE.ID) AS ID,\nINF.PACIENTE\nFROM RC"
+"A_INFGENERAL INF\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_P"
+"ERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN R"
+"CA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RE"
+"SULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.ID\nWHERE CU.CODIGO = '892901'\nAND RE.FTOMA BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((PROC.FINICIAL - PER.FECHA_NACIMIENTO)/365) > 10\nGROUP BY INF.PACIENTE\n)R\nINNER JOIN "
+"RCA_RESULTADOSCUPS RE ON RE.ID=R.ID\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.ID=RE.CUPSOLICITADOS_ID\nINNER JOIN GEN_"
+"UORG UORG ON UORG.ID = CUPS.UORG_ID";
		    

		    globalMap.put("tOracleInput_60_QUERY",dbquery_tOracleInput_60);

		    java.sql.ResultSet rs_tOracleInput_60 = null;

		    try {
		    	rs_tOracleInput_60 = stmt_tOracleInput_60.executeQuery(dbquery_tOracleInput_60);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_60 = rs_tOracleInput_60.getMetaData();
		    	int colQtyInRs_tOracleInput_60 = rsmd_tOracleInput_60.getColumnCount();

		    String tmpContent_tOracleInput_60 = null;
		    
		    
		    while (rs_tOracleInput_60.next()) {
		        nb_line_tOracleInput_60++;
		        
							if(colQtyInRs_tOracleInput_60 < 1) {
								row78.V90 = null;
							} else {
	                         		
        	row78.V90 = routines.system.JDBCUtil.getString(rs_tOracleInput_60, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_60 < 2) {
								row78.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_60.getObject(2) != null) {
						row78.PERSONAS_ID = rs_tOracleInput_60.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_60 begin ] stop
 */
	
	/**
	 * [tOracleInput_60 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_60";
	
	

 


	tos_count_tOracleInput_60++;

/**
 * [tOracleInput_60 main ] stop
 */
	
	/**
	 * [tOracleInput_60 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_60";
	
	

 



/**
 * [tOracleInput_60 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row78 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row78";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					


			   
			   

					row78Struct row78_HashRow = new row78Struct();
		   	   	   
				
				row78_HashRow.V90 = row78.V90;
				
				row78_HashRow.PERSONAS_ID = row78.PERSONAS_ID;
				
			tHash_Lookup_row78.put(row78_HashRow);
			
            




 


	tos_count_tAdvancedHash_row78++;

/**
 * [tAdvancedHash_row78 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row78 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row78";
	
	

 



/**
 * [tAdvancedHash_row78 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row78 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row78";
	
	

 



/**
 * [tAdvancedHash_row78 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_60 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_60";
	
	

 



/**
 * [tOracleInput_60 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_60 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_60";
	
	

}
}finally{
	if (rs_tOracleInput_60 != null) {
		rs_tOracleInput_60.close();
	}
	if (stmt_tOracleInput_60 != null) {
		stmt_tOracleInput_60.close();
	}
}

globalMap.put("tOracleInput_60_NB_LINE",nb_line_tOracleInput_60);
 

ok_Hash.put("tOracleInput_60", true);
end_Hash.put("tOracleInput_60", System.currentTimeMillis());




/**
 * [tOracleInput_60 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row78 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row78";
	
	

tHash_Lookup_row78.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row78", true);
end_Hash.put("tAdvancedHash_row78", System.currentTimeMillis());




/**
 * [tAdvancedHash_row78 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_60 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_60";
	
	

 



/**
 * [tOracleInput_60 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row78 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row78";
	
	

 



/**
 * [tAdvancedHash_row78 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_60_SUBPROCESS_STATE", 1);
	}
	


public static class row79Struct implements routines.system.IPersistableComparableLookupRow<row79Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V91;

				public String getV91 () {
					return this.V91;
				}

				public Boolean V91IsNullable(){
				    return true;
				}
				public Boolean V91IsKey(){
				    return false;
				}
				public Integer V91Length(){
				    return null;
				}
				public Integer V91Precision(){
				    return null;
				}
				public String V91Default(){
				
					return null;
				
				}
				public String V91Comment(){
				
				    return "";
				
				}
				public String V91Pattern(){
				
					return "";
				
				}
				public String V91OriginalDbColumnName(){
				
					return "V91";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row79Struct other = (row79Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row79Struct other) {

		other.V91 = this.V91;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row79Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V91 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V91 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V91, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V91, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V91="+V91);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row79Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_61Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_61_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row79Struct row79 = new row79Struct();




	
	/**
	 * [tAdvancedHash_row79 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row79", false);
		start_Hash.put("tAdvancedHash_row79", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row79";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row79");
					}
				
		int tos_count_tAdvancedHash_row79 = 0;
		

			   		// connection name:row79
			   		// source node:tOracleInput_61 - inputs:(after_tOracleInput_1) outputs:(row79,row79) | target node:tAdvancedHash_row79 - inputs:(row79) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row79 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row79Struct> tHash_Lookup_row79 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row79Struct>getLookup(matchingModeEnum_row79);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row79", tHash_Lookup_row79);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row79 begin ] stop
 */



	
	/**
	 * [tOracleInput_61 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_61", false);
		start_Hash.put("tOracleInput_61", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_61";
	
	
		int tos_count_tOracleInput_61 = 0;
		
	


	
		    int nb_line_tOracleInput_61 = 0;
		    java.sql.Connection conn_tOracleInput_61 = null;
				conn_tOracleInput_61 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_61 = false;
				boolean isConnectionWrapped_tOracleInput_61 = !(conn_tOracleInput_61 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_61.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_61 = null;
                if (isConnectionWrapped_tOracleInput_61) {
					unwrappedOraConn_tOracleInput_61 = conn_tOracleInput_61.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_61 != null) {
                        isTimeZoneNull_tOracleInput_61 = (unwrappedOraConn_tOracleInput_61.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_61 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_61).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_61) {
					java.sql.Statement stmtGetTZ_tOracleInput_61 = conn_tOracleInput_61.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_61 = stmtGetTZ_tOracleInput_61.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_61 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_61.next()) {
						sessionTimezone_tOracleInput_61 = rsGetTZ_tOracleInput_61.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_61 && unwrappedOraConn_tOracleInput_61 != null) {
                        unwrappedOraConn_tOracleInput_61.setSessionTimeZone(sessionTimezone_tOracleInput_61);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_61).setSessionTimeZone(sessionTimezone_tOracleInput_61);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_61 = conn_tOracleInput_61.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_61.setFetchSize(1000);


		    String dbquery_tOracleInput_61 = "SELECT    V91\n        , PERSONAS_ID\nFROM (\n    SELECT    TO_CHAR ( PA.FFINAL, 'YYYY-MM-DD') AS V91\n            , PA"
+".PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CUP"
+"S CU \n    INNER JOIN RCA_CUPSOLICITADOS RCS ON RCS.CUPS_ID = CU.ID\n    INNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLIC"
+"ITADOS_ID = RCS.ID\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = RCS.INFGENERAL_ID\n    INNER JOIN HCL_PROCESOSASISTENC"
+"IALES PA ON PA.ID = INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER "
+"JOIN GEN_SEXOS SEX ON SEX.ID = GP.SEXO_ID \n    WHERE CU.CODIGO IN ('702203','702201','702110', '702200')\n      AND RCS"
+".ESTREGISTRO_ID = 1\n      AND RE.ESTREGISTRO_ID = 1\n      AND INF.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1"
+"\n      AND SEX.SIGLA = 'F'\n      AND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - GP.FECHA_NACIMIENTO)/365) > 10\n      AND TRUNC(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                               AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_61_QUERY",dbquery_tOracleInput_61);

		    java.sql.ResultSet rs_tOracleInput_61 = null;

		    try {
		    	rs_tOracleInput_61 = stmt_tOracleInput_61.executeQuery(dbquery_tOracleInput_61);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_61 = rs_tOracleInput_61.getMetaData();
		    	int colQtyInRs_tOracleInput_61 = rsmd_tOracleInput_61.getColumnCount();

		    String tmpContent_tOracleInput_61 = null;
		    
		    
		    while (rs_tOracleInput_61.next()) {
		        nb_line_tOracleInput_61++;
		        
							if(colQtyInRs_tOracleInput_61 < 1) {
								row79.V91 = null;
							} else {
	                         		
        	row79.V91 = routines.system.JDBCUtil.getString(rs_tOracleInput_61, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_61 < 2) {
								row79.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_61.getObject(2) != null) {
						row79.PERSONAS_ID = rs_tOracleInput_61.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_61 begin ] stop
 */
	
	/**
	 * [tOracleInput_61 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_61";
	
	

 


	tos_count_tOracleInput_61++;

/**
 * [tOracleInput_61 main ] stop
 */
	
	/**
	 * [tOracleInput_61 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_61";
	
	

 



/**
 * [tOracleInput_61 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row79 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row79";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row79"
						
						);
					}
					


			   
			   

					row79Struct row79_HashRow = new row79Struct();
		   	   	   
				
				row79_HashRow.V91 = row79.V91;
				
				row79_HashRow.PERSONAS_ID = row79.PERSONAS_ID;
				
			tHash_Lookup_row79.put(row79_HashRow);
			
            




 


	tos_count_tAdvancedHash_row79++;

/**
 * [tAdvancedHash_row79 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row79 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row79";
	
	

 



/**
 * [tAdvancedHash_row79 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row79 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row79";
	
	

 



/**
 * [tAdvancedHash_row79 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_61 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_61";
	
	

 



/**
 * [tOracleInput_61 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_61 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_61";
	
	

}
}finally{
	if (rs_tOracleInput_61 != null) {
		rs_tOracleInput_61.close();
	}
	if (stmt_tOracleInput_61 != null) {
		stmt_tOracleInput_61.close();
	}
}

globalMap.put("tOracleInput_61_NB_LINE",nb_line_tOracleInput_61);
 

ok_Hash.put("tOracleInput_61", true);
end_Hash.put("tOracleInput_61", System.currentTimeMillis());




/**
 * [tOracleInput_61 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row79 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row79";
	
	

tHash_Lookup_row79.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row79");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row79", true);
end_Hash.put("tAdvancedHash_row79", System.currentTimeMillis());




/**
 * [tAdvancedHash_row79 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_61 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_61";
	
	

 



/**
 * [tOracleInput_61 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row79 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row79";
	
	

 



/**
 * [tAdvancedHash_row79 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_61_SUBPROCESS_STATE", 1);
	}
	


public static class row80Struct implements routines.system.IPersistableComparableLookupRow<row80Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V92;

				public String getV92 () {
					return this.V92;
				}

				public Boolean V92IsNullable(){
				    return true;
				}
				public Boolean V92IsKey(){
				    return false;
				}
				public Integer V92Length(){
				    return 100;
				}
				public Integer V92Precision(){
				    return 0;
				}
				public String V92Default(){
				
					return null;
				
				}
				public String V92Comment(){
				
				    return "";
				
				}
				public String V92Pattern(){
				
					return "";
				
				}
				public String V92OriginalDbColumnName(){
				
					return "V92";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row80Struct other = (row80Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row80Struct other) {

		other.V92 = this.V92;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row80Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V92 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V92 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V92, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V92, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V92="+V92);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row80Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_62Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_62_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row80Struct row80 = new row80Struct();




	
	/**
	 * [tAdvancedHash_row80 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row80", false);
		start_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row80";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row80");
					}
				
		int tos_count_tAdvancedHash_row80 = 0;
		

			   		// connection name:row80
			   		// source node:tOracleInput_62 - inputs:(after_tOracleInput_1) outputs:(row80,row80) | target node:tAdvancedHash_row80 - inputs:(row80) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row80 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row80Struct>getLookup(matchingModeEnum_row80);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row80", tHash_Lookup_row80);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row80 begin ] stop
 */



	
	/**
	 * [tOracleInput_62 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_62", false);
		start_Hash.put("tOracleInput_62", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_62";
	
	
		int tos_count_tOracleInput_62 = 0;
		
	


	
		    int nb_line_tOracleInput_62 = 0;
		    java.sql.Connection conn_tOracleInput_62 = null;
				conn_tOracleInput_62 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_62 = false;
				boolean isConnectionWrapped_tOracleInput_62 = !(conn_tOracleInput_62 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_62.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_62 = null;
                if (isConnectionWrapped_tOracleInput_62) {
					unwrappedOraConn_tOracleInput_62 = conn_tOracleInput_62.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_62 != null) {
                        isTimeZoneNull_tOracleInput_62 = (unwrappedOraConn_tOracleInput_62.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_62 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_62).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_62) {
					java.sql.Statement stmtGetTZ_tOracleInput_62 = conn_tOracleInput_62.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_62 = stmtGetTZ_tOracleInput_62.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_62 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_62.next()) {
						sessionTimezone_tOracleInput_62 = rsGetTZ_tOracleInput_62.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_62 && unwrappedOraConn_tOracleInput_62 != null) {
                        unwrappedOraConn_tOracleInput_62.setSessionTimeZone(sessionTimezone_tOracleInput_62);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_62).setSessionTimeZone(sessionTimezone_tOracleInput_62);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_62 = conn_tOracleInput_62.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_62.setFetchSize(1000);


		    String dbquery_tOracleInput_62 = "SELECT    V92\n        , PERSONAS_ID\nFROM (\n    SELECT    CU.CODIGO AS V92\n            , PA.PERSONAS_ID \n          "
+"  , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CUPS CU \n    INNER JOIN RCA"
+"_CUPSOLICITADOS RCS ON RCS.CUPS_ID = CU.ID\n    INNER JOIN GEN_UORG GU ON GU.ID = RCS.UORG_ID\n    INNER JOIN RCA_RESULT"
+"ADOSCUPS RE ON RE.CUPSOLICITADOS_ID = RCS.ID\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = RCS.INFGENERAL_ID\n    INNER"
+" JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = P"
+"A.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = GP.SEXO_ID \n    WHERE CU.CODIGO = '702203'\n      AND RCS.ESTR"
+"EGISTRO_ID = 1\n      AND RE.ESTREGISTRO_ID = 1\n      AND INF.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n    "
+"  AND SEX.SIGLA = 'F'\n      AND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - GP.FECHA_NACIMIENTO)/365) > 10\n      AND TRUNC(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                               AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_62_QUERY",dbquery_tOracleInput_62);

		    java.sql.ResultSet rs_tOracleInput_62 = null;

		    try {
		    	rs_tOracleInput_62 = stmt_tOracleInput_62.executeQuery(dbquery_tOracleInput_62);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_62 = rs_tOracleInput_62.getMetaData();
		    	int colQtyInRs_tOracleInput_62 = rsmd_tOracleInput_62.getColumnCount();

		    String tmpContent_tOracleInput_62 = null;
		    
		    
		    while (rs_tOracleInput_62.next()) {
		        nb_line_tOracleInput_62++;
		        
							if(colQtyInRs_tOracleInput_62 < 1) {
								row80.V92 = null;
							} else {
	                         		
        	row80.V92 = routines.system.JDBCUtil.getString(rs_tOracleInput_62, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_62 < 2) {
								row80.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_62.getObject(2) != null) {
						row80.PERSONAS_ID = rs_tOracleInput_62.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_62 begin ] stop
 */
	
	/**
	 * [tOracleInput_62 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_62";
	
	

 


	tos_count_tOracleInput_62++;

/**
 * [tOracleInput_62 main ] stop
 */
	
	/**
	 * [tOracleInput_62 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_62";
	
	

 



/**
 * [tOracleInput_62 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row80"
						
						);
					}
					


			   
			   

					row80Struct row80_HashRow = new row80Struct();
		   	   	   
				
				row80_HashRow.V92 = row80.V92;
				
				row80_HashRow.PERSONAS_ID = row80.PERSONAS_ID;
				
			tHash_Lookup_row80.put(row80_HashRow);
			
            




 


	tos_count_tAdvancedHash_row80++;

/**
 * [tAdvancedHash_row80 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row80 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row80 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_62 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_62";
	
	

 



/**
 * [tOracleInput_62 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_62 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_62";
	
	

}
}finally{
	if (rs_tOracleInput_62 != null) {
		rs_tOracleInput_62.close();
	}
	if (stmt_tOracleInput_62 != null) {
		stmt_tOracleInput_62.close();
	}
}

globalMap.put("tOracleInput_62_NB_LINE",nb_line_tOracleInput_62);
 

ok_Hash.put("tOracleInput_62", true);
end_Hash.put("tOracleInput_62", System.currentTimeMillis());




/**
 * [tOracleInput_62 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

tHash_Lookup_row80.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row80");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row80", true);
end_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());




/**
 * [tAdvancedHash_row80 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_62 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_62";
	
	

 



/**
 * [tOracleInput_62 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row80 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row80";
	
	

 



/**
 * [tAdvancedHash_row80 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_62_SUBPROCESS_STATE", 1);
	}
	


public static class row81Struct implements routines.system.IPersistableComparableLookupRow<row81Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V93;

				public String getV93 () {
					return this.V93;
				}

				public Boolean V93IsNullable(){
				    return true;
				}
				public Boolean V93IsKey(){
				    return false;
				}
				public Integer V93Length(){
				    return 10;
				}
				public Integer V93Precision(){
				    return 0;
				}
				public String V93Default(){
				
					return null;
				
				}
				public String V93Comment(){
				
				    return "";
				
				}
				public String V93Pattern(){
				
					return "";
				
				}
				public String V93OriginalDbColumnName(){
				
					return "V93";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row81Struct other = (row81Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row81Struct other) {

		other.V93 = this.V93;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row81Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V93 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V93 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V93, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V93, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V93="+V93);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row81Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_63Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_63_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row81Struct row81 = new row81Struct();




	
	/**
	 * [tAdvancedHash_row81 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row81", false);
		start_Hash.put("tAdvancedHash_row81", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row81";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row81");
					}
				
		int tos_count_tAdvancedHash_row81 = 0;
		

			   		// connection name:row81
			   		// source node:tOracleInput_63 - inputs:(after_tOracleInput_1) outputs:(row81,row81) | target node:tAdvancedHash_row81 - inputs:(row81) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row81 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row81Struct> tHash_Lookup_row81 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row81Struct>getLookup(matchingModeEnum_row81);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row81", tHash_Lookup_row81);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row81 begin ] stop
 */



	
	/**
	 * [tOracleInput_63 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_63", false);
		start_Hash.put("tOracleInput_63", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_63";
	
	
		int tos_count_tOracleInput_63 = 0;
		
	


	
		    int nb_line_tOracleInput_63 = 0;
		    java.sql.Connection conn_tOracleInput_63 = null;
				conn_tOracleInput_63 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_63 = false;
				boolean isConnectionWrapped_tOracleInput_63 = !(conn_tOracleInput_63 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_63.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_63 = null;
                if (isConnectionWrapped_tOracleInput_63) {
					unwrappedOraConn_tOracleInput_63 = conn_tOracleInput_63.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_63 != null) {
                        isTimeZoneNull_tOracleInput_63 = (unwrappedOraConn_tOracleInput_63.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_63 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_63).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_63) {
					java.sql.Statement stmtGetTZ_tOracleInput_63 = conn_tOracleInput_63.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_63 = stmtGetTZ_tOracleInput_63.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_63 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_63.next()) {
						sessionTimezone_tOracleInput_63 = rsGetTZ_tOracleInput_63.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_63 && unwrappedOraConn_tOracleInput_63 != null) {
                        unwrappedOraConn_tOracleInput_63.setSessionTimeZone(sessionTimezone_tOracleInput_63);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_63).setSessionTimeZone(sessionTimezone_tOracleInput_63);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_63 = conn_tOracleInput_63.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_63.setFetchSize(1000);


		    String dbquery_tOracleInput_63 = "SELECT    V93\n        , PERSONAS_ID\nFROM (\n    SELECT    TO_CHAR ( PA.FFINAL, 'YYYY-MM-DD') AS V93\n            , PA"
+".PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CUP"
+"S CU \n    INNER JOIN RCA_CUPSOLICITADOS RCS ON RCS.CUPS_ID = CU.ID   \n    INNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSO"
+"LICITADOS_ID = RCS.ID\n	INNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID\n    INNER JOIN RCA_INFGENERA"
+"L INF ON INF.ID = RCS.INFGENERAL_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = INF.PROCESOSASISTENCIALES_ID"
+" \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX ON SEX.ID = GP.SEXO_ID \n    "
+"WHERE CU.CODIGO = '671203'\n      AND RCS.ESTREGISTRO_ID = 1\n      AND RE.ESTREGISTRO_ID = 1\n      AND INF.ESTREGISTRO"
+"_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND SEX.SIGLA = 'F'\n      AND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - GP.FECHA_NACIMIENTO)/365) > 10\n      AND TRUNC(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                               AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_63_QUERY",dbquery_tOracleInput_63);

		    java.sql.ResultSet rs_tOracleInput_63 = null;

		    try {
		    	rs_tOracleInput_63 = stmt_tOracleInput_63.executeQuery(dbquery_tOracleInput_63);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_63 = rs_tOracleInput_63.getMetaData();
		    	int colQtyInRs_tOracleInput_63 = rsmd_tOracleInput_63.getColumnCount();

		    String tmpContent_tOracleInput_63 = null;
		    
		    
		    while (rs_tOracleInput_63.next()) {
		        nb_line_tOracleInput_63++;
		        
							if(colQtyInRs_tOracleInput_63 < 1) {
								row81.V93 = null;
							} else {
	                         		
        	row81.V93 = routines.system.JDBCUtil.getString(rs_tOracleInput_63, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_63 < 2) {
								row81.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_63.getObject(2) != null) {
						row81.PERSONAS_ID = rs_tOracleInput_63.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_63 begin ] stop
 */
	
	/**
	 * [tOracleInput_63 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_63";
	
	

 


	tos_count_tOracleInput_63++;

/**
 * [tOracleInput_63 main ] stop
 */
	
	/**
	 * [tOracleInput_63 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_63";
	
	

 



/**
 * [tOracleInput_63 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row81 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row81";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row81"
						
						);
					}
					


			   
			   

					row81Struct row81_HashRow = new row81Struct();
		   	   	   
				
				row81_HashRow.V93 = row81.V93;
				
				row81_HashRow.PERSONAS_ID = row81.PERSONAS_ID;
				
			tHash_Lookup_row81.put(row81_HashRow);
			
            




 


	tos_count_tAdvancedHash_row81++;

/**
 * [tAdvancedHash_row81 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row81 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row81";
	
	

 



/**
 * [tAdvancedHash_row81 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row81 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row81";
	
	

 



/**
 * [tAdvancedHash_row81 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_63 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_63";
	
	

 



/**
 * [tOracleInput_63 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_63 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_63";
	
	

}
}finally{
	if (rs_tOracleInput_63 != null) {
		rs_tOracleInput_63.close();
	}
	if (stmt_tOracleInput_63 != null) {
		stmt_tOracleInput_63.close();
	}
}

globalMap.put("tOracleInput_63_NB_LINE",nb_line_tOracleInput_63);
 

ok_Hash.put("tOracleInput_63", true);
end_Hash.put("tOracleInput_63", System.currentTimeMillis());




/**
 * [tOracleInput_63 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row81 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row81";
	
	

tHash_Lookup_row81.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row81");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row81", true);
end_Hash.put("tAdvancedHash_row81", System.currentTimeMillis());




/**
 * [tAdvancedHash_row81 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_63 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_63";
	
	

 



/**
 * [tOracleInput_63 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row81 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row81";
	
	

 



/**
 * [tAdvancedHash_row81 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_63_SUBPROCESS_STATE", 1);
	}
	


public static class row82Struct implements routines.system.IPersistableComparableLookupRow<row82Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V94;

				public String getV94 () {
					return this.V94;
				}

				public Boolean V94IsNullable(){
				    return true;
				}
				public Boolean V94IsKey(){
				    return false;
				}
				public Integer V94Length(){
				    return 3;
				}
				public Integer V94Precision(){
				    return 0;
				}
				public String V94Default(){
				
					return null;
				
				}
				public String V94Comment(){
				
				    return "";
				
				}
				public String V94Pattern(){
				
					return "";
				
				}
				public String V94OriginalDbColumnName(){
				
					return "V94";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row82Struct other = (row82Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row82Struct other) {

		other.V94 = this.V94;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row82Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V94 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V94 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V94, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V94, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V94="+V94);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row82Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_64Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_64_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row82Struct row82 = new row82Struct();




	
	/**
	 * [tAdvancedHash_row82 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row82", false);
		start_Hash.put("tAdvancedHash_row82", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row82";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row82");
					}
				
		int tos_count_tAdvancedHash_row82 = 0;
		

			   		// connection name:row82
			   		// source node:tOracleInput_64 - inputs:(after_tOracleInput_1) outputs:(row82,row82) | target node:tAdvancedHash_row82 - inputs:(row82) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row82 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row82Struct> tHash_Lookup_row82 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row82Struct>getLookup(matchingModeEnum_row82);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row82", tHash_Lookup_row82);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row82 begin ] stop
 */



	
	/**
	 * [tOracleInput_64 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_64", false);
		start_Hash.put("tOracleInput_64", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_64";
	
	
		int tos_count_tOracleInput_64 = 0;
		
	


	
		    int nb_line_tOracleInput_64 = 0;
		    java.sql.Connection conn_tOracleInput_64 = null;
				conn_tOracleInput_64 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_64 = false;
				boolean isConnectionWrapped_tOracleInput_64 = !(conn_tOracleInput_64 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_64.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_64 = null;
                if (isConnectionWrapped_tOracleInput_64) {
					unwrappedOraConn_tOracleInput_64 = conn_tOracleInput_64.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_64 != null) {
                        isTimeZoneNull_tOracleInput_64 = (unwrappedOraConn_tOracleInput_64.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_64 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_64).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_64) {
					java.sql.Statement stmtGetTZ_tOracleInput_64 = conn_tOracleInput_64.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_64 = stmtGetTZ_tOracleInput_64.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_64 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_64.next()) {
						sessionTimezone_tOracleInput_64 = rsGetTZ_tOracleInput_64.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_64 && unwrappedOraConn_tOracleInput_64 != null) {
                        unwrappedOraConn_tOracleInput_64.setSessionTimeZone(sessionTimezone_tOracleInput_64);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_64).setSessionTimeZone(sessionTimezone_tOracleInput_64);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_64 = conn_tOracleInput_64.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_64.setFetchSize(1000);


		    String dbquery_tOracleInput_64 = "SELECT    V94\n        , PERSONAS_ID\nFROM (\n    SELECT     NVL (  CASE \n                          WHEN TR.SIGLA = 'N"
+"PN'     THEN '1'\n                          WHEN TR.SIGLA = 'IVPH'    THEN '2'\n                          WHEN TR.SIGLA "
+"= 'NICBGI'  THEN '3'\n                          WHEN TR.SIGLA = 'NICAGII' THEN '4'\n                          WHEN TR.SI"
+"GLA = 'NMEOA'   THEN '5'\n                          WHEN TR.SIGLA = 'NNIEOA'  THEN '6'   \n                      END, '9"
+"99'  ) AS V94\n            , PA.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.F"
+"FINAL DESC) R\n    FROM GEN_CUPS CU \n    INNER JOIN RCA_CUPSOLICITADOS RCS ON RCS.CUPS_ID = CU.ID   \n    INNER JOIN RC"
+"A_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = RCS.ID\n    INNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUP"
+"S_ID\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = RCS.INFGENERAL_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA"
+".ID = INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS"
+" SEX ON SEX.ID = GP.SEXO_ID \n    WHERE CU.CODIGO IN('898101', '702201', '702300','671203') \n      AND RCS.ESTREGISTRO_"
+"ID = 1\n      AND RE.ESTREGISTRO_ID = 1\n      AND INF.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND SE"
+"X.SIGLA = 'F'\n      AND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - GP.FECHA_NACIMIENTO)/365) > 10\n      AND TRUNC(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                               AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_64_QUERY",dbquery_tOracleInput_64);

		    java.sql.ResultSet rs_tOracleInput_64 = null;

		    try {
		    	rs_tOracleInput_64 = stmt_tOracleInput_64.executeQuery(dbquery_tOracleInput_64);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_64 = rs_tOracleInput_64.getMetaData();
		    	int colQtyInRs_tOracleInput_64 = rsmd_tOracleInput_64.getColumnCount();

		    String tmpContent_tOracleInput_64 = null;
		    
		    
		    while (rs_tOracleInput_64.next()) {
		        nb_line_tOracleInput_64++;
		        
							if(colQtyInRs_tOracleInput_64 < 1) {
								row82.V94 = null;
							} else {
	                         		
        	row82.V94 = routines.system.JDBCUtil.getString(rs_tOracleInput_64, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_64 < 2) {
								row82.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_64.getObject(2) != null) {
						row82.PERSONAS_ID = rs_tOracleInput_64.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_64 begin ] stop
 */
	
	/**
	 * [tOracleInput_64 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_64";
	
	

 


	tos_count_tOracleInput_64++;

/**
 * [tOracleInput_64 main ] stop
 */
	
	/**
	 * [tOracleInput_64 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_64";
	
	

 



/**
 * [tOracleInput_64 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row82 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row82";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row82"
						
						);
					}
					


			   
			   

					row82Struct row82_HashRow = new row82Struct();
		   	   	   
				
				row82_HashRow.V94 = row82.V94;
				
				row82_HashRow.PERSONAS_ID = row82.PERSONAS_ID;
				
			tHash_Lookup_row82.put(row82_HashRow);
			
            




 


	tos_count_tAdvancedHash_row82++;

/**
 * [tAdvancedHash_row82 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row82 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row82";
	
	

 



/**
 * [tAdvancedHash_row82 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row82 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row82";
	
	

 



/**
 * [tAdvancedHash_row82 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_64 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_64";
	
	

 



/**
 * [tOracleInput_64 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_64 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_64";
	
	

}
}finally{
	if (rs_tOracleInput_64 != null) {
		rs_tOracleInput_64.close();
	}
	if (stmt_tOracleInput_64 != null) {
		stmt_tOracleInput_64.close();
	}
}

globalMap.put("tOracleInput_64_NB_LINE",nb_line_tOracleInput_64);
 

ok_Hash.put("tOracleInput_64", true);
end_Hash.put("tOracleInput_64", System.currentTimeMillis());




/**
 * [tOracleInput_64 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row82 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row82";
	
	

tHash_Lookup_row82.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row82");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row82", true);
end_Hash.put("tAdvancedHash_row82", System.currentTimeMillis());




/**
 * [tAdvancedHash_row82 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_64 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_64";
	
	

 



/**
 * [tOracleInput_64 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row82 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row82";
	
	

 



/**
 * [tAdvancedHash_row82 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_64_SUBPROCESS_STATE", 1);
	}
	


public static class row83Struct implements routines.system.IPersistableComparableLookupRow<row83Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V95;

				public String getV95 () {
					return this.V95;
				}

				public Boolean V95IsNullable(){
				    return true;
				}
				public Boolean V95IsKey(){
				    return false;
				}
				public Integer V95Length(){
				    return 100;
				}
				public Integer V95Precision(){
				    return 0;
				}
				public String V95Default(){
				
					return null;
				
				}
				public String V95Comment(){
				
				    return "";
				
				}
				public String V95Pattern(){
				
					return "";
				
				}
				public String V95OriginalDbColumnName(){
				
					return "V95";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row83Struct other = (row83Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row83Struct other) {

		other.V95 = this.V95;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row83Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V95 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V95 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V95, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V95, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V95="+V95);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row83Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_65Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_65_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row83Struct row83 = new row83Struct();




	
	/**
	 * [tAdvancedHash_row83 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row83", false);
		start_Hash.put("tAdvancedHash_row83", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row83";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row83");
					}
				
		int tos_count_tAdvancedHash_row83 = 0;
		

			   		// connection name:row83
			   		// source node:tOracleInput_65 - inputs:(after_tOracleInput_1) outputs:(row83,row83) | target node:tAdvancedHash_row83 - inputs:(row83) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row83 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row83Struct> tHash_Lookup_row83 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row83Struct>getLookup(matchingModeEnum_row83);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row83", tHash_Lookup_row83);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row83 begin ] stop
 */



	
	/**
	 * [tOracleInput_65 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_65", false);
		start_Hash.put("tOracleInput_65", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_65";
	
	
		int tos_count_tOracleInput_65 = 0;
		
	


	
		    int nb_line_tOracleInput_65 = 0;
		    java.sql.Connection conn_tOracleInput_65 = null;
				conn_tOracleInput_65 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_65 = false;
				boolean isConnectionWrapped_tOracleInput_65 = !(conn_tOracleInput_65 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_65.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_65 = null;
                if (isConnectionWrapped_tOracleInput_65) {
					unwrappedOraConn_tOracleInput_65 = conn_tOracleInput_65.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_65 != null) {
                        isTimeZoneNull_tOracleInput_65 = (unwrappedOraConn_tOracleInput_65.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_65 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_65).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_65) {
					java.sql.Statement stmtGetTZ_tOracleInput_65 = conn_tOracleInput_65.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_65 = stmtGetTZ_tOracleInput_65.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_65 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_65.next()) {
						sessionTimezone_tOracleInput_65 = rsGetTZ_tOracleInput_65.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_65 && unwrappedOraConn_tOracleInput_65 != null) {
                        unwrappedOraConn_tOracleInput_65.setSessionTimeZone(sessionTimezone_tOracleInput_65);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_65).setSessionTimeZone(sessionTimezone_tOracleInput_65);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_65 = conn_tOracleInput_65.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_65.setFetchSize(1000);


		    String dbquery_tOracleInput_65 = "SELECT    V95\n        , PERSONAS_ID\nFROM (\n    SELECT    GU.CODIGO AS V95\n            , PA.PERSONAS_ID \n          "
+"  , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CUPS CU \n    INNER JOIN RCA"
+"_CUPSOLICITADOS RCS ON RCS.CUPS_ID = CU.ID   \n    INNER JOIN GEN_UORG GU ON GU.ID = RCS.UORG_ID\n    INNER JOIN RCA_RES"
+"ULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = RCS.ID\n    INNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID"
+"\n    INNER JOIN RCA_INFGENERAL INF ON INF.ID = RCS.INFGENERAL_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID ="
+" INF.PROCESOSASISTENCIALES_ID \n    INNER JOIN GEN_PERSONAS GP ON GP.ID = PA.PERSONAS_ID \n    INNER JOIN GEN_SEXOS SEX "
+"ON SEX.ID = GP.SEXO_ID \n    WHERE CU.CODIGO = '671203'\n      AND RCS.ESTREGISTRO_ID = 1\n      AND RE.ESTREGISTRO_ID ="
+" 1\n      AND INF.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND SEX.SIGLA = 'F'\n      AND TRUNC((TO_DA"
+"TE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - GP.FECHA_NACIMIENTO)/365) > 10\n      AND TRUNC(PA.FFINAL) BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                               AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_65_QUERY",dbquery_tOracleInput_65);

		    java.sql.ResultSet rs_tOracleInput_65 = null;

		    try {
		    	rs_tOracleInput_65 = stmt_tOracleInput_65.executeQuery(dbquery_tOracleInput_65);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_65 = rs_tOracleInput_65.getMetaData();
		    	int colQtyInRs_tOracleInput_65 = rsmd_tOracleInput_65.getColumnCount();

		    String tmpContent_tOracleInput_65 = null;
		    
		    
		    while (rs_tOracleInput_65.next()) {
		        nb_line_tOracleInput_65++;
		        
							if(colQtyInRs_tOracleInput_65 < 1) {
								row83.V95 = null;
							} else {
	                         		
        	row83.V95 = routines.system.JDBCUtil.getString(rs_tOracleInput_65, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_65 < 2) {
								row83.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_65.getObject(2) != null) {
						row83.PERSONAS_ID = rs_tOracleInput_65.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_65 begin ] stop
 */
	
	/**
	 * [tOracleInput_65 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_65";
	
	

 


	tos_count_tOracleInput_65++;

/**
 * [tOracleInput_65 main ] stop
 */
	
	/**
	 * [tOracleInput_65 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_65";
	
	

 



/**
 * [tOracleInput_65 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row83"
						
						);
					}
					


			   
			   

					row83Struct row83_HashRow = new row83Struct();
		   	   	   
				
				row83_HashRow.V95 = row83.V95;
				
				row83_HashRow.PERSONAS_ID = row83.PERSONAS_ID;
				
			tHash_Lookup_row83.put(row83_HashRow);
			
            




 


	tos_count_tAdvancedHash_row83++;

/**
 * [tAdvancedHash_row83 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row83 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row83 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_65 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_65";
	
	

 



/**
 * [tOracleInput_65 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_65 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_65";
	
	

}
}finally{
	if (rs_tOracleInput_65 != null) {
		rs_tOracleInput_65.close();
	}
	if (stmt_tOracleInput_65 != null) {
		stmt_tOracleInput_65.close();
	}
}

globalMap.put("tOracleInput_65_NB_LINE",nb_line_tOracleInput_65);
 

ok_Hash.put("tOracleInput_65", true);
end_Hash.put("tOracleInput_65", System.currentTimeMillis());




/**
 * [tOracleInput_65 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

tHash_Lookup_row83.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row83");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row83", true);
end_Hash.put("tAdvancedHash_row83", System.currentTimeMillis());




/**
 * [tAdvancedHash_row83 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_65 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_65";
	
	

 



/**
 * [tOracleInput_65 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row83 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row83";
	
	

 



/**
 * [tAdvancedHash_row83 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_65_SUBPROCESS_STATE", 1);
	}
	


public static class row84Struct implements routines.system.IPersistableComparableLookupRow<row84Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V96;

				public String getV96 () {
					return this.V96;
				}

				public Boolean V96IsNullable(){
				    return true;
				}
				public Boolean V96IsKey(){
				    return false;
				}
				public Integer V96Length(){
				    return 10;
				}
				public Integer V96Precision(){
				    return 0;
				}
				public String V96Default(){
				
					return null;
				
				}
				public String V96Comment(){
				
				    return "";
				
				}
				public String V96Pattern(){
				
					return "";
				
				}
				public String V96OriginalDbColumnName(){
				
					return "V96";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row84Struct other = (row84Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row84Struct other) {

		other.V96 = this.V96;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row84Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V96 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V96 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V96, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V96, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V96="+V96);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row84Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_66Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_66_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row84Struct row84 = new row84Struct();




	
	/**
	 * [tAdvancedHash_row84 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row84", false);
		start_Hash.put("tAdvancedHash_row84", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row84";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row84");
					}
				
		int tos_count_tAdvancedHash_row84 = 0;
		

			   		// connection name:row84
			   		// source node:tOracleInput_66 - inputs:(after_tOracleInput_1) outputs:(row84,row84) | target node:tAdvancedHash_row84 - inputs:(row84) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row84 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row84Struct> tHash_Lookup_row84 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row84Struct>getLookup(matchingModeEnum_row84);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row84", tHash_Lookup_row84);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row84 begin ] stop
 */



	
	/**
	 * [tOracleInput_66 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_66", false);
		start_Hash.put("tOracleInput_66", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_66";
	
	
		int tos_count_tOracleInput_66 = 0;
		
	


	
		    int nb_line_tOracleInput_66 = 0;
		    java.sql.Connection conn_tOracleInput_66 = null;
				conn_tOracleInput_66 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_66 = false;
				boolean isConnectionWrapped_tOracleInput_66 = !(conn_tOracleInput_66 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_66.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_66 = null;
                if (isConnectionWrapped_tOracleInput_66) {
					unwrappedOraConn_tOracleInput_66 = conn_tOracleInput_66.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_66 != null) {
                        isTimeZoneNull_tOracleInput_66 = (unwrappedOraConn_tOracleInput_66.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_66 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_66).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_66) {
					java.sql.Statement stmtGetTZ_tOracleInput_66 = conn_tOracleInput_66.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_66 = stmtGetTZ_tOracleInput_66.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_66 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_66.next()) {
						sessionTimezone_tOracleInput_66 = rsGetTZ_tOracleInput_66.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_66 && unwrappedOraConn_tOracleInput_66 != null) {
                        unwrappedOraConn_tOracleInput_66.setSessionTimeZone(sessionTimezone_tOracleInput_66);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_66).setSessionTimeZone(sessionTimezone_tOracleInput_66);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_66 = conn_tOracleInput_66.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_66.setFetchSize(1000);


		    String dbquery_tOracleInput_66 = "SELECT \nTO_CHAR (MAX(RE.FENTREGA),'YYYY-MM-DD') AS V96,\nper.id AS PERSONAS_ID\nFROM RCA_INFGENERAL INF\nINNER JOIN HC"
+"L_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PE"
+"RSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS."
+"INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICI"
+"TADOS_ID  = CUPS.ID\nINNER JOIN GEN_UORG UORG ON UORG.ID = CUPS.UORG_ID\nWHERE   CU.CODIGO IN ('876801','876802')\nAND P"
+"ROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY PER.ID";
		    

		    globalMap.put("tOracleInput_66_QUERY",dbquery_tOracleInput_66);

		    java.sql.ResultSet rs_tOracleInput_66 = null;

		    try {
		    	rs_tOracleInput_66 = stmt_tOracleInput_66.executeQuery(dbquery_tOracleInput_66);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_66 = rs_tOracleInput_66.getMetaData();
		    	int colQtyInRs_tOracleInput_66 = rsmd_tOracleInput_66.getColumnCount();

		    String tmpContent_tOracleInput_66 = null;
		    
		    
		    while (rs_tOracleInput_66.next()) {
		        nb_line_tOracleInput_66++;
		        
							if(colQtyInRs_tOracleInput_66 < 1) {
								row84.V96 = null;
							} else {
	                         		
        	row84.V96 = routines.system.JDBCUtil.getString(rs_tOracleInput_66, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_66 < 2) {
								row84.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_66.getObject(2) != null) {
						row84.PERSONAS_ID = rs_tOracleInput_66.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_66 begin ] stop
 */
	
	/**
	 * [tOracleInput_66 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_66";
	
	

 


	tos_count_tOracleInput_66++;

/**
 * [tOracleInput_66 main ] stop
 */
	
	/**
	 * [tOracleInput_66 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_66";
	
	

 



/**
 * [tOracleInput_66 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row84"
						
						);
					}
					


			   
			   

					row84Struct row84_HashRow = new row84Struct();
		   	   	   
				
				row84_HashRow.V96 = row84.V96;
				
				row84_HashRow.PERSONAS_ID = row84.PERSONAS_ID;
				
			tHash_Lookup_row84.put(row84_HashRow);
			
            




 


	tos_count_tAdvancedHash_row84++;

/**
 * [tAdvancedHash_row84 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row84 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row84 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_66 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_66";
	
	

 



/**
 * [tOracleInput_66 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_66 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_66";
	
	

}
}finally{
	if (rs_tOracleInput_66 != null) {
		rs_tOracleInput_66.close();
	}
	if (stmt_tOracleInput_66 != null) {
		stmt_tOracleInput_66.close();
	}
}

globalMap.put("tOracleInput_66_NB_LINE",nb_line_tOracleInput_66);
 

ok_Hash.put("tOracleInput_66", true);
end_Hash.put("tOracleInput_66", System.currentTimeMillis());




/**
 * [tOracleInput_66 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

tHash_Lookup_row84.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row84");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row84", true);
end_Hash.put("tAdvancedHash_row84", System.currentTimeMillis());




/**
 * [tAdvancedHash_row84 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_66 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_66";
	
	

 



/**
 * [tOracleInput_66 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row84 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row84";
	
	

 



/**
 * [tAdvancedHash_row84 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_66_SUBPROCESS_STATE", 1);
	}
	


public static class row85Struct implements routines.system.IPersistableComparableLookupRow<row85Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V97;

				public String getV97 () {
					return this.V97;
				}

				public Boolean V97IsNullable(){
				    return true;
				}
				public Boolean V97IsKey(){
				    return false;
				}
				public Integer V97Length(){
				    return 1;
				}
				public Integer V97Precision(){
				    return 0;
				}
				public String V97Default(){
				
					return null;
				
				}
				public String V97Comment(){
				
				    return "";
				
				}
				public String V97Pattern(){
				
					return "";
				
				}
				public String V97OriginalDbColumnName(){
				
					return "V97";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row85Struct other = (row85Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row85Struct other) {

		other.V97 = this.V97;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row85Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V97 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V97 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V97, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V97, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V97="+V97);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row85Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_67Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_67_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row85Struct row85 = new row85Struct();




	
	/**
	 * [tAdvancedHash_row85 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row85", false);
		start_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row85");
					}
				
		int tos_count_tAdvancedHash_row85 = 0;
		

			   		// connection name:row85
			   		// source node:tOracleInput_67 - inputs:(after_tOracleInput_1) outputs:(row85,row85) | target node:tAdvancedHash_row85 - inputs:(row85) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row85 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row85Struct> tHash_Lookup_row85 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row85Struct>getLookup(matchingModeEnum_row85);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row85", tHash_Lookup_row85);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row85 begin ] stop
 */



	
	/**
	 * [tOracleInput_67 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_67", false);
		start_Hash.put("tOracleInput_67", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_67";
	
	
		int tos_count_tOracleInput_67 = 0;
		
	


	
		    int nb_line_tOracleInput_67 = 0;
		    java.sql.Connection conn_tOracleInput_67 = null;
				conn_tOracleInput_67 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_67 = false;
				boolean isConnectionWrapped_tOracleInput_67 = !(conn_tOracleInput_67 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_67.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_67 = null;
                if (isConnectionWrapped_tOracleInput_67) {
					unwrappedOraConn_tOracleInput_67 = conn_tOracleInput_67.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_67 != null) {
                        isTimeZoneNull_tOracleInput_67 = (unwrappedOraConn_tOracleInput_67.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_67 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_67).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_67) {
					java.sql.Statement stmtGetTZ_tOracleInput_67 = conn_tOracleInput_67.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_67 = stmtGetTZ_tOracleInput_67.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_67 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_67.next()) {
						sessionTimezone_tOracleInput_67 = rsGetTZ_tOracleInput_67.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_67 && unwrappedOraConn_tOracleInput_67 != null) {
                        unwrappedOraConn_tOracleInput_67.setSessionTimeZone(sessionTimezone_tOracleInput_67);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_67).setSessionTimeZone(sessionTimezone_tOracleInput_67);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_67 = conn_tOracleInput_67.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_67.setFetchSize(1000);


		    String dbquery_tOracleInput_67 = "SELECT \n  CASE WHEN TR.NOMBRE = 'Birads 1' THEN '1'\n  WHEN TR.NOMBRE = 'Birads 2' THEN '2'\n  WHEN TR.NOMBRE = 'Birad"
+"s 3' THEN '3'\n  WHEN TR.NOMBRE = 'Birads 4' THEN '4'\n  WHEN TR.NOMBRE = 'Birads 5' THEN '5'\n  WHEN TR.NOMBRE = 'Birad"
+"s 6' THEN '6'\n  WHEN TR.NOMBRE = 'Birads 7' THEN '7'\n  ELSE '999'\n  END AS V97,\n  R.PACIENTE AS PERSONAS_ID\nFROM ("
+"\nSELECT \nMAX(RE.ID) AS ID,\nINF.PACIENTE\nFROM RCA_INFGENERAL INF\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID"
+" = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON "
+"SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_"
+"CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.ID\nINNER JOIN GEN_TRE"
+"SULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID\nWHERE   CU.CODIGO IN ('876801','876802')\nAND PROC.FFINAL BETWEEN TO_D"
+"ATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY')  - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY INF.PACIENTE) R\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.ID"
+"=R.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID";
		    

		    globalMap.put("tOracleInput_67_QUERY",dbquery_tOracleInput_67);

		    java.sql.ResultSet rs_tOracleInput_67 = null;

		    try {
		    	rs_tOracleInput_67 = stmt_tOracleInput_67.executeQuery(dbquery_tOracleInput_67);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_67 = rs_tOracleInput_67.getMetaData();
		    	int colQtyInRs_tOracleInput_67 = rsmd_tOracleInput_67.getColumnCount();

		    String tmpContent_tOracleInput_67 = null;
		    
		    
		    while (rs_tOracleInput_67.next()) {
		        nb_line_tOracleInput_67++;
		        
							if(colQtyInRs_tOracleInput_67 < 1) {
								row85.V97 = null;
							} else {
	                         		
        	row85.V97 = routines.system.JDBCUtil.getString(rs_tOracleInput_67, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_67 < 2) {
								row85.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_67.getObject(2) != null) {
						row85.PERSONAS_ID = rs_tOracleInput_67.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_67 begin ] stop
 */
	
	/**
	 * [tOracleInput_67 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_67";
	
	

 


	tos_count_tOracleInput_67++;

/**
 * [tOracleInput_67 main ] stop
 */
	
	/**
	 * [tOracleInput_67 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_67";
	
	

 



/**
 * [tOracleInput_67 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row85"
						
						);
					}
					


			   
			   

					row85Struct row85_HashRow = new row85Struct();
		   	   	   
				
				row85_HashRow.V97 = row85.V97;
				
				row85_HashRow.PERSONAS_ID = row85.PERSONAS_ID;
				
			tHash_Lookup_row85.put(row85_HashRow);
			
            




 


	tos_count_tAdvancedHash_row85++;

/**
 * [tAdvancedHash_row85 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row85 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_67 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_67";
	
	

 



/**
 * [tOracleInput_67 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_67 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_67";
	
	

}
}finally{
	if (rs_tOracleInput_67 != null) {
		rs_tOracleInput_67.close();
	}
	if (stmt_tOracleInput_67 != null) {
		stmt_tOracleInput_67.close();
	}
}

globalMap.put("tOracleInput_67_NB_LINE",nb_line_tOracleInput_67);
 

ok_Hash.put("tOracleInput_67", true);
end_Hash.put("tOracleInput_67", System.currentTimeMillis());




/**
 * [tOracleInput_67 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

tHash_Lookup_row85.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row85");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row85", true);
end_Hash.put("tAdvancedHash_row85", System.currentTimeMillis());




/**
 * [tAdvancedHash_row85 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_67 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_67";
	
	

 



/**
 * [tOracleInput_67 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row85 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row85";
	
	

 



/**
 * [tAdvancedHash_row85 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_67_SUBPROCESS_STATE", 1);
	}
	


public static class row86Struct implements routines.system.IPersistableRow<row86Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];

	
			    public String V98;

				public String getV98 () {
					return this.V98;
				}

				public Boolean V98IsNullable(){
				    return true;
				}
				public Boolean V98IsKey(){
				    return false;
				}
				public Integer V98Length(){
				    return 100;
				}
				public Integer V98Precision(){
				    return 0;
				}
				public String V98Default(){
				
					return null;
				
				}
				public String V98Comment(){
				
				    return "";
				
				}
				public String V98Pattern(){
				
					return "";
				
				}
				public String V98OriginalDbColumnName(){
				
					return "V98";
				
				}

				
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length) {
				if(length < 1024 && commonByteArray_REP_RESOLUCION_4505_Resolucion4505.length == 0) {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[1024];
				} else {
   					commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length);
			strReturn = new String(commonByteArray_REP_RESOLUCION_4505_Resolucion4505, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.V98 = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
					this.V98 = readString(dis);
					
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.V98,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.V98,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V98="+V98);
		sb.append(",ID="+String.valueOf(ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row86Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_59Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_59_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row86Struct row86 = new row86Struct();




	
	/**
	 * [tAdvancedHash_row86 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row86", false);
		start_Hash.put("tAdvancedHash_row86", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row86";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row86");
					}
				
		int tos_count_tAdvancedHash_row86 = 0;
		

			   		// connection name:row86
			   		// source node:tOracleInput_59 - inputs:(after_tOracleInput_1) outputs:(row86,row86) | target node:tAdvancedHash_row86 - inputs:(row86) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row86 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row86Struct> tHash_Lookup_row86 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row86Struct>getLookup(matchingModeEnum_row86);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row86", tHash_Lookup_row86);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row86 begin ] stop
 */



	
	/**
	 * [tOracleInput_59 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_59", false);
		start_Hash.put("tOracleInput_59", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_59";
	
	
		int tos_count_tOracleInput_59 = 0;
		
	


	
		    int nb_line_tOracleInput_59 = 0;
		    java.sql.Connection conn_tOracleInput_59 = null;
				conn_tOracleInput_59 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_59 = false;
				boolean isConnectionWrapped_tOracleInput_59 = !(conn_tOracleInput_59 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_59.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_59 = null;
                if (isConnectionWrapped_tOracleInput_59) {
					unwrappedOraConn_tOracleInput_59 = conn_tOracleInput_59.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_59 != null) {
                        isTimeZoneNull_tOracleInput_59 = (unwrappedOraConn_tOracleInput_59.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_59 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_59).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_59) {
					java.sql.Statement stmtGetTZ_tOracleInput_59 = conn_tOracleInput_59.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_59 = stmtGetTZ_tOracleInput_59.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_59 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_59.next()) {
						sessionTimezone_tOracleInput_59 = rsGetTZ_tOracleInput_59.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_59 && unwrappedOraConn_tOracleInput_59 != null) {
                        unwrappedOraConn_tOracleInput_59.setSessionTimeZone(sessionTimezone_tOracleInput_59);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_59).setSessionTimeZone(sessionTimezone_tOracleInput_59);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_59 = conn_tOracleInput_59.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_59.setFetchSize(1000);


		    String dbquery_tOracleInput_59 = "SELECT \nUORG.CODIGO AS V98,\nper.id\nFROM RCA_INFGENERAL INF\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = I"
+"NF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX."
+"ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS"
+" CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.ID\nINNER JOIN GEN_UORG UO"
+"RG ON UORG.ID = CUPS.UORG_ID\nINNER JOIN (\nSELECT  MAX(HP.FFINAL) AS FFINAL, HP.PERSONAS_ID  AS PERSONAS_ID\nFROM HCL_P"
+"ROCESOSASISTENCIALES HP  \nINNER JOIN RCA_INFGENERAL INF ON INF.PROCESOSASISTENCIALES_ID = HP.ID\nINNER JOIN GEN_PERSONA"
+"S PER ON PER.ID = HP.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSO"
+"LICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RESULTADOS"
+"CUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.ID\nINNER JOIN GEN_UORG UORG ON UORG.ID = CUPS.UORG_ID\nWHERE   CU.CODIGO IN ('8"
+"76801','876802')\nGROUP BY HP.PERSONAS_ID\n)T2 ON PROC.PERSONAS_ID = T2.PERSONAS_ID AND T2.FFINAL=PROC.FFINAL\nWHERE   C"
+"U.CODIGO IN ('876801','876802')\nAND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35";
		    

		    globalMap.put("tOracleInput_59_QUERY",dbquery_tOracleInput_59);

		    java.sql.ResultSet rs_tOracleInput_59 = null;

		    try {
		    	rs_tOracleInput_59 = stmt_tOracleInput_59.executeQuery(dbquery_tOracleInput_59);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_59 = rs_tOracleInput_59.getMetaData();
		    	int colQtyInRs_tOracleInput_59 = rsmd_tOracleInput_59.getColumnCount();

		    String tmpContent_tOracleInput_59 = null;
		    
		    
		    while (rs_tOracleInput_59.next()) {
		        nb_line_tOracleInput_59++;
		        
							if(colQtyInRs_tOracleInput_59 < 1) {
								row86.V98 = null;
							} else {
	                         		
        	row86.V98 = routines.system.JDBCUtil.getString(rs_tOracleInput_59, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_59 < 2) {
								row86.ID = null;
							} else {
		                          
					if(rs_tOracleInput_59.getObject(2) != null) {
						row86.ID = rs_tOracleInput_59.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_59 begin ] stop
 */
	
	/**
	 * [tOracleInput_59 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_59";
	
	

 


	tos_count_tOracleInput_59++;

/**
 * [tOracleInput_59 main ] stop
 */
	
	/**
	 * [tOracleInput_59 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_59";
	
	

 



/**
 * [tOracleInput_59 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row86"
						
						);
					}
					


			   
			   

					row86Struct row86_HashRow = new row86Struct();
		   	   	   
				
				row86_HashRow.V98 = row86.V98;
				
				row86_HashRow.ID = row86.ID;
				
			tHash_Lookup_row86.put(row86_HashRow);
			
            




 


	tos_count_tAdvancedHash_row86++;

/**
 * [tAdvancedHash_row86 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row86 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row86 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_59 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_59";
	
	

 



/**
 * [tOracleInput_59 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_59 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_59";
	
	

}
}finally{
	if (rs_tOracleInput_59 != null) {
		rs_tOracleInput_59.close();
	}
	if (stmt_tOracleInput_59 != null) {
		stmt_tOracleInput_59.close();
	}
}

globalMap.put("tOracleInput_59_NB_LINE",nb_line_tOracleInput_59);
 

ok_Hash.put("tOracleInput_59", true);
end_Hash.put("tOracleInput_59", System.currentTimeMillis());




/**
 * [tOracleInput_59 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

tHash_Lookup_row86.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row86");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row86", true);
end_Hash.put("tAdvancedHash_row86", System.currentTimeMillis());




/**
 * [tAdvancedHash_row86 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_59 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_59";
	
	

 



/**
 * [tOracleInput_59 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row86 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row86";
	
	

 



/**
 * [tAdvancedHash_row86 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_59_SUBPROCESS_STATE", 1);
	}
	


public static class row87Struct implements routines.system.IPersistableComparableLookupRow<row87Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V99;

				public String getV99 () {
					return this.V99;
				}

				public Boolean V99IsNullable(){
				    return true;
				}
				public Boolean V99IsKey(){
				    return false;
				}
				public Integer V99Length(){
				    return 10;
				}
				public Integer V99Precision(){
				    return 0;
				}
				public String V99Default(){
				
					return null;
				
				}
				public String V99Comment(){
				
				    return "";
				
				}
				public String V99Pattern(){
				
					return "";
				
				}
				public String V99OriginalDbColumnName(){
				
					return "V99";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row87Struct other = (row87Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row87Struct other) {

		other.V99 = this.V99;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row87Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V99 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V99 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V99, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V99, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V99="+V99);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row87Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_56Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_56_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row87Struct row87 = new row87Struct();




	
	/**
	 * [tAdvancedHash_row87 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row87", false);
		start_Hash.put("tAdvancedHash_row87", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row87";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row87");
					}
				
		int tos_count_tAdvancedHash_row87 = 0;
		

			   		// connection name:row87
			   		// source node:tOracleInput_56 - inputs:(after_tOracleInput_1) outputs:(row87,row87) | target node:tAdvancedHash_row87 - inputs:(row87) outputs:()
			   		// linked node: tMap_4 - inputs:(Salida_3,row67,row68,row69,row70,row46,row71,row72,row73,row74,row75,row76,row77,row78,row79,row80,row81,row82,row83,row84,row85,row86,row87) outputs:(Salida_Prev4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row87 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row87Struct> tHash_Lookup_row87 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row87Struct>getLookup(matchingModeEnum_row87);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row87", tHash_Lookup_row87);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row87 begin ] stop
 */



	
	/**
	 * [tOracleInput_56 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_56", false);
		start_Hash.put("tOracleInput_56", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_56";
	
	
		int tos_count_tOracleInput_56 = 0;
		
	


	
		    int nb_line_tOracleInput_56 = 0;
		    java.sql.Connection conn_tOracleInput_56 = null;
				conn_tOracleInput_56 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_56 = false;
				boolean isConnectionWrapped_tOracleInput_56 = !(conn_tOracleInput_56 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_56.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_56 = null;
                if (isConnectionWrapped_tOracleInput_56) {
					unwrappedOraConn_tOracleInput_56 = conn_tOracleInput_56.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_56 != null) {
                        isTimeZoneNull_tOracleInput_56 = (unwrappedOraConn_tOracleInput_56.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_56 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_56).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_56) {
					java.sql.Statement stmtGetTZ_tOracleInput_56 = conn_tOracleInput_56.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_56 = stmtGetTZ_tOracleInput_56.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_56 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_56.next()) {
						sessionTimezone_tOracleInput_56 = rsGetTZ_tOracleInput_56.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_56 && unwrappedOraConn_tOracleInput_56 != null) {
                        unwrappedOraConn_tOracleInput_56.setSessionTimeZone(sessionTimezone_tOracleInput_56);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_56).setSessionTimeZone(sessionTimezone_tOracleInput_56);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_56 = conn_tOracleInput_56.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_56.setFetchSize(1000);


		    String dbquery_tOracleInput_56 = "SELECT\n  CASE \n  WHEN \n  RE.FTOMA <  TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') OR RE.FTOMA > TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \n  THEN '1800-01-01'\n  ELSE \n  NVL (TO_CHAR(RE.FTOMA,'YYYY-MM-DD'), '1800-01-01') END  AS V99,  "
+" \n  I.PERSONAS_ID AS PERSONAS_ID \nFROM (\nSELECT MAX(CUPS.ID) AS ID, PROC.PERSONAS_ID AS PERSONAS_ID\nFROM RCA_INFGENE"
+"RAL INF \nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS "
+"PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSO"
+"LICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = CUPS.ID\nINNER"
+" JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOI"
+"N GEN_UORG UORG ON UORG.ID = CUPS.UORG_ID\nWHERE CU.CODIGO IN ('851101')\nAND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY PROC.PERSONAS_ID\n)I\nINNER JOIN RCA_CUPSOLICITADOS CUPS2 O"
+"N CUPS2.ID = I.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = CUPS2.ID";
		    

		    globalMap.put("tOracleInput_56_QUERY",dbquery_tOracleInput_56);

		    java.sql.ResultSet rs_tOracleInput_56 = null;

		    try {
		    	rs_tOracleInput_56 = stmt_tOracleInput_56.executeQuery(dbquery_tOracleInput_56);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_56 = rs_tOracleInput_56.getMetaData();
		    	int colQtyInRs_tOracleInput_56 = rsmd_tOracleInput_56.getColumnCount();

		    String tmpContent_tOracleInput_56 = null;
		    
		    
		    while (rs_tOracleInput_56.next()) {
		        nb_line_tOracleInput_56++;
		        
							if(colQtyInRs_tOracleInput_56 < 1) {
								row87.V99 = null;
							} else {
	                         		
        	row87.V99 = routines.system.JDBCUtil.getString(rs_tOracleInput_56, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_56 < 2) {
								row87.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_56.getObject(2) != null) {
						row87.PERSONAS_ID = rs_tOracleInput_56.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_56 begin ] stop
 */
	
	/**
	 * [tOracleInput_56 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_56";
	
	

 


	tos_count_tOracleInput_56++;

/**
 * [tOracleInput_56 main ] stop
 */
	
	/**
	 * [tOracleInput_56 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_56";
	
	

 



/**
 * [tOracleInput_56 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row87 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row87";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row87"
						
						);
					}
					


			   
			   

					row87Struct row87_HashRow = new row87Struct();
		   	   	   
				
				row87_HashRow.V99 = row87.V99;
				
				row87_HashRow.PERSONAS_ID = row87.PERSONAS_ID;
				
			tHash_Lookup_row87.put(row87_HashRow);
			
            




 


	tos_count_tAdvancedHash_row87++;

/**
 * [tAdvancedHash_row87 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row87 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row87";
	
	

 



/**
 * [tAdvancedHash_row87 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row87 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row87";
	
	

 



/**
 * [tAdvancedHash_row87 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_56 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_56";
	
	

 



/**
 * [tOracleInput_56 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_56 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_56";
	
	

}
}finally{
	if (rs_tOracleInput_56 != null) {
		rs_tOracleInput_56.close();
	}
	if (stmt_tOracleInput_56 != null) {
		stmt_tOracleInput_56.close();
	}
}

globalMap.put("tOracleInput_56_NB_LINE",nb_line_tOracleInput_56);
 

ok_Hash.put("tOracleInput_56", true);
end_Hash.put("tOracleInput_56", System.currentTimeMillis());




/**
 * [tOracleInput_56 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row87 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row87";
	
	

tHash_Lookup_row87.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row87");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row87", true);
end_Hash.put("tAdvancedHash_row87", System.currentTimeMillis());




/**
 * [tAdvancedHash_row87 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_56 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_56";
	
	

 



/**
 * [tOracleInput_56 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row87 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row87";
	
	

 



/**
 * [tAdvancedHash_row87 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_56_SUBPROCESS_STATE", 1);
	}
	


public static class row89Struct implements routines.system.IPersistableComparableLookupRow<row89Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V100;

				public String getV100 () {
					return this.V100;
				}

				public Boolean V100IsNullable(){
				    return true;
				}
				public Boolean V100IsKey(){
				    return false;
				}
				public Integer V100Length(){
				    return 10;
				}
				public Integer V100Precision(){
				    return 0;
				}
				public String V100Default(){
				
					return null;
				
				}
				public String V100Comment(){
				
				    return "";
				
				}
				public String V100Pattern(){
				
					return "";
				
				}
				public String V100OriginalDbColumnName(){
				
					return "V100";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row89Struct other = (row89Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row89Struct other) {

		other.V100 = this.V100;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row89Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V100 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V100 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V100, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V100, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V100="+V100);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row89Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_57Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_57_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row89Struct row89 = new row89Struct();




	
	/**
	 * [tAdvancedHash_row89 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row89", false);
		start_Hash.put("tAdvancedHash_row89", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row89";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row89");
					}
				
		int tos_count_tAdvancedHash_row89 = 0;
		

			   		// connection name:row89
			   		// source node:tOracleInput_57 - inputs:(after_tOracleInput_1) outputs:(row89,row89) | target node:tAdvancedHash_row89 - inputs:(row89) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row89 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row89Struct> tHash_Lookup_row89 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row89Struct>getLookup(matchingModeEnum_row89);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row89", tHash_Lookup_row89);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row89 begin ] stop
 */



	
	/**
	 * [tOracleInput_57 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_57", false);
		start_Hash.put("tOracleInput_57", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_57";
	
	
		int tos_count_tOracleInput_57 = 0;
		
	


	
		    int nb_line_tOracleInput_57 = 0;
		    java.sql.Connection conn_tOracleInput_57 = null;
				conn_tOracleInput_57 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_57 = false;
				boolean isConnectionWrapped_tOracleInput_57 = !(conn_tOracleInput_57 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_57.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_57 = null;
                if (isConnectionWrapped_tOracleInput_57) {
					unwrappedOraConn_tOracleInput_57 = conn_tOracleInput_57.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_57 != null) {
                        isTimeZoneNull_tOracleInput_57 = (unwrappedOraConn_tOracleInput_57.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_57 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_57).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_57) {
					java.sql.Statement stmtGetTZ_tOracleInput_57 = conn_tOracleInput_57.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_57 = stmtGetTZ_tOracleInput_57.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_57 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_57.next()) {
						sessionTimezone_tOracleInput_57 = rsGetTZ_tOracleInput_57.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_57 && unwrappedOraConn_tOracleInput_57 != null) {
                        unwrappedOraConn_tOracleInput_57.setSessionTimeZone(sessionTimezone_tOracleInput_57);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_57).setSessionTimeZone(sessionTimezone_tOracleInput_57);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_57 = conn_tOracleInput_57.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_57.setFetchSize(1000);


		    String dbquery_tOracleInput_57 = "SELECT \n DISTINCT NVL (TO_CHAR(I.FENTREGA,'YYYY-MM-DD'), '1800-01-01')  AS V100,\n I.PACIENTE AS PERSONAS_ID\nFROM (\n"
+"SELECT MAX(RE.ID) AS ID, INF.PACIENTE AS PACIENTE, RE.FENTREGA\nFROM RCA_INFGENERAL INF\nINNER JOIN HCL_PROCESOSASISTENC"
+"IALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER J"
+"OIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = IN"
+"F.ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID  = CUPS.I"
+"D\nINNER JOIN GEN_UORG UORG ON UORG.ID = CUPS.UORG_ID\nWHERE    CU.CODIGO IN ('851101')\nAND PROC.FFINAL BETWEEN TO_DATE"
+"('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC(( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY INF.PACIENTE,RE.FENTREGA)I \nINNER JOIN RCA_RESULTADOSCUPS "
+"R ON R.ID = I.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = R.TRESULTADOSCUPS_ID";
		    

		    globalMap.put("tOracleInput_57_QUERY",dbquery_tOracleInput_57);

		    java.sql.ResultSet rs_tOracleInput_57 = null;

		    try {
		    	rs_tOracleInput_57 = stmt_tOracleInput_57.executeQuery(dbquery_tOracleInput_57);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_57 = rs_tOracleInput_57.getMetaData();
		    	int colQtyInRs_tOracleInput_57 = rsmd_tOracleInput_57.getColumnCount();

		    String tmpContent_tOracleInput_57 = null;
		    
		    
		    while (rs_tOracleInput_57.next()) {
		        nb_line_tOracleInput_57++;
		        
							if(colQtyInRs_tOracleInput_57 < 1) {
								row89.V100 = null;
							} else {
	                         		
        	row89.V100 = routines.system.JDBCUtil.getString(rs_tOracleInput_57, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_57 < 2) {
								row89.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_57.getObject(2) != null) {
						row89.PERSONAS_ID = rs_tOracleInput_57.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_57 begin ] stop
 */
	
	/**
	 * [tOracleInput_57 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 


	tos_count_tOracleInput_57++;

/**
 * [tOracleInput_57 main ] stop
 */
	
	/**
	 * [tOracleInput_57 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row89"
						
						);
					}
					


			   
			   

					row89Struct row89_HashRow = new row89Struct();
		   	   	   
				
				row89_HashRow.V100 = row89.V100;
				
				row89_HashRow.PERSONAS_ID = row89.PERSONAS_ID;
				
			tHash_Lookup_row89.put(row89_HashRow);
			
            




 


	tos_count_tAdvancedHash_row89++;

/**
 * [tAdvancedHash_row89 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row89 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row89 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_57 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_57 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

}
}finally{
	if (rs_tOracleInput_57 != null) {
		rs_tOracleInput_57.close();
	}
	if (stmt_tOracleInput_57 != null) {
		stmt_tOracleInput_57.close();
	}
}

globalMap.put("tOracleInput_57_NB_LINE",nb_line_tOracleInput_57);
 

ok_Hash.put("tOracleInput_57", true);
end_Hash.put("tOracleInput_57", System.currentTimeMillis());




/**
 * [tOracleInput_57 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

tHash_Lookup_row89.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row89");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row89", true);
end_Hash.put("tAdvancedHash_row89", System.currentTimeMillis());




/**
 * [tAdvancedHash_row89 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_57 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_57";
	
	

 



/**
 * [tOracleInput_57 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row89 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row89";
	
	

 



/**
 * [tAdvancedHash_row89 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_57_SUBPROCESS_STATE", 1);
	}
	


public static class row90Struct implements routines.system.IPersistableComparableLookupRow<row90Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V101;

				public String getV101 () {
					return this.V101;
				}

				public Boolean V101IsNullable(){
				    return true;
				}
				public Boolean V101IsKey(){
				    return false;
				}
				public Integer V101Length(){
				    return 3;
				}
				public Integer V101Precision(){
				    return 0;
				}
				public String V101Default(){
				
					return null;
				
				}
				public String V101Comment(){
				
				    return "";
				
				}
				public String V101Pattern(){
				
					return "";
				
				}
				public String V101OriginalDbColumnName(){
				
					return "V101";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row90Struct other = (row90Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row90Struct other) {

		other.V101 = this.V101;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row90Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V101 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V101 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V101, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V101, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V101="+V101);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row90Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_55Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_55_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row90Struct row90 = new row90Struct();




	
	/**
	 * [tAdvancedHash_row90 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row90", false);
		start_Hash.put("tAdvancedHash_row90", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row90";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row90");
					}
				
		int tos_count_tAdvancedHash_row90 = 0;
		

			   		// connection name:row90
			   		// source node:tOracleInput_55 - inputs:(after_tOracleInput_1) outputs:(row90,row90) | target node:tAdvancedHash_row90 - inputs:(row90) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row90 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row90Struct> tHash_Lookup_row90 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row90Struct>getLookup(matchingModeEnum_row90);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row90", tHash_Lookup_row90);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row90 begin ] stop
 */



	
	/**
	 * [tOracleInput_55 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_55", false);
		start_Hash.put("tOracleInput_55", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_55";
	
	
		int tos_count_tOracleInput_55 = 0;
		
	


	
		    int nb_line_tOracleInput_55 = 0;
		    java.sql.Connection conn_tOracleInput_55 = null;
				conn_tOracleInput_55 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_55 = false;
				boolean isConnectionWrapped_tOracleInput_55 = !(conn_tOracleInput_55 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_55.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_55 = null;
                if (isConnectionWrapped_tOracleInput_55) {
					unwrappedOraConn_tOracleInput_55 = conn_tOracleInput_55.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_55 != null) {
                        isTimeZoneNull_tOracleInput_55 = (unwrappedOraConn_tOracleInput_55.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_55 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_55).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_55) {
					java.sql.Statement stmtGetTZ_tOracleInput_55 = conn_tOracleInput_55.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_55 = stmtGetTZ_tOracleInput_55.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_55 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_55.next()) {
						sessionTimezone_tOracleInput_55 = rsGetTZ_tOracleInput_55.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_55 && unwrappedOraConn_tOracleInput_55 != null) {
                        unwrappedOraConn_tOracleInput_55.setSessionTimeZone(sessionTimezone_tOracleInput_55);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_55).setSessionTimeZone(sessionTimezone_tOracleInput_55);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_55 = conn_tOracleInput_55.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_55.setFetchSize(1000);


		    String dbquery_tOracleInput_55 = "--------------------------------------------------VARIABLE 101--------------------------------------------------\nSELEC"
+"T\n  DISTINCT NVL ( CASE \n  WHEN I.SIGLA = 'BENIG' THEN '1'\n  WHEN I.SIGLA = 'ATIP' THEN '2'\n  WHEN I.SIGLA = 'MALIGS"
+"P' THEN '3'\n  WHEN I.SIGLA = 'MALIG' THEN '4'  \n  END, '999') AS V101,  \n  I.PERSONAS_ID AS PERSONAS_ID \nFROM (\nSEL"
+"ECT MAX(RE.ID) AS ID, PROC.PERSONAS_ID AS PERSONAS_ID, TR.SIGLA FROM RCA_INFGENERAL INF \nINNER JOIN HCL_PROCESOSASISTEN"
+"CIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIALES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER "
+"JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = I"
+"NF.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CUPSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = "
+"RE.TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON CU.ID = CUPS.CUPS_ID\nWHERE CU.CODIGO IN ('851101')\nAND PROC.FFINAL BE"
+"TWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC(( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY PROC.PERSONAS_ID,TR.SIGLA\n)I \nINNER JOIN RCA_RESULTADOSCU"
+"PS R ON R.ID = I.ID";
		    

		    globalMap.put("tOracleInput_55_QUERY",dbquery_tOracleInput_55);

		    java.sql.ResultSet rs_tOracleInput_55 = null;

		    try {
		    	rs_tOracleInput_55 = stmt_tOracleInput_55.executeQuery(dbquery_tOracleInput_55);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_55 = rs_tOracleInput_55.getMetaData();
		    	int colQtyInRs_tOracleInput_55 = rsmd_tOracleInput_55.getColumnCount();

		    String tmpContent_tOracleInput_55 = null;
		    
		    
		    while (rs_tOracleInput_55.next()) {
		        nb_line_tOracleInput_55++;
		        
							if(colQtyInRs_tOracleInput_55 < 1) {
								row90.V101 = null;
							} else {
	                         		
        	row90.V101 = routines.system.JDBCUtil.getString(rs_tOracleInput_55, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_55 < 2) {
								row90.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_55.getObject(2) != null) {
						row90.PERSONAS_ID = rs_tOracleInput_55.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_55 begin ] stop
 */
	
	/**
	 * [tOracleInput_55 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_55";
	
	

 


	tos_count_tOracleInput_55++;

/**
 * [tOracleInput_55 main ] stop
 */
	
	/**
	 * [tOracleInput_55 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_55";
	
	

 



/**
 * [tOracleInput_55 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row90 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row90";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row90"
						
						);
					}
					


			   
			   

					row90Struct row90_HashRow = new row90Struct();
		   	   	   
				
				row90_HashRow.V101 = row90.V101;
				
				row90_HashRow.PERSONAS_ID = row90.PERSONAS_ID;
				
			tHash_Lookup_row90.put(row90_HashRow);
			
            




 


	tos_count_tAdvancedHash_row90++;

/**
 * [tAdvancedHash_row90 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row90 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row90";
	
	

 



/**
 * [tAdvancedHash_row90 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row90 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row90";
	
	

 



/**
 * [tAdvancedHash_row90 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_55 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_55";
	
	

 



/**
 * [tOracleInput_55 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_55 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_55";
	
	

}
}finally{
	if (rs_tOracleInput_55 != null) {
		rs_tOracleInput_55.close();
	}
	if (stmt_tOracleInput_55 != null) {
		stmt_tOracleInput_55.close();
	}
}

globalMap.put("tOracleInput_55_NB_LINE",nb_line_tOracleInput_55);
 

ok_Hash.put("tOracleInput_55", true);
end_Hash.put("tOracleInput_55", System.currentTimeMillis());




/**
 * [tOracleInput_55 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row90 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row90";
	
	

tHash_Lookup_row90.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row90");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row90", true);
end_Hash.put("tAdvancedHash_row90", System.currentTimeMillis());




/**
 * [tAdvancedHash_row90 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_55 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_55";
	
	

 



/**
 * [tOracleInput_55 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row90 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row90";
	
	

 



/**
 * [tAdvancedHash_row90 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_55_SUBPROCESS_STATE", 1);
	}
	


public static class row91Struct implements routines.system.IPersistableComparableLookupRow<row91Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V102;

				public String getV102 () {
					return this.V102;
				}

				public Boolean V102IsNullable(){
				    return true;
				}
				public Boolean V102IsKey(){
				    return false;
				}
				public Integer V102Length(){
				    return 100;
				}
				public Integer V102Precision(){
				    return 0;
				}
				public String V102Default(){
				
					return null;
				
				}
				public String V102Comment(){
				
				    return "";
				
				}
				public String V102Pattern(){
				
					return "";
				
				}
				public String V102OriginalDbColumnName(){
				
					return "V102";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row91Struct other = (row91Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row91Struct other) {

		other.V102 = this.V102;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row91Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V102 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V102 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V102, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V102, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V102="+V102);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row91Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_43Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_43_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row91Struct row91 = new row91Struct();




	
	/**
	 * [tAdvancedHash_row91 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row91", false);
		start_Hash.put("tAdvancedHash_row91", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row91";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row91");
					}
				
		int tos_count_tAdvancedHash_row91 = 0;
		

			   		// connection name:row91
			   		// source node:tOracleInput_43 - inputs:(after_tOracleInput_1) outputs:(row91,row91) | target node:tAdvancedHash_row91 - inputs:(row91) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row91 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row91Struct> tHash_Lookup_row91 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row91Struct>getLookup(matchingModeEnum_row91);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row91", tHash_Lookup_row91);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row91 begin ] stop
 */



	
	/**
	 * [tOracleInput_43 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_43", false);
		start_Hash.put("tOracleInput_43", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_43";
	
	
		int tos_count_tOracleInput_43 = 0;
		
	


	
		    int nb_line_tOracleInput_43 = 0;
		    java.sql.Connection conn_tOracleInput_43 = null;
				conn_tOracleInput_43 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_43 = false;
				boolean isConnectionWrapped_tOracleInput_43 = !(conn_tOracleInput_43 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_43.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_43 = null;
                if (isConnectionWrapped_tOracleInput_43) {
					unwrappedOraConn_tOracleInput_43 = conn_tOracleInput_43.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_43 != null) {
                        isTimeZoneNull_tOracleInput_43 = (unwrappedOraConn_tOracleInput_43.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_43 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_43).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_43) {
					java.sql.Statement stmtGetTZ_tOracleInput_43 = conn_tOracleInput_43.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_43 = stmtGetTZ_tOracleInput_43.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_43 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_43.next()) {
						sessionTimezone_tOracleInput_43 = rsGetTZ_tOracleInput_43.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_43 && unwrappedOraConn_tOracleInput_43 != null) {
                        unwrappedOraConn_tOracleInput_43.setSessionTimeZone(sessionTimezone_tOracleInput_43);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_43).setSessionTimeZone(sessionTimezone_tOracleInput_43);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_43 = conn_tOracleInput_43.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_43.setFetchSize(1000);


		    String dbquery_tOracleInput_43 = "SELECT\n  UORG.CODIGO AS V102,  \n  I.PERSONAS_ID AS PERSONAS_ID \nFROM (\nSELECT MAX(CUPS.ID) AS ID, PROC.PERSONAS_ID "
+"AS PERSONAS_ID\nFROM RCA_INFGENERAL INF \nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = INF.PROCESOSASISTENCIAL"
+"ES_ID \nINNER JOIN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = SEXO_ID AND SEX.S"
+"IGLA = 'F'\nINNER JOIN RCA_CUPSOLICITADOS CUPS ON CUPS.INFGENERAL_ID = INF.ID\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.CU"
+"PSOLICITADOS_ID = CUPS.ID\nINNER JOIN GEN_TRESULTADOSCUPS TR ON TR.ID = RE.TRESULTADOSCUPS_ID\nINNER JOIN GEN_CUPS CU ON"
+" CU.ID = CUPS.CUPS_ID\nINNER JOIN GEN_UORG UORG ON UORG.ID = CUPS.UORG_ID\nWHERE CU.CODIGO IN ('851101')\nAND PROC.FFINA"
+"L BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC(( TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) > 35\nGROUP BY PROC.PERSONAS_ID\n)I\nINNER JOIN RCA_CUPSOLICITADOS CUPS2 O"
+"N CUPS2.ID = I.ID\nINNER JOIN GEN_UORG UORG ON UORG.ID = CUPS2.UORG_ID";
		    

		    globalMap.put("tOracleInput_43_QUERY",dbquery_tOracleInput_43);

		    java.sql.ResultSet rs_tOracleInput_43 = null;

		    try {
		    	rs_tOracleInput_43 = stmt_tOracleInput_43.executeQuery(dbquery_tOracleInput_43);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_43 = rs_tOracleInput_43.getMetaData();
		    	int colQtyInRs_tOracleInput_43 = rsmd_tOracleInput_43.getColumnCount();

		    String tmpContent_tOracleInput_43 = null;
		    
		    
		    while (rs_tOracleInput_43.next()) {
		        nb_line_tOracleInput_43++;
		        
							if(colQtyInRs_tOracleInput_43 < 1) {
								row91.V102 = null;
							} else {
	                         		
        	row91.V102 = routines.system.JDBCUtil.getString(rs_tOracleInput_43, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_43 < 2) {
								row91.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_43.getObject(2) != null) {
						row91.PERSONAS_ID = rs_tOracleInput_43.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_43 begin ] stop
 */
	
	/**
	 * [tOracleInput_43 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 


	tos_count_tOracleInput_43++;

/**
 * [tOracleInput_43 main ] stop
 */
	
	/**
	 * [tOracleInput_43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row91 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row91";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row91"
						
						);
					}
					


			   
			   

					row91Struct row91_HashRow = new row91Struct();
		   	   	   
				
				row91_HashRow.V102 = row91.V102;
				
				row91_HashRow.PERSONAS_ID = row91.PERSONAS_ID;
				
			tHash_Lookup_row91.put(row91_HashRow);
			
            




 


	tos_count_tAdvancedHash_row91++;

/**
 * [tAdvancedHash_row91 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row91 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row91";
	
	

 



/**
 * [tAdvancedHash_row91 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row91 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row91";
	
	

 



/**
 * [tAdvancedHash_row91 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_43 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_43 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

}
}finally{
	if (rs_tOracleInput_43 != null) {
		rs_tOracleInput_43.close();
	}
	if (stmt_tOracleInput_43 != null) {
		stmt_tOracleInput_43.close();
	}
}

globalMap.put("tOracleInput_43_NB_LINE",nb_line_tOracleInput_43);
 

ok_Hash.put("tOracleInput_43", true);
end_Hash.put("tOracleInput_43", System.currentTimeMillis());




/**
 * [tOracleInput_43 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row91 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row91";
	
	

tHash_Lookup_row91.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row91");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row91", true);
end_Hash.put("tAdvancedHash_row91", System.currentTimeMillis());




/**
 * [tAdvancedHash_row91 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_43 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_43";
	
	

 



/**
 * [tOracleInput_43 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row91 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row91";
	
	

 



/**
 * [tAdvancedHash_row91 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_43_SUBPROCESS_STATE", 1);
	}
	


public static class row92Struct implements routines.system.IPersistableComparableLookupRow<row92Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V103;

				public String getV103 () {
					return this.V103;
				}

				public Boolean V103IsNullable(){
				    return true;
				}
				public Boolean V103IsKey(){
				    return false;
				}
				public Integer V103Length(){
				    return null;
				}
				public Integer V103Precision(){
				    return null;
				}
				public String V103Default(){
				
					return null;
				
				}
				public String V103Comment(){
				
				    return "";
				
				}
				public String V103Pattern(){
				
					return "";
				
				}
				public String V103OriginalDbColumnName(){
				
					return "V103";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row92Struct other = (row92Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row92Struct other) {

		other.V103 = this.V103;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row92Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V103 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V103 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V103, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V103, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V103="+V103);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row92Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_44Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_44_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row92Struct row92 = new row92Struct();




	
	/**
	 * [tAdvancedHash_row92 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row92", false);
		start_Hash.put("tAdvancedHash_row92", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row92";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row92");
					}
				
		int tos_count_tAdvancedHash_row92 = 0;
		

			   		// connection name:row92
			   		// source node:tOracleInput_44 - inputs:(after_tOracleInput_1) outputs:(row92,row92) | target node:tAdvancedHash_row92 - inputs:(row92) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row92 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row92Struct> tHash_Lookup_row92 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row92Struct>getLookup(matchingModeEnum_row92);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row92", tHash_Lookup_row92);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row92 begin ] stop
 */



	
	/**
	 * [tOracleInput_44 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_44", false);
		start_Hash.put("tOracleInput_44", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_44";
	
	
		int tos_count_tOracleInput_44 = 0;
		
	


	
		    int nb_line_tOracleInput_44 = 0;
		    java.sql.Connection conn_tOracleInput_44 = null;
				conn_tOracleInput_44 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_44 = false;
				boolean isConnectionWrapped_tOracleInput_44 = !(conn_tOracleInput_44 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_44.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_44 = null;
                if (isConnectionWrapped_tOracleInput_44) {
					unwrappedOraConn_tOracleInput_44 = conn_tOracleInput_44.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_44 != null) {
                        isTimeZoneNull_tOracleInput_44 = (unwrappedOraConn_tOracleInput_44.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_44 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_44).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_44) {
					java.sql.Statement stmtGetTZ_tOracleInput_44 = conn_tOracleInput_44.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_44 = stmtGetTZ_tOracleInput_44.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_44 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_44.next()) {
						sessionTimezone_tOracleInput_44 = rsGetTZ_tOracleInput_44.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_44 && unwrappedOraConn_tOracleInput_44 != null) {
                        unwrappedOraConn_tOracleInput_44.setSessionTimeZone(sessionTimezone_tOracleInput_44);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_44).setSessionTimeZone(sessionTimezone_tOracleInput_44);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_44 = conn_tOracleInput_44.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_44.setFetchSize(1000);


		    String dbquery_tOracleInput_44 = "SELECT \n  DISTINCT TO_CHAR (MAX(RE.FREGISTRO),'YYYY-MM-DD') AS V103, \n  PROC.PERSONAS_ID AS PERSONAS_ID \nFROM GEN_HE"
+"XAMENES H\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES T ON T.ID = PARA."
+"TEXAMENES_ID AND T.SIGLA = ('902213')\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASIST"
+"ENCIALES_ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHERE RE.FREGISTRO BET"
+"WEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID ";
		    

		    globalMap.put("tOracleInput_44_QUERY",dbquery_tOracleInput_44);

		    java.sql.ResultSet rs_tOracleInput_44 = null;

		    try {
		    	rs_tOracleInput_44 = stmt_tOracleInput_44.executeQuery(dbquery_tOracleInput_44);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_44 = rs_tOracleInput_44.getMetaData();
		    	int colQtyInRs_tOracleInput_44 = rsmd_tOracleInput_44.getColumnCount();

		    String tmpContent_tOracleInput_44 = null;
		    
		    
		    while (rs_tOracleInput_44.next()) {
		        nb_line_tOracleInput_44++;
		        
							if(colQtyInRs_tOracleInput_44 < 1) {
								row92.V103 = null;
							} else {
	                         		
        	row92.V103 = routines.system.JDBCUtil.getString(rs_tOracleInput_44, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_44 < 2) {
								row92.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_44.getObject(2) != null) {
						row92.PERSONAS_ID = rs_tOracleInput_44.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_44 begin ] stop
 */
	
	/**
	 * [tOracleInput_44 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 


	tos_count_tOracleInput_44++;

/**
 * [tOracleInput_44 main ] stop
 */
	
	/**
	 * [tOracleInput_44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row92 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row92";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row92"
						
						);
					}
					


			   
			   

					row92Struct row92_HashRow = new row92Struct();
		   	   	   
				
				row92_HashRow.V103 = row92.V103;
				
				row92_HashRow.PERSONAS_ID = row92.PERSONAS_ID;
				
			tHash_Lookup_row92.put(row92_HashRow);
			
            




 


	tos_count_tAdvancedHash_row92++;

/**
 * [tAdvancedHash_row92 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row92 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row92";
	
	

 



/**
 * [tAdvancedHash_row92 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row92 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row92";
	
	

 



/**
 * [tAdvancedHash_row92 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_44 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_44 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

}
}finally{
	if (rs_tOracleInput_44 != null) {
		rs_tOracleInput_44.close();
	}
	if (stmt_tOracleInput_44 != null) {
		stmt_tOracleInput_44.close();
	}
}

globalMap.put("tOracleInput_44_NB_LINE",nb_line_tOracleInput_44);
 

ok_Hash.put("tOracleInput_44", true);
end_Hash.put("tOracleInput_44", System.currentTimeMillis());




/**
 * [tOracleInput_44 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row92 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row92";
	
	

tHash_Lookup_row92.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row92");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row92", true);
end_Hash.put("tAdvancedHash_row92", System.currentTimeMillis());




/**
 * [tAdvancedHash_row92 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_44 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_44";
	
	

 



/**
 * [tOracleInput_44 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row92 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row92";
	
	

 



/**
 * [tAdvancedHash_row92 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_44_SUBPROCESS_STATE", 1);
	}
	


public static class row93Struct implements routines.system.IPersistableComparableLookupRow<row93Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V104;

				public BigDecimal getV104 () {
					return this.V104;
				}

				public Boolean V104IsNullable(){
				    return true;
				}
				public Boolean V104IsKey(){
				    return false;
				}
				public Integer V104Length(){
				    return null;
				}
				public Integer V104Precision(){
				    return null;
				}
				public String V104Default(){
				
					return "";
				
				}
				public String V104Comment(){
				
				    return "";
				
				}
				public String V104Pattern(){
				
					return "";
				
				}
				public String V104OriginalDbColumnName(){
				
					return "V104";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row93Struct other = (row93Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row93Struct other) {

		other.V104 = this.V104;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row93Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V104 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V104 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V104);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V104);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V104="+String.valueOf(V104));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row93Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_48Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_48_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row93Struct row93 = new row93Struct();




	
	/**
	 * [tAdvancedHash_row93 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row93", false);
		start_Hash.put("tAdvancedHash_row93", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row93";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row93");
					}
				
		int tos_count_tAdvancedHash_row93 = 0;
		

			   		// connection name:row93
			   		// source node:tOracleInput_48 - inputs:(after_tOracleInput_1) outputs:(row93,row93) | target node:tAdvancedHash_row93 - inputs:(row93) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row93 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row93Struct> tHash_Lookup_row93 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row93Struct>getLookup(matchingModeEnum_row93);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row93", tHash_Lookup_row93);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row93 begin ] stop
 */



	
	/**
	 * [tOracleInput_48 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_48", false);
		start_Hash.put("tOracleInput_48", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_48";
	
	
		int tos_count_tOracleInput_48 = 0;
		
	


	
		    int nb_line_tOracleInput_48 = 0;
		    java.sql.Connection conn_tOracleInput_48 = null;
				conn_tOracleInput_48 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_48 = false;
				boolean isConnectionWrapped_tOracleInput_48 = !(conn_tOracleInput_48 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_48.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_48 = null;
                if (isConnectionWrapped_tOracleInput_48) {
					unwrappedOraConn_tOracleInput_48 = conn_tOracleInput_48.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_48 != null) {
                        isTimeZoneNull_tOracleInput_48 = (unwrappedOraConn_tOracleInput_48.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_48 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_48).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_48) {
					java.sql.Statement stmtGetTZ_tOracleInput_48 = conn_tOracleInput_48.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_48 = stmtGetTZ_tOracleInput_48.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_48 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_48.next()) {
						sessionTimezone_tOracleInput_48 = rsGetTZ_tOracleInput_48.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_48 && unwrappedOraConn_tOracleInput_48 != null) {
                        unwrappedOraConn_tOracleInput_48.setSessionTimeZone(sessionTimezone_tOracleInput_48);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_48).setSessionTimeZone(sessionTimezone_tOracleInput_48);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_48 = conn_tOracleInput_48.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_48.setFetchSize(1000);


		    String dbquery_tOracleInput_48 = "SELECT \n  DISTINCT \n  CASE WHEN H.VALOR < 9999 THEN H.VALOR\n  WHEN H.VALOR > 9999 THEN 9999\n  ELSE TO_NUMBER('') EN"
+"D AS V104,\n  R.PACIENTE AS PERSONAS_ID\nFROM \n  (SELECT\n  MAX(RE.ID) AS ID,\n  RI.PACIENTE\n  FROM GEN_HEXAMENES H\n "
+" INNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\n  INNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAMENE"
+"S_ID AND T.SIGLA = '902213'\n  INNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENCIALES"
+"_ID\n  INNER JOIN RCA_CUPSOLICITADOS RC ON RC.ID=RE.CUPSOLICITADOS_ID\n  INNER JOIN RCA_INFGENERAL RI ON RI.ID=RC.INFGEN"
+"ERAL_ID\n  WHERE RE.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n  GROUP BY RI.PACIENTE\n  )R\n  INNER JOIN RCA_RESULTADOSCUPS RE ON RE.ID=R.ID\n  INNER JOIN GEN_H"
+"EXAMENES H ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENCIALES_ID";
		    

		    globalMap.put("tOracleInput_48_QUERY",dbquery_tOracleInput_48);

		    java.sql.ResultSet rs_tOracleInput_48 = null;

		    try {
		    	rs_tOracleInput_48 = stmt_tOracleInput_48.executeQuery(dbquery_tOracleInput_48);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_48 = rs_tOracleInput_48.getMetaData();
		    	int colQtyInRs_tOracleInput_48 = rsmd_tOracleInput_48.getColumnCount();

		    String tmpContent_tOracleInput_48 = null;
		    
		    
		    while (rs_tOracleInput_48.next()) {
		        nb_line_tOracleInput_48++;
		        
							if(colQtyInRs_tOracleInput_48 < 1) {
								row93.V104 = null;
							} else {
		                          
					if(rs_tOracleInput_48.getObject(1) != null) {
						row93.V104 = rs_tOracleInput_48.getBigDecimal(1);
					} else {
				
						row93.V104 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_48 < 2) {
								row93.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_48.getObject(2) != null) {
						row93.PERSONAS_ID = rs_tOracleInput_48.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_48 begin ] stop
 */
	
	/**
	 * [tOracleInput_48 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_48";
	
	

 


	tos_count_tOracleInput_48++;

/**
 * [tOracleInput_48 main ] stop
 */
	
	/**
	 * [tOracleInput_48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_48";
	
	

 



/**
 * [tOracleInput_48 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row93 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row93";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row93"
						
						);
					}
					


			   
			   

					row93Struct row93_HashRow = new row93Struct();
		   	   	   
				
				row93_HashRow.V104 = row93.V104;
				
				row93_HashRow.PERSONAS_ID = row93.PERSONAS_ID;
				
			tHash_Lookup_row93.put(row93_HashRow);
			
            




 


	tos_count_tAdvancedHash_row93++;

/**
 * [tAdvancedHash_row93 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row93 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row93";
	
	

 



/**
 * [tAdvancedHash_row93 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row93 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row93";
	
	

 



/**
 * [tAdvancedHash_row93 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_48 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_48";
	
	

 



/**
 * [tOracleInput_48 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_48 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_48";
	
	

}
}finally{
	if (rs_tOracleInput_48 != null) {
		rs_tOracleInput_48.close();
	}
	if (stmt_tOracleInput_48 != null) {
		stmt_tOracleInput_48.close();
	}
}

globalMap.put("tOracleInput_48_NB_LINE",nb_line_tOracleInput_48);
 

ok_Hash.put("tOracleInput_48", true);
end_Hash.put("tOracleInput_48", System.currentTimeMillis());




/**
 * [tOracleInput_48 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row93 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row93";
	
	

tHash_Lookup_row93.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row93");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row93", true);
end_Hash.put("tAdvancedHash_row93", System.currentTimeMillis());




/**
 * [tAdvancedHash_row93 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_48 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_48";
	
	

 



/**
 * [tOracleInput_48 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row93 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row93";
	
	

 



/**
 * [tAdvancedHash_row93 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_48_SUBPROCESS_STATE", 1);
	}
	


public static class row94Struct implements routines.system.IPersistableComparableLookupRow<row94Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V105;

				public String getV105 () {
					return this.V105;
				}

				public Boolean V105IsNullable(){
				    return true;
				}
				public Boolean V105IsKey(){
				    return false;
				}
				public Integer V105Length(){
				    return null;
				}
				public Integer V105Precision(){
				    return null;
				}
				public String V105Default(){
				
					return null;
				
				}
				public String V105Comment(){
				
				    return "";
				
				}
				public String V105Pattern(){
				
					return "";
				
				}
				public String V105OriginalDbColumnName(){
				
					return "V105";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row94Struct other = (row94Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row94Struct other) {

		other.V105 = this.V105;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row94Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V105 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V105 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V105, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V105, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V105="+V105);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row94Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_46Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_46_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row94Struct row94 = new row94Struct();




	
	/**
	 * [tAdvancedHash_row94 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row94", false);
		start_Hash.put("tAdvancedHash_row94", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row94";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row94");
					}
				
		int tos_count_tAdvancedHash_row94 = 0;
		

			   		// connection name:row94
			   		// source node:tOracleInput_46 - inputs:(after_tOracleInput_1) outputs:(row94,row94) | target node:tAdvancedHash_row94 - inputs:(row94) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row94 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row94Struct> tHash_Lookup_row94 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row94Struct>getLookup(matchingModeEnum_row94);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row94", tHash_Lookup_row94);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row94 begin ] stop
 */



	
	/**
	 * [tOracleInput_46 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_46", false);
		start_Hash.put("tOracleInput_46", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_46";
	
	
		int tos_count_tOracleInput_46 = 0;
		
	


	
		    int nb_line_tOracleInput_46 = 0;
		    java.sql.Connection conn_tOracleInput_46 = null;
				conn_tOracleInput_46 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_46 = false;
				boolean isConnectionWrapped_tOracleInput_46 = !(conn_tOracleInput_46 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_46.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_46 = null;
                if (isConnectionWrapped_tOracleInput_46) {
					unwrappedOraConn_tOracleInput_46 = conn_tOracleInput_46.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_46 != null) {
                        isTimeZoneNull_tOracleInput_46 = (unwrappedOraConn_tOracleInput_46.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_46 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_46).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_46) {
					java.sql.Statement stmtGetTZ_tOracleInput_46 = conn_tOracleInput_46.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_46 = stmtGetTZ_tOracleInput_46.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_46 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_46.next()) {
						sessionTimezone_tOracleInput_46 = rsGetTZ_tOracleInput_46.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_46 && unwrappedOraConn_tOracleInput_46 != null) {
                        unwrappedOraConn_tOracleInput_46.setSessionTimeZone(sessionTimezone_tOracleInput_46);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_46).setSessionTimeZone(sessionTimezone_tOracleInput_46);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_46 = conn_tOracleInput_46.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_46.setFetchSize(1000);


		    String dbquery_tOracleInput_46 = "SELECT \n  TO_CHAR (MAX(RE.FREGISTRO),'YYYY-MM-DD') AS V105, \n  PROC.PERSONAS_ID AS PERSONAS_ID \nFROM GEN_HEXAMENES H"
+"\n  INNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\n  INNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAM"
+"ENES_ID AND T.SIGLA = ('903844')\n  INNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENC"
+"IALES_ID\n  INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHERE RE.FREGISTRO BETW"
+"EEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_46_QUERY",dbquery_tOracleInput_46);

		    java.sql.ResultSet rs_tOracleInput_46 = null;

		    try {
		    	rs_tOracleInput_46 = stmt_tOracleInput_46.executeQuery(dbquery_tOracleInput_46);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_46 = rs_tOracleInput_46.getMetaData();
		    	int colQtyInRs_tOracleInput_46 = rsmd_tOracleInput_46.getColumnCount();

		    String tmpContent_tOracleInput_46 = null;
		    
		    
		    while (rs_tOracleInput_46.next()) {
		        nb_line_tOracleInput_46++;
		        
							if(colQtyInRs_tOracleInput_46 < 1) {
								row94.V105 = null;
							} else {
	                         		
        	row94.V105 = routines.system.JDBCUtil.getString(rs_tOracleInput_46, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_46 < 2) {
								row94.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_46.getObject(2) != null) {
						row94.PERSONAS_ID = rs_tOracleInput_46.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_46 begin ] stop
 */
	
	/**
	 * [tOracleInput_46 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_46";
	
	

 


	tos_count_tOracleInput_46++;

/**
 * [tOracleInput_46 main ] stop
 */
	
	/**
	 * [tOracleInput_46 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_46";
	
	

 



/**
 * [tOracleInput_46 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row94 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row94";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row94"
						
						);
					}
					


			   
			   

					row94Struct row94_HashRow = new row94Struct();
		   	   	   
				
				row94_HashRow.V105 = row94.V105;
				
				row94_HashRow.PERSONAS_ID = row94.PERSONAS_ID;
				
			tHash_Lookup_row94.put(row94_HashRow);
			
            




 


	tos_count_tAdvancedHash_row94++;

/**
 * [tAdvancedHash_row94 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row94 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row94";
	
	

 



/**
 * [tAdvancedHash_row94 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row94 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row94";
	
	

 



/**
 * [tAdvancedHash_row94 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_46 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_46";
	
	

 



/**
 * [tOracleInput_46 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_46 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_46";
	
	

}
}finally{
	if (rs_tOracleInput_46 != null) {
		rs_tOracleInput_46.close();
	}
	if (stmt_tOracleInput_46 != null) {
		stmt_tOracleInput_46.close();
	}
}

globalMap.put("tOracleInput_46_NB_LINE",nb_line_tOracleInput_46);
 

ok_Hash.put("tOracleInput_46", true);
end_Hash.put("tOracleInput_46", System.currentTimeMillis());




/**
 * [tOracleInput_46 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row94 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row94";
	
	

tHash_Lookup_row94.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row94");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row94", true);
end_Hash.put("tAdvancedHash_row94", System.currentTimeMillis());




/**
 * [tAdvancedHash_row94 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_46 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_46";
	
	

 



/**
 * [tOracleInput_46 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row94 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row94";
	
	

 



/**
 * [tAdvancedHash_row94 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_46_SUBPROCESS_STATE", 1);
	}
	


public static class row95Struct implements routines.system.IPersistableComparableLookupRow<row95Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V106;

				public String getV106 () {
					return this.V106;
				}

				public Boolean V106IsNullable(){
				    return true;
				}
				public Boolean V106IsKey(){
				    return false;
				}
				public Integer V106Length(){
				    return null;
				}
				public Integer V106Precision(){
				    return null;
				}
				public String V106Default(){
				
					return null;
				
				}
				public String V106Comment(){
				
				    return "";
				
				}
				public String V106Pattern(){
				
					return "";
				
				}
				public String V106OriginalDbColumnName(){
				
					return "V106";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row95Struct other = (row95Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row95Struct other) {

		other.V106 = this.V106;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row95Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V106 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V106 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V106, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V106, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V106="+V106);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row95Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_45Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row95Struct row95 = new row95Struct();




	
	/**
	 * [tAdvancedHash_row95 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row95", false);
		start_Hash.put("tAdvancedHash_row95", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row95";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row95");
					}
				
		int tos_count_tAdvancedHash_row95 = 0;
		

			   		// connection name:row95
			   		// source node:tOracleInput_45 - inputs:(after_tOracleInput_1) outputs:(row95,row95) | target node:tAdvancedHash_row95 - inputs:(row95) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row95 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row95Struct> tHash_Lookup_row95 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row95Struct>getLookup(matchingModeEnum_row95);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row95", tHash_Lookup_row95);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row95 begin ] stop
 */



	
	/**
	 * [tOracleInput_45 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_45", false);
		start_Hash.put("tOracleInput_45", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_45";
	
	
		int tos_count_tOracleInput_45 = 0;
		
	


	
		    int nb_line_tOracleInput_45 = 0;
		    java.sql.Connection conn_tOracleInput_45 = null;
				conn_tOracleInput_45 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_45 = false;
				boolean isConnectionWrapped_tOracleInput_45 = !(conn_tOracleInput_45 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_45.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_45 = null;
                if (isConnectionWrapped_tOracleInput_45) {
					unwrappedOraConn_tOracleInput_45 = conn_tOracleInput_45.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_45 != null) {
                        isTimeZoneNull_tOracleInput_45 = (unwrappedOraConn_tOracleInput_45.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_45 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_45).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_45) {
					java.sql.Statement stmtGetTZ_tOracleInput_45 = conn_tOracleInput_45.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_45 = stmtGetTZ_tOracleInput_45.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_45 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_45.next()) {
						sessionTimezone_tOracleInput_45 = rsGetTZ_tOracleInput_45.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_45 && unwrappedOraConn_tOracleInput_45 != null) {
                        unwrappedOraConn_tOracleInput_45.setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_45).setSessionTimeZone(sessionTimezone_tOracleInput_45);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_45 = conn_tOracleInput_45.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_45.setFetchSize(1000);


		    String dbquery_tOracleInput_45 = "SELECT \n  TO_CHAR (MAX(RE.FREGISTRO),'YYYY-MM-DD') AS V106, \n  PROC.PERSONAS_ID AS PERSONAS_ID \nFROM GEN_HEXAMENES H"
+"\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAMENES"
+"_ID AND T.SIGLA IN ('903823','903824','903876','903895')\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_I"
+"D = H.PROCESOSASISTENCIALES_ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHE"
+"RE RE.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID ";
		    

		    globalMap.put("tOracleInput_45_QUERY",dbquery_tOracleInput_45);

		    java.sql.ResultSet rs_tOracleInput_45 = null;

		    try {
		    	rs_tOracleInput_45 = stmt_tOracleInput_45.executeQuery(dbquery_tOracleInput_45);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_45 = rs_tOracleInput_45.getMetaData();
		    	int colQtyInRs_tOracleInput_45 = rsmd_tOracleInput_45.getColumnCount();

		    String tmpContent_tOracleInput_45 = null;
		    
		    
		    while (rs_tOracleInput_45.next()) {
		        nb_line_tOracleInput_45++;
		        
							if(colQtyInRs_tOracleInput_45 < 1) {
								row95.V106 = null;
							} else {
	                         		
        	row95.V106 = routines.system.JDBCUtil.getString(rs_tOracleInput_45, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_45 < 2) {
								row95.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_45.getObject(2) != null) {
						row95.PERSONAS_ID = rs_tOracleInput_45.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_45 begin ] stop
 */
	
	/**
	 * [tOracleInput_45 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 


	tos_count_tOracleInput_45++;

/**
 * [tOracleInput_45 main ] stop
 */
	
	/**
	 * [tOracleInput_45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row95 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row95";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row95"
						
						);
					}
					


			   
			   

					row95Struct row95_HashRow = new row95Struct();
		   	   	   
				
				row95_HashRow.V106 = row95.V106;
				
				row95_HashRow.PERSONAS_ID = row95.PERSONAS_ID;
				
			tHash_Lookup_row95.put(row95_HashRow);
			
            




 


	tos_count_tAdvancedHash_row95++;

/**
 * [tAdvancedHash_row95 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row95 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row95";
	
	

 



/**
 * [tAdvancedHash_row95 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row95 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row95";
	
	

 



/**
 * [tAdvancedHash_row95 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_45 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_45 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

}
}finally{
	if (rs_tOracleInput_45 != null) {
		rs_tOracleInput_45.close();
	}
	if (stmt_tOracleInput_45 != null) {
		stmt_tOracleInput_45.close();
	}
}

globalMap.put("tOracleInput_45_NB_LINE",nb_line_tOracleInput_45);
 

ok_Hash.put("tOracleInput_45", true);
end_Hash.put("tOracleInput_45", System.currentTimeMillis());




/**
 * [tOracleInput_45 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row95 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row95";
	
	

tHash_Lookup_row95.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row95");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row95", true);
end_Hash.put("tAdvancedHash_row95", System.currentTimeMillis());




/**
 * [tAdvancedHash_row95 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_45 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_45";
	
	

 



/**
 * [tOracleInput_45 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row95 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row95";
	
	

 



/**
 * [tAdvancedHash_row95 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_45_SUBPROCESS_STATE", 1);
	}
	


public static class row96Struct implements routines.system.IPersistableComparableLookupRow<row96Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V107;

				public BigDecimal getV107 () {
					return this.V107;
				}

				public Boolean V107IsNullable(){
				    return true;
				}
				public Boolean V107IsKey(){
				    return false;
				}
				public Integer V107Length(){
				    return null;
				}
				public Integer V107Precision(){
				    return null;
				}
				public String V107Default(){
				
					return "";
				
				}
				public String V107Comment(){
				
				    return "";
				
				}
				public String V107Pattern(){
				
					return "";
				
				}
				public String V107OriginalDbColumnName(){
				
					return "V107";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row96Struct other = (row96Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row96Struct other) {

		other.V107 = this.V107;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row96Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V107 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V107 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V107);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V107);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V107="+String.valueOf(V107));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row96Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_47Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_47_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row96Struct row96 = new row96Struct();




	
	/**
	 * [tAdvancedHash_row96 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row96", false);
		start_Hash.put("tAdvancedHash_row96", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row96";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row96");
					}
				
		int tos_count_tAdvancedHash_row96 = 0;
		

			   		// connection name:row96
			   		// source node:tOracleInput_47 - inputs:(after_tOracleInput_1) outputs:(row96,row96) | target node:tAdvancedHash_row96 - inputs:(row96) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row96 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row96Struct> tHash_Lookup_row96 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row96Struct>getLookup(matchingModeEnum_row96);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row96", tHash_Lookup_row96);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row96 begin ] stop
 */



	
	/**
	 * [tOracleInput_47 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_47", false);
		start_Hash.put("tOracleInput_47", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_47";
	
	
		int tos_count_tOracleInput_47 = 0;
		
	


	
		    int nb_line_tOracleInput_47 = 0;
		    java.sql.Connection conn_tOracleInput_47 = null;
				conn_tOracleInput_47 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_47 = false;
				boolean isConnectionWrapped_tOracleInput_47 = !(conn_tOracleInput_47 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_47.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_47 = null;
                if (isConnectionWrapped_tOracleInput_47) {
					unwrappedOraConn_tOracleInput_47 = conn_tOracleInput_47.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_47 != null) {
                        isTimeZoneNull_tOracleInput_47 = (unwrappedOraConn_tOracleInput_47.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_47 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_47).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_47) {
					java.sql.Statement stmtGetTZ_tOracleInput_47 = conn_tOracleInput_47.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_47 = stmtGetTZ_tOracleInput_47.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_47 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_47.next()) {
						sessionTimezone_tOracleInput_47 = rsGetTZ_tOracleInput_47.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_47 && unwrappedOraConn_tOracleInput_47 != null) {
                        unwrappedOraConn_tOracleInput_47.setSessionTimeZone(sessionTimezone_tOracleInput_47);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_47).setSessionTimeZone(sessionTimezone_tOracleInput_47);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_47 = conn_tOracleInput_47.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_47.setFetchSize(1000);


		    String dbquery_tOracleInput_47 = "SELECT \n  CASE WHEN HE.VALOR < 999999 THEN HE.VALOR\n  WHEN HE.VALOR IS NULL  OR  HE.VALOR > 999999 THEN 999\n  ELSE T"
+"O_NUMBER('') END AS V107,\n  I.PERSONAS_ID AS PERSONAS_ID \nFROM(\nSELECT MAX(PROC.ID) AS ID, PROC.PERSONAS_ID AS PERSON"
+"AS_ID  FROM GEN_HEXAMENES H\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES"
+" T ON T.ID = PARA.TEXAMENES_ID AND T.SIGLA IN ('903823','903824','903876','903895')\nINNER JOIN RCA_RESULTADOSCUPS RE ON"
+" RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENCIALES_ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PRO"
+"CESOSASISTENCIALES_ID \nWHERE RE.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID \n) I\nINNER JOIN GEN_HEXAMENES HE ON HE.PROCESOSASISTENCIALES_ID =  I.I"
+"D";
		    

		    globalMap.put("tOracleInput_47_QUERY",dbquery_tOracleInput_47);

		    java.sql.ResultSet rs_tOracleInput_47 = null;

		    try {
		    	rs_tOracleInput_47 = stmt_tOracleInput_47.executeQuery(dbquery_tOracleInput_47);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_47 = rs_tOracleInput_47.getMetaData();
		    	int colQtyInRs_tOracleInput_47 = rsmd_tOracleInput_47.getColumnCount();

		    String tmpContent_tOracleInput_47 = null;
		    
		    
		    while (rs_tOracleInput_47.next()) {
		        nb_line_tOracleInput_47++;
		        
							if(colQtyInRs_tOracleInput_47 < 1) {
								row96.V107 = null;
							} else {
		                          
					if(rs_tOracleInput_47.getObject(1) != null) {
						row96.V107 = rs_tOracleInput_47.getBigDecimal(1);
					} else {
				
						row96.V107 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_47 < 2) {
								row96.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_47.getObject(2) != null) {
						row96.PERSONAS_ID = rs_tOracleInput_47.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_47 begin ] stop
 */
	
	/**
	 * [tOracleInput_47 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_47";
	
	

 


	tos_count_tOracleInput_47++;

/**
 * [tOracleInput_47 main ] stop
 */
	
	/**
	 * [tOracleInput_47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_47";
	
	

 



/**
 * [tOracleInput_47 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row96 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row96";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row96"
						
						);
					}
					


			   
			   

					row96Struct row96_HashRow = new row96Struct();
		   	   	   
				
				row96_HashRow.V107 = row96.V107;
				
				row96_HashRow.PERSONAS_ID = row96.PERSONAS_ID;
				
			tHash_Lookup_row96.put(row96_HashRow);
			
            




 


	tos_count_tAdvancedHash_row96++;

/**
 * [tAdvancedHash_row96 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row96 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row96";
	
	

 



/**
 * [tAdvancedHash_row96 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row96 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row96";
	
	

 



/**
 * [tAdvancedHash_row96 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_47 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_47";
	
	

 



/**
 * [tOracleInput_47 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_47 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_47";
	
	

}
}finally{
	if (rs_tOracleInput_47 != null) {
		rs_tOracleInput_47.close();
	}
	if (stmt_tOracleInput_47 != null) {
		stmt_tOracleInput_47.close();
	}
}

globalMap.put("tOracleInput_47_NB_LINE",nb_line_tOracleInput_47);
 

ok_Hash.put("tOracleInput_47", true);
end_Hash.put("tOracleInput_47", System.currentTimeMillis());




/**
 * [tOracleInput_47 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row96 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row96";
	
	

tHash_Lookup_row96.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row96");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row96", true);
end_Hash.put("tAdvancedHash_row96", System.currentTimeMillis());




/**
 * [tAdvancedHash_row96 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_47 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_47";
	
	

 



/**
 * [tOracleInput_47 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row96 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row96";
	
	

 



/**
 * [tAdvancedHash_row96 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_47_SUBPROCESS_STATE", 1);
	}
	


public static class row97Struct implements routines.system.IPersistableComparableLookupRow<row97Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V108;

				public String getV108 () {
					return this.V108;
				}

				public Boolean V108IsNullable(){
				    return true;
				}
				public Boolean V108IsKey(){
				    return false;
				}
				public Integer V108Length(){
				    return null;
				}
				public Integer V108Precision(){
				    return null;
				}
				public String V108Default(){
				
					return null;
				
				}
				public String V108Comment(){
				
				    return "";
				
				}
				public String V108Pattern(){
				
					return "";
				
				}
				public String V108OriginalDbColumnName(){
				
					return "V108";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row97Struct other = (row97Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row97Struct other) {

		other.V108 = this.V108;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row97Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V108 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V108 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V108, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V108, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V108="+V108);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row97Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_49Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_49_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row97Struct row97 = new row97Struct();




	
	/**
	 * [tAdvancedHash_row97 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row97", false);
		start_Hash.put("tAdvancedHash_row97", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row97";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row97");
					}
				
		int tos_count_tAdvancedHash_row97 = 0;
		

			   		// connection name:row97
			   		// source node:tOracleInput_49 - inputs:(after_tOracleInput_1) outputs:(row97,row97) | target node:tAdvancedHash_row97 - inputs:(row97) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row97 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row97Struct> tHash_Lookup_row97 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row97Struct>getLookup(matchingModeEnum_row97);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row97", tHash_Lookup_row97);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row97 begin ] stop
 */



	
	/**
	 * [tOracleInput_49 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_49", false);
		start_Hash.put("tOracleInput_49", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_49";
	
	
		int tos_count_tOracleInput_49 = 0;
		
	


	
		    int nb_line_tOracleInput_49 = 0;
		    java.sql.Connection conn_tOracleInput_49 = null;
				conn_tOracleInput_49 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_49 = false;
				boolean isConnectionWrapped_tOracleInput_49 = !(conn_tOracleInput_49 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_49.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_49 = null;
                if (isConnectionWrapped_tOracleInput_49) {
					unwrappedOraConn_tOracleInput_49 = conn_tOracleInput_49.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_49 != null) {
                        isTimeZoneNull_tOracleInput_49 = (unwrappedOraConn_tOracleInput_49.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_49 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_49).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_49) {
					java.sql.Statement stmtGetTZ_tOracleInput_49 = conn_tOracleInput_49.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_49 = stmtGetTZ_tOracleInput_49.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_49 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_49.next()) {
						sessionTimezone_tOracleInput_49 = rsGetTZ_tOracleInput_49.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_49 && unwrappedOraConn_tOracleInput_49 != null) {
                        unwrappedOraConn_tOracleInput_49.setSessionTimeZone(sessionTimezone_tOracleInput_49);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_49).setSessionTimeZone(sessionTimezone_tOracleInput_49);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_49 = conn_tOracleInput_49.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_49.setFetchSize(1000);


		    String dbquery_tOracleInput_49 = "SELECT \n  TO_CHAR (MAX(RE.FREGISTRO),'YYYY-MM-DD') AS V108, \n  PROC.PERSONAS_ID AS PERSONAS_ID \nFROM GEN_HEXAMENES H"
+"\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAMENES"
+"_ID AND T.SIGLA = ('903426')\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENCIALES_"
+"ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHERE RE.FREGISTRO BETWEEN TO_D"
+"ATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_49_QUERY",dbquery_tOracleInput_49);

		    java.sql.ResultSet rs_tOracleInput_49 = null;

		    try {
		    	rs_tOracleInput_49 = stmt_tOracleInput_49.executeQuery(dbquery_tOracleInput_49);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_49 = rs_tOracleInput_49.getMetaData();
		    	int colQtyInRs_tOracleInput_49 = rsmd_tOracleInput_49.getColumnCount();

		    String tmpContent_tOracleInput_49 = null;
		    
		    
		    while (rs_tOracleInput_49.next()) {
		        nb_line_tOracleInput_49++;
		        
							if(colQtyInRs_tOracleInput_49 < 1) {
								row97.V108 = null;
							} else {
	                         		
        	row97.V108 = routines.system.JDBCUtil.getString(rs_tOracleInput_49, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_49 < 2) {
								row97.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_49.getObject(2) != null) {
						row97.PERSONAS_ID = rs_tOracleInput_49.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_49 begin ] stop
 */
	
	/**
	 * [tOracleInput_49 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_49";
	
	

 


	tos_count_tOracleInput_49++;

/**
 * [tOracleInput_49 main ] stop
 */
	
	/**
	 * [tOracleInput_49 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_49";
	
	

 



/**
 * [tOracleInput_49 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row97 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row97";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row97"
						
						);
					}
					


			   
			   

					row97Struct row97_HashRow = new row97Struct();
		   	   	   
				
				row97_HashRow.V108 = row97.V108;
				
				row97_HashRow.PERSONAS_ID = row97.PERSONAS_ID;
				
			tHash_Lookup_row97.put(row97_HashRow);
			
            




 


	tos_count_tAdvancedHash_row97++;

/**
 * [tAdvancedHash_row97 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row97 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row97";
	
	

 



/**
 * [tAdvancedHash_row97 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row97 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row97";
	
	

 



/**
 * [tAdvancedHash_row97 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_49 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_49";
	
	

 



/**
 * [tOracleInput_49 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_49 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_49";
	
	

}
}finally{
	if (rs_tOracleInput_49 != null) {
		rs_tOracleInput_49.close();
	}
	if (stmt_tOracleInput_49 != null) {
		stmt_tOracleInput_49.close();
	}
}

globalMap.put("tOracleInput_49_NB_LINE",nb_line_tOracleInput_49);
 

ok_Hash.put("tOracleInput_49", true);
end_Hash.put("tOracleInput_49", System.currentTimeMillis());




/**
 * [tOracleInput_49 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row97 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row97";
	
	

tHash_Lookup_row97.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row97");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row97", true);
end_Hash.put("tAdvancedHash_row97", System.currentTimeMillis());




/**
 * [tAdvancedHash_row97 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_49 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_49";
	
	

 



/**
 * [tOracleInput_49 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row97 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row97";
	
	

 



/**
 * [tAdvancedHash_row97 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_49_SUBPROCESS_STATE", 1);
	}
	


public static class row98Struct implements routines.system.IPersistableComparableLookupRow<row98Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V109;

				public BigDecimal getV109 () {
					return this.V109;
				}

				public Boolean V109IsNullable(){
				    return true;
				}
				public Boolean V109IsKey(){
				    return false;
				}
				public Integer V109Length(){
				    return null;
				}
				public Integer V109Precision(){
				    return null;
				}
				public String V109Default(){
				
					return "";
				
				}
				public String V109Comment(){
				
				    return "";
				
				}
				public String V109Pattern(){
				
					return "";
				
				}
				public String V109OriginalDbColumnName(){
				
					return "V109";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row98Struct other = (row98Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row98Struct other) {

		other.V109 = this.V109;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row98Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V109 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V109 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V109);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V109);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V109="+String.valueOf(V109));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row98Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_50Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_50_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row98Struct row98 = new row98Struct();




	
	/**
	 * [tAdvancedHash_row98 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row98", false);
		start_Hash.put("tAdvancedHash_row98", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row98";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row98");
					}
				
		int tos_count_tAdvancedHash_row98 = 0;
		

			   		// connection name:row98
			   		// source node:tOracleInput_50 - inputs:(after_tOracleInput_1) outputs:(row98,row98) | target node:tAdvancedHash_row98 - inputs:(row98) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row98 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row98Struct> tHash_Lookup_row98 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row98Struct>getLookup(matchingModeEnum_row98);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row98", tHash_Lookup_row98);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row98 begin ] stop
 */



	
	/**
	 * [tOracleInput_50 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_50", false);
		start_Hash.put("tOracleInput_50", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_50";
	
	
		int tos_count_tOracleInput_50 = 0;
		
	


	
		    int nb_line_tOracleInput_50 = 0;
		    java.sql.Connection conn_tOracleInput_50 = null;
				conn_tOracleInput_50 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_50 = false;
				boolean isConnectionWrapped_tOracleInput_50 = !(conn_tOracleInput_50 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_50.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_50 = null;
                if (isConnectionWrapped_tOracleInput_50) {
					unwrappedOraConn_tOracleInput_50 = conn_tOracleInput_50.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_50 != null) {
                        isTimeZoneNull_tOracleInput_50 = (unwrappedOraConn_tOracleInput_50.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_50 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_50).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_50) {
					java.sql.Statement stmtGetTZ_tOracleInput_50 = conn_tOracleInput_50.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_50 = stmtGetTZ_tOracleInput_50.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_50 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_50.next()) {
						sessionTimezone_tOracleInput_50 = rsGetTZ_tOracleInput_50.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_50 && unwrappedOraConn_tOracleInput_50 != null) {
                        unwrappedOraConn_tOracleInput_50.setSessionTimeZone(sessionTimezone_tOracleInput_50);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_50).setSessionTimeZone(sessionTimezone_tOracleInput_50);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_50 = conn_tOracleInput_50.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_50.setFetchSize(1000);


		    String dbquery_tOracleInput_50 = "SELECT \n  CASE WHEN HE.VALOR < 999999 THEN HE.VALOR\n  WHEN HE.VALOR IS NULL  OR  HE.VALOR > 999999 THEN 999\n  ELSE T"
+"O_NUMBER('') END AS V109,\n  I.PERSONAS_ID AS PERSONAS_ID \nFROM(\nSELECT MAX(PROC.ID) AS ID, PROC.PERSONAS_ID AS PERSON"
+"AS_ID FROM GEN_HEXAMENES H\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES "
+"T ON T.ID = PARA.TEXAMENES_ID AND T.SIGLA IN ('903426')\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID"
+" = H.PROCESOSASISTENCIALES_ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHER"
+"E RE.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROC.PERSONAS_ID \n) I\nINNER JOIN GEN_HEXAMENES HE ON HE.PROCESOSASISTENCIALES_ID =  I.I"
+"D";
		    

		    globalMap.put("tOracleInput_50_QUERY",dbquery_tOracleInput_50);

		    java.sql.ResultSet rs_tOracleInput_50 = null;

		    try {
		    	rs_tOracleInput_50 = stmt_tOracleInput_50.executeQuery(dbquery_tOracleInput_50);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_50 = rs_tOracleInput_50.getMetaData();
		    	int colQtyInRs_tOracleInput_50 = rsmd_tOracleInput_50.getColumnCount();

		    String tmpContent_tOracleInput_50 = null;
		    
		    
		    while (rs_tOracleInput_50.next()) {
		        nb_line_tOracleInput_50++;
		        
							if(colQtyInRs_tOracleInput_50 < 1) {
								row98.V109 = null;
							} else {
		                          
					if(rs_tOracleInput_50.getObject(1) != null) {
						row98.V109 = rs_tOracleInput_50.getBigDecimal(1);
					} else {
				
						row98.V109 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_50 < 2) {
								row98.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_50.getObject(2) != null) {
						row98.PERSONAS_ID = rs_tOracleInput_50.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_50 begin ] stop
 */
	
	/**
	 * [tOracleInput_50 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 


	tos_count_tOracleInput_50++;

/**
 * [tOracleInput_50 main ] stop
 */
	
	/**
	 * [tOracleInput_50 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row98 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row98";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row98"
						
						);
					}
					


			   
			   

					row98Struct row98_HashRow = new row98Struct();
		   	   	   
				
				row98_HashRow.V109 = row98.V109;
				
				row98_HashRow.PERSONAS_ID = row98.PERSONAS_ID;
				
			tHash_Lookup_row98.put(row98_HashRow);
			
            




 


	tos_count_tAdvancedHash_row98++;

/**
 * [tAdvancedHash_row98 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row98 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row98";
	
	

 



/**
 * [tAdvancedHash_row98 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row98 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row98";
	
	

 



/**
 * [tAdvancedHash_row98 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_50 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_50 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

}
}finally{
	if (rs_tOracleInput_50 != null) {
		rs_tOracleInput_50.close();
	}
	if (stmt_tOracleInput_50 != null) {
		stmt_tOracleInput_50.close();
	}
}

globalMap.put("tOracleInput_50_NB_LINE",nb_line_tOracleInput_50);
 

ok_Hash.put("tOracleInput_50", true);
end_Hash.put("tOracleInput_50", System.currentTimeMillis());




/**
 * [tOracleInput_50 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row98 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row98";
	
	

tHash_Lookup_row98.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row98");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row98", true);
end_Hash.put("tAdvancedHash_row98", System.currentTimeMillis());




/**
 * [tAdvancedHash_row98 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_50 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_50";
	
	

 



/**
 * [tOracleInput_50 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row98 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row98";
	
	

 



/**
 * [tAdvancedHash_row98 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_50_SUBPROCESS_STATE", 1);
	}
	


public static class row99Struct implements routines.system.IPersistableComparableLookupRow<row99Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V110;

				public String getV110 () {
					return this.V110;
				}

				public Boolean V110IsNullable(){
				    return true;
				}
				public Boolean V110IsKey(){
				    return false;
				}
				public Integer V110Length(){
				    return null;
				}
				public Integer V110Precision(){
				    return null;
				}
				public String V110Default(){
				
					return null;
				
				}
				public String V110Comment(){
				
				    return "";
				
				}
				public String V110Pattern(){
				
					return "";
				
				}
				public String V110OriginalDbColumnName(){
				
					return "V110";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row99Struct other = (row99Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row99Struct other) {

		other.V110 = this.V110;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row99Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V110 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V110 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V110, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V110, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V110="+V110);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row99Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_51Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_51_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row99Struct row99 = new row99Struct();




	
	/**
	 * [tAdvancedHash_row99 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row99", false);
		start_Hash.put("tAdvancedHash_row99", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row99";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row99");
					}
				
		int tos_count_tAdvancedHash_row99 = 0;
		

			   		// connection name:row99
			   		// source node:tOracleInput_51 - inputs:(after_tOracleInput_1) outputs:(row99,row99) | target node:tAdvancedHash_row99 - inputs:(row99) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row99 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row99Struct> tHash_Lookup_row99 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row99Struct>getLookup(matchingModeEnum_row99);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row99", tHash_Lookup_row99);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row99 begin ] stop
 */



	
	/**
	 * [tOracleInput_51 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_51", false);
		start_Hash.put("tOracleInput_51", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_51";
	
	
		int tos_count_tOracleInput_51 = 0;
		
	


	
		    int nb_line_tOracleInput_51 = 0;
		    java.sql.Connection conn_tOracleInput_51 = null;
				conn_tOracleInput_51 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_51 = false;
				boolean isConnectionWrapped_tOracleInput_51 = !(conn_tOracleInput_51 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_51.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_51 = null;
                if (isConnectionWrapped_tOracleInput_51) {
					unwrappedOraConn_tOracleInput_51 = conn_tOracleInput_51.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_51 != null) {
                        isTimeZoneNull_tOracleInput_51 = (unwrappedOraConn_tOracleInput_51.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_51 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_51).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_51) {
					java.sql.Statement stmtGetTZ_tOracleInput_51 = conn_tOracleInput_51.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_51 = stmtGetTZ_tOracleInput_51.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_51 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_51.next()) {
						sessionTimezone_tOracleInput_51 = rsGetTZ_tOracleInput_51.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_51 && unwrappedOraConn_tOracleInput_51 != null) {
                        unwrappedOraConn_tOracleInput_51.setSessionTimeZone(sessionTimezone_tOracleInput_51);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_51).setSessionTimeZone(sessionTimezone_tOracleInput_51);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_51 = conn_tOracleInput_51.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_51.setFetchSize(1000);


		    String dbquery_tOracleInput_51 = "SELECT \n  TO_CHAR (MAX(RE.FREGISTRO),'YYYY-MM-DD') AS V110, \n  PROC.PERSONAS_ID AS PERSONAS_ID \nFROM GEN_HEXAMENES H"
+"\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAMENES"
+"_ID AND T.SIGLA IN ('903026','903028','903027')\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PRO"
+"CESOSASISTENCIALES_ID\nINNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = RE.PROCESOSASISTENCIALES_ID \nWHERE RE.FRE"
+"GISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1 \nGROUP BY PROC.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_51_QUERY",dbquery_tOracleInput_51);

		    java.sql.ResultSet rs_tOracleInput_51 = null;

		    try {
		    	rs_tOracleInput_51 = stmt_tOracleInput_51.executeQuery(dbquery_tOracleInput_51);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_51 = rs_tOracleInput_51.getMetaData();
		    	int colQtyInRs_tOracleInput_51 = rsmd_tOracleInput_51.getColumnCount();

		    String tmpContent_tOracleInput_51 = null;
		    
		    
		    while (rs_tOracleInput_51.next()) {
		        nb_line_tOracleInput_51++;
		        
							if(colQtyInRs_tOracleInput_51 < 1) {
								row99.V110 = null;
							} else {
	                         		
        	row99.V110 = routines.system.JDBCUtil.getString(rs_tOracleInput_51, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_51 < 2) {
								row99.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_51.getObject(2) != null) {
						row99.PERSONAS_ID = rs_tOracleInput_51.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_51 begin ] stop
 */
	
	/**
	 * [tOracleInput_51 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 


	tos_count_tOracleInput_51++;

/**
 * [tOracleInput_51 main ] stop
 */
	
	/**
	 * [tOracleInput_51 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row99 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row99";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row99"
						
						);
					}
					


			   
			   

					row99Struct row99_HashRow = new row99Struct();
		   	   	   
				
				row99_HashRow.V110 = row99.V110;
				
				row99_HashRow.PERSONAS_ID = row99.PERSONAS_ID;
				
			tHash_Lookup_row99.put(row99_HashRow);
			
            




 


	tos_count_tAdvancedHash_row99++;

/**
 * [tAdvancedHash_row99 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row99 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row99";
	
	

 



/**
 * [tAdvancedHash_row99 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row99 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row99";
	
	

 



/**
 * [tAdvancedHash_row99 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_51 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_51 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

}
}finally{
	if (rs_tOracleInput_51 != null) {
		rs_tOracleInput_51.close();
	}
	if (stmt_tOracleInput_51 != null) {
		stmt_tOracleInput_51.close();
	}
}

globalMap.put("tOracleInput_51_NB_LINE",nb_line_tOracleInput_51);
 

ok_Hash.put("tOracleInput_51", true);
end_Hash.put("tOracleInput_51", System.currentTimeMillis());




/**
 * [tOracleInput_51 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row99 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row99";
	
	

tHash_Lookup_row99.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row99");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row99", true);
end_Hash.put("tAdvancedHash_row99", System.currentTimeMillis());




/**
 * [tAdvancedHash_row99 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_51 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_51";
	
	

 



/**
 * [tOracleInput_51 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row99 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row99";
	
	

 



/**
 * [tAdvancedHash_row99 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_51_SUBPROCESS_STATE", 1);
	}
	


public static class row100Struct implements routines.system.IPersistableComparableLookupRow<row100Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V111;

				public String getV111 () {
					return this.V111;
				}

				public Boolean V111IsNullable(){
				    return true;
				}
				public Boolean V111IsKey(){
				    return false;
				}
				public Integer V111Length(){
				    return 10;
				}
				public Integer V111Precision(){
				    return 0;
				}
				public String V111Default(){
				
					return null;
				
				}
				public String V111Comment(){
				
				    return "";
				
				}
				public String V111Pattern(){
				
					return "";
				
				}
				public String V111OriginalDbColumnName(){
				
					return "V111";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return 0;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row100Struct other = (row100Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row100Struct other) {

		other.V111 = this.V111;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row100Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V111 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V111 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V111, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V111, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V111="+V111);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row100Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_52Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_52_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row100Struct row100 = new row100Struct();




	
	/**
	 * [tAdvancedHash_row100 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row100", false);
		start_Hash.put("tAdvancedHash_row100", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row100";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row100");
					}
				
		int tos_count_tAdvancedHash_row100 = 0;
		

			   		// connection name:row100
			   		// source node:tOracleInput_52 - inputs:(after_tOracleInput_1) outputs:(row100,row100) | target node:tAdvancedHash_row100 - inputs:(row100) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row100 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row100Struct> tHash_Lookup_row100 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row100Struct>getLookup(matchingModeEnum_row100);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row100", tHash_Lookup_row100);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row100 begin ] stop
 */



	
	/**
	 * [tOracleInput_52 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_52", false);
		start_Hash.put("tOracleInput_52", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_52";
	
	
		int tos_count_tOracleInput_52 = 0;
		
	


	
		    int nb_line_tOracleInput_52 = 0;
		    java.sql.Connection conn_tOracleInput_52 = null;
				conn_tOracleInput_52 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_52 = false;
				boolean isConnectionWrapped_tOracleInput_52 = !(conn_tOracleInput_52 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_52.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_52 = null;
                if (isConnectionWrapped_tOracleInput_52) {
					unwrappedOraConn_tOracleInput_52 = conn_tOracleInput_52.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_52 != null) {
                        isTimeZoneNull_tOracleInput_52 = (unwrappedOraConn_tOracleInput_52.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_52 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_52).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_52) {
					java.sql.Statement stmtGetTZ_tOracleInput_52 = conn_tOracleInput_52.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_52 = stmtGetTZ_tOracleInput_52.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_52 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_52.next()) {
						sessionTimezone_tOracleInput_52 = rsGetTZ_tOracleInput_52.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_52 && unwrappedOraConn_tOracleInput_52 != null) {
                        unwrappedOraConn_tOracleInput_52.setSessionTimeZone(sessionTimezone_tOracleInput_52);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_52).setSessionTimeZone(sessionTimezone_tOracleInput_52);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_52 = conn_tOracleInput_52.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_52.setFetchSize(1000);


		    String dbquery_tOracleInput_52 = "SELECT \n  nvl(TO_CHAR (MAX(RE.FTOMA),'YYYY-MM-DD'), '1800-01-01') AS V111, \n  PROA.PERSONAS_ID \nFROM GEN_HEXAMENES H"
+"\nINNER JOIN GEN_PARAMEXAMENES PARA ON PARA.ID = H.PARAMEXAMENES_ID\nINNER JOIN GEN_TEXAMENES T ON T.ID = PARA.TEXAMENES"
+"_ID AND T.SIGLA ='903815'\nINNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = H.PROCESOSASISTENCIALES_ID"
+"\nINNER JOIN HCL_PROCESOSASISTENCIALES PROA ON PROA.ID = RE.PROCESOSASISTENCIALES_ID AND PROA.ESTREGISTRO_ID = 1\nWHERE R"
+"E.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PROA.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_52_QUERY",dbquery_tOracleInput_52);

		    java.sql.ResultSet rs_tOracleInput_52 = null;

		    try {
		    	rs_tOracleInput_52 = stmt_tOracleInput_52.executeQuery(dbquery_tOracleInput_52);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_52 = rs_tOracleInput_52.getMetaData();
		    	int colQtyInRs_tOracleInput_52 = rsmd_tOracleInput_52.getColumnCount();

		    String tmpContent_tOracleInput_52 = null;
		    
		    
		    while (rs_tOracleInput_52.next()) {
		        nb_line_tOracleInput_52++;
		        
							if(colQtyInRs_tOracleInput_52 < 1) {
								row100.V111 = null;
							} else {
	                         		
        	row100.V111 = routines.system.JDBCUtil.getString(rs_tOracleInput_52, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_52 < 2) {
								row100.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_52.getObject(2) != null) {
						row100.PERSONAS_ID = rs_tOracleInput_52.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_52 begin ] stop
 */
	
	/**
	 * [tOracleInput_52 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 


	tos_count_tOracleInput_52++;

/**
 * [tOracleInput_52 main ] stop
 */
	
	/**
	 * [tOracleInput_52 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row100 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row100";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row100"
						
						);
					}
					


			   
			   

					row100Struct row100_HashRow = new row100Struct();
		   	   	   
				
				row100_HashRow.V111 = row100.V111;
				
				row100_HashRow.PERSONAS_ID = row100.PERSONAS_ID;
				
			tHash_Lookup_row100.put(row100_HashRow);
			
            




 


	tos_count_tAdvancedHash_row100++;

/**
 * [tAdvancedHash_row100 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row100 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row100";
	
	

 



/**
 * [tAdvancedHash_row100 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row100 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row100";
	
	

 



/**
 * [tAdvancedHash_row100 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_52 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_52 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

}
}finally{
	if (rs_tOracleInput_52 != null) {
		rs_tOracleInput_52.close();
	}
	if (stmt_tOracleInput_52 != null) {
		stmt_tOracleInput_52.close();
	}
}

globalMap.put("tOracleInput_52_NB_LINE",nb_line_tOracleInput_52);
 

ok_Hash.put("tOracleInput_52", true);
end_Hash.put("tOracleInput_52", System.currentTimeMillis());




/**
 * [tOracleInput_52 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row100 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row100";
	
	

tHash_Lookup_row100.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row100");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row100", true);
end_Hash.put("tAdvancedHash_row100", System.currentTimeMillis());




/**
 * [tAdvancedHash_row100 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_52 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_52";
	
	

 



/**
 * [tOracleInput_52 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row100 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row100";
	
	

 



/**
 * [tAdvancedHash_row100 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_52_SUBPROCESS_STATE", 1);
	}
	


public static class row101Struct implements routines.system.IPersistableComparableLookupRow<row101Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V112;

				public String getV112 () {
					return this.V112;
				}

				public Boolean V112IsNullable(){
				    return true;
				}
				public Boolean V112IsKey(){
				    return false;
				}
				public Integer V112Length(){
				    return null;
				}
				public Integer V112Precision(){
				    return null;
				}
				public String V112Default(){
				
					return null;
				
				}
				public String V112Comment(){
				
				    return "";
				
				}
				public String V112Pattern(){
				
					return "";
				
				}
				public String V112OriginalDbColumnName(){
				
					return "V112";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row101Struct other = (row101Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row101Struct other) {

		other.V112 = this.V112;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row101Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V112 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V112 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V112, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V112, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V112="+V112);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row101Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_53Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_53_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row101Struct row101 = new row101Struct();




	
	/**
	 * [tAdvancedHash_row101 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row101", false);
		start_Hash.put("tAdvancedHash_row101", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row101";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row101");
					}
				
		int tos_count_tAdvancedHash_row101 = 0;
		

			   		// connection name:row101
			   		// source node:tOracleInput_53 - inputs:(after_tOracleInput_1) outputs:(row101,row101) | target node:tAdvancedHash_row101 - inputs:(row101) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row101 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row101Struct> tHash_Lookup_row101 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row101Struct>getLookup(matchingModeEnum_row101);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row101", tHash_Lookup_row101);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row101 begin ] stop
 */



	
	/**
	 * [tOracleInput_53 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_53", false);
		start_Hash.put("tOracleInput_53", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_53";
	
	
		int tos_count_tOracleInput_53 = 0;
		
	


	
		    int nb_line_tOracleInput_53 = 0;
		    java.sql.Connection conn_tOracleInput_53 = null;
				conn_tOracleInput_53 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_53 = false;
				boolean isConnectionWrapped_tOracleInput_53 = !(conn_tOracleInput_53 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_53.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_53 = null;
                if (isConnectionWrapped_tOracleInput_53) {
					unwrappedOraConn_tOracleInput_53 = conn_tOracleInput_53.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_53 != null) {
                        isTimeZoneNull_tOracleInput_53 = (unwrappedOraConn_tOracleInput_53.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_53 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_53).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_53) {
					java.sql.Statement stmtGetTZ_tOracleInput_53 = conn_tOracleInput_53.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_53 = stmtGetTZ_tOracleInput_53.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_53 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_53.next()) {
						sessionTimezone_tOracleInput_53 = rsGetTZ_tOracleInput_53.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_53 && unwrappedOraConn_tOracleInput_53 != null) {
                        unwrappedOraConn_tOracleInput_53.setSessionTimeZone(sessionTimezone_tOracleInput_53);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_53).setSessionTimeZone(sessionTimezone_tOracleInput_53);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_53 = conn_tOracleInput_53.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_53.setFetchSize(1000);


		    String dbquery_tOracleInput_53 = "SELECT    V112\n        , PERSONAS_ID \nFROM ( \n    SELECT    NVL(TO_CHAR (RE.FTOMA,'YYYY-MM-DD'), '1800-01-01') AS V1"
+"12\n            , PA.PERSONAS_ID \n            , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC)"
+" R\n    FROM GEN_CUPS GC \n    INNER JOIN GEN_TEXAMENES GT ON GT.CUPS_ID = GC.ID \n    INNER JOIN GEN_PARAMEXAMENES GPA "
+"ON GPA.TEXAMENES_ID = GT.ID\n    INNER JOIN GEN_HEXAMENES GH ON GH.PARAMEXAMENES_ID = GPA.ID\n    INNER JOIN RCA_RESULTA"
+"DOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = GH.PROCESOSASISTENCIALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON "
+"PA.ID = RE.PROCESOSASISTENCIALES_ID\n    WHERE GC.CODIGO = '901101'\n      AND GH.ESTREGISTRO_ID = 1\n      AND RE.ESTRE"
+"GISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1\n      AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_53_QUERY",dbquery_tOracleInput_53);

		    java.sql.ResultSet rs_tOracleInput_53 = null;

		    try {
		    	rs_tOracleInput_53 = stmt_tOracleInput_53.executeQuery(dbquery_tOracleInput_53);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_53 = rs_tOracleInput_53.getMetaData();
		    	int colQtyInRs_tOracleInput_53 = rsmd_tOracleInput_53.getColumnCount();

		    String tmpContent_tOracleInput_53 = null;
		    
		    
		    while (rs_tOracleInput_53.next()) {
		        nb_line_tOracleInput_53++;
		        
							if(colQtyInRs_tOracleInput_53 < 1) {
								row101.V112 = null;
							} else {
	                         		
        	row101.V112 = routines.system.JDBCUtil.getString(rs_tOracleInput_53, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_53 < 2) {
								row101.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_53.getObject(2) != null) {
						row101.PERSONAS_ID = rs_tOracleInput_53.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_53 begin ] stop
 */
	
	/**
	 * [tOracleInput_53 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 


	tos_count_tOracleInput_53++;

/**
 * [tOracleInput_53 main ] stop
 */
	
	/**
	 * [tOracleInput_53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row101 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row101";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row101"
						
						);
					}
					


			   
			   

					row101Struct row101_HashRow = new row101Struct();
		   	   	   
				
				row101_HashRow.V112 = row101.V112;
				
				row101_HashRow.PERSONAS_ID = row101.PERSONAS_ID;
				
			tHash_Lookup_row101.put(row101_HashRow);
			
            




 


	tos_count_tAdvancedHash_row101++;

/**
 * [tAdvancedHash_row101 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row101 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row101";
	
	

 



/**
 * [tAdvancedHash_row101 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row101 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row101";
	
	

 



/**
 * [tAdvancedHash_row101 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_53 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_53 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

}
}finally{
	if (rs_tOracleInput_53 != null) {
		rs_tOracleInput_53.close();
	}
	if (stmt_tOracleInput_53 != null) {
		stmt_tOracleInput_53.close();
	}
}

globalMap.put("tOracleInput_53_NB_LINE",nb_line_tOracleInput_53);
 

ok_Hash.put("tOracleInput_53", true);
end_Hash.put("tOracleInput_53", System.currentTimeMillis());




/**
 * [tOracleInput_53 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row101 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row101";
	
	

tHash_Lookup_row101.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row101");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row101", true);
end_Hash.put("tAdvancedHash_row101", System.currentTimeMillis());




/**
 * [tAdvancedHash_row101 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_53 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_53";
	
	

 



/**
 * [tOracleInput_53 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row101 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row101";
	
	

 



/**
 * [tAdvancedHash_row101 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_53_SUBPROCESS_STATE", 1);
	}
	


public static class row102Struct implements routines.system.IPersistableComparableLookupRow<row102Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal V113;

				public BigDecimal getV113 () {
					return this.V113;
				}

				public Boolean V113IsNullable(){
				    return true;
				}
				public Boolean V113IsKey(){
				    return false;
				}
				public Integer V113Length(){
				    return null;
				}
				public Integer V113Precision(){
				    return null;
				}
				public String V113Default(){
				
					return "";
				
				}
				public String V113Comment(){
				
				    return "";
				
				}
				public String V113Pattern(){
				
					return "";
				
				}
				public String V113OriginalDbColumnName(){
				
					return "V113";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row102Struct other = (row102Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row102Struct other) {

		other.V113 = this.V113;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row102Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.V113 = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.V113 = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.V113);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.V113);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V113="+String.valueOf(V113));
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row102Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_54Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_54_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row102Struct row102 = new row102Struct();




	
	/**
	 * [tAdvancedHash_row102 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row102", false);
		start_Hash.put("tAdvancedHash_row102", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row102";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row102");
					}
				
		int tos_count_tAdvancedHash_row102 = 0;
		

			   		// connection name:row102
			   		// source node:tOracleInput_54 - inputs:(after_tOracleInput_1) outputs:(row102,row102) | target node:tAdvancedHash_row102 - inputs:(row102) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row102 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row102Struct> tHash_Lookup_row102 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row102Struct>getLookup(matchingModeEnum_row102);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row102", tHash_Lookup_row102);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row102 begin ] stop
 */



	
	/**
	 * [tOracleInput_54 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_54", false);
		start_Hash.put("tOracleInput_54", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_54";
	
	
		int tos_count_tOracleInput_54 = 0;
		
	


	
		    int nb_line_tOracleInput_54 = 0;
		    java.sql.Connection conn_tOracleInput_54 = null;
				conn_tOracleInput_54 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_54 = false;
				boolean isConnectionWrapped_tOracleInput_54 = !(conn_tOracleInput_54 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_54.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_54 = null;
                if (isConnectionWrapped_tOracleInput_54) {
					unwrappedOraConn_tOracleInput_54 = conn_tOracleInput_54.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_54 != null) {
                        isTimeZoneNull_tOracleInput_54 = (unwrappedOraConn_tOracleInput_54.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_54 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_54).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_54) {
					java.sql.Statement stmtGetTZ_tOracleInput_54 = conn_tOracleInput_54.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_54 = stmtGetTZ_tOracleInput_54.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_54 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_54.next()) {
						sessionTimezone_tOracleInput_54 = rsGetTZ_tOracleInput_54.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_54 && unwrappedOraConn_tOracleInput_54 != null) {
                        unwrappedOraConn_tOracleInput_54.setSessionTimeZone(sessionTimezone_tOracleInput_54);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_54).setSessionTimeZone(sessionTimezone_tOracleInput_54);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_54 = conn_tOracleInput_54.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_54.setFetchSize(1000);


		    String dbquery_tOracleInput_54 = "SELECT    V113\n        , PERSONAS_ID \nFROM ( \n    SELECT    \n			 case \n            WHEN GH.VALOR > 9 THEN 2\n     "
+"       WHEN GH.VALOR <10 THEN 1\n            ELSE 22\n            END AS V113,\n             PA.PERSONAS_ID \n          "
+"  , ROW_NUMBER() OVER (PARTITION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CUPS GC \n    INNER JOIN GEN"
+"_TEXAMENES GT ON GT.CUPS_ID = GC.ID \n    INNER JOIN GEN_PARAMEXAMENES GPA ON GPA.TEXAMENES_ID = GT.ID\n    INNER JOIN G"
+"EN_HEXAMENES GH ON GH.PARAMEXAMENES_ID = GPA.ID\n    INNER JOIN RCA_RESULTADOSCUPS RE ON RE.PROCESOSASISTENCIALES_ID = G"
+"H.PROCESOSASISTENCIALES_ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA ON PA.ID = RE.PROCESOSASISTENCIALES_ID\n    WHER"
+"E GC.CODIGO = '901101'\n      AND GH.ESTREGISTRO_ID = 1\n      AND RE.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = "
+"1\n      AND TRUNC( PA.FFINAL )  BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                                  AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_54_QUERY",dbquery_tOracleInput_54);

		    java.sql.ResultSet rs_tOracleInput_54 = null;

		    try {
		    	rs_tOracleInput_54 = stmt_tOracleInput_54.executeQuery(dbquery_tOracleInput_54);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_54 = rs_tOracleInput_54.getMetaData();
		    	int colQtyInRs_tOracleInput_54 = rsmd_tOracleInput_54.getColumnCount();

		    String tmpContent_tOracleInput_54 = null;
		    
		    
		    while (rs_tOracleInput_54.next()) {
		        nb_line_tOracleInput_54++;
		        
							if(colQtyInRs_tOracleInput_54 < 1) {
								row102.V113 = null;
							} else {
		                          
					if(rs_tOracleInput_54.getObject(1) != null) {
						row102.V113 = rs_tOracleInput_54.getBigDecimal(1);
					} else {
				
						row102.V113 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_54 < 2) {
								row102.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_54.getObject(2) != null) {
						row102.PERSONAS_ID = rs_tOracleInput_54.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_54 begin ] stop
 */
	
	/**
	 * [tOracleInput_54 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_54";
	
	

 


	tos_count_tOracleInput_54++;

/**
 * [tOracleInput_54 main ] stop
 */
	
	/**
	 * [tOracleInput_54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_54";
	
	

 



/**
 * [tOracleInput_54 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row102 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row102";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row102"
						
						);
					}
					


			   
			   

					row102Struct row102_HashRow = new row102Struct();
		   	   	   
				
				row102_HashRow.V113 = row102.V113;
				
				row102_HashRow.PERSONAS_ID = row102.PERSONAS_ID;
				
			tHash_Lookup_row102.put(row102_HashRow);
			
            




 


	tos_count_tAdvancedHash_row102++;

/**
 * [tAdvancedHash_row102 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row102 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row102";
	
	

 



/**
 * [tAdvancedHash_row102 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row102 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row102";
	
	

 



/**
 * [tAdvancedHash_row102 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_54 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_54";
	
	

 



/**
 * [tOracleInput_54 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_54 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_54";
	
	

}
}finally{
	if (rs_tOracleInput_54 != null) {
		rs_tOracleInput_54.close();
	}
	if (stmt_tOracleInput_54 != null) {
		stmt_tOracleInput_54.close();
	}
}

globalMap.put("tOracleInput_54_NB_LINE",nb_line_tOracleInput_54);
 

ok_Hash.put("tOracleInput_54", true);
end_Hash.put("tOracleInput_54", System.currentTimeMillis());




/**
 * [tOracleInput_54 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row102 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row102";
	
	

tHash_Lookup_row102.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row102");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row102", true);
end_Hash.put("tAdvancedHash_row102", System.currentTimeMillis());




/**
 * [tAdvancedHash_row102 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_54 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_54";
	
	

 



/**
 * [tOracleInput_54 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row102 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row102";
	
	

 



/**
 * [tAdvancedHash_row102 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_54_SUBPROCESS_STATE", 1);
	}
	


public static class row103Struct implements routines.system.IPersistableComparableLookupRow<row103Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V114;

				public String getV114 () {
					return this.V114;
				}

				public Boolean V114IsNullable(){
				    return true;
				}
				public Boolean V114IsKey(){
				    return false;
				}
				public Integer V114Length(){
				    return null;
				}
				public Integer V114Precision(){
				    return null;
				}
				public String V114Default(){
				
					return null;
				
				}
				public String V114Comment(){
				
				    return "";
				
				}
				public String V114Pattern(){
				
					return "";
				
				}
				public String V114OriginalDbColumnName(){
				
					return "V114";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row103Struct other = (row103Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row103Struct other) {

		other.V114 = this.V114;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row103Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V114 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V114 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V114, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V114, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V114="+V114);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row103Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_38Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row103Struct row103 = new row103Struct();




	
	/**
	 * [tAdvancedHash_row103 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row103", false);
		start_Hash.put("tAdvancedHash_row103", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row103";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row103");
					}
				
		int tos_count_tAdvancedHash_row103 = 0;
		

			   		// connection name:row103
			   		// source node:tOracleInput_38 - inputs:(after_tOracleInput_1) outputs:(row103,row103) | target node:tAdvancedHash_row103 - inputs:(row103) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row103 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row103Struct> tHash_Lookup_row103 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row103Struct>getLookup(matchingModeEnum_row103);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row103", tHash_Lookup_row103);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row103 begin ] stop
 */



	
	/**
	 * [tOracleInput_38 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_38", false);
		start_Hash.put("tOracleInput_38", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_38";
	
	
		int tos_count_tOracleInput_38 = 0;
		
	


	
		    int nb_line_tOracleInput_38 = 0;
		    java.sql.Connection conn_tOracleInput_38 = null;
				conn_tOracleInput_38 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_38 = false;
				boolean isConnectionWrapped_tOracleInput_38 = !(conn_tOracleInput_38 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_38.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_38 = null;
                if (isConnectionWrapped_tOracleInput_38) {
					unwrappedOraConn_tOracleInput_38 = conn_tOracleInput_38.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_38 != null) {
                        isTimeZoneNull_tOracleInput_38 = (unwrappedOraConn_tOracleInput_38.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_38 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_38).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_38) {
					java.sql.Statement stmtGetTZ_tOracleInput_38 = conn_tOracleInput_38.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_38 = stmtGetTZ_tOracleInput_38.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_38 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_38.next()) {
						sessionTimezone_tOracleInput_38 = rsGetTZ_tOracleInput_38.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_38 && unwrappedOraConn_tOracleInput_38 != null) {
                        unwrappedOraConn_tOracleInput_38.setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_38).setSessionTimeZone(sessionTimezone_tOracleInput_38);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_38 = conn_tOracleInput_38.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_38.setFetchSize(1000);


		    String dbquery_tOracleInput_38 = "SELECT    V114\n        , PERSONAS_ID\nFROM (         \n    SELECT    CASE \n                 WHEN (DHFI.FECHA + DHFI.T"
+"RATAMIENTO) > TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n                 THEN '1' \n                 WHEN (DHFI.FECHA + DHFI.TRATAMIENTO) <= TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n                 THEN '2'\n                 WHEN DHFI.ID IS NOT NULL \n                 THEN '22'\n  "
+"               ELSE '20'\n              END AS v114\n            , PROC.PERSONAS_ID\n            , ROW_NUMBER() OVER (PA"
+"RTITION BY PER.ID ORDER BY PROC.FFINAL DESC) R\n    FROM GEN_CIE10 CIE\n    INNER JOIN HCL_DIAGNOSTICOS DIAG ON  DIAG.CI"
+"E10_ID = CIE.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PROC ON PROC.ID = DIAG.PROCESOSASISTENCIALES_ID \n    INNER JO"
+"IN GEN_PERSONAS PER ON PER.ID = PROC.PERSONAS_ID\n    LEFT JOIN HCL_FORMMEDICAS HF ON HF.PROCESOSASISTENCIALES_ID = PROC"
+".ID\n    LEFT JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\n    LEFT JOIN HCL_DFORMMEDINSUMOS DHFI ON DHF"
+"I.FORMMEDINSUMOS_ID = HFMI.ID\n    WHERE CIE.CODIGO IN ('E009','E002','E001','E000','E030', 'E031')\n      AND trunc (MO"
+"NTHS_BETWEEN(TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY'),PER.FECHA_NACIMIENTO))<37\n      AND PROC.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                          AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n      AND DIAG.ESTREGISTRO_ID = 1\n      AND PROC.ESTREGISTRO_ID = 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_38_QUERY",dbquery_tOracleInput_38);

		    java.sql.ResultSet rs_tOracleInput_38 = null;

		    try {
		    	rs_tOracleInput_38 = stmt_tOracleInput_38.executeQuery(dbquery_tOracleInput_38);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_38 = rs_tOracleInput_38.getMetaData();
		    	int colQtyInRs_tOracleInput_38 = rsmd_tOracleInput_38.getColumnCount();

		    String tmpContent_tOracleInput_38 = null;
		    
		    
		    while (rs_tOracleInput_38.next()) {
		        nb_line_tOracleInput_38++;
		        
							if(colQtyInRs_tOracleInput_38 < 1) {
								row103.V114 = null;
							} else {
	                         		
        	row103.V114 = routines.system.JDBCUtil.getString(rs_tOracleInput_38, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_38 < 2) {
								row103.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_38.getObject(2) != null) {
						row103.PERSONAS_ID = rs_tOracleInput_38.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_38 begin ] stop
 */
	
	/**
	 * [tOracleInput_38 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 


	tos_count_tOracleInput_38++;

/**
 * [tOracleInput_38 main ] stop
 */
	
	/**
	 * [tOracleInput_38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row103 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row103";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row103"
						
						);
					}
					


			   
			   

					row103Struct row103_HashRow = new row103Struct();
		   	   	   
				
				row103_HashRow.V114 = row103.V114;
				
				row103_HashRow.PERSONAS_ID = row103.PERSONAS_ID;
				
			tHash_Lookup_row103.put(row103_HashRow);
			
            




 


	tos_count_tAdvancedHash_row103++;

/**
 * [tAdvancedHash_row103 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row103 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row103";
	
	

 



/**
 * [tAdvancedHash_row103 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row103 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row103";
	
	

 



/**
 * [tAdvancedHash_row103 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_38 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_38 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

}
}finally{
	if (rs_tOracleInput_38 != null) {
		rs_tOracleInput_38.close();
	}
	if (stmt_tOracleInput_38 != null) {
		stmt_tOracleInput_38.close();
	}
}

globalMap.put("tOracleInput_38_NB_LINE",nb_line_tOracleInput_38);
 

ok_Hash.put("tOracleInput_38", true);
end_Hash.put("tOracleInput_38", System.currentTimeMillis());




/**
 * [tOracleInput_38 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row103 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row103";
	
	

tHash_Lookup_row103.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row103");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row103", true);
end_Hash.put("tAdvancedHash_row103", System.currentTimeMillis());




/**
 * [tAdvancedHash_row103 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_38 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_38";
	
	

 



/**
 * [tOracleInput_38 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row103 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row103";
	
	

 



/**
 * [tAdvancedHash_row103 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_38_SUBPROCESS_STATE", 1);
	}
	


public static class row104Struct implements routines.system.IPersistableComparableLookupRow<row104Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V115;

				public String getV115 () {
					return this.V115;
				}

				public Boolean V115IsNullable(){
				    return true;
				}
				public Boolean V115IsKey(){
				    return false;
				}
				public Integer V115Length(){
				    return null;
				}
				public Integer V115Precision(){
				    return null;
				}
				public String V115Default(){
				
					return null;
				
				}
				public String V115Comment(){
				
				    return "";
				
				}
				public String V115Pattern(){
				
					return "";
				
				}
				public String V115OriginalDbColumnName(){
				
					return "V115";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row104Struct other = (row104Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row104Struct other) {

		other.V115 = this.V115;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row104Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V115 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V115 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V115, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V115, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V115="+V115);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row104Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_39Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_39_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row104Struct row104 = new row104Struct();




	
	/**
	 * [tAdvancedHash_row104 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row104", false);
		start_Hash.put("tAdvancedHash_row104", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row104";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row104");
					}
				
		int tos_count_tAdvancedHash_row104 = 0;
		

			   		// connection name:row104
			   		// source node:tOracleInput_39 - inputs:(after_tOracleInput_1) outputs:(row104,row104) | target node:tAdvancedHash_row104 - inputs:(row104) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row104 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row104Struct> tHash_Lookup_row104 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row104Struct>getLookup(matchingModeEnum_row104);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row104", tHash_Lookup_row104);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row104 begin ] stop
 */



	
	/**
	 * [tOracleInput_39 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_39", false);
		start_Hash.put("tOracleInput_39", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_39";
	
	
		int tos_count_tOracleInput_39 = 0;
		
	


	
		    int nb_line_tOracleInput_39 = 0;
		    java.sql.Connection conn_tOracleInput_39 = null;
				conn_tOracleInput_39 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_39 = false;
				boolean isConnectionWrapped_tOracleInput_39 = !(conn_tOracleInput_39 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_39.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_39 = null;
                if (isConnectionWrapped_tOracleInput_39) {
					unwrappedOraConn_tOracleInput_39 = conn_tOracleInput_39.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_39 != null) {
                        isTimeZoneNull_tOracleInput_39 = (unwrappedOraConn_tOracleInput_39.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_39 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_39).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_39) {
					java.sql.Statement stmtGetTZ_tOracleInput_39 = conn_tOracleInput_39.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_39 = stmtGetTZ_tOracleInput_39.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_39 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_39.next()) {
						sessionTimezone_tOracleInput_39 = rsGetTZ_tOracleInput_39.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_39 && unwrappedOraConn_tOracleInput_39 != null) {
                        unwrappedOraConn_tOracleInput_39.setSessionTimeZone(sessionTimezone_tOracleInput_39);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_39).setSessionTimeZone(sessionTimezone_tOracleInput_39);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_39 = conn_tOracleInput_39.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_39.setFetchSize(1000);


		    String dbquery_tOracleInput_39 = "SELECT \n  CASE WHEN (MAX(DHFI.FECHA) + MAX(DHFI.TRATAMIENTO)) > TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') THEN '1' \n  WHEN (MAX(DHFI.FECHA) + MAX(DHFI.TRATAMIENTO)) < TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') THEN '2'\n  ELSE '22'\n  END AS v115,\n  PRO.PERSONAS_ID\n\nFROM HCL_DIAGNOSTICOS DIAG\nINNER JOIN HCL_"
+"PROCESOSASISTENCIALES PRO ON DIAG.PROCESOSASISTENCIALES_ID = PRO.ID\nINNER JOIN GEN_PERSONAS PER ON PER.ID = PRO.PERSONA"
+"S_ID\nINNER JOIN GEN_SEXOS SEX ON SEX.ID = PER.SEXO_ID AND SEX.SIGLA = 'F'\nINNER JOIN HCL_FORMMEDICAS HF ON HF.PROCESOS"
+"ASISTENCIALES_ID = PRO.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HCL_DFORMMEDINS"
+"UMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN GEN_CIE10 CI ON DIAG.CIE10_ID = CI.ID AND CI.CODIGO IN  ('A509"
+"','A507','A506','A505','A502','A501','A500')\nWHERE PRO.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) >= 10\nAND TRUNC((TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') - PER.FECHA_NACIMIENTO)/365) < 60\nGROUP BY PRO.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_39_QUERY",dbquery_tOracleInput_39);

		    java.sql.ResultSet rs_tOracleInput_39 = null;

		    try {
		    	rs_tOracleInput_39 = stmt_tOracleInput_39.executeQuery(dbquery_tOracleInput_39);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_39 = rs_tOracleInput_39.getMetaData();
		    	int colQtyInRs_tOracleInput_39 = rsmd_tOracleInput_39.getColumnCount();

		    String tmpContent_tOracleInput_39 = null;
		    
		    
		    while (rs_tOracleInput_39.next()) {
		        nb_line_tOracleInput_39++;
		        
							if(colQtyInRs_tOracleInput_39 < 1) {
								row104.V115 = null;
							} else {
	                         		
        	row104.V115 = routines.system.JDBCUtil.getString(rs_tOracleInput_39, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_39 < 2) {
								row104.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_39.getObject(2) != null) {
						row104.PERSONAS_ID = rs_tOracleInput_39.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_39 begin ] stop
 */
	
	/**
	 * [tOracleInput_39 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 


	tos_count_tOracleInput_39++;

/**
 * [tOracleInput_39 main ] stop
 */
	
	/**
	 * [tOracleInput_39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row104"
						
						);
					}
					


			   
			   

					row104Struct row104_HashRow = new row104Struct();
		   	   	   
				
				row104_HashRow.V115 = row104.V115;
				
				row104_HashRow.PERSONAS_ID = row104.PERSONAS_ID;
				
			tHash_Lookup_row104.put(row104_HashRow);
			
            




 


	tos_count_tAdvancedHash_row104++;

/**
 * [tAdvancedHash_row104 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row104 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row104 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_39 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_39 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

}
}finally{
	if (rs_tOracleInput_39 != null) {
		rs_tOracleInput_39.close();
	}
	if (stmt_tOracleInput_39 != null) {
		stmt_tOracleInput_39.close();
	}
}

globalMap.put("tOracleInput_39_NB_LINE",nb_line_tOracleInput_39);
 

ok_Hash.put("tOracleInput_39", true);
end_Hash.put("tOracleInput_39", System.currentTimeMillis());




/**
 * [tOracleInput_39 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

tHash_Lookup_row104.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row104");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row104", true);
end_Hash.put("tAdvancedHash_row104", System.currentTimeMillis());




/**
 * [tAdvancedHash_row104 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_39 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_39";
	
	

 



/**
 * [tOracleInput_39 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row104 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row104";
	
	

 



/**
 * [tAdvancedHash_row104 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_39_SUBPROCESS_STATE", 1);
	}
	


public static class row105Struct implements routines.system.IPersistableComparableLookupRow<row105Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V116;

				public String getV116 () {
					return this.V116;
				}

				public Boolean V116IsNullable(){
				    return true;
				}
				public Boolean V116IsKey(){
				    return false;
				}
				public Integer V116Length(){
				    return null;
				}
				public Integer V116Precision(){
				    return null;
				}
				public String V116Default(){
				
					return null;
				
				}
				public String V116Comment(){
				
				    return "";
				
				}
				public String V116Pattern(){
				
					return "";
				
				}
				public String V116OriginalDbColumnName(){
				
					return "V116";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row105Struct other = (row105Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row105Struct other) {

		other.V116 = this.V116;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row105Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V116 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V116 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V116, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V116, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V116="+V116);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row105Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_40Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row105Struct row105 = new row105Struct();




	
	/**
	 * [tAdvancedHash_row105 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row105", false);
		start_Hash.put("tAdvancedHash_row105", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row105";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row105");
					}
				
		int tos_count_tAdvancedHash_row105 = 0;
		

			   		// connection name:row105
			   		// source node:tOracleInput_40 - inputs:(after_tOracleInput_1) outputs:(row105,row105) | target node:tAdvancedHash_row105 - inputs:(row105) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row105 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row105Struct> tHash_Lookup_row105 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row105Struct>getLookup(matchingModeEnum_row105);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row105", tHash_Lookup_row105);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row105 begin ] stop
 */



	
	/**
	 * [tOracleInput_40 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_40", false);
		start_Hash.put("tOracleInput_40", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_40";
	
	
		int tos_count_tOracleInput_40 = 0;
		
	


	
		    int nb_line_tOracleInput_40 = 0;
		    java.sql.Connection conn_tOracleInput_40 = null;
				conn_tOracleInput_40 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_40 = false;
				boolean isConnectionWrapped_tOracleInput_40 = !(conn_tOracleInput_40 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_40.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_40 = null;
                if (isConnectionWrapped_tOracleInput_40) {
					unwrappedOraConn_tOracleInput_40 = conn_tOracleInput_40.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_40 != null) {
                        isTimeZoneNull_tOracleInput_40 = (unwrappedOraConn_tOracleInput_40.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_40 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_40).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_40) {
					java.sql.Statement stmtGetTZ_tOracleInput_40 = conn_tOracleInput_40.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_40 = stmtGetTZ_tOracleInput_40.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_40 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_40.next()) {
						sessionTimezone_tOracleInput_40 = rsGetTZ_tOracleInput_40.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_40 && unwrappedOraConn_tOracleInput_40 != null) {
                        unwrappedOraConn_tOracleInput_40.setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_40).setSessionTimeZone(sessionTimezone_tOracleInput_40);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_40 = conn_tOracleInput_40.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_40.setFetchSize(1000);


		    String dbquery_tOracleInput_40 = "\nSELECT \n  CASE WHEN (MAX(DHFI.FECHA) + MAX(DHFI.TRATAMIENTO)) > TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') THEN '1' \n  WHEN (MAX(DHFI.FECHA) + MAX(DHFI.TRATAMIENTO)) < TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') THEN '2'\n  ELSE '22'\n  END AS v116,\n  PRO.PERSONAS_ID\nFROM HCL_DIAGNOSTICOS DIAG\nINNER JOIN HCL_PR"
+"OCESOSASISTENCIALES PRO ON DIAG.PROCESOSASISTENCIALES_ID = PRO.ID\nINNER JOIN GEN_PERSONAS PER ON PER.ID = PRO.PERSONAS_"
+"ID\nINNER JOIN HCL_FORMMEDICAS HF ON HF.PROCESOSASISTENCIALES_ID = PRO.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI ON HFMI.FO"
+"RMMEDICAS_ID = HF.ID\nINNER JOIN HCL_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN GEN_CIE10 CI O"
+"N DIAG.CIE10_ID = CI.ID AND CI.CODIGO IN ('A509','A507','A506','A505','A502','A501','A500')\nWHERE PRO.FFINAL BETWEEN TO"
+"_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\nGROUP BY PRO.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_40_QUERY",dbquery_tOracleInput_40);

		    java.sql.ResultSet rs_tOracleInput_40 = null;

		    try {
		    	rs_tOracleInput_40 = stmt_tOracleInput_40.executeQuery(dbquery_tOracleInput_40);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_40 = rs_tOracleInput_40.getMetaData();
		    	int colQtyInRs_tOracleInput_40 = rsmd_tOracleInput_40.getColumnCount();

		    String tmpContent_tOracleInput_40 = null;
		    
		    
		    while (rs_tOracleInput_40.next()) {
		        nb_line_tOracleInput_40++;
		        
							if(colQtyInRs_tOracleInput_40 < 1) {
								row105.V116 = null;
							} else {
	                         		
        	row105.V116 = routines.system.JDBCUtil.getString(rs_tOracleInput_40, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_40 < 2) {
								row105.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_40.getObject(2) != null) {
						row105.PERSONAS_ID = rs_tOracleInput_40.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_40 begin ] stop
 */
	
	/**
	 * [tOracleInput_40 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 


	tos_count_tOracleInput_40++;

/**
 * [tOracleInput_40 main ] stop
 */
	
	/**
	 * [tOracleInput_40 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row105 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row105";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row105"
						
						);
					}
					


			   
			   

					row105Struct row105_HashRow = new row105Struct();
		   	   	   
				
				row105_HashRow.V116 = row105.V116;
				
				row105_HashRow.PERSONAS_ID = row105.PERSONAS_ID;
				
			tHash_Lookup_row105.put(row105_HashRow);
			
            




 


	tos_count_tAdvancedHash_row105++;

/**
 * [tAdvancedHash_row105 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row105 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row105";
	
	

 



/**
 * [tAdvancedHash_row105 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row105 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row105";
	
	

 



/**
 * [tAdvancedHash_row105 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_40 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_40 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

}
}finally{
	if (rs_tOracleInput_40 != null) {
		rs_tOracleInput_40.close();
	}
	if (stmt_tOracleInput_40 != null) {
		stmt_tOracleInput_40.close();
	}
}

globalMap.put("tOracleInput_40_NB_LINE",nb_line_tOracleInput_40);
 

ok_Hash.put("tOracleInput_40", true);
end_Hash.put("tOracleInput_40", System.currentTimeMillis());




/**
 * [tOracleInput_40 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row105 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row105";
	
	

tHash_Lookup_row105.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row105");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row105", true);
end_Hash.put("tAdvancedHash_row105", System.currentTimeMillis());




/**
 * [tAdvancedHash_row105 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_40 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_40";
	
	

 



/**
 * [tOracleInput_40 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row105 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row105";
	
	

 



/**
 * [tAdvancedHash_row105 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_40_SUBPROCESS_STATE", 1);
	}
	


public static class row106Struct implements routines.system.IPersistableComparableLookupRow<row106Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V117;

				public String getV117 () {
					return this.V117;
				}

				public Boolean V117IsNullable(){
				    return true;
				}
				public Boolean V117IsKey(){
				    return false;
				}
				public Integer V117Length(){
				    return null;
				}
				public Integer V117Precision(){
				    return null;
				}
				public String V117Default(){
				
					return null;
				
				}
				public String V117Comment(){
				
				    return "";
				
				}
				public String V117Pattern(){
				
					return "";
				
				}
				public String V117OriginalDbColumnName(){
				
					return "V117";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row106Struct other = (row106Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row106Struct other) {

		other.V117 = this.V117;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row106Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V117 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V117 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V117, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V117, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V117="+V117);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row106Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_41Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row106Struct row106 = new row106Struct();




	
	/**
	 * [tAdvancedHash_row106 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row106", false);
		start_Hash.put("tAdvancedHash_row106", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row106";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row106");
					}
				
		int tos_count_tAdvancedHash_row106 = 0;
		

			   		// connection name:row106
			   		// source node:tOracleInput_41 - inputs:(after_tOracleInput_1) outputs:(row106,row106) | target node:tAdvancedHash_row106 - inputs:(row106) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row106 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row106Struct> tHash_Lookup_row106 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row106Struct>getLookup(matchingModeEnum_row106);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row106", tHash_Lookup_row106);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row106 begin ] stop
 */



	
	/**
	 * [tOracleInput_41 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_41", false);
		start_Hash.put("tOracleInput_41", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_41";
	
	
		int tos_count_tOracleInput_41 = 0;
		
	


	
		    int nb_line_tOracleInput_41 = 0;
		    java.sql.Connection conn_tOracleInput_41 = null;
				conn_tOracleInput_41 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_41 = false;
				boolean isConnectionWrapped_tOracleInput_41 = !(conn_tOracleInput_41 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_41.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_41 = null;
                if (isConnectionWrapped_tOracleInput_41) {
					unwrappedOraConn_tOracleInput_41 = conn_tOracleInput_41.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_41 != null) {
                        isTimeZoneNull_tOracleInput_41 = (unwrappedOraConn_tOracleInput_41.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_41 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_41).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_41) {
					java.sql.Statement stmtGetTZ_tOracleInput_41 = conn_tOracleInput_41.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_41 = stmtGetTZ_tOracleInput_41.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_41 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_41.next()) {
						sessionTimezone_tOracleInput_41 = rsGetTZ_tOracleInput_41.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_41 && unwrappedOraConn_tOracleInput_41 != null) {
                        unwrappedOraConn_tOracleInput_41.setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_41).setSessionTimeZone(sessionTimezone_tOracleInput_41);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_41 = conn_tOracleInput_41.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_41.setFetchSize(1000);


		    String dbquery_tOracleInput_41 = "SELECT    V117\n        , PERSONAS_ID \nFROM ( \n    SELECT    CASE \n                WHEN (DHFI.FECHA + DHFI.TRATAMIEN"
+"TO) > TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n                THEN '1' \n                WHEN (DHFI.FECHA + DHFI.TRATAMIENTO) < TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') \n                THEN '2'\n               WHEN DHFI.ID IS NOT NULL\n                THEN '22'\n       "
+"         ELSE '20'\n              END AS v117    \n            , PA.PERSONAS_ID\n            , ROW_NUMBER() OVER (PARTIT"
+"ION BY PA.PERSONAS_ID ORDER BY PA.FFINAL DESC) R\n    FROM GEN_CIE10 CI\n    INNER JOIN HCL_DIAGNOSTICOS HD            O"
+"N HD.CIE10_ID = CI.ID\n    INNER JOIN HCL_PROCESOSASISTENCIALES PA   ON PA.ID = HD.PROCESOSASISTENCIALES_ID \n    LEFT J"
+"OIN HCL_FORMMEDICAS HF              ON HF.PROCESOSASISTENCIALES_ID = PA.ID\n                                            "
+"  AND HF.ESTREGISTRO_ID = 1\n    LEFT JOIN HCL_FORMMEDINSUMOS HFMI         ON HFMI.FORMMEDICAS_ID = HF.ID\n             "
+"                                 AND HFMI.ESTREGISTRO_ID = 1\n    LEFT JOIN HCL_DFORMMEDINSUMOS DHFI        ON DHFI.FORM"
+"MEDINSUMOS_ID = HFMI.ID\n                                              AND DHFI.ESTREGISTRO_ID = 1\n    WHERE CI.CODIGO "
+"IN ('A305','A304','A303','A302','A301','A300')\n      AND HD.ESTREGISTRO_ID = 1\n      AND PA.ESTREGISTRO_ID = 1  \n    "
+"  AND PA.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') \n                        AND TO_DATE('"+context.FECHA_FINAL+"','DD/MM/YYYY') + 1\n) WHERE R = 1";
		    

		    globalMap.put("tOracleInput_41_QUERY",dbquery_tOracleInput_41);

		    java.sql.ResultSet rs_tOracleInput_41 = null;

		    try {
		    	rs_tOracleInput_41 = stmt_tOracleInput_41.executeQuery(dbquery_tOracleInput_41);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_41 = rs_tOracleInput_41.getMetaData();
		    	int colQtyInRs_tOracleInput_41 = rsmd_tOracleInput_41.getColumnCount();

		    String tmpContent_tOracleInput_41 = null;
		    
		    
		    while (rs_tOracleInput_41.next()) {
		        nb_line_tOracleInput_41++;
		        
							if(colQtyInRs_tOracleInput_41 < 1) {
								row106.V117 = null;
							} else {
	                         		
        	row106.V117 = routines.system.JDBCUtil.getString(rs_tOracleInput_41, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_41 < 2) {
								row106.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_41.getObject(2) != null) {
						row106.PERSONAS_ID = rs_tOracleInput_41.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_41 begin ] stop
 */
	
	/**
	 * [tOracleInput_41 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 


	tos_count_tOracleInput_41++;

/**
 * [tOracleInput_41 main ] stop
 */
	
	/**
	 * [tOracleInput_41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row106"
						
						);
					}
					


			   
			   

					row106Struct row106_HashRow = new row106Struct();
		   	   	   
				
				row106_HashRow.V117 = row106.V117;
				
				row106_HashRow.PERSONAS_ID = row106.PERSONAS_ID;
				
			tHash_Lookup_row106.put(row106_HashRow);
			
            




 


	tos_count_tAdvancedHash_row106++;

/**
 * [tAdvancedHash_row106 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row106 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row106 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_41 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_41 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

}
}finally{
	if (rs_tOracleInput_41 != null) {
		rs_tOracleInput_41.close();
	}
	if (stmt_tOracleInput_41 != null) {
		stmt_tOracleInput_41.close();
	}
}

globalMap.put("tOracleInput_41_NB_LINE",nb_line_tOracleInput_41);
 

ok_Hash.put("tOracleInput_41", true);
end_Hash.put("tOracleInput_41", System.currentTimeMillis());




/**
 * [tOracleInput_41 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

tHash_Lookup_row106.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row106");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row106", true);
end_Hash.put("tAdvancedHash_row106", System.currentTimeMillis());




/**
 * [tAdvancedHash_row106 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_41 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_41";
	
	

 



/**
 * [tOracleInput_41 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row106 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row106";
	
	

 



/**
 * [tAdvancedHash_row106 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_41_SUBPROCESS_STATE", 1);
	}
	


public static class row107Struct implements routines.system.IPersistableComparableLookupRow<row107Struct> {
    final static byte[] commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
    static byte[] commonByteArray_REP_RESOLUCION_4505_Resolucion4505 = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String V118;

				public String getV118 () {
					return this.V118;
				}

				public Boolean V118IsNullable(){
				    return true;
				}
				public Boolean V118IsKey(){
				    return false;
				}
				public Integer V118Length(){
				    return null;
				}
				public Integer V118Precision(){
				    return null;
				}
				public String V118Default(){
				
					return null;
				
				}
				public String V118Comment(){
				
				    return "";
				
				}
				public String V118Pattern(){
				
					return "";
				
				}
				public String V118OriginalDbColumnName(){
				
					return "V118";
				
				}

				
			    public BigDecimal PERSONAS_ID;

				public BigDecimal getPERSONAS_ID () {
					return this.PERSONAS_ID;
				}

				public Boolean PERSONAS_IDIsNullable(){
				    return false;
				}
				public Boolean PERSONAS_IDIsKey(){
				    return false;
				}
				public Integer PERSONAS_IDLength(){
				    return null;
				}
				public Integer PERSONAS_IDPrecision(){
				    return null;
				}
				public String PERSONAS_IDDefault(){
				
					return "";
				
				}
				public String PERSONAS_IDComment(){
				
				    return "";
				
				}
				public String PERSONAS_IDPattern(){
				
					return "";
				
				}
				public String PERSONAS_IDOriginalDbColumnName(){
				
					return "PERSONAS_ID";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PERSONAS_ID == null) ? 0 : this.PERSONAS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row107Struct other = (row107Struct) obj;
		
						if (this.PERSONAS_ID == null) {
							if (other.PERSONAS_ID != null)
								return false;
						
						} else if (!this.PERSONAS_ID.equals(other.PERSONAS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row107Struct other) {

		other.V118 = this.V118;
	            other.PERSONAS_ID = this.PERSONAS_ID;
	            
	}

	public void copyKeysDataTo(row107Struct other) {

		other.PERSONAS_ID = this.PERSONAS_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_RESOLUCION_4505_Resolucion4505) {

        	try {

        		int length = 0;
		
						this.PERSONAS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PERSONAS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.V118 = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.V118 = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.V118, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.V118, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("V118="+V118);
		sb.append(",PERSONAS_ID="+String.valueOf(PERSONAS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row107Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PERSONAS_ID, other.PERSONAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_42Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row107Struct row107 = new row107Struct();




	
	/**
	 * [tAdvancedHash_row107 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row107", false);
		start_Hash.put("tAdvancedHash_row107", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row107";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row107");
					}
				
		int tos_count_tAdvancedHash_row107 = 0;
		

			   		// connection name:row107
			   		// source node:tOracleInput_42 - inputs:(after_tOracleInput_1) outputs:(row107,row107) | target node:tAdvancedHash_row107 - inputs:(row107) outputs:()
			   		// linked node: tMap_5 - inputs:(Salida_4,row89,row90,row91,row92,row93,row94,row95,row96,row97,row98,row99,row100,row101,row102,row103,row104,row105,row106,row107) outputs:(Salida_5)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row107 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row107Struct> tHash_Lookup_row107 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row107Struct>getLookup(matchingModeEnum_row107);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row107", tHash_Lookup_row107);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row107 begin ] stop
 */



	
	/**
	 * [tOracleInput_42 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_42", false);
		start_Hash.put("tOracleInput_42", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_42";
	
	
		int tos_count_tOracleInput_42 = 0;
		
	


	
		    int nb_line_tOracleInput_42 = 0;
		    java.sql.Connection conn_tOracleInput_42 = null;
				conn_tOracleInput_42 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_42 = false;
				boolean isConnectionWrapped_tOracleInput_42 = !(conn_tOracleInput_42 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_42.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_42 = null;
                if (isConnectionWrapped_tOracleInput_42) {
					unwrappedOraConn_tOracleInput_42 = conn_tOracleInput_42.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_42 != null) {
                        isTimeZoneNull_tOracleInput_42 = (unwrappedOraConn_tOracleInput_42.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_42 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_42).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_42) {
					java.sql.Statement stmtGetTZ_tOracleInput_42 = conn_tOracleInput_42.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_42 = stmtGetTZ_tOracleInput_42.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_42 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_42.next()) {
						sessionTimezone_tOracleInput_42 = rsGetTZ_tOracleInput_42.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_42 && unwrappedOraConn_tOracleInput_42 != null) {
                        unwrappedOraConn_tOracleInput_42.setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_42).setSessionTimeZone(sessionTimezone_tOracleInput_42);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_42 = conn_tOracleInput_42.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_42.setFetchSize(1000);


		    String dbquery_tOracleInput_42 = "\nSELECT \n  NVL(TO_CHAR((MAX(DHFI.FECHA) + MAX(DHFI.TRATAMIENTO)),'yyyy-mm-dd'),'1800-01-01') AS V118, \n  PRO.PERSONA"
+"S_ID AS PERSONAS_ID\nFROM HCL_DIAGNOSTICOS DIAG\nINNER JOIN HCL_PROCESOSASISTENCIALES PRO ON DIAG.PROCESOSASISTENCIALES_"
+"ID = PRO.ID\nINNER JOIN HCL_FORMMEDICAS HF ON HF.PROCESOSASISTENCIALES_ID = PRO.ID\nINNER JOIN HCL_FORMMEDINSUMOS HFMI O"
+"N HFMI.FORMMEDICAS_ID = HF.ID\nINNER JOIN HCL_DFORMMEDINSUMOS DHFI ON DHFI.FORMMEDINSUMOS_ID = HFMI.ID\nINNER JOIN GEN_C"
+"IE10 CI ON DIAG.CIE10_ID = CI.ID AND CI.CODIGO IN ('B559','B552','B551','B550')\nWHERE PRO.FFINAL BETWEEN TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') AND  TO_DATE('"+context.FECHA_INICIAL+"','DD/MM/YYYY') + 1 \nGROUP BY PRO.PERSONAS_ID";
		    

		    globalMap.put("tOracleInput_42_QUERY",dbquery_tOracleInput_42);

		    java.sql.ResultSet rs_tOracleInput_42 = null;

		    try {
		    	rs_tOracleInput_42 = stmt_tOracleInput_42.executeQuery(dbquery_tOracleInput_42);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_42 = rs_tOracleInput_42.getMetaData();
		    	int colQtyInRs_tOracleInput_42 = rsmd_tOracleInput_42.getColumnCount();

		    String tmpContent_tOracleInput_42 = null;
		    
		    
		    while (rs_tOracleInput_42.next()) {
		        nb_line_tOracleInput_42++;
		        
							if(colQtyInRs_tOracleInput_42 < 1) {
								row107.V118 = null;
							} else {
	                         		
        	row107.V118 = routines.system.JDBCUtil.getString(rs_tOracleInput_42, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_42 < 2) {
								row107.PERSONAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_42.getObject(2) != null) {
						row107.PERSONAS_ID = rs_tOracleInput_42.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_42 begin ] stop
 */
	
	/**
	 * [tOracleInput_42 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 


	tos_count_tOracleInput_42++;

/**
 * [tOracleInput_42 main ] stop
 */
	
	/**
	 * [tOracleInput_42 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row107 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row107";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row107"
						
						);
					}
					


			   
			   

					row107Struct row107_HashRow = new row107Struct();
		   	   	   
				
				row107_HashRow.V118 = row107.V118;
				
				row107_HashRow.PERSONAS_ID = row107.PERSONAS_ID;
				
			tHash_Lookup_row107.put(row107_HashRow);
			
            




 


	tos_count_tAdvancedHash_row107++;

/**
 * [tAdvancedHash_row107 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row107 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row107";
	
	

 



/**
 * [tAdvancedHash_row107 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row107 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row107";
	
	

 



/**
 * [tAdvancedHash_row107 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_42 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_42 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

}
}finally{
	if (rs_tOracleInput_42 != null) {
		rs_tOracleInput_42.close();
	}
	if (stmt_tOracleInput_42 != null) {
		stmt_tOracleInput_42.close();
	}
}

globalMap.put("tOracleInput_42_NB_LINE",nb_line_tOracleInput_42);
 

ok_Hash.put("tOracleInput_42", true);
end_Hash.put("tOracleInput_42", System.currentTimeMillis());




/**
 * [tOracleInput_42 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row107 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row107";
	
	

tHash_Lookup_row107.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row107");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row107", true);
end_Hash.put("tAdvancedHash_row107", System.currentTimeMillis());




/**
 * [tAdvancedHash_row107 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_42 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_42";
	
	

 



/**
 * [tOracleInput_42 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row107 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row107";
	
	

 



/**
 * [tAdvancedHash_row107 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_42_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final Resolucion4505 Resolucion4505Class = new Resolucion4505();

        int exitCode = Resolucion4505Class.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = Resolucion4505.class.getClassLoader().getResourceAsStream("rep_resolucion_4505/resolucion4505_1_0/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = Resolucion4505.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("Connection1_Encoding", "id_String");
                        if(context.getStringValue("Connection1_Encoding") == null) {
                            context.Connection1_Encoding = null;
                        } else {
                            context.Connection1_Encoding=(String) context.getProperty("Connection1_Encoding");
                        }
                        context.setContextType("Connection1_XPathQuery", "id_String");
                        if(context.getStringValue("Connection1_XPathQuery") == null) {
                            context.Connection1_XPathQuery = null;
                        } else {
                            context.Connection1_XPathQuery=(String) context.getProperty("Connection1_XPathQuery");
                        }
                        context.setContextType("Connection1_XmlFilePath", "id_File");
                        if(context.getStringValue("Connection1_XmlFilePath") == null) {
                            context.Connection1_XmlFilePath = null;
                        } else {
                            context.Connection1_XmlFilePath=(String) context.getProperty("Connection1_XmlFilePath");
                        }
                        context.setContextType("db_destino_AdditionalParams", "id_String");
                        if(context.getStringValue("db_destino_AdditionalParams") == null) {
                            context.db_destino_AdditionalParams = null;
                        } else {
                            context.db_destino_AdditionalParams=(String) context.getProperty("db_destino_AdditionalParams");
                        }
                        context.setContextType("db_destino_Login", "id_String");
                        if(context.getStringValue("db_destino_Login") == null) {
                            context.db_destino_Login = null;
                        } else {
                            context.db_destino_Login=(String) context.getProperty("db_destino_Login");
                        }
                        context.setContextType("db_destino_Password", "id_Password");
                        if(context.getStringValue("db_destino_Password") == null) {
                            context.db_destino_Password = null;
                        } else {
                            String pwd_db_destino_Password_value = context.getProperty("db_destino_Password");
                            context.db_destino_Password = null;
                            if(pwd_db_destino_Password_value!=null) {
                                if(context_param.containsKey("db_destino_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_destino_Password = pwd_db_destino_Password_value;
                                } else if (!pwd_db_destino_Password_value.isEmpty()) {
                                    try {
                                        context.db_destino_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_destino_Password_value);
                                        context.put("db_destino_Password",context.db_destino_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_destino_Port", "id_String");
                        if(context.getStringValue("db_destino_Port") == null) {
                            context.db_destino_Port = null;
                        } else {
                            context.db_destino_Port=(String) context.getProperty("db_destino_Port");
                        }
                        context.setContextType("db_destino_Schema", "id_String");
                        if(context.getStringValue("db_destino_Schema") == null) {
                            context.db_destino_Schema = null;
                        } else {
                            context.db_destino_Schema=(String) context.getProperty("db_destino_Schema");
                        }
                        context.setContextType("db_destino_Server", "id_String");
                        if(context.getStringValue("db_destino_Server") == null) {
                            context.db_destino_Server = null;
                        } else {
                            context.db_destino_Server=(String) context.getProperty("db_destino_Server");
                        }
                        context.setContextType("db_destino_Sid", "id_String");
                        if(context.getStringValue("db_destino_Sid") == null) {
                            context.db_destino_Sid = null;
                        } else {
                            context.db_destino_Sid=(String) context.getProperty("db_destino_Sid");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_Password");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            String pwd_db_origen_Password_value = context.getProperty("db_origen_Password");
                            context.db_origen_Password = null;
                            if(pwd_db_origen_Password_value!=null) {
                                if(context_param.containsKey("db_origen_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_origen_Password = pwd_db_origen_Password_value;
                                } else if (!pwd_db_origen_Password_value.isEmpty()) {
                                    try {
                                        context.db_origen_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_origen_Password_value);
                                        context.put("db_origen_Password",context.db_origen_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("BODEGA", "id_String");
                        if(context.getStringValue("BODEGA") == null) {
                            context.BODEGA = null;
                        } else {
                            context.BODEGA=(String) context.getProperty("BODEGA");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("ArchivosId", "id_BigDecimal");
                        if(context.getStringValue("ArchivosId") == null) {
                            context.ArchivosId = null;
                        } else {
                            try{
                                context.ArchivosId=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("ArchivosId"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ArchivosId", e.getMessage()));
                                context.ArchivosId=null;
                            }
                        }
                        context.setContextType("CarpetaTemp", "id_String");
                        if(context.getStringValue("CarpetaTemp") == null) {
                            context.CarpetaTemp = null;
                        } else {
                            context.CarpetaTemp=(String) context.getProperty("CarpetaTemp");
                        }
                        context.setContextType("FECHA_FINAL", "id_String");
                        if(context.getStringValue("FECHA_FINAL") == null) {
                            context.FECHA_FINAL = null;
                        } else {
                            context.FECHA_FINAL=(String) context.getProperty("FECHA_FINAL");
                        }
                        context.setContextType("FECHA_INICIAL", "id_String");
                        if(context.getStringValue("FECHA_INICIAL") == null) {
                            context.FECHA_INICIAL = null;
                        } else {
                            context.FECHA_INICIAL=(String) context.getProperty("FECHA_INICIAL");
                        }
                        context.setContextType("FECHA_NUMERO", "id_Date");
                        if(context.getStringValue("FECHA_NUMERO") == null) {
                            context.FECHA_NUMERO = null;
                        } else {
                            String context_FECHA_NUMERO_value = context.getProperty("FECHA_NUMERO");
                            try{
                                if (context_FECHA_NUMERO_value == null){
                                    context_FECHA_NUMERO_value = "";
                                }
                                int context_FECHA_NUMERO_pos = context_FECHA_NUMERO_value.indexOf(";");
                                String context_FECHA_NUMERO_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FECHA_NUMERO_pos > -1){
                                    context_FECHA_NUMERO_pattern = context_FECHA_NUMERO_value.substring(0, context_FECHA_NUMERO_pos);
                                    context_FECHA_NUMERO_value = context_FECHA_NUMERO_value.substring(context_FECHA_NUMERO_pos + 1);
                                }

                                context.FECHA_NUMERO=(java.util.Date)(new java.text.SimpleDateFormat(context_FECHA_NUMERO_pattern).parse(context_FECHA_NUMERO_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FECHA_NUMERO_longValue = Long.valueOf(context_FECHA_NUMERO_value);
                                    context.FECHA_NUMERO = new java.util.Date(context_FECHA_NUMERO_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FECHA_NUMERO", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FECHA_NUMERO=null;
                                }
                            }
                        }
                        context.setContextType("FechaArchivo", "id_String");
                        if(context.getStringValue("FechaArchivo") == null) {
                            context.FechaArchivo = null;
                        } else {
                            context.FechaArchivo=(String) context.getProperty("FechaArchivo");
                        }
                        context.setContextType("FFinal", "id_Date");
                        if(context.getStringValue("FFinal") == null) {
                            context.FFinal = null;
                        } else {
                            String context_FFinal_value = context.getProperty("FFinal");
                            try{
                                if (context_FFinal_value == null){
                                    context_FFinal_value = "";
                                }
                                int context_FFinal_pos = context_FFinal_value.indexOf(";");
                                String context_FFinal_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FFinal_pos > -1){
                                    context_FFinal_pattern = context_FFinal_value.substring(0, context_FFinal_pos);
                                    context_FFinal_value = context_FFinal_value.substring(context_FFinal_pos + 1);
                                }

                                context.FFinal=(java.util.Date)(new java.text.SimpleDateFormat(context_FFinal_pattern).parse(context_FFinal_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FFinal_longValue = Long.valueOf(context_FFinal_value);
                                    context.FFinal = new java.util.Date(context_FFinal_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FFinal", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FFinal=null;
                                }
                            }
                        }
                        context.setContextType("FInicial", "id_Date");
                        if(context.getStringValue("FInicial") == null) {
                            context.FInicial = null;
                        } else {
                            String context_FInicial_value = context.getProperty("FInicial");
                            try{
                                if (context_FInicial_value == null){
                                    context_FInicial_value = "";
                                }
                                int context_FInicial_pos = context_FInicial_value.indexOf(";");
                                String context_FInicial_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FInicial_pos > -1){
                                    context_FInicial_pattern = context_FInicial_value.substring(0, context_FInicial_pos);
                                    context_FInicial_value = context_FInicial_value.substring(context_FInicial_pos + 1);
                                }

                                context.FInicial=(java.util.Date)(new java.text.SimpleDateFormat(context_FInicial_pattern).parse(context_FInicial_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FInicial_longValue = Long.valueOf(context_FInicial_value);
                                    context.FInicial = new java.util.Date(context_FInicial_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FInicial", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FInicial=null;
                                }
                            }
                        }
                        context.setContextType("FINICIO", "id_Date");
                        if(context.getStringValue("FINICIO") == null) {
                            context.FINICIO = null;
                        } else {
                            String context_FINICIO_value = context.getProperty("FINICIO");
                            try{
                                if (context_FINICIO_value == null){
                                    context_FINICIO_value = "";
                                }
                                int context_FINICIO_pos = context_FINICIO_value.indexOf(";");
                                String context_FINICIO_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FINICIO_pos > -1){
                                    context_FINICIO_pattern = context_FINICIO_value.substring(0, context_FINICIO_pos);
                                    context_FINICIO_value = context_FINICIO_value.substring(context_FINICIO_pos + 1);
                                }

                                context.FINICIO=(java.util.Date)(new java.text.SimpleDateFormat(context_FINICIO_pattern).parse(context_FINICIO_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FINICIO_longValue = Long.valueOf(context_FINICIO_value);
                                    context.FINICIO = new java.util.Date(context_FINICIO_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FINICIO", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FINICIO=null;
                                }
                            }
                        }
                        context.setContextType("FSolicitud", "id_Date");
                        if(context.getStringValue("FSolicitud") == null) {
                            context.FSolicitud = null;
                        } else {
                            String context_FSolicitud_value = context.getProperty("FSolicitud");
                            try{
                                if (context_FSolicitud_value == null){
                                    context_FSolicitud_value = "";
                                }
                                int context_FSolicitud_pos = context_FSolicitud_value.indexOf(";");
                                String context_FSolicitud_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FSolicitud_pos > -1){
                                    context_FSolicitud_pattern = context_FSolicitud_value.substring(0, context_FSolicitud_pos);
                                    context_FSolicitud_value = context_FSolicitud_value.substring(context_FSolicitud_pos + 1);
                                }

                                context.FSolicitud=(java.util.Date)(new java.text.SimpleDateFormat(context_FSolicitud_pattern).parse(context_FSolicitud_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FSolicitud_longValue = Long.valueOf(context_FSolicitud_value);
                                    context.FSolicitud = new java.util.Date(context_FSolicitud_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FSolicitud", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FSolicitud=null;
                                }
                            }
                        }
                        context.setContextType("ID", "id_BigDecimal");
                        if(context.getStringValue("ID") == null) {
                            context.ID = null;
                        } else {
                            try{
                                context.ID=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("ID"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID", e.getMessage()));
                                context.ID=null;
                            }
                        }
                        context.setContextType("NombreArchivo", "id_String");
                        if(context.getStringValue("NombreArchivo") == null) {
                            context.NombreArchivo = null;
                        } else {
                            context.NombreArchivo=(String) context.getProperty("NombreArchivo");
                        }
                        context.setContextType("PersonaId", "id_BigDecimal");
                        if(context.getStringValue("PersonaId") == null) {
                            context.PersonaId = null;
                        } else {
                            try{
                                context.PersonaId=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("PersonaId"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "PersonaId", e.getMessage()));
                                context.PersonaId=null;
                            }
                        }
                        context.setContextType("SolicitudId", "id_BigDecimal");
                        if(context.getStringValue("SolicitudId") == null) {
                            context.SolicitudId = null;
                        } else {
                            try{
                                context.SolicitudId=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("SolicitudId"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "SolicitudId", e.getMessage()));
                                context.SolicitudId=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("Connection1_Encoding")) {
                context.Connection1_Encoding = (String) parentContextMap.get("Connection1_Encoding");
            }if (parentContextMap.containsKey("Connection1_XPathQuery")) {
                context.Connection1_XPathQuery = (String) parentContextMap.get("Connection1_XPathQuery");
            }if (parentContextMap.containsKey("Connection1_XmlFilePath")) {
                context.Connection1_XmlFilePath = (String) parentContextMap.get("Connection1_XmlFilePath");
            }if (parentContextMap.containsKey("db_destino_AdditionalParams")) {
                context.db_destino_AdditionalParams = (String) parentContextMap.get("db_destino_AdditionalParams");
            }if (parentContextMap.containsKey("db_destino_Login")) {
                context.db_destino_Login = (String) parentContextMap.get("db_destino_Login");
            }if (parentContextMap.containsKey("db_destino_Password")) {
                context.db_destino_Password = (java.lang.String) parentContextMap.get("db_destino_Password");
            }if (parentContextMap.containsKey("db_destino_Port")) {
                context.db_destino_Port = (String) parentContextMap.get("db_destino_Port");
            }if (parentContextMap.containsKey("db_destino_Schema")) {
                context.db_destino_Schema = (String) parentContextMap.get("db_destino_Schema");
            }if (parentContextMap.containsKey("db_destino_Server")) {
                context.db_destino_Server = (String) parentContextMap.get("db_destino_Server");
            }if (parentContextMap.containsKey("db_destino_Sid")) {
                context.db_destino_Sid = (String) parentContextMap.get("db_destino_Sid");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (java.lang.String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("BODEGA")) {
                context.BODEGA = (String) parentContextMap.get("BODEGA");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("ArchivosId")) {
                context.ArchivosId = (BigDecimal) parentContextMap.get("ArchivosId");
            }if (parentContextMap.containsKey("CarpetaTemp")) {
                context.CarpetaTemp = (String) parentContextMap.get("CarpetaTemp");
            }if (parentContextMap.containsKey("FECHA_FINAL")) {
                context.FECHA_FINAL = (String) parentContextMap.get("FECHA_FINAL");
            }if (parentContextMap.containsKey("FECHA_INICIAL")) {
                context.FECHA_INICIAL = (String) parentContextMap.get("FECHA_INICIAL");
            }if (parentContextMap.containsKey("FECHA_NUMERO")) {
                context.FECHA_NUMERO = (java.util.Date) parentContextMap.get("FECHA_NUMERO");
            }if (parentContextMap.containsKey("FechaArchivo")) {
                context.FechaArchivo = (String) parentContextMap.get("FechaArchivo");
            }if (parentContextMap.containsKey("FFinal")) {
                context.FFinal = (java.util.Date) parentContextMap.get("FFinal");
            }if (parentContextMap.containsKey("FInicial")) {
                context.FInicial = (java.util.Date) parentContextMap.get("FInicial");
            }if (parentContextMap.containsKey("FINICIO")) {
                context.FINICIO = (java.util.Date) parentContextMap.get("FINICIO");
            }if (parentContextMap.containsKey("FSolicitud")) {
                context.FSolicitud = (java.util.Date) parentContextMap.get("FSolicitud");
            }if (parentContextMap.containsKey("ID")) {
                context.ID = (BigDecimal) parentContextMap.get("ID");
            }if (parentContextMap.containsKey("NombreArchivo")) {
                context.NombreArchivo = (String) parentContextMap.get("NombreArchivo");
            }if (parentContextMap.containsKey("PersonaId")) {
                context.PersonaId = (BigDecimal) parentContextMap.get("PersonaId");
            }if (parentContextMap.containsKey("SolicitudId")) {
                context.SolicitudId = (BigDecimal) parentContextMap.get("SolicitudId");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("db_destino_Password");
			parametersToEncrypt.add("db_origen_Password");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Resolucion4505");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     4024591 characters generated by Talend Open Studio for ESB 
 *     on the November 4, 2024, 4:08:37‚ÄØPM COT
 ************************************************************************************************/