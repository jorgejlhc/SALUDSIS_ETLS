// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package med_cargar_anexo_tecnico.cargaanexotecnico_1_19;

import routines.Numeric;
import routines.ColumnName;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaFlex_2
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_6
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: CargaAnexoTecnico Purpose: Carga de anexo tecnico y econ√≥mico<br>
 * Description: comercial y productos por contrato <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class CargaAnexoTecnico implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(numFila != null){
				
					this.setProperty("numFila", numFila.toString());
				
			}
			
			if(estadoEnproceso != null){
				
					this.setProperty("estadoEnproceso", estadoEnproceso.toString());
				
			}
			
			if(estadoActivo != null){
				
					this.setProperty("estadoActivo", estadoActivo.toString());
				
			}
			
			if(estadoInactivo != null){
				
					this.setProperty("estadoInactivo", estadoInactivo.toString());
				
			}
			
			if(anexoTecnicoTipoContenido != null){
				
					this.setProperty("anexoTecnicoTipoContenido", anexoTecnicoTipoContenido.toString());
				
			}
			
			if(anexoTecnicoContenido != null){
				
					this.setProperty("anexoTecnicoContenido", anexoTecnicoContenido.toString());
				
			}
			
			if(estadoInicial != null){
				
					this.setProperty("estadoInicial", estadoInicial.toString());
				
			}
			
			if(estadoNoRegistra != null){
				
					this.setProperty("estadoNoRegistra", estadoNoRegistra.toString());
				
			}
			
			if(estadoFinalizado != null){
				
					this.setProperty("estadoFinalizado", estadoFinalizado.toString());
				
			}
			
			if(cantFilas != null){
				
					this.setProperty("cantFilas", cantFilas.toString());
				
			}
			
			if(carga_id != null){
				
					this.setProperty("carga_id", carga_id.toString());
				
			}
			
			if(Contenido != null){
				
					this.setProperty("Contenido", Contenido.toString());
				
			}
			
			if(IsValid != null){
				
					this.setProperty("IsValid", IsValid.toString());
				
			}
			
			if(nombre != null){
				
					this.setProperty("nombre", nombre.toString());
				
			}
			
			if(numeroContrato != null){
				
					this.setProperty("numeroContrato", numeroContrato.toString());
				
			}
			
			if(result != null){
				
					this.setProperty("result", result.toString());
				
			}
			
			if(Salida != null){
				
					this.setProperty("Salida", Salida.toString());
				
			}
			
			if(TContenido != null){
				
					this.setProperty("TContenido", TContenido.toString());
				
			}
			
			if(userId != null){
				
					this.setProperty("userId", userId.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String numFila;
public String getNumFila(){
	return this.numFila;
}
public String estadoEnproceso;
public String getEstadoEnproceso(){
	return this.estadoEnproceso;
}
public String estadoActivo;
public String getEstadoActivo(){
	return this.estadoActivo;
}
public String estadoInactivo;
public String getEstadoInactivo(){
	return this.estadoInactivo;
}
public String anexoTecnicoTipoContenido;
public String getAnexoTecnicoTipoContenido(){
	return this.anexoTecnicoTipoContenido;
}
public Object anexoTecnicoContenido;
public Object getAnexoTecnicoContenido(){
	return this.anexoTecnicoContenido;
}
public String estadoInicial;
public String getEstadoInicial(){
	return this.estadoInicial;
}
public String estadoNoRegistra;
public String getEstadoNoRegistra(){
	return this.estadoNoRegistra;
}
public String estadoFinalizado;
public String getEstadoFinalizado(){
	return this.estadoFinalizado;
}
public Integer cantFilas;
public Integer getCantFilas(){
	return this.cantFilas;
}
public BigDecimal carga_id;
public BigDecimal getCarga_id(){
	return this.carga_id;
}
public Object Contenido;
public Object getContenido(){
	return this.Contenido;
}
public Boolean IsValid;
public Boolean getIsValid(){
	return this.IsValid;
}
public String nombre;
public String getNombre(){
	return this.nombre;
}
public String numeroContrato;
public String getNumeroContrato(){
	return this.numeroContrato;
}
public String result;
public String getResult(){
	return this.result;
}
public Object Salida;
public Object getSalida(){
	return this.Salida;
}
public String TContenido;
public String getTContenido(){
	return this.TContenido;
}
public String userId;
public String getUserId(){
	return this.userId;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Password;
public String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "1.19";
	private final String jobName = "CargaAnexoTecnico";
	private final String projectName = "MED_CARGAR_ANEXO_TECNICO";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				CargaAnexoTecnico.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(CargaAnexoTecnico.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError2", 0, "error");
								}
							
							
								errorCode = null;
								tFixedFlowInput_1Process(globalMap);
								if (!"failure".equals(status)) {
									status = "end";
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSampleRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRunJob_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_58_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_Medida_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_Fabr_ID_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_Fabr_nit_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_Impor_nombre_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_Impor_nit_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRunJob_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tOracleClose_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("HORA_INICIO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("HORA_FINAL");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ESTADO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("JOBS");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row41.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row41.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row41.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row41.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row41.JOBS = "CargaAnexoTecnico";
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row41.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row41.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row41.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row41.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row41.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_1.append(
                            row41.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row41.ESTADO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row41.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row41.JOBS != null) {
                        sb_tFileOutputDelimited_1.append(
                            row41.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tJava_5Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
globalMap.put("archivo_salida",new java.io.ByteArrayOutputStream());


System.out.println("LEYENDOO: " +context.ORIGEN );
 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 48;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.PathStorage = this.PathStorage;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class NameSpaceTool_tFileInputXML_1 {

    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();
    
	private java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();

    public void countNSMap(org.dom4j.Element el) {
        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {
            if (ns.getPrefix().trim().length() == 0) {
                xmlNameSpaceMap.put("pre"+defualtNSPath.size(), ns.getURI());
                String path = "";
                org.dom4j.Element elTmp = el;
                while (elTmp != null) {
                	if (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {
                        path = "/" + elTmp.getNamespacePrefix() + ":" + elTmp.getName() + path;
                    } else {
                        path = "/" + elTmp.getName() + path;
                    }
                    elTmp = elTmp.getParent();
                }
                defualtNSPath.add(path);
            } else {
                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());
            }

        }
        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {
            countNSMap(e);
        }
    }
    
    private final org.talend.xpath.XPathUtil util = new  org.talend.xpath.XPathUtil();
    
    {
    	util.setDefaultNSPath(defualtNSPath);
    }
    
	public String addDefaultNSPrefix(String path) {
		return util.addDefaultNSPrefix(path);
	}
	
	public String addDefaultNSPrefix(String relativeXpression, String basePath) {
		return util.addDefaultNSPrefix(relativeXpression,basePath);
	}
    
}

class XML_API_tFileInputXML_1{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getStringValue().isEmpty();
        }
        return false;
    }
}


org.dom4j.io.SAXReader reader_tFileInputXML_1 = new org.dom4j.io.SAXReader();
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}

boolean isValidFile_tFileInputXML_1 = true;
org.dom4j.Document doc_tFileInputXML_1 = null;
java.io.Closeable toClose_tFileInputXML_1 = null;
try{
	if(filename_tFileInputXML_1 instanceof java.io.InputStream){
		java.io.InputStream inputStream_tFileInputXML_1 = (java.io.InputStream)filename_tFileInputXML_1;
		toClose_tFileInputXML_1 = inputStream_tFileInputXML_1;
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(inputStream_tFileInputXML_1);
	}else{
		java.io.Reader unicodeReader_tFileInputXML_1 = new UnicodeReader(new java.io.FileInputStream(String.valueOf(filename_tFileInputXML_1)),"UTF-8");
		toClose_tFileInputXML_1 = unicodeReader_tFileInputXML_1;
		org.xml.sax.InputSource in_tFileInputXML_1= new org.xml.sax.InputSource(unicodeReader_tFileInputXML_1);
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(in_tFileInputXML_1);
	}
}catch(java.lang.Exception e){
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	isValidFile_tFileInputXML_1 = false;
} finally {
	if(toClose_tFileInputXML_1!=null) {
		toClose_tFileInputXML_1.close();
	}
}
if(isValidFile_tFileInputXML_1){
NameSpaceTool_tFileInputXML_1 nsTool_tFileInputXML_1 = new NameSpaceTool_tFileInputXML_1();
nsTool_tFileInputXML_1.countNSMap(doc_tFileInputXML_1.getRootElement());
java.util.HashMap<String,String> xmlNameSpaceMap_tFileInputXML_1 = nsTool_tFileInputXML_1.xmlNameSpaceMap;  

org.dom4j.XPath x_tFileInputXML_1 = doc_tFileInputXML_1.createXPath(nsTool_tFileInputXML_1.addDefaultNSPrefix("/connectionStrings"));  
x_tFileInputXML_1.setNamespaceURIs(xmlNameSpaceMap_tFileInputXML_1); 

java.util.List<org.dom4j.Node> nodeList_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)x_tFileInputXML_1.selectNodes(doc_tFileInputXML_1);	
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();
String str_tFileInputXML_1 = "";
org.dom4j.Node node_tFileInputXML_1 = null;

//init all mapping xpaths
java.util.Map<Integer,org.dom4j.XPath> xpaths_tFileInputXML_1=new java.util.HashMap<Integer,org.dom4j.XPath>();
	class XPathUtil_tFileInputXML_1{
	
			   public void initXPaths_0(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			       java.util.HashMap<String,String> xmlNameSpaceMap){
			
	org.dom4j.XPath xpath_0 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Host","/connectionStrings"));
	xpath_0.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(0,xpath_0);
			
	org.dom4j.XPath xpath_1 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Port","/connectionStrings"));
	xpath_1.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(1,xpath_1);
			
	org.dom4j.XPath xpath_2 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Sid","/connectionStrings"));
	xpath_2.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(2,xpath_2);
			
	org.dom4j.XPath xpath_3 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("ServiceName","/connectionStrings"));
	xpath_3.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(3,xpath_3);
			
	org.dom4j.XPath xpath_4 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Schema","/connectionStrings"));
	xpath_4.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(4,xpath_4);
			
	org.dom4j.XPath xpath_5 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("User","/connectionStrings"));
	xpath_5.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(5,xpath_5);
			
	org.dom4j.XPath xpath_6 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Password","/connectionStrings"));
	xpath_6.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(6,xpath_6);
			
	org.dom4j.XPath xpath_7 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PathStorage","/connectionStrings"));
	xpath_7.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(7,xpath_7);
			
	org.dom4j.XPath xpath_8 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPHost","/connectionStrings"));
	xpath_8.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(8,xpath_8);
			
	org.dom4j.XPath xpath_9 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPPort","/connectionStrings"));
	xpath_9.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(9,xpath_9);
			
	org.dom4j.XPath xpath_10 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("UsernameMail","/connectionStrings"));
	xpath_10.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(10,xpath_10);
			
	org.dom4j.XPath xpath_11 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PasswordMail","/connectionStrings"));
	xpath_11.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(11,xpath_11);
			
	     }
	   
	      public void initXPaths(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			    java.util.HashMap<String,String> xmlNameSpaceMap){
			    
			        initXPaths_0(xpaths,nsTool, xmlNameSpaceMap);
			    
		   }
	}
	XPathUtil_tFileInputXML_1 xPathUtil_tFileInputXML_1 = new XPathUtil_tFileInputXML_1();
	xPathUtil_tFileInputXML_1.initXPaths(xpaths_tFileInputXML_1, nsTool_tFileInputXML_1, xmlNameSpaceMap_tFileInputXML_1);
for (org.dom4j.Node temp_tFileInputXML_1: nodeList_tFileInputXML_1) {
	if (nb_line_tFileInputXML_1>=1) {
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row1 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row1 = new row1Struct();
	try{
    Object obj0_tFileInputXML_1 = xpaths_tFileInputXML_1.get(0).evaluate(temp_tFileInputXML_1);
    if(obj0_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj0_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj0_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj0_tFileInputXML_1 instanceof String || obj0_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj0_tFileInputXML_1);
    } else if(obj0_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj0_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Host =null;
									}else{
		row1.Host = str_tFileInputXML_1;
	}
    Object obj1_tFileInputXML_1 = xpaths_tFileInputXML_1.get(1).evaluate(temp_tFileInputXML_1);
    if(obj1_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj1_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj1_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj1_tFileInputXML_1 instanceof String || obj1_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj1_tFileInputXML_1);
    } else if(obj1_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj1_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Port =null;
									}else{
		row1.Port = str_tFileInputXML_1;
	}
    Object obj2_tFileInputXML_1 = xpaths_tFileInputXML_1.get(2).evaluate(temp_tFileInputXML_1);
    if(obj2_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj2_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj2_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj2_tFileInputXML_1 instanceof String || obj2_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj2_tFileInputXML_1);
    } else if(obj2_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj2_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Sid =null;
									}else{
		row1.Sid = str_tFileInputXML_1;
	}
    Object obj3_tFileInputXML_1 = xpaths_tFileInputXML_1.get(3).evaluate(temp_tFileInputXML_1);
    if(obj3_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj3_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj3_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj3_tFileInputXML_1 instanceof String || obj3_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj3_tFileInputXML_1);
    } else if(obj3_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj3_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.ServiceName =null;
									}else{
		row1.ServiceName = str_tFileInputXML_1;
	}
    Object obj4_tFileInputXML_1 = xpaths_tFileInputXML_1.get(4).evaluate(temp_tFileInputXML_1);
    if(obj4_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj4_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj4_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj4_tFileInputXML_1 instanceof String || obj4_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj4_tFileInputXML_1);
    } else if(obj4_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj4_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Schema =null;
									}else{
		row1.Schema = str_tFileInputXML_1;
	}
    Object obj5_tFileInputXML_1 = xpaths_tFileInputXML_1.get(5).evaluate(temp_tFileInputXML_1);
    if(obj5_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj5_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj5_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj5_tFileInputXML_1 instanceof String || obj5_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj5_tFileInputXML_1);
    } else if(obj5_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj5_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.User =null;
									}else{
		row1.User = str_tFileInputXML_1;
	}
    Object obj6_tFileInputXML_1 = xpaths_tFileInputXML_1.get(6).evaluate(temp_tFileInputXML_1);
    if(obj6_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj6_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj6_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj6_tFileInputXML_1 instanceof String || obj6_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj6_tFileInputXML_1);
    } else if(obj6_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj6_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Password =null;
									}else{
		row1.Password = str_tFileInputXML_1;
	}
    Object obj7_tFileInputXML_1 = xpaths_tFileInputXML_1.get(7).evaluate(temp_tFileInputXML_1);
    if(obj7_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj7_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj7_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj7_tFileInputXML_1 instanceof String || obj7_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj7_tFileInputXML_1);
    } else if(obj7_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj7_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PathStorage =null;
									}else{
		row1.PathStorage = str_tFileInputXML_1;
	}
    Object obj8_tFileInputXML_1 = xpaths_tFileInputXML_1.get(8).evaluate(temp_tFileInputXML_1);
    if(obj8_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj8_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj8_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj8_tFileInputXML_1 instanceof String || obj8_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj8_tFileInputXML_1);
    } else if(obj8_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj8_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPHost =null;
									}else{
		row1.SMTPHost = str_tFileInputXML_1;
	}
    Object obj9_tFileInputXML_1 = xpaths_tFileInputXML_1.get(9).evaluate(temp_tFileInputXML_1);
    if(obj9_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj9_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj9_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj9_tFileInputXML_1 instanceof String || obj9_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj9_tFileInputXML_1);
    } else if(obj9_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj9_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPPort =null;
									}else{
		row1.SMTPPort = str_tFileInputXML_1;
	}
    Object obj10_tFileInputXML_1 = xpaths_tFileInputXML_1.get(10).evaluate(temp_tFileInputXML_1);
    if(obj10_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj10_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj10_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj10_tFileInputXML_1 instanceof String || obj10_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj10_tFileInputXML_1);
    } else if(obj10_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj10_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.UsernameMail =null;
									}else{
		row1.UsernameMail = str_tFileInputXML_1;
	}
    Object obj11_tFileInputXML_1 = xpaths_tFileInputXML_1.get(11).evaluate(temp_tFileInputXML_1);
    if(obj11_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj11_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj11_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj11_tFileInputXML_1 instanceof String || obj11_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj11_tFileInputXML_1);
    } else if(obj11_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj11_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PasswordMail =null;
									}else{
		row1.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row1 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    context.db_origen_Server = row1.Host;
context.db_origen_Port = row1.Port;
context.db_origen_ServiceName = row1.ServiceName;
context.db_origen_Login = row1.User;
context.db_origen_Password = row1.Password;
context.db_origen_Schema = row1.Schema;

globalMap.put("archivo_salida",new java.io.ByteArrayOutputStream());
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


}
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());




/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tBufferOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_1", false);
		start_Hash.put("tBufferOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tBufferOutput_1 = 0;
		

 



/**
 * [tBufferOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row2.Result = "2";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_1 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					



String[] row_tBufferOutput_1=new String[]{"",};		
	    if(row2.Result != null){
	        
	            row_tBufferOutput_1[0] = row2.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_1[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_1);	
	
 


	tos_count_tBufferOutput_1++;

/**
 * [tBufferOutput_1 main ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tBufferOutput_1 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_1", true);
end_Hash.put("tBufferOutput_1", System.currentTimeMillis());




/**
 * [tBufferOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tBufferOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return 0;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TIPO_CONTENIDO;

				public String getTIPO_CONTENIDO () {
					return this.TIPO_CONTENIDO;
				}

				public Boolean TIPO_CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TIPO_CONTENIDOIsKey(){
				    return false;
				}
				public Integer TIPO_CONTENIDOLength(){
				    return 0;
				}
				public Integer TIPO_CONTENIDOPrecision(){
				    return 0;
				}
				public String TIPO_CONTENIDODefault(){
				
					return null;
				
				}
				public String TIPO_CONTENIDOComment(){
				
				    return "";
				
				}
				public String TIPO_CONTENIDOPattern(){
				
					return "";
				
				}
				public String TIPO_CONTENIDOOriginalDbColumnName(){
				
					return "TIPO_CONTENIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TIPO_CONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TIPO_CONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TIPO_CONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TIPO_CONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TIPO_CONTENIDO="+TIPO_CONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement();

		    String dbquery_tOracleInput_1 = "SELECT \n	ANEX.CONTENIDO AS CONTENIDO,\n	ANEX.TCONTENIDO AS TIPO_CONTENIDO\nFROM\n	MED_CARGASMASIVAS CARGA\n	INNER JOIN"
+" MED_ANEXOS ANEX ON ANEX.ID = CARGA.ANEXOS_ID\nWHERE\n	CARGA.ESTREGISTRO_ID=1 AND\n	CARGA.ID=" + context.carga_id + " AND\n	ESTADO = '"+context.estadoInicial+"'";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row4.CONTENIDO = null;
							} else {
		                          
				Object tmpObj_1_tOracleInput_1 = rs_tOracleInput_1.getObject(1);
				if(tmpObj_1_tOracleInput_1 != null) {
					row4.CONTENIDO = tmpObj_1_tOracleInput_1;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row4.TIPO_CONTENIDO = null;
							} else {
	                         		
        	row4.TIPO_CONTENIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 2, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.anexoTecnicoContenido = ((java.sql.Blob)row4.CONTENIDO).getBinaryStream();
context.anexoTecnicoTipoContenido = row4.TIPO_CONTENIDO;
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

   			if (context.anexoTecnicoTipoContenido.length()>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If5", 0, "true");
					}
				tFileInputDelimited_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If5", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class VALIDATE_NAME_COLUMNStruct implements routines.system.IPersistableRow<VALIDATE_NAME_COLUMNStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(VALIDATE_NAME_COLUMNStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
row5Struct row6 = row5;
VALIDATE_NAME_COLUMNStruct VALIDATE_NAME_COLUMN = new VALIDATE_NAME_COLUMNStruct();






	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"VALIDATE_NAME_COLUMN");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tSampleRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tSampleRow_1", false);
		start_Hash.put("tSampleRow_1", System.currentTimeMillis());
		
	
	currentComponent="tSampleRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tSampleRow_1 = 0;
		

String[] rangetSampleRow_1 = "1".split(",");
java.util.Set rangeSettSampleRow_1 = new java.util.HashSet();

Integer nb_line_tSampleRow_1 = 0;

for(int i =0;i<rangetSampleRow_1.length;i++){

	if(rangetSampleRow_1[i].matches("\\d+")){
	
		rangeSettSampleRow_1 .add(Integer.valueOf(rangetSampleRow_1[i]));
		
	}else if(rangetSampleRow_1[i].matches("\\d+\\.\\.\\d+")){
		
		String[] edgetSampleRow_1= rangetSampleRow_1[i].split("\\.\\.");
		
		for(int j=Integer.valueOf(edgetSampleRow_1[0]).intValue();j<Integer.valueOf(edgetSampleRow_1[1]).intValue()+1;j++){			
			rangeSettSampleRow_1 .add(Integer.valueOf(j));			
		}		
	}else{
	
	}
	
}



 



/**
 * [tSampleRow_1 begin ] stop
 */



	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = (java.io.InputStream)context.anexoTecnicoContenido;
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited((java.io.InputStream)context.anexoTecnicoContenido, "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row5 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row5 = new row5Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row5.CONTRATO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row5.TIPOLOGIA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
							row5.TIPO_PRODUCTO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
							row5.ITEM_NO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row5.CODIGO_SSMP = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
							row5.NOMBRE_GENERICO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
							row5.PRESENTACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
							row5.CONCENTRACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 8;
					
							row5.VIA_ADMINISTRACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 9;
					
							row5.UNIDAD_DE_MEDIDA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 10;
					
							row5.ATC = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 11;
					
							row5.GRUPO_FARMACOLOGICO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 12;
					
							row5.CADENA_FRIO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 13;
					
							row5.CODIGO_HOMIC = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 14;
					
							row5.NOMBRE_COMERCIAL_PRODUCTO_MARCA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 15;
					
							row5.LABORATORIO_FABRICANTE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 16;
					
							row5.NO_REGISTRO_SANITARIO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 17;
					
							row5.IMPORTADOR_TITULAR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 18;
					
							row5.CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 19;
					
							row5.PRECIO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 20;
					
							row5.OPCION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 21;
					
							row5.TIENE_IVA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 22;
					
							row5.CODIGO_BARRAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 23;
					
							row5.FORMA_FARMACEUTICA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 24;
					
							row5.UNIDOSIS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 25;
					
							row5.UNIDAD_MEDIDA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 26;
					
							row5.CANTIDAD_UNIDAD_MEDIDA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 27;
					
							row5.CANTIDAD_MINIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 28;
					
							row5.CANTIDAD_MAXIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 29;
					
							row5.FECHA_EXPEDICION_REG_INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 30;
					
							row5.FECHA_VENCIMIENTO_REG_INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 31;
					
							row5.FECHA_ACTIVO_CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 32;
					
							row5.FECHA_INACTIVO_CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 33;
					
							row5.LUGAR_DE_ORIGEN = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 34;
					
							row5.CARACTERISTICAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 35;
					
							row5.CONTRAINDICACIONES = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 36;
					
							row5.EFECTOS_POSTERIOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 37;
					
							row5.RIESGOS_ASOCIADOS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 38;
					
							row5.DOSIS_PARA_APLICACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 39;
					
							row5.NIT_FABRICANTE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 40;
					
							row5.NIT_IMPORTADOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 41;
					
							row5.CODIGO_OPERADOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 42;
					
							row5.CODIGO_PROVISIONAL_DE_COMITE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row5 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.CONTRATO = row5.CONTRATO;
					oneRow_tHashOutput_1.TIPOLOGIA = row5.TIPOLOGIA;
					oneRow_tHashOutput_1.TIPO_PRODUCTO = row5.TIPO_PRODUCTO;
					oneRow_tHashOutput_1.ITEM_NO = row5.ITEM_NO;
					oneRow_tHashOutput_1.CODIGO_SSMP = row5.CODIGO_SSMP;
					oneRow_tHashOutput_1.NOMBRE_GENERICO = row5.NOMBRE_GENERICO;
					oneRow_tHashOutput_1.PRESENTACION = row5.PRESENTACION;
					oneRow_tHashOutput_1.CONCENTRACION = row5.CONCENTRACION;
					oneRow_tHashOutput_1.VIA_ADMINISTRACION = row5.VIA_ADMINISTRACION;
					oneRow_tHashOutput_1.UNIDAD_DE_MEDIDA = row5.UNIDAD_DE_MEDIDA;
					oneRow_tHashOutput_1.ATC = row5.ATC;
					oneRow_tHashOutput_1.GRUPO_FARMACOLOGICO = row5.GRUPO_FARMACOLOGICO;
					oneRow_tHashOutput_1.CADENA_FRIO = row5.CADENA_FRIO;
					oneRow_tHashOutput_1.CODIGO_HOMIC = row5.CODIGO_HOMIC;
					oneRow_tHashOutput_1.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row5.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
					oneRow_tHashOutput_1.LABORATORIO_FABRICANTE = row5.LABORATORIO_FABRICANTE;
					oneRow_tHashOutput_1.NO_REGISTRO_SANITARIO = row5.NO_REGISTRO_SANITARIO;
					oneRow_tHashOutput_1.IMPORTADOR_TITULAR = row5.IMPORTADOR_TITULAR;
					oneRow_tHashOutput_1.CUM = row5.CUM;
					oneRow_tHashOutput_1.PRECIO = row5.PRECIO;
					oneRow_tHashOutput_1.OPCION = row5.OPCION;
					oneRow_tHashOutput_1.TIENE_IVA = row5.TIENE_IVA;
					oneRow_tHashOutput_1.CODIGO_BARRAS = row5.CODIGO_BARRAS;
					oneRow_tHashOutput_1.FORMA_FARMACEUTICA = row5.FORMA_FARMACEUTICA;
					oneRow_tHashOutput_1.UNIDOSIS = row5.UNIDOSIS;
					oneRow_tHashOutput_1.UNIDAD_MEDIDA = row5.UNIDAD_MEDIDA;
					oneRow_tHashOutput_1.CANTIDAD_UNIDAD_MEDIDA = row5.CANTIDAD_UNIDAD_MEDIDA;
					oneRow_tHashOutput_1.CANTIDAD_MINIMA = row5.CANTIDAD_MINIMA;
					oneRow_tHashOutput_1.CANTIDAD_MAXIMA = row5.CANTIDAD_MAXIMA;
					oneRow_tHashOutput_1.FECHA_EXPEDICION_REG_INVIMA = row5.FECHA_EXPEDICION_REG_INVIMA;
					oneRow_tHashOutput_1.FECHA_VENCIMIENTO_REG_INVIMA = row5.FECHA_VENCIMIENTO_REG_INVIMA;
					oneRow_tHashOutput_1.FECHA_ACTIVO_CUM = row5.FECHA_ACTIVO_CUM;
					oneRow_tHashOutput_1.FECHA_INACTIVO_CUM = row5.FECHA_INACTIVO_CUM;
					oneRow_tHashOutput_1.LUGAR_DE_ORIGEN = row5.LUGAR_DE_ORIGEN;
					oneRow_tHashOutput_1.CARACTERISTICAS = row5.CARACTERISTICAS;
					oneRow_tHashOutput_1.CONTRAINDICACIONES = row5.CONTRAINDICACIONES;
					oneRow_tHashOutput_1.EFECTOS_POSTERIOR = row5.EFECTOS_POSTERIOR;
					oneRow_tHashOutput_1.RIESGOS_ASOCIADOS = row5.RIESGOS_ASOCIADOS;
					oneRow_tHashOutput_1.DOSIS_PARA_APLICACION = row5.DOSIS_PARA_APLICACION;
					oneRow_tHashOutput_1.NIT_FABRICANTE = row5.NIT_FABRICANTE;
					oneRow_tHashOutput_1.NIT_IMPORTADOR = row5.NIT_IMPORTADOR;
					oneRow_tHashOutput_1.CODIGO_OPERADOR = row5.CODIGO_OPERADOR;
					oneRow_tHashOutput_1.CODIGO_PROVISIONAL_DE_COMITE = row5.CODIGO_PROVISIONAL_DE_COMITE;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 
     row6 = row5;


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */

	
	/**
	 * [tSampleRow_1 main ] start
	 */

	

	
	
	currentComponent="tSampleRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

	
	nb_line_tSampleRow_1++;
	
 	if(!rangeSettSampleRow_1.contains(nb_line_tSampleRow_1)){        
            VALIDATE_NAME_COLUMN = null;            	
 	}else{  	
 	   VALIDATE_NAME_COLUMN = new VALIDATE_NAME_COLUMNStruct();
 	   

       VALIDATE_NAME_COLUMN.CONTRATO = row6.CONTRATO;
       

       VALIDATE_NAME_COLUMN.TIPOLOGIA = row6.TIPOLOGIA;
       

       VALIDATE_NAME_COLUMN.TIPO_PRODUCTO = row6.TIPO_PRODUCTO;
       

       VALIDATE_NAME_COLUMN.ITEM_NO = row6.ITEM_NO;
       

       VALIDATE_NAME_COLUMN.CODIGO_SSMP = row6.CODIGO_SSMP;
       

       VALIDATE_NAME_COLUMN.NOMBRE_GENERICO = row6.NOMBRE_GENERICO;
       

       VALIDATE_NAME_COLUMN.PRESENTACION = row6.PRESENTACION;
       

       VALIDATE_NAME_COLUMN.CONCENTRACION = row6.CONCENTRACION;
       

       VALIDATE_NAME_COLUMN.VIA_ADMINISTRACION = row6.VIA_ADMINISTRACION;
       

       VALIDATE_NAME_COLUMN.UNIDAD_DE_MEDIDA = row6.UNIDAD_DE_MEDIDA;
       

       VALIDATE_NAME_COLUMN.ATC = row6.ATC;
       

       VALIDATE_NAME_COLUMN.GRUPO_FARMACOLOGICO = row6.GRUPO_FARMACOLOGICO;
       

       VALIDATE_NAME_COLUMN.CADENA_FRIO = row6.CADENA_FRIO;
       

       VALIDATE_NAME_COLUMN.CODIGO_HOMIC = row6.CODIGO_HOMIC;
       

       VALIDATE_NAME_COLUMN.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row6.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
       

       VALIDATE_NAME_COLUMN.LABORATORIO_FABRICANTE = row6.LABORATORIO_FABRICANTE;
       

       VALIDATE_NAME_COLUMN.NO_REGISTRO_SANITARIO = row6.NO_REGISTRO_SANITARIO;
       

       VALIDATE_NAME_COLUMN.IMPORTADOR_TITULAR = row6.IMPORTADOR_TITULAR;
       

       VALIDATE_NAME_COLUMN.CUM = row6.CUM;
       

       VALIDATE_NAME_COLUMN.PRECIO = row6.PRECIO;
       

       VALIDATE_NAME_COLUMN.OPCION = row6.OPCION;
       

       VALIDATE_NAME_COLUMN.TIENE_IVA = row6.TIENE_IVA;
       

       VALIDATE_NAME_COLUMN.CODIGO_BARRAS = row6.CODIGO_BARRAS;
       

       VALIDATE_NAME_COLUMN.FORMA_FARMACEUTICA = row6.FORMA_FARMACEUTICA;
       

       VALIDATE_NAME_COLUMN.UNIDOSIS = row6.UNIDOSIS;
       

       VALIDATE_NAME_COLUMN.UNIDAD_MEDIDA = row6.UNIDAD_MEDIDA;
       

       VALIDATE_NAME_COLUMN.CANTIDAD_UNIDAD_MEDIDA = row6.CANTIDAD_UNIDAD_MEDIDA;
       

       VALIDATE_NAME_COLUMN.CANTIDAD_MINIMA = row6.CANTIDAD_MINIMA;
       

       VALIDATE_NAME_COLUMN.CANTIDAD_MAXIMA = row6.CANTIDAD_MAXIMA;
       

       VALIDATE_NAME_COLUMN.FECHA_EXPEDICION_REG_INVIMA = row6.FECHA_EXPEDICION_REG_INVIMA;
       

       VALIDATE_NAME_COLUMN.FECHA_VENCIMIENTO_REG_INVIMA = row6.FECHA_VENCIMIENTO_REG_INVIMA;
       

       VALIDATE_NAME_COLUMN.FECHA_ACTIVO_CUM = row6.FECHA_ACTIVO_CUM;
       

       VALIDATE_NAME_COLUMN.FECHA_INACTIVO_CUM = row6.FECHA_INACTIVO_CUM;
       

       VALIDATE_NAME_COLUMN.LUGAR_DE_ORIGEN = row6.LUGAR_DE_ORIGEN;
       

       VALIDATE_NAME_COLUMN.CARACTERISTICAS = row6.CARACTERISTICAS;
       

       VALIDATE_NAME_COLUMN.CONTRAINDICACIONES = row6.CONTRAINDICACIONES;
       

       VALIDATE_NAME_COLUMN.EFECTOS_POSTERIOR = row6.EFECTOS_POSTERIOR;
       

       VALIDATE_NAME_COLUMN.RIESGOS_ASOCIADOS = row6.RIESGOS_ASOCIADOS;
       

       VALIDATE_NAME_COLUMN.DOSIS_PARA_APLICACION = row6.DOSIS_PARA_APLICACION;
       

       VALIDATE_NAME_COLUMN.NIT_FABRICANTE = row6.NIT_FABRICANTE;
       

       VALIDATE_NAME_COLUMN.NIT_IMPORTADOR = row6.NIT_IMPORTADOR;
       

       VALIDATE_NAME_COLUMN.CODIGO_OPERADOR = row6.CODIGO_OPERADOR;
       

       VALIDATE_NAME_COLUMN.CODIGO_PROVISIONAL_DE_COMITE = row6.CODIGO_PROVISIONAL_DE_COMITE;
       
 	
 	}
 
 
 
 
 
 
 
 
 
 
 
 
 


	tos_count_tSampleRow_1++;

/**
 * [tSampleRow_1 main ] stop
 */
	
	/**
	 * [tSampleRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSampleRow_1";
	
	

 



/**
 * [tSampleRow_1 process_data_begin ] stop
 */
// Start of branch "VALIDATE_NAME_COLUMN"
if(VALIDATE_NAME_COLUMN != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"VALIDATE_NAME_COLUMN"
						
						);
					}
					

    context.IsValid = ColumnName.IsValidAnexoTecnico(
	VALIDATE_NAME_COLUMN.CONTRATO, 
	VALIDATE_NAME_COLUMN.TIPOLOGIA, 
	VALIDATE_NAME_COLUMN.TIPO_PRODUCTO, 
	VALIDATE_NAME_COLUMN.ITEM_NO, 
	VALIDATE_NAME_COLUMN.CODIGO_SSMP, 
	VALIDATE_NAME_COLUMN.NOMBRE_GENERICO, 
	VALIDATE_NAME_COLUMN.PRESENTACION, 
	VALIDATE_NAME_COLUMN.CONCENTRACION, 
	VALIDATE_NAME_COLUMN.VIA_ADMINISTRACION, 
	VALIDATE_NAME_COLUMN.UNIDAD_DE_MEDIDA, 
	VALIDATE_NAME_COLUMN.ATC, 
	VALIDATE_NAME_COLUMN.GRUPO_FARMACOLOGICO,
	VALIDATE_NAME_COLUMN.CADENA_FRIO, 
	VALIDATE_NAME_COLUMN.CODIGO_HOMIC, 
	VALIDATE_NAME_COLUMN.NOMBRE_COMERCIAL_PRODUCTO_MARCA, 
	VALIDATE_NAME_COLUMN.LABORATORIO_FABRICANTE, 
	VALIDATE_NAME_COLUMN.NO_REGISTRO_SANITARIO, 
	VALIDATE_NAME_COLUMN.IMPORTADOR_TITULAR, 
	VALIDATE_NAME_COLUMN.CUM, 
	VALIDATE_NAME_COLUMN.PRECIO, 
	VALIDATE_NAME_COLUMN.OPCION, 
	VALIDATE_NAME_COLUMN.TIENE_IVA, 
	VALIDATE_NAME_COLUMN.CODIGO_BARRAS, 
	VALIDATE_NAME_COLUMN.FORMA_FARMACEUTICA,
	VALIDATE_NAME_COLUMN.UNIDOSIS, 
	VALIDATE_NAME_COLUMN.UNIDAD_MEDIDA, 
	VALIDATE_NAME_COLUMN.CANTIDAD_UNIDAD_MEDIDA, 
	VALIDATE_NAME_COLUMN.CANTIDAD_MINIMA, 
	VALIDATE_NAME_COLUMN.CANTIDAD_MAXIMA,
	VALIDATE_NAME_COLUMN.FECHA_EXPEDICION_REG_INVIMA, 
	VALIDATE_NAME_COLUMN.FECHA_VENCIMIENTO_REG_INVIMA, 
	VALIDATE_NAME_COLUMN.FECHA_ACTIVO_CUM, 
	VALIDATE_NAME_COLUMN.FECHA_INACTIVO_CUM, 
	VALIDATE_NAME_COLUMN.LUGAR_DE_ORIGEN, 
	VALIDATE_NAME_COLUMN.CARACTERISTICAS, 
	VALIDATE_NAME_COLUMN.CONTRAINDICACIONES, 
	VALIDATE_NAME_COLUMN.EFECTOS_POSTERIOR, 
	VALIDATE_NAME_COLUMN.RIESGOS_ASOCIADOS, 
	VALIDATE_NAME_COLUMN.DOSIS_PARA_APLICACION, 
	VALIDATE_NAME_COLUMN.NIT_FABRICANTE, 
	VALIDATE_NAME_COLUMN.NIT_IMPORTADOR, 
	VALIDATE_NAME_COLUMN.CODIGO_OPERADOR,
	VALIDATE_NAME_COLUMN.CODIGO_PROVISIONAL_DE_COMITE
);
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "VALIDATE_NAME_COLUMN"




	
	/**
	 * [tSampleRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tSampleRow_1";
	
	

 



/**
 * [tSampleRow_1 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)((java.io.InputStream)context.anexoTecnicoContenido) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk17", 0, "ok");
				}
				tFixedFlowInput_4Process(globalMap);



/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */

	
	/**
	 * [tSampleRow_1 end ] start
	 */

	

	
	
	currentComponent="tSampleRow_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tSampleRow_1", true);
end_Hash.put("tSampleRow_1", System.currentTimeMillis());




/**
 * [tSampleRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"VALIDATE_NAME_COLUMN");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());

   			if (/*context.IsValid == */false) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If1", 0, "true");
					}
				tJava_2Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If1", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_3 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */

	
	/**
	 * [tSampleRow_1 finally ] start
	 */

	

	
	
	currentComponent="tSampleRow_1";
	
	

 



/**
 * [tSampleRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}

				public Boolean EstadoIsNullable(){
				    return true;
				}
				public Boolean EstadoIsKey(){
				    return false;
				}
				public Integer EstadoLength(){
				    return 0;
				}
				public Integer EstadoPrecision(){
				    return 0;
				}
				public String EstadoDefault(){
				
					return null;
				
				}
				public String EstadoComment(){
				
				    return "";
				
				}
				public String EstadoPattern(){
				
					return "";
				
				}
				public String EstadoOriginalDbColumnName(){
				
					return "Estado";
				
				}

				
			    public String Respuesta;

				public String getRespuesta () {
					return this.Respuesta;
				}

				public Boolean RespuestaIsNullable(){
				    return true;
				}
				public Boolean RespuestaIsKey(){
				    return false;
				}
				public Integer RespuestaLength(){
				    return 0;
				}
				public Integer RespuestaPrecision(){
				    return 0;
				}
				public String RespuestaDefault(){
				
					return null;
				
				}
				public String RespuestaComment(){
				
				    return "";
				
				}
				public String RespuestaPattern(){
				
					return "";
				
				}
				public String RespuestaOriginalDbColumnName(){
				
					return "Respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Estado="+Estado);
		sb.append(",Respuesta="+Respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();




	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		int nb_line_tFileOutputExcel_2 = 0;


		jxl.write.WritableWorkbook writeableWorkbook_tFileOutputExcel_2 = null;
		jxl.write.WritableSheet writableSheet_tFileOutputExcel_2 = null;

		jxl.WorkbookSettings workbookSettings_tFileOutputExcel_2 = new jxl.WorkbookSettings();
        workbookSettings_tFileOutputExcel_2.setEncoding("ISO-8859-15");
		writeableWorkbook_tFileOutputExcel_2 = new jxl.write.biff.WritableWorkbookImpl(
            		new java.io.BufferedOutputStream((java.io.OutputStream)globalMap.get("archivo_salida")),
            		false, workbookSettings_tFileOutputExcel_2);

        writableSheet_tFileOutputExcel_2 = writeableWorkbook_tFileOutputExcel_2.getSheet("Resultado");
        if(writableSheet_tFileOutputExcel_2 == null){
        	writableSheet_tFileOutputExcel_2 = writeableWorkbook_tFileOutputExcel_2.createSheet("Resultado", writeableWorkbook_tFileOutputExcel_2.getNumberOfSheets());
		}


        //modif start
        int startRowNum_tFileOutputExcel_2 = writableSheet_tFileOutputExcel_2.getRows();
		//modif end

		int[] fitWidth_tFileOutputExcel_2 = new int[2];
		for(int i_tFileOutputExcel_2=0;i_tFileOutputExcel_2<2;i_tFileOutputExcel_2++){
		    int fitCellViewSize_tFileOutputExcel_2=writableSheet_tFileOutputExcel_2.getColumnView(i_tFileOutputExcel_2).getSize();
			fitWidth_tFileOutputExcel_2[i_tFileOutputExcel_2]=fitCellViewSize_tFileOutputExcel_2/256;
			if(fitCellViewSize_tFileOutputExcel_2%256!=0){
				fitWidth_tFileOutputExcel_2[i_tFileOutputExcel_2]+=1;
			}
		}



		if (startRowNum_tFileOutputExcel_2 == 0){
	//modif end
		//modif start
			writableSheet_tFileOutputExcel_2.addCell(new jxl.write.Label(0, nb_line_tFileOutputExcel_2, "Estado"
			));
		//modif end
		fitWidth_tFileOutputExcel_2[0]=fitWidth_tFileOutputExcel_2[0]>6?fitWidth_tFileOutputExcel_2[0]:6;
		//modif start
			writableSheet_tFileOutputExcel_2.addCell(new jxl.write.Label(1, nb_line_tFileOutputExcel_2, "Respuesta"
			));
		//modif end
		fitWidth_tFileOutputExcel_2[1]=fitWidth_tFileOutputExcel_2[1]>9?fitWidth_tFileOutputExcel_2[1]:9;
		nb_line_tFileOutputExcel_2 ++;
		headerIsInserted_tFileOutputExcel_2 = true;
	}


 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


row46.Estado = "No finalizado.";
row46.Respuesta = "Una o mas columnas del archivo '"+context.nombre+"' no coinciden con la plantilla";
context.result = "2";

 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					

								   				
	    				if(row46.Estado != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_2 = 0;
					

					
						jxl.write.WritableCell cell_0_tFileOutputExcel_2 = new jxl.write.Label(columnIndex_tFileOutputExcel_2, startRowNum_tFileOutputExcel_2 + nb_line_tFileOutputExcel_2,
					
//modif end
								row46.Estado
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_2.addCell(cell_0_tFileOutputExcel_2);
							int currentWith_0_tFileOutputExcel_2 = cell_0_tFileOutputExcel_2.getContents().trim().length();
							fitWidth_tFileOutputExcel_2[0]=fitWidth_tFileOutputExcel_2[0]>currentWith_0_tFileOutputExcel_2?fitWidth_tFileOutputExcel_2[0]:currentWith_0_tFileOutputExcel_2+2;
	    				} 
					
								   				
	    				if(row46.Respuesta != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_2 = 1;
					

					
						jxl.write.WritableCell cell_1_tFileOutputExcel_2 = new jxl.write.Label(columnIndex_tFileOutputExcel_2, startRowNum_tFileOutputExcel_2 + nb_line_tFileOutputExcel_2,
					
//modif end
								row46.Respuesta
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_2.addCell(cell_1_tFileOutputExcel_2);
							int currentWith_1_tFileOutputExcel_2 = cell_1_tFileOutputExcel_2.getContents().trim().length();
							fitWidth_tFileOutputExcel_2[1]=fitWidth_tFileOutputExcel_2[1]>currentWith_1_tFileOutputExcel_2?fitWidth_tFileOutputExcel_2[1]:currentWith_1_tFileOutputExcel_2+2;
	    				} 
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */



	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
	//modif start
		
			writableSheet_tFileOutputExcel_2.setColumnView(columnIndex_tFileOutputExcel_2, fitWidth_tFileOutputExcel_2[0]);
		
	//modif end
	
							columnIndex_tFileOutputExcel_2 = 1;
						
	//modif start
		
			writableSheet_tFileOutputExcel_2.setColumnView(columnIndex_tFileOutputExcel_2, fitWidth_tFileOutputExcel_2[1]);
		
	//modif end
	
		writeableWorkbook_tFileOutputExcel_2.write();
		writeableWorkbook_tFileOutputExcel_2.close();
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tRunJob_3Process(globalMap);



/**
 * [tFileOutputExcel_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tRunJob_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRunJob_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tRunJob_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_3", false);
		start_Hash.put("tRunJob_3", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_3";
	
	
		int tos_count_tRunJob_3 = 0;
		


 



/**
 * [tRunJob_3 begin ] stop
 */
	
	/**
	 * [tRunJob_3 main ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	
	java.util.List<String> paraList_tRunJob_3 = new java.util.ArrayList<String>();
	
	        				paraList_tRunJob_3.add("--father_pid="+pid);
	      			
	        				paraList_tRunJob_3.add("--root_pid="+rootPid);
	      			
	        				paraList_tRunJob_3.add("--father_node=tRunJob_3");
	      			
	        				paraList_tRunJob_3.add("--context=Default");
	      			
		if(enableLogStash){
			paraList_tRunJob_3.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_3.add("--stat_port=" + portStats);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_3.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_3 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_3 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_3".equals(tRunJobName_tRunJob_3) && childResumePath_tRunJob_3 != null){
		paraList_tRunJob_3.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_3.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_3");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_3 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_3 = null;

	
		obj_tRunJob_3 = context.carga_id;
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param carga_id=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param carga_id=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param carga_id=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("carga_id", obj_tRunJob_3);
	
		obj_tRunJob_3 = globalMap.get("archivo_salida");
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param Salida=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param Salida=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param Salida=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("Salida", obj_tRunJob_3);
	
		obj_tRunJob_3 = "xls";
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param Extension=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param Extension=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param Extension=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("Extension", obj_tRunJob_3);
	
	
		med_cargar_anexo_tecnico.savelog_0_2.SaveLog childJob_tRunJob_3 = new med_cargar_anexo_tecnico.savelog_0_2.SaveLog();
	    // pass DataSources
	    java.util.Map<String, routines.system.TalendDataSource> talendDataSources_tRunJob_3 = (java.util.Map<String, routines.system.TalendDataSource>) globalMap
	            .get(KEY_DB_DATASOURCES);
	    if (null != talendDataSources_tRunJob_3) {
	        java.util.Map<String, javax.sql.DataSource> dataSources_tRunJob_3 = new java.util.HashMap<String, javax.sql.DataSource>();
	        for (java.util.Map.Entry<String, routines.system.TalendDataSource> talendDataSourceEntry_tRunJob_3 : talendDataSources_tRunJob_3
			        .entrySet()) {
	            dataSources_tRunJob_3.put(talendDataSourceEntry_tRunJob_3.getKey(),
	                    talendDataSourceEntry_tRunJob_3.getValue().getRawDataSource());
	        }
	        childJob_tRunJob_3.setDataSources(dataSources_tRunJob_3);
	    }
		  
			childJob_tRunJob_3.parentContextMap = parentContextMap_tRunJob_3;
		  
		
		String[][] childReturn_tRunJob_3 = childJob_tRunJob_3.runJob((String[]) paraList_tRunJob_3.toArray(new String[paraList_tRunJob_3.size()]));
		
            if(childJob_tRunJob_3.getErrorCode() == null){
                globalMap.put("tRunJob_3_CHILD_RETURN_CODE", childJob_tRunJob_3.getStatus() != null && ("failure").equals(childJob_tRunJob_3.getStatus()) ? 1 : 0);
            }else{
                globalMap.put("tRunJob_3_CHILD_RETURN_CODE", childJob_tRunJob_3.getErrorCode());
            }
            if (childJob_tRunJob_3.getExceptionStackTrace() != null) {
                globalMap.put("tRunJob_3_CHILD_EXCEPTION_STACKTRACE", childJob_tRunJob_3.getExceptionStackTrace());
            }
                    errorCode = childJob_tRunJob_3.getErrorCode();
                if (childJob_tRunJob_3.getErrorCode() != null || ("failure").equals(childJob_tRunJob_3.getStatus())) {
                    java.lang.Exception ce_tRunJob_3 = childJob_tRunJob_3.getException();
                    throw new RuntimeException("Child job running failed.\n" + ((ce_tRunJob_3!=null) ? (ce_tRunJob_3.getClass().getName() + ": " + ce_tRunJob_3.getMessage()) : ""));
                }

 


	tos_count_tRunJob_3++;

/**
 * [tRunJob_3 main ] stop
 */
	
	/**
	 * [tRunJob_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 



/**
 * [tRunJob_3 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 



/**
 * [tRunJob_3 process_data_end ] stop
 */
	
	/**
	 * [tRunJob_3 end ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 

ok_Hash.put("tRunJob_3", true);
end_Hash.put("tRunJob_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tRunJob_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRunJob_3 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	
	
 



/**
 * [tRunJob_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRunJob_3_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return 0;
				}
				public Integer Id_Precision(){
				    return 0;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return 0;
				}
				public Integer Estado_Precision(){
				    return 0;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Estado_="+Estado_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "MED.UpdEstadoCargaMasiva" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_4", false);
		start_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_4";
	
	
		int tos_count_tFixedFlowInput_4 = 0;
		

	    for (int i_tFixedFlowInput_4 = 0 ; i_tFixedFlowInput_4 < 1 ; i_tFixedFlowInput_4++) {
	                	            	
    	            		row14.Id_ = context.carga_id;
    	            	        	            	
    	            		row14.Estado_ = context.estadoEnproceso;
    	            	

 



/**
 * [tFixedFlowInput_4 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 


	tos_count_tFixedFlowInput_4++;

/**
 * [tFixedFlowInput_4 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
    					if (row14.Id_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_1.setBigDecimal(1, row14.Id_);
    					}
    					
			// code for the argument 2 (Estado_) of type 'IN AUTOMAPPING'
    					if (row14.Estado_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(2, row14.Estado_);
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

        }
        globalMap.put("tFixedFlowInput_4_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_4", true);
end_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());




/**
 * [tFixedFlowInput_4 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_4 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_4_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println(TalendDate.getCurrentDate()+" - Carga de archivo y validacion de nombres completa.");
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());

   			if (context.IsValid == true) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tHashInput_11Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}



/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class DATA_FORMATStruct implements routines.system.IPersistableRow<DATA_FORMATStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DATA_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
row10Struct row10 = new row10Struct();
DATA_FORMATStruct DATA_FORMAT = new DATA_FORMATStruct();






	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DATA_FORMAT");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<DATA_FORMATStruct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<DATA_FORMATStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
	int CONSECUTIVO;
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
DATA_FORMATStruct DATA_FORMAT_tmp = new DATA_FORMATStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tFilterRow_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_19", false);
		start_Hash.put("tFilterRow_19", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tFilterRow_19 = 0;
		
    int nb_line_tFilterRow_19 = 0;
    int nb_line_ok_tFilterRow_19 = 0;
    int nb_line_reject_tFilterRow_19 = 0;

    class Operator_tFilterRow_19 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_19(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_19 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row5Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row7.CONTRATO = next_tHashInput_11.CONTRATO;
	row7.TIPOLOGIA = next_tHashInput_11.TIPOLOGIA;
	row7.TIPO_PRODUCTO = next_tHashInput_11.TIPO_PRODUCTO;
	row7.ITEM_NO = next_tHashInput_11.ITEM_NO;
	row7.CODIGO_SSMP = next_tHashInput_11.CODIGO_SSMP;
	row7.NOMBRE_GENERICO = next_tHashInput_11.NOMBRE_GENERICO;
	row7.PRESENTACION = next_tHashInput_11.PRESENTACION;
	row7.CONCENTRACION = next_tHashInput_11.CONCENTRACION;
	row7.VIA_ADMINISTRACION = next_tHashInput_11.VIA_ADMINISTRACION;
	row7.UNIDAD_DE_MEDIDA = next_tHashInput_11.UNIDAD_DE_MEDIDA;
	row7.ATC = next_tHashInput_11.ATC;
	row7.GRUPO_FARMACOLOGICO = next_tHashInput_11.GRUPO_FARMACOLOGICO;
	row7.CADENA_FRIO = next_tHashInput_11.CADENA_FRIO;
	row7.CODIGO_HOMIC = next_tHashInput_11.CODIGO_HOMIC;
	row7.NOMBRE_COMERCIAL_PRODUCTO_MARCA = next_tHashInput_11.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	row7.LABORATORIO_FABRICANTE = next_tHashInput_11.LABORATORIO_FABRICANTE;
	row7.NO_REGISTRO_SANITARIO = next_tHashInput_11.NO_REGISTRO_SANITARIO;
	row7.IMPORTADOR_TITULAR = next_tHashInput_11.IMPORTADOR_TITULAR;
	row7.CUM = next_tHashInput_11.CUM;
	row7.PRECIO = next_tHashInput_11.PRECIO;
	row7.OPCION = next_tHashInput_11.OPCION;
	row7.TIENE_IVA = next_tHashInput_11.TIENE_IVA;
	row7.CODIGO_BARRAS = next_tHashInput_11.CODIGO_BARRAS;
	row7.FORMA_FARMACEUTICA = next_tHashInput_11.FORMA_FARMACEUTICA;
	row7.UNIDOSIS = next_tHashInput_11.UNIDOSIS;
	row7.UNIDAD_MEDIDA = next_tHashInput_11.UNIDAD_MEDIDA;
	row7.CANTIDAD_UNIDAD_MEDIDA = next_tHashInput_11.CANTIDAD_UNIDAD_MEDIDA;
	row7.CANTIDAD_MINIMA = next_tHashInput_11.CANTIDAD_MINIMA;
	row7.CANTIDAD_MAXIMA = next_tHashInput_11.CANTIDAD_MAXIMA;
	row7.FECHA_EXPEDICION_REG_INVIMA = next_tHashInput_11.FECHA_EXPEDICION_REG_INVIMA;
	row7.FECHA_VENCIMIENTO_REG_INVIMA = next_tHashInput_11.FECHA_VENCIMIENTO_REG_INVIMA;
	row7.FECHA_ACTIVO_CUM = next_tHashInput_11.FECHA_ACTIVO_CUM;
	row7.FECHA_INACTIVO_CUM = next_tHashInput_11.FECHA_INACTIVO_CUM;
	row7.LUGAR_DE_ORIGEN = next_tHashInput_11.LUGAR_DE_ORIGEN;
	row7.CARACTERISTICAS = next_tHashInput_11.CARACTERISTICAS;
	row7.CONTRAINDICACIONES = next_tHashInput_11.CONTRAINDICACIONES;
	row7.EFECTOS_POSTERIOR = next_tHashInput_11.EFECTOS_POSTERIOR;
	row7.RIESGOS_ASOCIADOS = next_tHashInput_11.RIESGOS_ASOCIADOS;
	row7.DOSIS_PARA_APLICACION = next_tHashInput_11.DOSIS_PARA_APLICACION;
	row7.NIT_FABRICANTE = next_tHashInput_11.NIT_FABRICANTE;
	row7.NIT_IMPORTADOR = next_tHashInput_11.NIT_IMPORTADOR;
	row7.CODIGO_OPERADOR = next_tHashInput_11.CODIGO_OPERADOR;
	row7.CODIGO_PROVISIONAL_DE_COMITE = next_tHashInput_11.CODIGO_PROVISIONAL_DE_COMITE;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_19 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

          row10 = null;
    Operator_tFilterRow_19 ope_tFilterRow_19 = new Operator_tFilterRow_19("&&");    
        ope_tFilterRow_19.matches((row7.CONTRATO == null? false : row7.CONTRATO.matches("CONTRATO") != true)
                       , " CONTRATO.matches(\"CONTRATO\") != true failed");
    
    if (ope_tFilterRow_19.getMatchFlag()) {
              if(row10 == null){ 
                row10 = new row10Struct();
              }
               row10.CONTRATO = row7.CONTRATO;
               row10.TIPOLOGIA = row7.TIPOLOGIA;
               row10.TIPO_PRODUCTO = row7.TIPO_PRODUCTO;
               row10.ITEM_NO = row7.ITEM_NO;
               row10.CODIGO_SSMP = row7.CODIGO_SSMP;
               row10.NOMBRE_GENERICO = row7.NOMBRE_GENERICO;
               row10.PRESENTACION = row7.PRESENTACION;
               row10.CONCENTRACION = row7.CONCENTRACION;
               row10.VIA_ADMINISTRACION = row7.VIA_ADMINISTRACION;
               row10.UNIDAD_DE_MEDIDA = row7.UNIDAD_DE_MEDIDA;
               row10.ATC = row7.ATC;
               row10.GRUPO_FARMACOLOGICO = row7.GRUPO_FARMACOLOGICO;
               row10.CADENA_FRIO = row7.CADENA_FRIO;
               row10.CODIGO_HOMIC = row7.CODIGO_HOMIC;
               row10.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row7.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
               row10.LABORATORIO_FABRICANTE = row7.LABORATORIO_FABRICANTE;
               row10.NO_REGISTRO_SANITARIO = row7.NO_REGISTRO_SANITARIO;
               row10.IMPORTADOR_TITULAR = row7.IMPORTADOR_TITULAR;
               row10.CUM = row7.CUM;
               row10.PRECIO = row7.PRECIO;
               row10.OPCION = row7.OPCION;
               row10.TIENE_IVA = row7.TIENE_IVA;
               row10.CODIGO_BARRAS = row7.CODIGO_BARRAS;
               row10.FORMA_FARMACEUTICA = row7.FORMA_FARMACEUTICA;
               row10.UNIDOSIS = row7.UNIDOSIS;
               row10.UNIDAD_MEDIDA = row7.UNIDAD_MEDIDA;
               row10.CANTIDAD_UNIDAD_MEDIDA = row7.CANTIDAD_UNIDAD_MEDIDA;
               row10.CANTIDAD_MINIMA = row7.CANTIDAD_MINIMA;
               row10.CANTIDAD_MAXIMA = row7.CANTIDAD_MAXIMA;
               row10.FECHA_EXPEDICION_REG_INVIMA = row7.FECHA_EXPEDICION_REG_INVIMA;
               row10.FECHA_VENCIMIENTO_REG_INVIMA = row7.FECHA_VENCIMIENTO_REG_INVIMA;
               row10.FECHA_ACTIVO_CUM = row7.FECHA_ACTIVO_CUM;
               row10.FECHA_INACTIVO_CUM = row7.FECHA_INACTIVO_CUM;
               row10.LUGAR_DE_ORIGEN = row7.LUGAR_DE_ORIGEN;
               row10.CARACTERISTICAS = row7.CARACTERISTICAS;
               row10.CONTRAINDICACIONES = row7.CONTRAINDICACIONES;
               row10.EFECTOS_POSTERIOR = row7.EFECTOS_POSTERIOR;
               row10.RIESGOS_ASOCIADOS = row7.RIESGOS_ASOCIADOS;
               row10.DOSIS_PARA_APLICACION = row7.DOSIS_PARA_APLICACION;
               row10.NIT_FABRICANTE = row7.NIT_FABRICANTE;
               row10.NIT_IMPORTADOR = row7.NIT_IMPORTADOR;
               row10.CODIGO_OPERADOR = row7.CODIGO_OPERADOR;
               row10.CODIGO_PROVISIONAL_DE_COMITE = row7.CODIGO_PROVISIONAL_DE_COMITE;    
      nb_line_ok_tFilterRow_19++;
    } else {
      nb_line_reject_tFilterRow_19++;
    }

nb_line_tFilterRow_19++;

 


	tos_count_tFilterRow_19++;

/**
 * [tFilterRow_19 main ] stop
 */
	
	/**
	 * [tFilterRow_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_19";
	
	

 



/**
 * [tFilterRow_19 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;
Var.CONSECUTIVO = Numeric.sequence("s1",1,1) ;// ###############################
        // ###############################
        // # Output tables

DATA_FORMAT = null;


// # Output table : 'DATA_FORMAT'
DATA_FORMAT_tmp.NUMERO_FILA = Var.CONSECUTIVO ;
DATA_FORMAT_tmp.USER_ID = null;
DATA_FORMAT_tmp.FORMA_FARMACEUTICA_ID = 0;
DATA_FORMAT_tmp.CARACTERISTICA_CONTRATO_ID = null;
DATA_FORMAT_tmp.UNIDAD_MEDIDA_ID = null;
DATA_FORMAT_tmp.LABORATORIO_ID = null;
DATA_FORMAT_tmp.IMPORTADOR_ID = null;
DATA_FORMAT_tmp.ESTADO = "";
DATA_FORMAT_tmp.RESPUESTA = "";
DATA_FORMAT_tmp.CONTRATO = Utils.mayusculasSinAcentos(  row10.CONTRATO );
DATA_FORMAT_tmp.CARACTERISTICA_CONTRATO = "";
DATA_FORMAT_tmp.TIPOLOGIA = Utils.mayusculasSinAcentos(row10.TIPOLOGIA);
DATA_FORMAT_tmp.TIPO_PRODUCTO = Utils.mayusculasSinAcentos(  row10.TIPO_PRODUCTO );
DATA_FORMAT_tmp.ITEM_NO = Utils.mayusculasSinAcentos(  row10.ITEM_NO );
DATA_FORMAT_tmp.CODIGO_SSMP = Utils.mayusculasSinAcentos(  row10.CODIGO_SSMP );
DATA_FORMAT_tmp.NOMBRE_GENERICO = Utils.mayusculasSinAcentos(row10.NOMBRE_GENERICO );
DATA_FORMAT_tmp.PRESENTACION = Utils.mayusculasSinAcentos(row10.PRESENTACION);
DATA_FORMAT_tmp.CONCENTRACION = Utils.mayusculasSinAcentos(row10.CONCENTRACION);
DATA_FORMAT_tmp.VIA_ADMINISTRACION = Utils.mayusculasSinAcentos(row10.VIA_ADMINISTRACION);
DATA_FORMAT_tmp.UNIDAD_DE_MEDIDA = Utils.mayusculasSinAcentos(row10.UNIDAD_DE_MEDIDA );
DATA_FORMAT_tmp.ATC = Utils.mayusculasSinAcentos(row10.ATC );
DATA_FORMAT_tmp.GRUPO_FARMACOLOGICO = Utils.mayusculasSinAcentos(row10.GRUPO_FARMACOLOGICO );
DATA_FORMAT_tmp.CADENA_FRIO = Utils.mayusculasSinAcentos( row10.CADENA_FRIO) ;
DATA_FORMAT_tmp.CODIGO_HOMIC = Utils.mayusculasSinAcentos(  row10.CODIGO_HOMIC ) ;
DATA_FORMAT_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = Utils.mayusculasSinAcentos(  row10.NOMBRE_COMERCIAL_PRODUCTO_MARCA);
DATA_FORMAT_tmp.LABORATORIO_FABRICANTE = Utils.mayusculasSinAcentos(  row10.LABORATORIO_FABRICANTE);
DATA_FORMAT_tmp.NO_REGISTRO_SANITARIO = Utils.mayusculasSinAcentos(  row10.NO_REGISTRO_SANITARIO);
DATA_FORMAT_tmp.IMPORTADOR_TITULAR = Utils.mayusculasSinAcentos(  row10.IMPORTADOR_TITULAR);
DATA_FORMAT_tmp.CUM = Utils.mayusculasSinAcentos(  row10.CUM);
DATA_FORMAT_tmp.PRECIO = Utils.mayusculasSinAcentos(  row10.PRECIO);
DATA_FORMAT_tmp.OPCION = Utils.mayusculasSinAcentos(  row10.OPCION);
DATA_FORMAT_tmp.TIENE_IVA = Utils.mayusculasSinAcentos(  row10.TIENE_IVA);
DATA_FORMAT_tmp.CODIGO_BARRAS = Utils.mayusculasSinAcentos(  row10.CODIGO_BARRAS);
DATA_FORMAT_tmp.FORMA_FARMACEUTICA = Utils.mayusculasSinAcentos(  row10.FORMA_FARMACEUTICA);
DATA_FORMAT_tmp.UNIDOSIS = Utils.mayusculasSinAcentos(  row10.UNIDOSIS);
DATA_FORMAT_tmp.UNIDAD_MEDIDA = Utils.mayusculasSinAcentos(  row10.UNIDAD_MEDIDA);
DATA_FORMAT_tmp.CANTIDAD_UNIDAD_MEDIDA = Utils.mayusculasSinAcentos(  row10.CANTIDAD_UNIDAD_MEDIDA);
DATA_FORMAT_tmp.CANTIDAD_MINIMA = Utils.mayusculasSinAcentos(  row10.CANTIDAD_MINIMA);
DATA_FORMAT_tmp.CANTIDAD_MAXIMA = Utils.mayusculasSinAcentos(  row10.CANTIDAD_MAXIMA);
DATA_FORMAT_tmp.FECHA_EXPEDICION_REG_INVIMA = Utils.mayusculasSinAcentos(  row10.FECHA_EXPEDICION_REG_INVIMA);
DATA_FORMAT_tmp.FECHA_VENCIMIENTO_REG_INVIMA = Utils.mayusculasSinAcentos(  row10.FECHA_VENCIMIENTO_REG_INVIMA);
DATA_FORMAT_tmp.FECHA_ACTIVO_CUM = Utils.mayusculasSinAcentos(  row10.FECHA_ACTIVO_CUM);
DATA_FORMAT_tmp.FECHA_INACTIVO_CUM = Utils.mayusculasSinAcentos(  row10.FECHA_INACTIVO_CUM);
DATA_FORMAT_tmp.LUGAR_DE_ORIGEN = Utils.mayusculasSinAcentos(  row10.LUGAR_DE_ORIGEN);
DATA_FORMAT_tmp.CARACTERISTICAS = Utils.mayusculasSinAcentos(  row10.CARACTERISTICAS);
DATA_FORMAT_tmp.CONTRAINDICACIONES = Utils.mayusculasSinAcentos(  row10.CONTRAINDICACIONES);
DATA_FORMAT_tmp.EFECTOS_POSTERIOR = Utils.mayusculasSinAcentos(  row10.EFECTOS_POSTERIOR);
DATA_FORMAT_tmp.RIESGOS_ASOCIADOS = Utils.mayusculasSinAcentos(  row10.RIESGOS_ASOCIADOS);
DATA_FORMAT_tmp.DOSIS_PARA_APLICACION = Utils.mayusculasSinAcentos(  row10.DOSIS_PARA_APLICACION);
DATA_FORMAT_tmp.NIT_FABRICANTE = Utils.mayusculasSinAcentos(  row10.NIT_FABRICANTE);
DATA_FORMAT_tmp.NIT_IMPORTADOR = Utils.mayusculasSinAcentos(  row10.NIT_IMPORTADOR);
DATA_FORMAT_tmp.CODIGO_OPERADOR = Utils.mayusculasSinAcentos(  row10.CODIGO_OPERADOR );
DATA_FORMAT_tmp.CODIGO_PROVISIONAL_DE_COMITE = Utils.mayusculasSinAcentos(  row10.CODIGO_PROVISIONAL_DE_COMITE );
DATA_FORMAT_tmp.EXPEDIENTE = "";
DATA_FORMAT_tmp.CONSECUTIVO = "";
DATA_FORMAT = DATA_FORMAT_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "DATA_FORMAT"
if(DATA_FORMAT != null) { 



	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DATA_FORMAT"
						
						);
					}
					



    
		DATA_FORMATStruct oneRow_tHashOutput_5 = new DATA_FORMATStruct();
				
					oneRow_tHashOutput_5.NUMERO_FILA = DATA_FORMAT.NUMERO_FILA;
					oneRow_tHashOutput_5.USER_ID = DATA_FORMAT.USER_ID;
					oneRow_tHashOutput_5.FORMA_FARMACEUTICA_ID = DATA_FORMAT.FORMA_FARMACEUTICA_ID;
					oneRow_tHashOutput_5.CARACTERISTICA_CONTRATO_ID = DATA_FORMAT.CARACTERISTICA_CONTRATO_ID;
					oneRow_tHashOutput_5.UNIDAD_MEDIDA_ID = DATA_FORMAT.UNIDAD_MEDIDA_ID;
					oneRow_tHashOutput_5.LABORATORIO_ID = DATA_FORMAT.LABORATORIO_ID;
					oneRow_tHashOutput_5.IMPORTADOR_ID = DATA_FORMAT.IMPORTADOR_ID;
					oneRow_tHashOutput_5.ESTADO = DATA_FORMAT.ESTADO;
					oneRow_tHashOutput_5.RESPUESTA = DATA_FORMAT.RESPUESTA;
					oneRow_tHashOutput_5.CONTRATO = DATA_FORMAT.CONTRATO;
					oneRow_tHashOutput_5.CARACTERISTICA_CONTRATO = DATA_FORMAT.CARACTERISTICA_CONTRATO;
					oneRow_tHashOutput_5.TIPOLOGIA = DATA_FORMAT.TIPOLOGIA;
					oneRow_tHashOutput_5.TIPO_PRODUCTO = DATA_FORMAT.TIPO_PRODUCTO;
					oneRow_tHashOutput_5.ITEM_NO = DATA_FORMAT.ITEM_NO;
					oneRow_tHashOutput_5.CODIGO_SSMP = DATA_FORMAT.CODIGO_SSMP;
					oneRow_tHashOutput_5.NOMBRE_GENERICO = DATA_FORMAT.NOMBRE_GENERICO;
					oneRow_tHashOutput_5.PRESENTACION = DATA_FORMAT.PRESENTACION;
					oneRow_tHashOutput_5.CONCENTRACION = DATA_FORMAT.CONCENTRACION;
					oneRow_tHashOutput_5.VIA_ADMINISTRACION = DATA_FORMAT.VIA_ADMINISTRACION;
					oneRow_tHashOutput_5.UNIDAD_DE_MEDIDA = DATA_FORMAT.UNIDAD_DE_MEDIDA;
					oneRow_tHashOutput_5.ATC = DATA_FORMAT.ATC;
					oneRow_tHashOutput_5.GRUPO_FARMACOLOGICO = DATA_FORMAT.GRUPO_FARMACOLOGICO;
					oneRow_tHashOutput_5.CADENA_FRIO = DATA_FORMAT.CADENA_FRIO;
					oneRow_tHashOutput_5.CODIGO_HOMIC = DATA_FORMAT.CODIGO_HOMIC;
					oneRow_tHashOutput_5.NOMBRE_COMERCIAL_PRODUCTO_MARCA = DATA_FORMAT.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
					oneRow_tHashOutput_5.LABORATORIO_FABRICANTE = DATA_FORMAT.LABORATORIO_FABRICANTE;
					oneRow_tHashOutput_5.NO_REGISTRO_SANITARIO = DATA_FORMAT.NO_REGISTRO_SANITARIO;
					oneRow_tHashOutput_5.IMPORTADOR_TITULAR = DATA_FORMAT.IMPORTADOR_TITULAR;
					oneRow_tHashOutput_5.CUM = DATA_FORMAT.CUM;
					oneRow_tHashOutput_5.PRECIO = DATA_FORMAT.PRECIO;
					oneRow_tHashOutput_5.OPCION = DATA_FORMAT.OPCION;
					oneRow_tHashOutput_5.TIENE_IVA = DATA_FORMAT.TIENE_IVA;
					oneRow_tHashOutput_5.CODIGO_BARRAS = DATA_FORMAT.CODIGO_BARRAS;
					oneRow_tHashOutput_5.FORMA_FARMACEUTICA = DATA_FORMAT.FORMA_FARMACEUTICA;
					oneRow_tHashOutput_5.UNIDOSIS = DATA_FORMAT.UNIDOSIS;
					oneRow_tHashOutput_5.UNIDAD_MEDIDA = DATA_FORMAT.UNIDAD_MEDIDA;
					oneRow_tHashOutput_5.CANTIDAD_UNIDAD_MEDIDA = DATA_FORMAT.CANTIDAD_UNIDAD_MEDIDA;
					oneRow_tHashOutput_5.CANTIDAD_MINIMA = DATA_FORMAT.CANTIDAD_MINIMA;
					oneRow_tHashOutput_5.CANTIDAD_MAXIMA = DATA_FORMAT.CANTIDAD_MAXIMA;
					oneRow_tHashOutput_5.FECHA_EXPEDICION_REG_INVIMA = DATA_FORMAT.FECHA_EXPEDICION_REG_INVIMA;
					oneRow_tHashOutput_5.FECHA_VENCIMIENTO_REG_INVIMA = DATA_FORMAT.FECHA_VENCIMIENTO_REG_INVIMA;
					oneRow_tHashOutput_5.FECHA_ACTIVO_CUM = DATA_FORMAT.FECHA_ACTIVO_CUM;
					oneRow_tHashOutput_5.FECHA_INACTIVO_CUM = DATA_FORMAT.FECHA_INACTIVO_CUM;
					oneRow_tHashOutput_5.LUGAR_DE_ORIGEN = DATA_FORMAT.LUGAR_DE_ORIGEN;
					oneRow_tHashOutput_5.CARACTERISTICAS = DATA_FORMAT.CARACTERISTICAS;
					oneRow_tHashOutput_5.CONTRAINDICACIONES = DATA_FORMAT.CONTRAINDICACIONES;
					oneRow_tHashOutput_5.EFECTOS_POSTERIOR = DATA_FORMAT.EFECTOS_POSTERIOR;
					oneRow_tHashOutput_5.RIESGOS_ASOCIADOS = DATA_FORMAT.RIESGOS_ASOCIADOS;
					oneRow_tHashOutput_5.DOSIS_PARA_APLICACION = DATA_FORMAT.DOSIS_PARA_APLICACION;
					oneRow_tHashOutput_5.NIT_FABRICANTE = DATA_FORMAT.NIT_FABRICANTE;
					oneRow_tHashOutput_5.NIT_IMPORTADOR = DATA_FORMAT.NIT_IMPORTADOR;
					oneRow_tHashOutput_5.CODIGO_OPERADOR = DATA_FORMAT.CODIGO_OPERADOR;
					oneRow_tHashOutput_5.CODIGO_PROVISIONAL_DE_COMITE = DATA_FORMAT.CODIGO_PROVISIONAL_DE_COMITE;
					oneRow_tHashOutput_5.EXPEDIENTE = DATA_FORMAT.EXPEDIENTE;
					oneRow_tHashOutput_5.CONSECUTIVO = DATA_FORMAT.CONSECUTIVO;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */

} // End of branch "DATA_FORMAT"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tFilterRow_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_19";
	
	

 



/**
 * [tFilterRow_19 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    		
    		mf_tHashInput_11.clearCache("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_1");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tFilterRow_19 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_19";
	
	
    globalMap.put("tFilterRow_19_NB_LINE", nb_line_tFilterRow_19);
    globalMap.put("tFilterRow_19_NB_LINE_OK", nb_line_ok_tFilterRow_19);
    globalMap.put("tFilterRow_19_NB_LINE_REJECT", nb_line_reject_tFilterRow_19);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tFilterRow_19", true);
end_Hash.put("tFilterRow_19", System.currentTimeMillis());




/**
 * [tFilterRow_19 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DATA_FORMAT");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tHashInput_13Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tFilterRow_19 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_19";
	
	

 



/**
 * [tFilterRow_19 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row110Struct implements routines.system.IPersistableRow<row110Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return "";
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 0;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 0;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row110Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return "";
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return "";
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return "";
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return "";
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();
row110Struct row110 = new row110Struct();





	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row110");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row110Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row110Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tOracleSP_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_3", false);
		start_Hash.put("tOracleSP_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tOracleSP_3 = 0;
		

	java.sql.Connection connection_tOracleSP_3 = null;
	connection_tOracleSP_3 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_3 = connection_tOracleSP_3.prepareCall("{call " + "GFA.GetFormaFarmacCargaAnexo" + "(?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_3;
String tmpString_tOracleSP_3;

 



/**
 * [tOracleSP_3 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<DATA_FORMATStruct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<DATA_FORMATStruct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    DATA_FORMATStruct next_tHashInput_13 = iterator_tHashInput_13.next();

	row15.NUMERO_FILA = next_tHashInput_13.NUMERO_FILA;
	row15.USER_ID = next_tHashInput_13.USER_ID;
	row15.FORMA_FARMACEUTICA_ID = next_tHashInput_13.FORMA_FARMACEUTICA_ID;
	row15.CARACTERISTICA_CONTRATO_ID = next_tHashInput_13.CARACTERISTICA_CONTRATO_ID;
	row15.UNIDAD_MEDIDA_ID = next_tHashInput_13.UNIDAD_MEDIDA_ID;
	row15.LABORATORIO_ID = next_tHashInput_13.LABORATORIO_ID;
	row15.IMPORTADOR_ID = next_tHashInput_13.IMPORTADOR_ID;
	row15.ESTADO = next_tHashInput_13.ESTADO;
	row15.RESPUESTA = next_tHashInput_13.RESPUESTA;
	row15.CONTRATO = next_tHashInput_13.CONTRATO;
	row15.CARACTERISTICA_CONTRATO = next_tHashInput_13.CARACTERISTICA_CONTRATO;
	row15.TIPOLOGIA = next_tHashInput_13.TIPOLOGIA;
	row15.TIPO_PRODUCTO = next_tHashInput_13.TIPO_PRODUCTO;
	row15.ITEM_NO = next_tHashInput_13.ITEM_NO;
	row15.CODIGO_SSMP = next_tHashInput_13.CODIGO_SSMP;
	row15.NOMBRE_GENERICO = next_tHashInput_13.NOMBRE_GENERICO;
	row15.PRESENTACION = next_tHashInput_13.PRESENTACION;
	row15.CONCENTRACION = next_tHashInput_13.CONCENTRACION;
	row15.VIA_ADMINISTRACION = next_tHashInput_13.VIA_ADMINISTRACION;
	row15.UNIDAD_DE_MEDIDA = next_tHashInput_13.UNIDAD_DE_MEDIDA;
	row15.ATC = next_tHashInput_13.ATC;
	row15.GRUPO_FARMACOLOGICO = next_tHashInput_13.GRUPO_FARMACOLOGICO;
	row15.CADENA_FRIO = next_tHashInput_13.CADENA_FRIO;
	row15.CODIGO_HOMIC = next_tHashInput_13.CODIGO_HOMIC;
	row15.NOMBRE_COMERCIAL_PRODUCTO_MARCA = next_tHashInput_13.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	row15.LABORATORIO_FABRICANTE = next_tHashInput_13.LABORATORIO_FABRICANTE;
	row15.NO_REGISTRO_SANITARIO = next_tHashInput_13.NO_REGISTRO_SANITARIO;
	row15.IMPORTADOR_TITULAR = next_tHashInput_13.IMPORTADOR_TITULAR;
	row15.CUM = next_tHashInput_13.CUM;
	row15.PRECIO = next_tHashInput_13.PRECIO;
	row15.OPCION = next_tHashInput_13.OPCION;
	row15.TIENE_IVA = next_tHashInput_13.TIENE_IVA;
	row15.CODIGO_BARRAS = next_tHashInput_13.CODIGO_BARRAS;
	row15.FORMA_FARMACEUTICA = next_tHashInput_13.FORMA_FARMACEUTICA;
	row15.UNIDOSIS = next_tHashInput_13.UNIDOSIS;
	row15.UNIDAD_MEDIDA = next_tHashInput_13.UNIDAD_MEDIDA;
	row15.CANTIDAD_UNIDAD_MEDIDA = next_tHashInput_13.CANTIDAD_UNIDAD_MEDIDA;
	row15.CANTIDAD_MINIMA = next_tHashInput_13.CANTIDAD_MINIMA;
	row15.CANTIDAD_MAXIMA = next_tHashInput_13.CANTIDAD_MAXIMA;
	row15.FECHA_EXPEDICION_REG_INVIMA = next_tHashInput_13.FECHA_EXPEDICION_REG_INVIMA;
	row15.FECHA_VENCIMIENTO_REG_INVIMA = next_tHashInput_13.FECHA_VENCIMIENTO_REG_INVIMA;
	row15.FECHA_ACTIVO_CUM = next_tHashInput_13.FECHA_ACTIVO_CUM;
	row15.FECHA_INACTIVO_CUM = next_tHashInput_13.FECHA_INACTIVO_CUM;
	row15.LUGAR_DE_ORIGEN = next_tHashInput_13.LUGAR_DE_ORIGEN;
	row15.CARACTERISTICAS = next_tHashInput_13.CARACTERISTICAS;
	row15.CONTRAINDICACIONES = next_tHashInput_13.CONTRAINDICACIONES;
	row15.EFECTOS_POSTERIOR = next_tHashInput_13.EFECTOS_POSTERIOR;
	row15.RIESGOS_ASOCIADOS = next_tHashInput_13.RIESGOS_ASOCIADOS;
	row15.DOSIS_PARA_APLICACION = next_tHashInput_13.DOSIS_PARA_APLICACION;
	row15.NIT_FABRICANTE = next_tHashInput_13.NIT_FABRICANTE;
	row15.NIT_IMPORTADOR = next_tHashInput_13.NIT_IMPORTADOR;
	row15.CODIGO_OPERADOR = next_tHashInput_13.CODIGO_OPERADOR;
	row15.CODIGO_PROVISIONAL_DE_COMITE = next_tHashInput_13.CODIGO_PROVISIONAL_DE_COMITE;
	row15.EXPEDIENTE = next_tHashInput_13.EXPEDIENTE;
	row15.CONSECUTIVO = next_tHashInput_13.CONSECUTIVO;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_3 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

			// code for the argument 1 (FORMA_FARMACEUTICA_ID) of type 'OUT NUMERIC'
					statement_tOracleSP_3.registerOutParameter(1, java.sql.Types.NUMERIC);
			// code for the argument 2 (NOMBRE_GENERICO) of type 'IN AUTOMAPPING'
    					if (row15.NOMBRE_GENERICO == null) {
    						statement_tOracleSP_3.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(2, row15.NOMBRE_GENERICO);
    					}
    					
			// code for the argument 3 (FORMA_FARMACEUTICA) of type 'IN AUTOMAPPING'
    					if (row15.FORMA_FARMACEUTICA == null) {
    						statement_tOracleSP_3.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(3, row15.FORMA_FARMACEUTICA);
    					}
    					
			// code for the argument 4 (CONCENTRACION) of type 'IN AUTOMAPPING'
    					if (row15.CONCENTRACION == null) {
    						statement_tOracleSP_3.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(4, row15.CONCENTRACION);
    					}
    					
			// code for the argument 5 (ESTADO) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(5, java.sql.Types.VARCHAR);
			// code for the argument 6 (RESPUESTA) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(6, java.sql.Types.VARCHAR);
		statement_tOracleSP_3.execute();
		
										row110.NUMERO_FILA = row15.NUMERO_FILA;
										
									row110.FORMA_FARMACEUTICA_ID = statement_tOracleSP_3.getInt(1);
									
									if (statement_tOracleSP_3.wasNull()) {
										row110.FORMA_FARMACEUTICA_ID = null;
									}
									
								row110.NOMBRE_GENERICO = row15.NOMBRE_GENERICO;
								
								row110.FORMA_FARMACEUTICA = row15.FORMA_FARMACEUTICA;
								
								row110.CONCENTRACION = row15.CONCENTRACION;
								
									row110.ESTADO = statement_tOracleSP_3.getString(5);
									
									if (statement_tOracleSP_3.wasNull()) {
										row110.ESTADO = null;
									}
									
									row110.RESPUESTA = statement_tOracleSP_3.getString(6);
									
									if (statement_tOracleSP_3.wasNull()) {
										row110.RESPUESTA = null;
									}
									

 


	tos_count_tOracleSP_3++;

/**
 * [tOracleSP_3 main ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row110"
						
						);
					}
					



    
		row110Struct oneRow_tHashOutput_6 = new row110Struct();
				
					oneRow_tHashOutput_6.NUMERO_FILA = row110.NUMERO_FILA;
					oneRow_tHashOutput_6.FORMA_FARMACEUTICA_ID = row110.FORMA_FARMACEUTICA_ID;
					oneRow_tHashOutput_6.NOMBRE_GENERICO = row110.NOMBRE_GENERICO;
					oneRow_tHashOutput_6.FORMA_FARMACEUTICA = row110.FORMA_FARMACEUTICA;
					oneRow_tHashOutput_6.CONCENTRACION = row110.CONCENTRACION;
					oneRow_tHashOutput_6.ESTADO = row110.ESTADO;
					oneRow_tHashOutput_6.RESPUESTA = row110.RESPUESTA;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tOracleSP_3 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	


	statement_tOracleSP_3.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tOracleSP_3", true);
end_Hash.put("tOracleSP_3", System.currentTimeMillis());




/**
 * [tOracleSP_3 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row110");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_13:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tHashInput_14Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tOracleSP_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class outErroneosStruct implements routines.system.IPersistableRow<outErroneosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outErroneosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outFinalFinalStruct implements routines.system.IPersistableRow<outFinalFinalStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outFinalFinalStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return "";
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outFinStruct implements routines.system.IPersistableRow<outFinStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return null;
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outFinStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outErroresPLStruct implements routines.system.IPersistableRow<outErroresPLStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outErroresPLStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer User_Id_;

				public Integer getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public Integer Caracteristica_contrato_id_;

				public Integer getCaracteristica_contrato_id_ () {
					return this.Caracteristica_contrato_id_;
				}

				public Boolean Caracteristica_contrato_id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_contrato_id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_contrato_id_Length(){
				    return null;
				}
				public Integer Caracteristica_contrato_id_Precision(){
				    return null;
				}
				public String Caracteristica_contrato_id_Default(){
				
					return null;
				
				}
				public String Caracteristica_contrato_id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_contrato_id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_contrato_id_OriginalDbColumnName(){
				
					return "Caracteristica_contrato_id_";
				
				}

				
			    public BigDecimal Importador_Id_;

				public BigDecimal getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal Fabricante_Id_;

				public BigDecimal getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public Integer Formas_Farma_Id_;

				public Integer getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public BigDecimal UMedida_Id_;

				public BigDecimal getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Integer Cant_Minima_;

				public Integer getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Integer Cant_Maxima_;

				public Integer getCant_Maxima_ () {
					return this.Cant_Maxima_;
				}

				public Boolean Cant_Maxima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Maxima_IsKey(){
				    return false;
				}
				public Integer Cant_Maxima_Length(){
				    return null;
				}
				public Integer Cant_Maxima_Precision(){
				    return null;
				}
				public String Cant_Maxima_Default(){
				
					return null;
				
				}
				public String Cant_Maxima_Comment(){
				
				    return "";
				
				}
				public String Cant_Maxima_Pattern(){
				
					return "";
				
				}
				public String Cant_Maxima_OriginalDbColumnName(){
				
					return "Cant_Maxima_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return null;
				}
				public Integer Expediente_Precision(){
				    return null;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return null;
				}
				public Integer Consecutivo_Precision(){
				    return null;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public Integer Cant_UMedida_;

				public Integer getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Double Precio_;

				public Double getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return null;
				}
				public Integer Precio_Precision(){
				    return null;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public Integer Opcion_;

				public Integer getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String CodigoContrato_;

				public String getCodigoContrato_ () {
					return this.CodigoContrato_;
				}

				public Boolean CodigoContrato_IsNullable(){
				    return true;
				}
				public Boolean CodigoContrato_IsKey(){
				    return false;
				}
				public Integer CodigoContrato_Length(){
				    return 255;
				}
				public Integer CodigoContrato_Precision(){
				    return 0;
				}
				public String CodigoContrato_Default(){
				
					return null;
				
				}
				public String CodigoContrato_Comment(){
				
				    return "";
				
				}
				public String CodigoContrato_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodigoContrato_OriginalDbColumnName(){
				
					return "CodigoContrato_";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String Concentracion_;

				public String getConcentracion_ () {
					return this.Concentracion_;
				}

				public Boolean Concentracion_IsNullable(){
				    return true;
				}
				public Boolean Concentracion_IsKey(){
				    return false;
				}
				public Integer Concentracion_Length(){
				    return 255;
				}
				public Integer Concentracion_Precision(){
				    return 0;
				}
				public String Concentracion_Default(){
				
					return null;
				
				}
				public String Concentracion_Comment(){
				
				    return "";
				
				}
				public String Concentracion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Concentracion_OriginalDbColumnName(){
				
					return "Concentracion_";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String Codigo_Homic_;

				public String getCodigo_Homic_ () {
					return this.Codigo_Homic_;
				}

				public Boolean Codigo_Homic_IsNullable(){
				    return true;
				}
				public Boolean Codigo_Homic_IsKey(){
				    return false;
				}
				public Integer Codigo_Homic_Length(){
				    return 255;
				}
				public Integer Codigo_Homic_Precision(){
				    return 0;
				}
				public String Codigo_Homic_Default(){
				
					return null;
				
				}
				public String Codigo_Homic_Comment(){
				
				    return "";
				
				}
				public String Codigo_Homic_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Codigo_Homic_OriginalDbColumnName(){
				
					return "Codigo_Homic_";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 255;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String Tiene_Iva_;

				public String getTiene_Iva_ () {
					return this.Tiene_Iva_;
				}

				public Boolean Tiene_Iva_IsNullable(){
				    return true;
				}
				public Boolean Tiene_Iva_IsKey(){
				    return false;
				}
				public Integer Tiene_Iva_Length(){
				    return 255;
				}
				public Integer Tiene_Iva_Precision(){
				    return 0;
				}
				public String Tiene_Iva_Default(){
				
					return null;
				
				}
				public String Tiene_Iva_Comment(){
				
				    return "";
				
				}
				public String Tiene_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tiene_Iva_OriginalDbColumnName(){
				
					return "Tiene_Iva_";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 255;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Formas_Farma_;

				public String getFormas_Farma_ () {
					return this.Formas_Farma_;
				}

				public Boolean Formas_Farma_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Length(){
				    return 255;
				}
				public Integer Formas_Farma_Precision(){
				    return 0;
				}
				public String Formas_Farma_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Formas_Farma_OriginalDbColumnName(){
				
					return "Formas_Farma_";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 255;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 255;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 255;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 255;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 255;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 255;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas_producto_;

				public String getCaracteristicas_producto_ () {
					return this.Caracteristicas_producto_;
				}

				public Boolean Caracteristicas_producto_IsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_producto_IsKey(){
				    return false;
				}
				public Integer Caracteristicas_producto_Length(){
				    return 255;
				}
				public Integer Caracteristicas_producto_Precision(){
				    return 0;
				}
				public String Caracteristicas_producto_Default(){
				
					return null;
				
				}
				public String Caracteristicas_producto_Comment(){
				
				    return "";
				
				}
				public String Caracteristicas_producto_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Caracteristicas_producto_OriginalDbColumnName(){
				
					return "Caracteristicas_producto_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 255;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 255;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 255;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 255;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String codigo_operador_;

				public String getCodigo_operador_ () {
					return this.codigo_operador_;
				}

				public Boolean codigo_operador_IsNullable(){
				    return true;
				}
				public Boolean codigo_operador_IsKey(){
				    return false;
				}
				public Integer codigo_operador_Length(){
				    return 100;
				}
				public Integer codigo_operador_Precision(){
				    return null;
				}
				public String codigo_operador_Default(){
				
					return null;
				
				}
				public String codigo_operador_Comment(){
				
				    return "";
				
				}
				public String codigo_operador_Pattern(){
				
					return "";
				
				}
				public String codigo_operador_OriginalDbColumnName(){
				
					return "codigo_operador_";
				
				}

				
			    public String codigo_provisional_;

				public String getCodigo_provisional_ () {
					return this.codigo_provisional_;
				}

				public Boolean codigo_provisional_IsNullable(){
				    return true;
				}
				public Boolean codigo_provisional_IsKey(){
				    return false;
				}
				public Integer codigo_provisional_Length(){
				    return 100;
				}
				public Integer codigo_provisional_Precision(){
				    return null;
				}
				public String codigo_provisional_Default(){
				
					return null;
				
				}
				public String codigo_provisional_Comment(){
				
				    return "";
				
				}
				public String codigo_provisional_Pattern(){
				
					return "";
				
				}
				public String codigo_provisional_OriginalDbColumnName(){
				
					return "codigo_provisional_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public Integer item_contrato_;

				public Integer getItem_contrato_ () {
					return this.item_contrato_;
				}

				public Boolean item_contrato_IsNullable(){
				    return true;
				}
				public Boolean item_contrato_IsKey(){
				    return false;
				}
				public Integer item_contrato_Length(){
				    return null;
				}
				public Integer item_contrato_Precision(){
				    return null;
				}
				public String item_contrato_Default(){
				
					return null;
				
				}
				public String item_contrato_Comment(){
				
				    return "";
				
				}
				public String item_contrato_Pattern(){
				
					return "";
				
				}
				public String item_contrato_OriginalDbColumnName(){
				
					return "item_contrato_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("User_Id_="+String.valueOf(User_Id_));
		sb.append(",Caracteristica_contrato_id_="+String.valueOf(Caracteristica_contrato_id_));
		sb.append(",Importador_Id_="+String.valueOf(Importador_Id_));
		sb.append(",Fabricante_Id_="+String.valueOf(Fabricante_Id_));
		sb.append(",Formas_Farma_Id_="+String.valueOf(Formas_Farma_Id_));
		sb.append(",ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",UMedida_Id_="+String.valueOf(UMedida_Id_));
		sb.append(",Cant_Minima_="+String.valueOf(Cant_Minima_));
		sb.append(",Cant_Maxima_="+String.valueOf(Cant_Maxima_));
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cant_UMedida_="+String.valueOf(Cant_UMedida_));
		sb.append(",Precio_="+String.valueOf(Precio_));
		sb.append(",Opcion_="+String.valueOf(Opcion_));
		sb.append(",CodigoContrato_="+CodigoContrato_);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",Concentracion_="+Concentracion_);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",Codigo_Homic_="+Codigo_Homic_);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",Tiene_Iva_="+Tiene_Iva_);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Formas_Farma_="+Formas_Farma_);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas_producto_="+Caracteristicas_producto_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",codigo_operador_="+codigo_operador_);
		sb.append(",codigo_provisional_="+codigo_provisional_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",item_contrato_="+String.valueOf(item_contrato_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer User_Id_;

				public Integer getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public Integer Caracteristica_contrato_id_;

				public Integer getCaracteristica_contrato_id_ () {
					return this.Caracteristica_contrato_id_;
				}

				public Boolean Caracteristica_contrato_id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_contrato_id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_contrato_id_Length(){
				    return null;
				}
				public Integer Caracteristica_contrato_id_Precision(){
				    return null;
				}
				public String Caracteristica_contrato_id_Default(){
				
					return null;
				
				}
				public String Caracteristica_contrato_id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_contrato_id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_contrato_id_OriginalDbColumnName(){
				
					return "Caracteristica_contrato_id_";
				
				}

				
			    public BigDecimal Importador_Id_;

				public BigDecimal getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal Fabricante_Id_;

				public BigDecimal getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public Integer Formas_Farma_Id_;

				public Integer getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public BigDecimal UMedida_Id_;

				public BigDecimal getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Integer Cant_Minima_;

				public Integer getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Integer Cant_Maxima_;

				public Integer getCant_Maxima_ () {
					return this.Cant_Maxima_;
				}

				public Boolean Cant_Maxima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Maxima_IsKey(){
				    return false;
				}
				public Integer Cant_Maxima_Length(){
				    return null;
				}
				public Integer Cant_Maxima_Precision(){
				    return null;
				}
				public String Cant_Maxima_Default(){
				
					return null;
				
				}
				public String Cant_Maxima_Comment(){
				
				    return "";
				
				}
				public String Cant_Maxima_Pattern(){
				
					return "";
				
				}
				public String Cant_Maxima_OriginalDbColumnName(){
				
					return "Cant_Maxima_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return null;
				}
				public Integer Expediente_Precision(){
				    return null;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return null;
				}
				public Integer Consecutivo_Precision(){
				    return null;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public Integer Cant_UMedida_;

				public Integer getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Double Precio_;

				public Double getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return null;
				}
				public Integer Precio_Precision(){
				    return null;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public Integer Opcion_;

				public Integer getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String CodigoContrato_;

				public String getCodigoContrato_ () {
					return this.CodigoContrato_;
				}

				public Boolean CodigoContrato_IsNullable(){
				    return true;
				}
				public Boolean CodigoContrato_IsKey(){
				    return false;
				}
				public Integer CodigoContrato_Length(){
				    return 255;
				}
				public Integer CodigoContrato_Precision(){
				    return 0;
				}
				public String CodigoContrato_Default(){
				
					return null;
				
				}
				public String CodigoContrato_Comment(){
				
				    return "";
				
				}
				public String CodigoContrato_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodigoContrato_OriginalDbColumnName(){
				
					return "CodigoContrato_";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String Concentracion_;

				public String getConcentracion_ () {
					return this.Concentracion_;
				}

				public Boolean Concentracion_IsNullable(){
				    return true;
				}
				public Boolean Concentracion_IsKey(){
				    return false;
				}
				public Integer Concentracion_Length(){
				    return 255;
				}
				public Integer Concentracion_Precision(){
				    return 0;
				}
				public String Concentracion_Default(){
				
					return null;
				
				}
				public String Concentracion_Comment(){
				
				    return "";
				
				}
				public String Concentracion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Concentracion_OriginalDbColumnName(){
				
					return "Concentracion_";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String Codigo_Homic_;

				public String getCodigo_Homic_ () {
					return this.Codigo_Homic_;
				}

				public Boolean Codigo_Homic_IsNullable(){
				    return true;
				}
				public Boolean Codigo_Homic_IsKey(){
				    return false;
				}
				public Integer Codigo_Homic_Length(){
				    return 255;
				}
				public Integer Codigo_Homic_Precision(){
				    return 0;
				}
				public String Codigo_Homic_Default(){
				
					return null;
				
				}
				public String Codigo_Homic_Comment(){
				
				    return "";
				
				}
				public String Codigo_Homic_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Codigo_Homic_OriginalDbColumnName(){
				
					return "Codigo_Homic_";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 255;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String Tiene_Iva_;

				public String getTiene_Iva_ () {
					return this.Tiene_Iva_;
				}

				public Boolean Tiene_Iva_IsNullable(){
				    return true;
				}
				public Boolean Tiene_Iva_IsKey(){
				    return false;
				}
				public Integer Tiene_Iva_Length(){
				    return 255;
				}
				public Integer Tiene_Iva_Precision(){
				    return 0;
				}
				public String Tiene_Iva_Default(){
				
					return null;
				
				}
				public String Tiene_Iva_Comment(){
				
				    return "";
				
				}
				public String Tiene_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tiene_Iva_OriginalDbColumnName(){
				
					return "Tiene_Iva_";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 255;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Formas_Farma_;

				public String getFormas_Farma_ () {
					return this.Formas_Farma_;
				}

				public Boolean Formas_Farma_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Length(){
				    return 255;
				}
				public Integer Formas_Farma_Precision(){
				    return 0;
				}
				public String Formas_Farma_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Formas_Farma_OriginalDbColumnName(){
				
					return "Formas_Farma_";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 255;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 255;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 255;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 255;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 255;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 255;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas_producto_;

				public String getCaracteristicas_producto_ () {
					return this.Caracteristicas_producto_;
				}

				public Boolean Caracteristicas_producto_IsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_producto_IsKey(){
				    return false;
				}
				public Integer Caracteristicas_producto_Length(){
				    return 255;
				}
				public Integer Caracteristicas_producto_Precision(){
				    return 0;
				}
				public String Caracteristicas_producto_Default(){
				
					return null;
				
				}
				public String Caracteristicas_producto_Comment(){
				
				    return "";
				
				}
				public String Caracteristicas_producto_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Caracteristicas_producto_OriginalDbColumnName(){
				
					return "Caracteristicas_producto_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 255;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 255;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 255;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 255;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String codigo_operador_;

				public String getCodigo_operador_ () {
					return this.codigo_operador_;
				}

				public Boolean codigo_operador_IsNullable(){
				    return true;
				}
				public Boolean codigo_operador_IsKey(){
				    return false;
				}
				public Integer codigo_operador_Length(){
				    return 100;
				}
				public Integer codigo_operador_Precision(){
				    return null;
				}
				public String codigo_operador_Default(){
				
					return null;
				
				}
				public String codigo_operador_Comment(){
				
				    return "";
				
				}
				public String codigo_operador_Pattern(){
				
					return "";
				
				}
				public String codigo_operador_OriginalDbColumnName(){
				
					return "codigo_operador_";
				
				}

				
			    public String codigo_provisional_;

				public String getCodigo_provisional_ () {
					return this.codigo_provisional_;
				}

				public Boolean codigo_provisional_IsNullable(){
				    return true;
				}
				public Boolean codigo_provisional_IsKey(){
				    return false;
				}
				public Integer codigo_provisional_Length(){
				    return 100;
				}
				public Integer codigo_provisional_Precision(){
				    return null;
				}
				public String codigo_provisional_Default(){
				
					return null;
				
				}
				public String codigo_provisional_Comment(){
				
				    return "";
				
				}
				public String codigo_provisional_Pattern(){
				
					return "";
				
				}
				public String codigo_provisional_OriginalDbColumnName(){
				
					return "codigo_provisional_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public Integer item_contrato_;

				public Integer getItem_contrato_ () {
					return this.item_contrato_;
				}

				public Boolean item_contrato_IsNullable(){
				    return true;
				}
				public Boolean item_contrato_IsKey(){
				    return false;
				}
				public Integer item_contrato_Length(){
				    return null;
				}
				public Integer item_contrato_Precision(){
				    return null;
				}
				public String item_contrato_Default(){
				
					return null;
				
				}
				public String item_contrato_Comment(){
				
				    return "";
				
				}
				public String item_contrato_Pattern(){
				
					return "";
				
				}
				public String item_contrato_OriginalDbColumnName(){
				
					return "item_contrato_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("User_Id_="+String.valueOf(User_Id_));
		sb.append(",Caracteristica_contrato_id_="+String.valueOf(Caracteristica_contrato_id_));
		sb.append(",Importador_Id_="+String.valueOf(Importador_Id_));
		sb.append(",Fabricante_Id_="+String.valueOf(Fabricante_Id_));
		sb.append(",Formas_Farma_Id_="+String.valueOf(Formas_Farma_Id_));
		sb.append(",ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",UMedida_Id_="+String.valueOf(UMedida_Id_));
		sb.append(",Cant_Minima_="+String.valueOf(Cant_Minima_));
		sb.append(",Cant_Maxima_="+String.valueOf(Cant_Maxima_));
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cant_UMedida_="+String.valueOf(Cant_UMedida_));
		sb.append(",Precio_="+String.valueOf(Precio_));
		sb.append(",Opcion_="+String.valueOf(Opcion_));
		sb.append(",CodigoContrato_="+CodigoContrato_);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",Concentracion_="+Concentracion_);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",Codigo_Homic_="+Codigo_Homic_);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",Tiene_Iva_="+Tiene_Iva_);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Formas_Farma_="+Formas_Farma_);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas_producto_="+Caracteristicas_producto_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",codigo_operador_="+codigo_operador_);
		sb.append(",codigo_provisional_="+codigo_provisional_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",item_contrato_="+String.valueOf(item_contrato_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outProducto1Struct implements routines.system.IPersistableRow<outProducto1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer User_Id_;

				public Integer getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public Integer Caracteristica_contrato_id_;

				public Integer getCaracteristica_contrato_id_ () {
					return this.Caracteristica_contrato_id_;
				}

				public Boolean Caracteristica_contrato_id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_contrato_id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_contrato_id_Length(){
				    return null;
				}
				public Integer Caracteristica_contrato_id_Precision(){
				    return null;
				}
				public String Caracteristica_contrato_id_Default(){
				
					return null;
				
				}
				public String Caracteristica_contrato_id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_contrato_id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_contrato_id_OriginalDbColumnName(){
				
					return "Caracteristica_contrato_id_";
				
				}

				
			    public BigDecimal Importador_Id_;

				public BigDecimal getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal Fabricante_Id_;

				public BigDecimal getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public Integer Formas_Farma_Id_;

				public Integer getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public BigDecimal UMedida_Id_;

				public BigDecimal getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Integer Cant_Minima_;

				public Integer getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Integer Cant_Maxima_;

				public Integer getCant_Maxima_ () {
					return this.Cant_Maxima_;
				}

				public Boolean Cant_Maxima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Maxima_IsKey(){
				    return false;
				}
				public Integer Cant_Maxima_Length(){
				    return null;
				}
				public Integer Cant_Maxima_Precision(){
				    return null;
				}
				public String Cant_Maxima_Default(){
				
					return null;
				
				}
				public String Cant_Maxima_Comment(){
				
				    return "";
				
				}
				public String Cant_Maxima_Pattern(){
				
					return "";
				
				}
				public String Cant_Maxima_OriginalDbColumnName(){
				
					return "Cant_Maxima_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return null;
				}
				public Integer Expediente_Precision(){
				    return null;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return null;
				}
				public Integer Consecutivo_Precision(){
				    return null;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public Integer Cant_UMedida_;

				public Integer getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Double Precio_;

				public Double getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return null;
				}
				public Integer Precio_Precision(){
				    return null;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public Integer Opcion_;

				public Integer getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String CodigoContrato_;

				public String getCodigoContrato_ () {
					return this.CodigoContrato_;
				}

				public Boolean CodigoContrato_IsNullable(){
				    return true;
				}
				public Boolean CodigoContrato_IsKey(){
				    return false;
				}
				public Integer CodigoContrato_Length(){
				    return 255;
				}
				public Integer CodigoContrato_Precision(){
				    return 0;
				}
				public String CodigoContrato_Default(){
				
					return null;
				
				}
				public String CodigoContrato_Comment(){
				
				    return "";
				
				}
				public String CodigoContrato_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodigoContrato_OriginalDbColumnName(){
				
					return "CodigoContrato_";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String Concentracion_;

				public String getConcentracion_ () {
					return this.Concentracion_;
				}

				public Boolean Concentracion_IsNullable(){
				    return true;
				}
				public Boolean Concentracion_IsKey(){
				    return false;
				}
				public Integer Concentracion_Length(){
				    return 255;
				}
				public Integer Concentracion_Precision(){
				    return 0;
				}
				public String Concentracion_Default(){
				
					return null;
				
				}
				public String Concentracion_Comment(){
				
				    return "";
				
				}
				public String Concentracion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Concentracion_OriginalDbColumnName(){
				
					return "Concentracion_";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String Codigo_Homic_;

				public String getCodigo_Homic_ () {
					return this.Codigo_Homic_;
				}

				public Boolean Codigo_Homic_IsNullable(){
				    return true;
				}
				public Boolean Codigo_Homic_IsKey(){
				    return false;
				}
				public Integer Codigo_Homic_Length(){
				    return 255;
				}
				public Integer Codigo_Homic_Precision(){
				    return 0;
				}
				public String Codigo_Homic_Default(){
				
					return null;
				
				}
				public String Codigo_Homic_Comment(){
				
				    return "";
				
				}
				public String Codigo_Homic_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Codigo_Homic_OriginalDbColumnName(){
				
					return "Codigo_Homic_";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 255;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String Tiene_Iva_;

				public String getTiene_Iva_ () {
					return this.Tiene_Iva_;
				}

				public Boolean Tiene_Iva_IsNullable(){
				    return true;
				}
				public Boolean Tiene_Iva_IsKey(){
				    return false;
				}
				public Integer Tiene_Iva_Length(){
				    return 255;
				}
				public Integer Tiene_Iva_Precision(){
				    return 0;
				}
				public String Tiene_Iva_Default(){
				
					return null;
				
				}
				public String Tiene_Iva_Comment(){
				
				    return "";
				
				}
				public String Tiene_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tiene_Iva_OriginalDbColumnName(){
				
					return "Tiene_Iva_";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 255;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Formas_Farma_;

				public String getFormas_Farma_ () {
					return this.Formas_Farma_;
				}

				public Boolean Formas_Farma_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Length(){
				    return 255;
				}
				public Integer Formas_Farma_Precision(){
				    return 0;
				}
				public String Formas_Farma_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Formas_Farma_OriginalDbColumnName(){
				
					return "Formas_Farma_";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 255;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 255;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 255;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 255;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 255;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 255;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas_producto_;

				public String getCaracteristicas_producto_ () {
					return this.Caracteristicas_producto_;
				}

				public Boolean Caracteristicas_producto_IsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_producto_IsKey(){
				    return false;
				}
				public Integer Caracteristicas_producto_Length(){
				    return 255;
				}
				public Integer Caracteristicas_producto_Precision(){
				    return 0;
				}
				public String Caracteristicas_producto_Default(){
				
					return null;
				
				}
				public String Caracteristicas_producto_Comment(){
				
				    return "";
				
				}
				public String Caracteristicas_producto_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Caracteristicas_producto_OriginalDbColumnName(){
				
					return "Caracteristicas_producto_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 255;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 255;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 255;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 255;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String codigo_operador_;

				public String getCodigo_operador_ () {
					return this.codigo_operador_;
				}

				public Boolean codigo_operador_IsNullable(){
				    return true;
				}
				public Boolean codigo_operador_IsKey(){
				    return false;
				}
				public Integer codigo_operador_Length(){
				    return 100;
				}
				public Integer codigo_operador_Precision(){
				    return null;
				}
				public String codigo_operador_Default(){
				
					return null;
				
				}
				public String codigo_operador_Comment(){
				
				    return "";
				
				}
				public String codigo_operador_Pattern(){
				
					return "";
				
				}
				public String codigo_operador_OriginalDbColumnName(){
				
					return "codigo_operador_";
				
				}

				
			    public String codigo_provisional_;

				public String getCodigo_provisional_ () {
					return this.codigo_provisional_;
				}

				public Boolean codigo_provisional_IsNullable(){
				    return true;
				}
				public Boolean codigo_provisional_IsKey(){
				    return false;
				}
				public Integer codigo_provisional_Length(){
				    return 100;
				}
				public Integer codigo_provisional_Precision(){
				    return null;
				}
				public String codigo_provisional_Default(){
				
					return null;
				
				}
				public String codigo_provisional_Comment(){
				
				    return "";
				
				}
				public String codigo_provisional_Pattern(){
				
					return "";
				
				}
				public String codigo_provisional_OriginalDbColumnName(){
				
					return "codigo_provisional_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public Integer item_contrato_;

				public Integer getItem_contrato_ () {
					return this.item_contrato_;
				}

				public Boolean item_contrato_IsNullable(){
				    return true;
				}
				public Boolean item_contrato_IsKey(){
				    return false;
				}
				public Integer item_contrato_Length(){
				    return null;
				}
				public Integer item_contrato_Precision(){
				    return null;
				}
				public String item_contrato_Default(){
				
					return null;
				
				}
				public String item_contrato_Comment(){
				
				    return "";
				
				}
				public String item_contrato_Pattern(){
				
					return "";
				
				}
				public String item_contrato_OriginalDbColumnName(){
				
					return "item_contrato_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.User_Id_ = readInteger(dis);
					
						this.Caracteristica_contrato_id_ = readInteger(dis);
					
						this.Importador_Id_ = (BigDecimal) dis.readObject();
					
						this.Fabricante_Id_ = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id_ = readInteger(dis);
					
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.UMedida_Id_ = (BigDecimal) dis.readObject();
					
						this.Cant_Minima_ = readInteger(dis);
					
						this.Cant_Maxima_ = readInteger(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
						this.Cant_UMedida_ = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Precio_ = null;
           				} else {
           			    	this.Precio_ = dis.readDouble();
           				}
					
						this.Opcion_ = readInteger(dis);
					
					this.CodigoContrato_ = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.Concentracion_ = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.Codigo_Homic_ = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.Tiene_Iva_ = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Formas_Farma_ = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas_producto_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.codigo_operador_ = readString(dis);
					
					this.codigo_provisional_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
						this.item_contrato_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.User_Id_,dos);
					
					// Integer
				
						writeInteger(this.Caracteristica_contrato_id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id_);
					
					// Integer
				
						writeInteger(this.Formas_Farma_Id_,dos);
					
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id_);
					
					// Integer
				
						writeInteger(this.Cant_Minima_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Maxima_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// Integer
				
						writeInteger(this.Cant_UMedida_,dos);
					
					// Double
				
						if(this.Precio_ == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Precio_);
		            	}
					
					// Integer
				
						writeInteger(this.Opcion_,dos);
					
					// String
				
						writeString(this.CodigoContrato_,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.Concentracion_,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.Codigo_Homic_,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.Tiene_Iva_,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Formas_Farma_,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas_producto_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.codigo_operador_,dos);
					
					// String
				
						writeString(this.codigo_provisional_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// Integer
				
						writeInteger(this.item_contrato_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("User_Id_="+String.valueOf(User_Id_));
		sb.append(",Caracteristica_contrato_id_="+String.valueOf(Caracteristica_contrato_id_));
		sb.append(",Importador_Id_="+String.valueOf(Importador_Id_));
		sb.append(",Fabricante_Id_="+String.valueOf(Fabricante_Id_));
		sb.append(",Formas_Farma_Id_="+String.valueOf(Formas_Farma_Id_));
		sb.append(",ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",UMedida_Id_="+String.valueOf(UMedida_Id_));
		sb.append(",Cant_Minima_="+String.valueOf(Cant_Minima_));
		sb.append(",Cant_Maxima_="+String.valueOf(Cant_Maxima_));
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cant_UMedida_="+String.valueOf(Cant_UMedida_));
		sb.append(",Precio_="+String.valueOf(Precio_));
		sb.append(",Opcion_="+String.valueOf(Opcion_));
		sb.append(",CodigoContrato_="+CodigoContrato_);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",Concentracion_="+Concentracion_);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",Codigo_Homic_="+Codigo_Homic_);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",Tiene_Iva_="+Tiene_Iva_);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Formas_Farma_="+Formas_Farma_);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas_producto_="+Caracteristicas_producto_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",codigo_operador_="+codigo_operador_);
		sb.append(",codigo_provisional_="+codigo_provisional_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",item_contrato_="+String.valueOf(item_contrato_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outProducto1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outCaracteristicaContratoStruct implements routines.system.IPersistableRow<outCaracteristicaContratoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outCaracteristicaContratoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out10Struct implements routines.system.IPersistableRow<out10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out9Struct implements routines.system.IPersistableRow<out9Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out2Struct implements routines.system.IPersistableRow<out2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out_inStruct implements routines.system.IPersistableRow<out_inStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out_inStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out0Struct implements routines.system.IPersistableRow<out0Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return null;
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return null;
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return "";
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return "";
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return "";
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return "";
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_14Struct implements routines.system.IPersistableRow<after_tHashInput_14Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return "";
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer USER_ID;

				public Integer getUSER_ID () {
					return this.USER_ID;
				}

				public Boolean USER_IDIsNullable(){
				    return true;
				}
				public Boolean USER_IDIsKey(){
				    return false;
				}
				public Integer USER_IDLength(){
				    return 0;
				}
				public Integer USER_IDPrecision(){
				    return 0;
				}
				public String USER_IDDefault(){
				
					return "";
				
				}
				public String USER_IDComment(){
				
				    return "";
				
				}
				public String USER_IDPattern(){
				
					return "";
				
				}
				public String USER_IDOriginalDbColumnName(){
				
					return "USER_ID";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public Integer CARACTERISTICA_CONTRATO_ID;

				public Integer getCARACTERISTICA_CONTRATO_ID () {
					return this.CARACTERISTICA_CONTRATO_ID;
				}

				public Boolean CARACTERISTICA_CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATO_IDDefault(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATO_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO_ID";
				
				}

				
			    public BigDecimal UNIDAD_MEDIDA_ID;

				public BigDecimal getUNIDAD_MEDIDA_ID () {
					return this.UNIDAD_MEDIDA_ID;
				}

				public Boolean UNIDAD_MEDIDA_IDIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDA_IDIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDA_IDLength(){
				    return 0;
				}
				public Integer UNIDAD_MEDIDA_IDPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDA_IDDefault(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDA_IDPattern(){
				
					return "";
				
				}
				public String UNIDAD_MEDIDA_IDOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA_ID";
				
				}

				
			    public BigDecimal LABORATORIO_ID;

				public BigDecimal getLABORATORIO_ID () {
					return this.LABORATORIO_ID;
				}

				public Boolean LABORATORIO_IDIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_IDIsKey(){
				    return false;
				}
				public Integer LABORATORIO_IDLength(){
				    return 0;
				}
				public Integer LABORATORIO_IDPrecision(){
				    return 0;
				}
				public String LABORATORIO_IDDefault(){
				
					return "";
				
				}
				public String LABORATORIO_IDComment(){
				
				    return "";
				
				}
				public String LABORATORIO_IDPattern(){
				
					return "";
				
				}
				public String LABORATORIO_IDOriginalDbColumnName(){
				
					return "LABORATORIO_ID";
				
				}

				
			    public BigDecimal IMPORTADOR_ID;

				public BigDecimal getIMPORTADOR_ID () {
					return this.IMPORTADOR_ID;
				}

				public Boolean IMPORTADOR_IDIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_IDIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_IDLength(){
				    return 0;
				}
				public Integer IMPORTADOR_IDPrecision(){
				    return 0;
				}
				public String IMPORTADOR_IDDefault(){
				
					return "";
				
				}
				public String IMPORTADOR_IDComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_IDPattern(){
				
					return "";
				
				}
				public String IMPORTADOR_IDOriginalDbColumnName(){
				
					return "IMPORTADOR_ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String CARACTERISTICA_CONTRATO;

				public String getCARACTERISTICA_CONTRATO () {
					return this.CARACTERISTICA_CONTRATO;
				}

				public Boolean CARACTERISTICA_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_CONTRATOIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_CONTRATOLength(){
				    return 0;
				}
				public Integer CARACTERISTICA_CONTRATOPrecision(){
				    return 0;
				}
				public String CARACTERISTICA_CONTRATODefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_CONTRATOComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_CONTRATOPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_CONTRATOOriginalDbColumnName(){
				
					return "CARACTERISTICA_CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_NO;

				public String getITEM_NO () {
					return this.ITEM_NO;
				}

				public Boolean ITEM_NOIsNullable(){
				    return true;
				}
				public Boolean ITEM_NOIsKey(){
				    return false;
				}
				public Integer ITEM_NOLength(){
				    return 255;
				}
				public Integer ITEM_NOPrecision(){
				    return 0;
				}
				public String ITEM_NODefault(){
				
					return null;
				
				}
				public String ITEM_NOComment(){
				
				    return "";
				
				}
				public String ITEM_NOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_NOOriginalDbColumnName(){
				
					return "ITEM_NO";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 0;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 0;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
						this.USER_ID = readInteger(dis);
					
						this.FORMA_FARMACEUTICA_ID = readInteger(dis);
					
						this.CARACTERISTICA_CONTRATO_ID = readInteger(dis);
					
						this.UNIDAD_MEDIDA_ID = (BigDecimal) dis.readObject();
					
						this.LABORATORIO_ID = (BigDecimal) dis.readObject();
					
						this.IMPORTADOR_ID = (BigDecimal) dis.readObject();
					
					this.ESTADO = readString(dis);
					
					this.RESPUESTA = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.CARACTERISTICA_CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_NO = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
					// Integer
				
						writeInteger(this.USER_ID,dos);
					
					// Integer
				
						writeInteger(this.FORMA_FARMACEUTICA_ID,dos);
					
					// Integer
				
						writeInteger(this.CARACTERISTICA_CONTRATO_ID,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UNIDAD_MEDIDA_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.LABORATORIO_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IMPORTADOR_ID);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.RESPUESTA,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.CARACTERISTICA_CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_NO,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",USER_ID="+String.valueOf(USER_ID));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",CARACTERISTICA_CONTRATO_ID="+String.valueOf(CARACTERISTICA_CONTRATO_ID));
		sb.append(",UNIDAD_MEDIDA_ID="+String.valueOf(UNIDAD_MEDIDA_ID));
		sb.append(",LABORATORIO_ID="+String.valueOf(LABORATORIO_ID));
		sb.append(",IMPORTADOR_ID="+String.valueOf(IMPORTADOR_ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",CARACTERISTICA_CONTRATO="+CARACTERISTICA_CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_NO="+ITEM_NO);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String ESTADO_;

				public String getESTADO_ () {
					return this.ESTADO_;
				}

				public Boolean ESTADO_IsNullable(){
				    return true;
				}
				public Boolean ESTADO_IsKey(){
				    return false;
				}
				public Integer ESTADO_Length(){
				    return null;
				}
				public Integer ESTADO_Precision(){
				    return null;
				}
				public String ESTADO_Default(){
				
					return null;
				
				}
				public String ESTADO_Comment(){
				
				    return "";
				
				}
				public String ESTADO_Pattern(){
				
					return "";
				
				}
				public String ESTADO_OriginalDbColumnName(){
				
					return "ESTADO_";
				
				}

				
			    public String RESPUESTA_;

				public String getRESPUESTA_ () {
					return this.RESPUESTA_;
				}

				public Boolean RESPUESTA_IsNullable(){
				    return true;
				}
				public Boolean RESPUESTA_IsKey(){
				    return false;
				}
				public Integer RESPUESTA_Length(){
				    return null;
				}
				public Integer RESPUESTA_Precision(){
				    return null;
				}
				public String RESPUESTA_Default(){
				
					return null;
				
				}
				public String RESPUESTA_Comment(){
				
				    return "";
				
				}
				public String RESPUESTA_Pattern(){
				
					return "";
				
				}
				public String RESPUESTA_OriginalDbColumnName(){
				
					return "RESPUESTA_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return "";
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 255;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String TIPOLOGIA;

				public String getTIPOLOGIA () {
					return this.TIPOLOGIA;
				}

				public Boolean TIPOLOGIAIsNullable(){
				    return true;
				}
				public Boolean TIPOLOGIAIsKey(){
				    return false;
				}
				public Integer TIPOLOGIALength(){
				    return 255;
				}
				public Integer TIPOLOGIAPrecision(){
				    return 0;
				}
				public String TIPOLOGIADefault(){
				
					return null;
				
				}
				public String TIPOLOGIAComment(){
				
				    return "";
				
				}
				public String TIPOLOGIAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPOLOGIAOriginalDbColumnName(){
				
					return "TIPOLOGIA";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String ITEM_No_;

				public String getITEM_No_ () {
					return this.ITEM_No_;
				}

				public Boolean ITEM_No_IsNullable(){
				    return true;
				}
				public Boolean ITEM_No_IsKey(){
				    return false;
				}
				public Integer ITEM_No_Length(){
				    return 255;
				}
				public Integer ITEM_No_Precision(){
				    return 0;
				}
				public String ITEM_No_Default(){
				
					return null;
				
				}
				public String ITEM_No_Comment(){
				
				    return "";
				
				}
				public String ITEM_No_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEM_No_OriginalDbColumnName(){
				
					return "ITEM_No_";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 255;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 255;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String PRESENTACION;

				public String getPRESENTACION () {
					return this.PRESENTACION;
				}

				public Boolean PRESENTACIONIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONIsKey(){
				    return false;
				}
				public Integer PRESENTACIONLength(){
				    return 255;
				}
				public Integer PRESENTACIONPrecision(){
				    return 0;
				}
				public String PRESENTACIONDefault(){
				
					return null;
				
				}
				public String PRESENTACIONComment(){
				
				    return "";
				
				}
				public String PRESENTACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONOriginalDbColumnName(){
				
					return "PRESENTACION";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 255;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String VIA_ADMINISTRACION;

				public String getVIA_ADMINISTRACION () {
					return this.VIA_ADMINISTRACION;
				}

				public Boolean VIA_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_ADMINISTRACIONLength(){
				    return 255;
				}
				public Integer VIA_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_ADMINISTRACION";
				
				}

				
			    public String UNIDAD_DE_MEDIDA;

				public String getUNIDAD_DE_MEDIDA () {
					return this.UNIDAD_DE_MEDIDA;
				}

				public Boolean UNIDAD_DE_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_DE_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_DE_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_DE_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_DE_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_DE_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_DE_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_DE_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_DE_MEDIDA";
				
				}

				
			    public String ATC;

				public String getATC () {
					return this.ATC;
				}

				public Boolean ATCIsNullable(){
				    return true;
				}
				public Boolean ATCIsKey(){
				    return false;
				}
				public Integer ATCLength(){
				    return 255;
				}
				public Integer ATCPrecision(){
				    return 0;
				}
				public String ATCDefault(){
				
					return null;
				
				}
				public String ATCComment(){
				
				    return "";
				
				}
				public String ATCPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ATCOriginalDbColumnName(){
				
					return "ATC";
				
				}

				
			    public String GRUPO_FARMACOLOGICO;

				public String getGRUPO_FARMACOLOGICO () {
					return this.GRUPO_FARMACOLOGICO;
				}

				public Boolean GRUPO_FARMACOLOGICOIsNullable(){
				    return true;
				}
				public Boolean GRUPO_FARMACOLOGICOIsKey(){
				    return false;
				}
				public Integer GRUPO_FARMACOLOGICOLength(){
				    return 255;
				}
				public Integer GRUPO_FARMACOLOGICOPrecision(){
				    return 0;
				}
				public String GRUPO_FARMACOLOGICODefault(){
				
					return null;
				
				}
				public String GRUPO_FARMACOLOGICOComment(){
				
				    return "";
				
				}
				public String GRUPO_FARMACOLOGICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String GRUPO_FARMACOLOGICOOriginalDbColumnName(){
				
					return "GRUPO_FARMACOLOGICO";
				
				}

				
			    public String CADENA_FRIO;

				public String getCADENA_FRIO () {
					return this.CADENA_FRIO;
				}

				public Boolean CADENA_FRIOIsNullable(){
				    return true;
				}
				public Boolean CADENA_FRIOIsKey(){
				    return false;
				}
				public Integer CADENA_FRIOLength(){
				    return 255;
				}
				public Integer CADENA_FRIOPrecision(){
				    return 0;
				}
				public String CADENA_FRIODefault(){
				
					return null;
				
				}
				public String CADENA_FRIOComment(){
				
				    return "";
				
				}
				public String CADENA_FRIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CADENA_FRIOOriginalDbColumnName(){
				
					return "CADENA_FRIO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String NOMBRE_COMERCIAL_PRODUCTO_MARCA;

				public String getNOMBRE_COMERCIAL_PRODUCTO_MARCA () {
					return this.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
				}

				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIAL_PRODUCTO_MARCAIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCALength(){
				    return 255;
				}
				public Integer NOMBRE_COMERCIAL_PRODUCTO_MARCAPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCADefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIAL_PRODUCTO_MARCAOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL_PRODUCTO_MARCA";
				
				}

				
			    public String LABORATORIO_FABRICANTE;

				public String getLABORATORIO_FABRICANTE () {
					return this.LABORATORIO_FABRICANTE;
				}

				public Boolean LABORATORIO_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean LABORATORIO_FABRICANTEIsKey(){
				    return false;
				}
				public Integer LABORATORIO_FABRICANTELength(){
				    return 255;
				}
				public Integer LABORATORIO_FABRICANTEPrecision(){
				    return 0;
				}
				public String LABORATORIO_FABRICANTEDefault(){
				
					return null;
				
				}
				public String LABORATORIO_FABRICANTEComment(){
				
				    return "";
				
				}
				public String LABORATORIO_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LABORATORIO_FABRICANTEOriginalDbColumnName(){
				
					return "LABORATORIO_FABRICANTE";
				
				}

				
			    public String NO_REGISTRO_SANITARIO;

				public String getNO_REGISTRO_SANITARIO () {
					return this.NO_REGISTRO_SANITARIO;
				}

				public Boolean NO_REGISTRO_SANITARIOIsNullable(){
				    return true;
				}
				public Boolean NO_REGISTRO_SANITARIOIsKey(){
				    return false;
				}
				public Integer NO_REGISTRO_SANITARIOLength(){
				    return 255;
				}
				public Integer NO_REGISTRO_SANITARIOPrecision(){
				    return 0;
				}
				public String NO_REGISTRO_SANITARIODefault(){
				
					return null;
				
				}
				public String NO_REGISTRO_SANITARIOComment(){
				
				    return "";
				
				}
				public String NO_REGISTRO_SANITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NO_REGISTRO_SANITARIOOriginalDbColumnName(){
				
					return "NO_REGISTRO_SANITARIO";
				
				}

				
			    public String IMPORTADOR_TITULAR;

				public String getIMPORTADOR_TITULAR () {
					return this.IMPORTADOR_TITULAR;
				}

				public Boolean IMPORTADOR_TITULARIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOR_TITULARIsKey(){
				    return false;
				}
				public Integer IMPORTADOR_TITULARLength(){
				    return 255;
				}
				public Integer IMPORTADOR_TITULARPrecision(){
				    return 0;
				}
				public String IMPORTADOR_TITULARDefault(){
				
					return null;
				
				}
				public String IMPORTADOR_TITULARComment(){
				
				    return "";
				
				}
				public String IMPORTADOR_TITULARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOR_TITULAROriginalDbColumnName(){
				
					return "IMPORTADOR_TITULAR";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String PRECIO;

				public String getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return true;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 255;
				}
				public Integer PRECIOPrecision(){
				    return 0;
				}
				public String PRECIODefault(){
				
					return null;
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 255;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String TIENE_IVA;

				public String getTIENE_IVA () {
					return this.TIENE_IVA;
				}

				public Boolean TIENE_IVAIsNullable(){
				    return true;
				}
				public Boolean TIENE_IVAIsKey(){
				    return false;
				}
				public Integer TIENE_IVALength(){
				    return 255;
				}
				public Integer TIENE_IVAPrecision(){
				    return 0;
				}
				public String TIENE_IVADefault(){
				
					return null;
				
				}
				public String TIENE_IVAComment(){
				
				    return "";
				
				}
				public String TIENE_IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIENE_IVAOriginalDbColumnName(){
				
					return "TIENE_IVA";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 255;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 255;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UNIDAD_MEDIDA;

				public String getCANTIDAD_UNIDAD_MEDIDA () {
					return this.CANTIDAD_UNIDAD_MEDIDA;
				}

				public Boolean CANTIDAD_UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDALength(){
				    return 255;
				}
				public Integer CANTIDAD_UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 255;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String CANTIDAD_MAXIMA;

				public String getCANTIDAD_MAXIMA () {
					return this.CANTIDAD_MAXIMA;
				}

				public Boolean CANTIDAD_MAXIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MAXIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MAXIMALength(){
				    return 0;
				}
				public Integer CANTIDAD_MAXIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MAXIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MAXIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MAXIMAPattern(){
				
					return "";
				
				}
				public String CANTIDAD_MAXIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MAXIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG_INVIMA;

				public String getFECHA_EXPEDICION_REG_INVIMA () {
					return this.FECHA_EXPEDICION_REG_INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_EXPEDICION_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG_INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 255;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 255;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 255;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 255;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 255;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 255;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 255;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 255;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 255;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 100;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return null;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL_DE_COMITE;

				public String getCODIGO_PROVISIONAL_DE_COMITE () {
					return this.CODIGO_PROVISIONAL_DE_COMITE;
				}

				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONAL_DE_COMITEIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITELength(){
				    return 100;
				}
				public Integer CODIGO_PROVISIONAL_DE_COMITEPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONAL_DE_COMITEDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONAL_DE_COMITEOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL_DE_COMITE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.ESTADO_ = readString(dis);
					
					this.RESPUESTA_ = readString(dis);
					
						this.numeroFila = readInteger(dis);
					
					this.CONTRATO = readString(dis);
					
					this.TIPOLOGIA = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.ITEM_No_ = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.PRESENTACION = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.VIA_ADMINISTRACION = readString(dis);
					
					this.UNIDAD_DE_MEDIDA = readString(dis);
					
					this.ATC = readString(dis);
					
					this.GRUPO_FARMACOLOGICO = readString(dis);
					
					this.CADENA_FRIO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.NOMBRE_COMERCIAL_PRODUCTO_MARCA = readString(dis);
					
					this.LABORATORIO_FABRICANTE = readString(dis);
					
					this.NO_REGISTRO_SANITARIO = readString(dis);
					
					this.IMPORTADOR_TITULAR = readString(dis);
					
					this.CUM = readString(dis);
					
					this.PRECIO = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.TIENE_IVA = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.CANTIDAD_MAXIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG_INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL_DE_COMITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESTADO_,dos);
					
					// String
				
						writeString(this.RESPUESTA_,dos);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.TIPOLOGIA,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.ITEM_No_,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.PRESENTACION,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.VIA_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.UNIDAD_DE_MEDIDA,dos);
					
					// String
				
						writeString(this.ATC,dos);
					
					// String
				
						writeString(this.GRUPO_FARMACOLOGICO,dos);
					
					// String
				
						writeString(this.CADENA_FRIO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL_PRODUCTO_MARCA,dos);
					
					// String
				
						writeString(this.LABORATORIO_FABRICANTE,dos);
					
					// String
				
						writeString(this.NO_REGISTRO_SANITARIO,dos);
					
					// String
				
						writeString(this.IMPORTADOR_TITULAR,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.PRECIO,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.TIENE_IVA,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MAXIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL_DE_COMITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO_="+ESTADO_);
		sb.append(",RESPUESTA_="+RESPUESTA_);
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",TIPOLOGIA="+TIPOLOGIA);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",ITEM_No_="+ITEM_No_);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",PRESENTACION="+PRESENTACION);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",VIA_ADMINISTRACION="+VIA_ADMINISTRACION);
		sb.append(",UNIDAD_DE_MEDIDA="+UNIDAD_DE_MEDIDA);
		sb.append(",ATC="+ATC);
		sb.append(",GRUPO_FARMACOLOGICO="+GRUPO_FARMACOLOGICO);
		sb.append(",CADENA_FRIO="+CADENA_FRIO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",NOMBRE_COMERCIAL_PRODUCTO_MARCA="+NOMBRE_COMERCIAL_PRODUCTO_MARCA);
		sb.append(",LABORATORIO_FABRICANTE="+LABORATORIO_FABRICANTE);
		sb.append(",NO_REGISTRO_SANITARIO="+NO_REGISTRO_SANITARIO);
		sb.append(",IMPORTADOR_TITULAR="+IMPORTADOR_TITULAR);
		sb.append(",CUM="+CUM);
		sb.append(",PRECIO="+PRECIO);
		sb.append(",OPCION="+OPCION);
		sb.append(",TIENE_IVA="+TIENE_IVA);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UNIDAD_MEDIDA="+CANTIDAD_UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",CANTIDAD_MAXIMA="+CANTIDAD_MAXIMA);
		sb.append(",FECHA_EXPEDICION_REG_INVIMA="+FECHA_EXPEDICION_REG_INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL_DE_COMITE="+CODIGO_PROVISIONAL_DE_COMITE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_15Process(globalMap);
		tHashInput_1Process(globalMap);
		tHashInput_4Process(globalMap);
		tHashInput_3Process(globalMap);
		tHashInput_6Process(globalMap);
		tHashInput_7Process(globalMap);
		tOracleInput_5Process(globalMap);

		row9Struct row9 = new row9Struct();
row8Struct row8 = new row8Struct();
out0Struct out0 = new out0Struct();
out_inStruct out_in = new out_inStruct();
out2Struct out2 = new out2Struct();
out3Struct out3 = new out3Struct();
out4Struct out4 = new out4Struct();
out9Struct out9 = new out9Struct();
out10Struct out10 = new out10Struct();
row11Struct row11 = new row11Struct();
outCaracteristicaContratoStruct outCaracteristicaContrato = new outCaracteristicaContratoStruct();
row12Struct row12 = new row12Struct();
row22Struct row22 = new row22Struct();
row24Struct row24 = new row24Struct();
outProducto1Struct outProducto1 = new outProducto1Struct();
row21Struct row21 = new row21Struct();
row31Struct row31 = new row31Struct();
outErroresPLStruct outErroresPL = new outErroresPLStruct();
row28Struct row28 = new row28Struct();
outErroneosStruct outErroneos = new outErroneosStruct();

		row34Struct row34 = new row34Struct();

			row35Struct row35 = new row35Struct();
row37Struct row37 = new row37Struct();
outFinStruct outFin = new outFinStruct();
row40Struct row40 = new row40Struct();
outFinalFinalStruct outFinalFinal = new outFinalFinalStruct();




	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class Comparablerow35Struct extends row35Struct implements Comparable<Comparablerow35Struct> {
	
	public int compareTo(Comparablerow35Struct other) {

		if(this.numeroFila == null && other.numeroFila != null){
			return -1;
						
		}else if(this.numeroFila != null && other.numeroFila == null){
			return 1;
						
		}else if(this.numeroFila != null && other.numeroFila != null){
			if(!this.numeroFila.equals(other.numeroFila)){
				return this.numeroFila.compareTo(other.numeroFila);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow35Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablerow35Struct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tUnite_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_1", false);
		start_Hash.put("tUnite_1", System.currentTimeMillis());
		
	
	currentComponent="tUnite_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outErroresPL","row34");
					}
				
		int tos_count_tUnite_1 = 0;
		

int nb_line_tUnite_1 = 0;

 



/**
 * [tUnite_1 begin ] stop
 */

















	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
outErroresPLStruct outErroresPL_tmp = new outErroresPLStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tFilterRow_58 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_58", false);
		start_Hash.put("tFilterRow_58", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_58";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tFilterRow_58 = 0;
		
    int nb_line_tFilterRow_58 = 0;
    int nb_line_ok_tFilterRow_58 = 0;
    int nb_line_reject_tFilterRow_58 = 0;

    class Operator_tFilterRow_58 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_58(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_58 begin ] stop
 */



	
	/**
	 * [tOracleSP_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_4", false);
		start_Hash.put("tOracleSP_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outProducto1");
					}
				
		int tos_count_tOracleSP_4 = 0;
		

	java.sql.Connection connection_tOracleSP_4 = null;
	connection_tOracleSP_4 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_4 = connection_tOracleSP_4.prepareCall("{call " + "GFA.InsValProductosAnexoTecCM" + "(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_4;
String tmpString_tOracleSP_4;

 



/**
 * [tOracleSP_4 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
	String PRECIO;
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
outProducto1Struct outProducto1_tmp = new outProducto1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */





	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outErroneos");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<outErroneosStruct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<outErroneosStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
outErroneosStruct outErroneos_tmp = new outErroneosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tFilterRow_53 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_53", false);
		start_Hash.put("tFilterRow_53", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_53";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tFilterRow_53 = 0;
		
    int nb_line_tFilterRow_53 = 0;
    int nb_line_ok_tFilterRow_53 = 0;
    int nb_line_reject_tFilterRow_53 = 0;

    class Operator_tFilterRow_53 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_53(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_53 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outCaracteristicaContrato");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
outCaracteristicaContratoStruct outCaracteristicaContrato_tmp = new outCaracteristicaContratoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out10");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out9");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
	String CARACTERISTICA_CONTRATO;
	String TIPO_PRODUCTO;
	int CANTIDAD_UNIDAD_MEDIDA;
	int CANTIDAD_MINIMA;
	int CANTIDAD_MAXIMA;
	String UNIDOSIS;
	String TIENE_IVA;
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
out10Struct out10_tmp = new out10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out4");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nitStruct> tHash_Lookup_Impor_nit = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nitStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nitStruct>) 
					globalMap.get( "tHash_Lookup_Impor_nit" ))
					;					
					
	

Impor_nitStruct Impor_nitHashKey = new Impor_nitStruct();
Impor_nitStruct Impor_nitDefault = new Impor_nitStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
	BigDecimal ID;
	String RESPUESTA;
	String RESPUESTA_ERROR;
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
out9Struct out9_tmp = new out9Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nombreStruct> tHash_Lookup_Impor_nombre = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nombreStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nombreStruct>) 
					globalMap.get( "tHash_Lookup_Impor_nombre" ))
					;					
					
	

Impor_nombreStruct Impor_nombreHashKey = new Impor_nombreStruct();
Impor_nombreStruct Impor_nombreDefault = new Impor_nombreStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
	BigDecimal ID;
	String RESPUESTA;
	String RESPUESTA_ERROR;
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out2");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_nitStruct> tHash_Lookup_Fabr_nit = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_nitStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_nitStruct>) 
					globalMap.get( "tHash_Lookup_Fabr_nit" ))
					;					
					
	

Fabr_nitStruct Fabr_nitHashKey = new Fabr_nitStruct();
Fabr_nitStruct Fabr_nitDefault = new Fabr_nitStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
	BigDecimal ID;
	String RESPUESTA;
	String RESPUESTA_ERROR;
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out_in");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_IDStruct> tHash_Lookup_Fabr_ID = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_IDStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_IDStruct>) 
					globalMap.get( "tHash_Lookup_Fabr_ID" ))
					;					
					
	

Fabr_IDStruct Fabr_IDHashKey = new Fabr_IDStruct();
Fabr_IDStruct Fabr_IDDefault = new Fabr_IDStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
	BigDecimal ID;
	String RESPUESTA;
	String RESPUESTA_ERROR;
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
out2Struct out2_tmp = new out2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out0");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<MedidaStruct> tHash_Lookup_Medida = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<MedidaStruct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<MedidaStruct>) 
					globalMap.get( "tHash_Lookup_Medida" ))
					;					
					
	

MedidaStruct MedidaHashKey = new MedidaStruct();
MedidaStruct MedidaDefault = new MedidaStruct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
	BigDecimal ID;
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
out_inStruct out_in_tmp = new out_inStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
	String RESPUESTA;
	String errorContrato;
	String errorNombreComercialProductoOpcion1;
	String valorViaAdministracion;
	String valorUnidadMedida;
	String valorLaboratorioFabricante;
	String valorNitLaboratorio;
	String valorImportador;
	String valorNitImportador;
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out0Struct out0_tmp = new out0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
row8Struct row8_tmp = new row8Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<DATA_FORMATStruct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<DATA_FORMATStruct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    DATA_FORMATStruct next_tHashInput_14 = iterator_tHashInput_14.next();

	row9.NUMERO_FILA = next_tHashInput_14.NUMERO_FILA;
	row9.USER_ID = next_tHashInput_14.USER_ID;
	row9.FORMA_FARMACEUTICA_ID = next_tHashInput_14.FORMA_FARMACEUTICA_ID;
	row9.CARACTERISTICA_CONTRATO_ID = next_tHashInput_14.CARACTERISTICA_CONTRATO_ID;
	row9.UNIDAD_MEDIDA_ID = next_tHashInput_14.UNIDAD_MEDIDA_ID;
	row9.LABORATORIO_ID = next_tHashInput_14.LABORATORIO_ID;
	row9.IMPORTADOR_ID = next_tHashInput_14.IMPORTADOR_ID;
	row9.ESTADO = next_tHashInput_14.ESTADO;
	row9.RESPUESTA = next_tHashInput_14.RESPUESTA;
	row9.CONTRATO = next_tHashInput_14.CONTRATO;
	row9.CARACTERISTICA_CONTRATO = next_tHashInput_14.CARACTERISTICA_CONTRATO;
	row9.TIPOLOGIA = next_tHashInput_14.TIPOLOGIA;
	row9.TIPO_PRODUCTO = next_tHashInput_14.TIPO_PRODUCTO;
	row9.ITEM_NO = next_tHashInput_14.ITEM_NO;
	row9.CODIGO_SSMP = next_tHashInput_14.CODIGO_SSMP;
	row9.NOMBRE_GENERICO = next_tHashInput_14.NOMBRE_GENERICO;
	row9.PRESENTACION = next_tHashInput_14.PRESENTACION;
	row9.CONCENTRACION = next_tHashInput_14.CONCENTRACION;
	row9.VIA_ADMINISTRACION = next_tHashInput_14.VIA_ADMINISTRACION;
	row9.UNIDAD_DE_MEDIDA = next_tHashInput_14.UNIDAD_DE_MEDIDA;
	row9.ATC = next_tHashInput_14.ATC;
	row9.GRUPO_FARMACOLOGICO = next_tHashInput_14.GRUPO_FARMACOLOGICO;
	row9.CADENA_FRIO = next_tHashInput_14.CADENA_FRIO;
	row9.CODIGO_HOMIC = next_tHashInput_14.CODIGO_HOMIC;
	row9.NOMBRE_COMERCIAL_PRODUCTO_MARCA = next_tHashInput_14.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	row9.LABORATORIO_FABRICANTE = next_tHashInput_14.LABORATORIO_FABRICANTE;
	row9.NO_REGISTRO_SANITARIO = next_tHashInput_14.NO_REGISTRO_SANITARIO;
	row9.IMPORTADOR_TITULAR = next_tHashInput_14.IMPORTADOR_TITULAR;
	row9.CUM = next_tHashInput_14.CUM;
	row9.PRECIO = next_tHashInput_14.PRECIO;
	row9.OPCION = next_tHashInput_14.OPCION;
	row9.TIENE_IVA = next_tHashInput_14.TIENE_IVA;
	row9.CODIGO_BARRAS = next_tHashInput_14.CODIGO_BARRAS;
	row9.FORMA_FARMACEUTICA = next_tHashInput_14.FORMA_FARMACEUTICA;
	row9.UNIDOSIS = next_tHashInput_14.UNIDOSIS;
	row9.UNIDAD_MEDIDA = next_tHashInput_14.UNIDAD_MEDIDA;
	row9.CANTIDAD_UNIDAD_MEDIDA = next_tHashInput_14.CANTIDAD_UNIDAD_MEDIDA;
	row9.CANTIDAD_MINIMA = next_tHashInput_14.CANTIDAD_MINIMA;
	row9.CANTIDAD_MAXIMA = next_tHashInput_14.CANTIDAD_MAXIMA;
	row9.FECHA_EXPEDICION_REG_INVIMA = next_tHashInput_14.FECHA_EXPEDICION_REG_INVIMA;
	row9.FECHA_VENCIMIENTO_REG_INVIMA = next_tHashInput_14.FECHA_VENCIMIENTO_REG_INVIMA;
	row9.FECHA_ACTIVO_CUM = next_tHashInput_14.FECHA_ACTIVO_CUM;
	row9.FECHA_INACTIVO_CUM = next_tHashInput_14.FECHA_INACTIVO_CUM;
	row9.LUGAR_DE_ORIGEN = next_tHashInput_14.LUGAR_DE_ORIGEN;
	row9.CARACTERISTICAS = next_tHashInput_14.CARACTERISTICAS;
	row9.CONTRAINDICACIONES = next_tHashInput_14.CONTRAINDICACIONES;
	row9.EFECTOS_POSTERIOR = next_tHashInput_14.EFECTOS_POSTERIOR;
	row9.RIESGOS_ASOCIADOS = next_tHashInput_14.RIESGOS_ASOCIADOS;
	row9.DOSIS_PARA_APLICACION = next_tHashInput_14.DOSIS_PARA_APLICACION;
	row9.NIT_FABRICANTE = next_tHashInput_14.NIT_FABRICANTE;
	row9.NIT_IMPORTADOR = next_tHashInput_14.NIT_IMPORTADOR;
	row9.CODIGO_OPERADOR = next_tHashInput_14.CODIGO_OPERADOR;
	row9.CODIGO_PROVISIONAL_DE_COMITE = next_tHashInput_14.CODIGO_PROVISIONAL_DE_COMITE;
	row9.EXPEDIENTE = next_tHashInput_14.EXPEDIENTE;
	row9.CONSECUTIVO = next_tHashInput_14.CONSECUTIVO;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row13HashKey.NUMERO_FILA = row9.NUMERO_FILA;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.NUMERO_FILA = '" + row13HashKey.NUMERO_FILA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

row8 = null;


// # Output table : 'row8'
row8_tmp.NUMERO_FILA = row9.NUMERO_FILA;
row8_tmp.USER_ID = null;
row8_tmp.FORMA_FARMACEUTICA_ID = row13.FORMA_FARMACEUTICA_ID ;
row8_tmp.CARACTERISTICA_CONTRATO_ID = null;
row8_tmp.UNIDAD_MEDIDA_ID = row9.UNIDAD_MEDIDA_ID;
row8_tmp.LABORATORIO_ID = row9.LABORATORIO_ID;
row8_tmp.IMPORTADOR_ID = row9.IMPORTADOR_ID;
row8_tmp.ESTADO = row13.ESTADO ;
row8_tmp.RESPUESTA = row13.RESPUESTA ;
row8_tmp.CONTRATO = row9.CONTRATO;
row8_tmp.CARACTERISTICA_CONTRATO = row9.CARACTERISTICA_CONTRATO;
row8_tmp.TIPOLOGIA = row9.TIPOLOGIA;
row8_tmp.TIPO_PRODUCTO = row9.TIPO_PRODUCTO;
row8_tmp.ITEM_NO = row9.ITEM_NO;
row8_tmp.CODIGO_SSMP = row9.CODIGO_SSMP;
row8_tmp.NOMBRE_GENERICO = row9.NOMBRE_GENERICO;
row8_tmp.PRESENTACION = row9.PRESENTACION;
row8_tmp.CONCENTRACION = row9.CONCENTRACION;
row8_tmp.VIA_ADMINISTRACION = row9.VIA_ADMINISTRACION;
row8_tmp.UNIDAD_DE_MEDIDA = row9.UNIDAD_DE_MEDIDA;
row8_tmp.ATC = row9.ATC;
row8_tmp.GRUPO_FARMACOLOGICO = row9.GRUPO_FARMACOLOGICO;
row8_tmp.CADENA_FRIO = row9.CADENA_FRIO;
row8_tmp.CODIGO_HOMIC = row9.CODIGO_HOMIC;
row8_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row9.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
row8_tmp.LABORATORIO_FABRICANTE = row9.LABORATORIO_FABRICANTE;
row8_tmp.NO_REGISTRO_SANITARIO = row9.NO_REGISTRO_SANITARIO;
row8_tmp.IMPORTADOR_TITULAR = row9.IMPORTADOR_TITULAR;
row8_tmp.CUM = row9.CUM;
row8_tmp.PRECIO = row9.PRECIO;
row8_tmp.OPCION = row9.OPCION;
row8_tmp.TIENE_IVA = row9.TIENE_IVA;
row8_tmp.CODIGO_BARRAS = row9.CODIGO_BARRAS;
row8_tmp.FORMA_FARMACEUTICA = row9.FORMA_FARMACEUTICA;
row8_tmp.UNIDOSIS = row9.UNIDOSIS;
row8_tmp.UNIDAD_MEDIDA = row9.UNIDAD_MEDIDA;
row8_tmp.CANTIDAD_UNIDAD_MEDIDA = row9.CANTIDAD_UNIDAD_MEDIDA;
row8_tmp.CANTIDAD_MINIMA = row9.CANTIDAD_MINIMA;
row8_tmp.CANTIDAD_MAXIMA = row9.CANTIDAD_MAXIMA;
row8_tmp.FECHA_EXPEDICION_REG_INVIMA = row9.FECHA_EXPEDICION_REG_INVIMA;
row8_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row9.FECHA_VENCIMIENTO_REG_INVIMA;
row8_tmp.FECHA_ACTIVO_CUM = row9.FECHA_ACTIVO_CUM;
row8_tmp.FECHA_INACTIVO_CUM = row9.FECHA_INACTIVO_CUM;
row8_tmp.LUGAR_DE_ORIGEN = row9.LUGAR_DE_ORIGEN;
row8_tmp.CARACTERISTICAS = row9.CARACTERISTICAS;
row8_tmp.CONTRAINDICACIONES = row9.CONTRAINDICACIONES;
row8_tmp.EFECTOS_POSTERIOR = row9.EFECTOS_POSTERIOR;
row8_tmp.RIESGOS_ASOCIADOS = row9.RIESGOS_ASOCIADOS;
row8_tmp.DOSIS_PARA_APLICACION = row9.DOSIS_PARA_APLICACION;
row8_tmp.NIT_FABRICANTE = row9.NIT_FABRICANTE;
row8_tmp.NIT_IMPORTADOR = row9.NIT_IMPORTADOR;
row8_tmp.CODIGO_OPERADOR = row9.CODIGO_OPERADOR;
row8_tmp.CODIGO_PROVISIONAL_DE_COMITE = row9.CODIGO_PROVISIONAL_DE_COMITE;
row8_tmp.EXPEDIENTE = row9.EXPEDIENTE;
row8_tmp.CONSECUTIVO = row9.CONSECUTIVO;
row8 = row8_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "row8"
if(row8 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;
Var.RESPUESTA = row8.RESPUESTA == null || row8.RESPUESTA.length()==0?"":row8.RESPUESTA ;
Var.errorContrato = row8.CONTRATO.equals(context.numeroContrato) ? "" : " | " + Utils.manejoErrorGFA( "N√∫mero de contrato", row8.CONTRATO, "No corresponde con el seleccionado en formulario, asegurese de cu√°l contrato pretende cargar masivamente"); ;
Var.errorNombreComercialProductoOpcion1 = row8.NOMBRE_COMERCIAL_PRODUCTO_MARCA != null ? "" : " | " + Utils.manejoErrorGFA( "Nombre comercial del producto", row8.NOMBRE_COMERCIAL_PRODUCTO_MARCA, "Es un campo obligatorio"); ;
Var.valorViaAdministracion = row8.VIA_ADMINISTRACION != null ? row8.VIA_ADMINISTRACION : context.estadoNoRegistra ;
Var.valorUnidadMedida = row8.UNIDAD_MEDIDA != null ? row8.UNIDAD_MEDIDA : context.estadoNoRegistra ;
Var.valorLaboratorioFabricante = row8.LABORATORIO_FABRICANTE != null ? row8.LABORATORIO_FABRICANTE : context.estadoNoRegistra ;
Var.valorNitLaboratorio = row8.NIT_FABRICANTE != null ? row8.NIT_FABRICANTE : context.estadoNoRegistra ;
Var.valorImportador = row8.IMPORTADOR_TITULAR != null ? row8.IMPORTADOR_TITULAR : context.estadoNoRegistra ;
Var.valorNitImportador = row8.NIT_IMPORTADOR != null ? row8.NIT_IMPORTADOR : context.estadoNoRegistra ;// ###############################
        // ###############################
        // # Output tables

out0 = null;


// # Output table : 'out0'
out0_tmp.NUMERO_FILA = row8.NUMERO_FILA;
out0_tmp.USER_ID = null;
out0_tmp.FORMA_FARMACEUTICA_ID = row8.FORMA_FARMACEUTICA_ID;
out0_tmp.CARACTERISTICA_CONTRATO_ID = null;
out0_tmp.UNIDAD_MEDIDA_ID = row8.UNIDAD_MEDIDA_ID;
out0_tmp.LABORATORIO_ID = row8.LABORATORIO_ID;
out0_tmp.IMPORTADOR_ID = row8.IMPORTADOR_ID;
out0_tmp.ESTADO = row8.ESTADO;
out0_tmp.RESPUESTA = Var.RESPUESTA +  Var.errorContrato +  Var.errorNombreComercialProductoOpcion1 ;
out0_tmp.CONTRATO = row8.CONTRATO;
out0_tmp.CARACTERISTICA_CONTRATO = null;
out0_tmp.TIPOLOGIA = row8.TIPOLOGIA;
out0_tmp.TIPO_PRODUCTO = row8.TIPO_PRODUCTO;
out0_tmp.ITEM_NO = row8.ITEM_NO;
out0_tmp.CODIGO_SSMP = row8.CODIGO_SSMP;
out0_tmp.NOMBRE_GENERICO = row8.NOMBRE_GENERICO;
out0_tmp.PRESENTACION = row8.PRESENTACION;
out0_tmp.CONCENTRACION = row8.CONCENTRACION;
out0_tmp.VIA_ADMINISTRACION = Var.valorViaAdministracion ;
out0_tmp.UNIDAD_DE_MEDIDA = row8.UNIDAD_DE_MEDIDA;
out0_tmp.ATC = row8.ATC;
out0_tmp.GRUPO_FARMACOLOGICO = row8.GRUPO_FARMACOLOGICO;
out0_tmp.CADENA_FRIO = row8.CADENA_FRIO;
out0_tmp.CODIGO_HOMIC = row8.CODIGO_HOMIC;
out0_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row8.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out0_tmp.LABORATORIO_FABRICANTE = Var.valorLaboratorioFabricante ;
out0_tmp.NO_REGISTRO_SANITARIO = row8.NO_REGISTRO_SANITARIO;
out0_tmp.IMPORTADOR_TITULAR = Var.valorImportador ;
out0_tmp.CUM = row8.CUM;
out0_tmp.PRECIO = row8.PRECIO;
out0_tmp.OPCION = row8.OPCION;
out0_tmp.TIENE_IVA = row8.TIENE_IVA;
out0_tmp.CODIGO_BARRAS = row8.CODIGO_BARRAS;
out0_tmp.FORMA_FARMACEUTICA = row8.FORMA_FARMACEUTICA;
out0_tmp.UNIDOSIS = row8.UNIDOSIS;
out0_tmp.UNIDAD_MEDIDA = Var.valorUnidadMedida ;
out0_tmp.CANTIDAD_UNIDAD_MEDIDA = row8.CANTIDAD_UNIDAD_MEDIDA;
out0_tmp.CANTIDAD_MINIMA = row8.CANTIDAD_MINIMA;
out0_tmp.CANTIDAD_MAXIMA = row8.CANTIDAD_MAXIMA;
out0_tmp.FECHA_EXPEDICION_REG_INVIMA = row8.FECHA_EXPEDICION_REG_INVIMA;
out0_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row8.FECHA_VENCIMIENTO_REG_INVIMA;
out0_tmp.FECHA_ACTIVO_CUM = row8.FECHA_ACTIVO_CUM;
out0_tmp.FECHA_INACTIVO_CUM = row8.FECHA_INACTIVO_CUM;
out0_tmp.LUGAR_DE_ORIGEN = row8.LUGAR_DE_ORIGEN;
out0_tmp.CARACTERISTICAS = row8.CARACTERISTICAS;
out0_tmp.CONTRAINDICACIONES = row8.CONTRAINDICACIONES;
out0_tmp.EFECTOS_POSTERIOR = row8.EFECTOS_POSTERIOR;
out0_tmp.RIESGOS_ASOCIADOS = row8.RIESGOS_ASOCIADOS;
out0_tmp.DOSIS_PARA_APLICACION = row8.DOSIS_PARA_APLICACION;
out0_tmp.NIT_FABRICANTE = Var.valorNitLaboratorio ;
out0_tmp.NIT_IMPORTADOR = Var.valorNitImportador ;
out0_tmp.CODIGO_OPERADOR = row8.CODIGO_OPERADOR;
out0_tmp.CODIGO_PROVISIONAL_DE_COMITE = row8.CODIGO_PROVISIONAL_DE_COMITE;
out0_tmp.EXPEDIENTE = null;
out0_tmp.CONSECUTIVO = null;
out0 = out0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out0"
if(out0 != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out0"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						MedidaStruct Medida = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "Medida" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopMedida = false;
       		  	    	
       		  	    	
 							MedidaStruct MedidaObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    MedidaHashKey.NOMBRE = out0.UNIDAD_MEDIDA;
                        		    		

								
		                        	MedidaHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_Medida.lookup( MedidaHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_Medida != null && tHash_Lookup_Medida.getCount(MedidaHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'Medida' and it contains more one result from keys :  Medida.NOMBRE = '" + MedidaHashKey.NOMBRE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	MedidaStruct fromLookup_Medida = null;
							Medida = MedidaDefault;
										 
							
								 
							
							
								if (tHash_Lookup_Medida !=null && tHash_Lookup_Medida.hasNext()) { // G 099
								
							
								
								fromLookup_Medida = tHash_Lookup_Medida.next();

							
							
								} // G 099
							
							

							if(fromLookup_Medida != null) {
								Medida = fromLookup_Medida;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;
Var.ID = Medida.ID == null ? BigDecimal.ZERO : (BigDecimal)Medida.ID ;// ###############################
        // ###############################
        // # Output tables

out_in = null;


// # Output table : 'out_in'
out_in_tmp.NUMERO_FILA = out0.NUMERO_FILA;
out_in_tmp.USER_ID = out0.USER_ID ;
out_in_tmp.FORMA_FARMACEUTICA_ID = out0.FORMA_FARMACEUTICA_ID;
out_in_tmp.CARACTERISTICA_CONTRATO_ID = out0.CARACTERISTICA_CONTRATO_ID ;
out_in_tmp.UNIDAD_MEDIDA_ID = Var.ID ;
out_in_tmp.LABORATORIO_ID = out0.LABORATORIO_ID;
out_in_tmp.IMPORTADOR_ID = out0.IMPORTADOR_ID;
out_in_tmp.ESTADO = out0.ESTADO;
out_in_tmp.RESPUESTA = out0.RESPUESTA ;
out_in_tmp.CONTRATO = out0.CONTRATO ;
out_in_tmp.CARACTERISTICA_CONTRATO = out0.CARACTERISTICA_CONTRATO;
out_in_tmp.TIPOLOGIA = out0.TIPOLOGIA ;
out_in_tmp.TIPO_PRODUCTO = out0.TIPO_PRODUCTO ;
out_in_tmp.ITEM_NO = out0.ITEM_NO;
out_in_tmp.CODIGO_SSMP = out0.CODIGO_SSMP ;
out_in_tmp.NOMBRE_GENERICO = out0.NOMBRE_GENERICO ;
out_in_tmp.PRESENTACION = out0.PRESENTACION ;
out_in_tmp.CONCENTRACION = out0.CONCENTRACION ;
out_in_tmp.VIA_ADMINISTRACION = out0.VIA_ADMINISTRACION ;
out_in_tmp.UNIDAD_DE_MEDIDA = out0.UNIDAD_DE_MEDIDA ;
out_in_tmp.ATC = out0.ATC ;
out_in_tmp.GRUPO_FARMACOLOGICO = out0.GRUPO_FARMACOLOGICO ;
out_in_tmp.CADENA_FRIO = out0.CADENA_FRIO ;
out_in_tmp.CODIGO_HOMIC = out0.CODIGO_HOMIC;
out_in_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out0.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out_in_tmp.LABORATORIO_FABRICANTE = out0.LABORATORIO_FABRICANTE;
out_in_tmp.NO_REGISTRO_SANITARIO = out0.NO_REGISTRO_SANITARIO;
out_in_tmp.IMPORTADOR_TITULAR = out0.IMPORTADOR_TITULAR;
out_in_tmp.CUM = out0.CUM;
out_in_tmp.PRECIO = out0.PRECIO;
out_in_tmp.OPCION = out0.OPCION;
out_in_tmp.TIENE_IVA = out0.TIENE_IVA;
out_in_tmp.CODIGO_BARRAS = out0.CODIGO_BARRAS;
out_in_tmp.FORMA_FARMACEUTICA = out0.FORMA_FARMACEUTICA;
out_in_tmp.UNIDOSIS = out0.UNIDOSIS;
out_in_tmp.UNIDAD_MEDIDA = out0.UNIDAD_MEDIDA;
out_in_tmp.CANTIDAD_UNIDAD_MEDIDA = out0.CANTIDAD_UNIDAD_MEDIDA;
out_in_tmp.CANTIDAD_MINIMA = out0.CANTIDAD_MINIMA;
out_in_tmp.CANTIDAD_MAXIMA = out0.CANTIDAD_MAXIMA;
out_in_tmp.FECHA_EXPEDICION_REG_INVIMA = out0.FECHA_EXPEDICION_REG_INVIMA;
out_in_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out0.FECHA_VENCIMIENTO_REG_INVIMA;
out_in_tmp.FECHA_ACTIVO_CUM = out0.FECHA_ACTIVO_CUM;
out_in_tmp.FECHA_INACTIVO_CUM = out0.FECHA_INACTIVO_CUM;
out_in_tmp.LUGAR_DE_ORIGEN = out0.LUGAR_DE_ORIGEN;
out_in_tmp.CARACTERISTICAS = out0.CARACTERISTICAS;
out_in_tmp.CONTRAINDICACIONES = out0.CONTRAINDICACIONES;
out_in_tmp.EFECTOS_POSTERIOR = out0.EFECTOS_POSTERIOR;
out_in_tmp.RIESGOS_ASOCIADOS = out0.RIESGOS_ASOCIADOS;
out_in_tmp.DOSIS_PARA_APLICACION = out0.DOSIS_PARA_APLICACION;
out_in_tmp.NIT_FABRICANTE = out0.NIT_FABRICANTE;
out_in_tmp.NIT_IMPORTADOR = out0.NIT_IMPORTADOR;
out_in_tmp.CODIGO_OPERADOR = out0.CODIGO_OPERADOR;
out_in_tmp.CODIGO_PROVISIONAL_DE_COMITE = out0.CODIGO_PROVISIONAL_DE_COMITE;
out_in_tmp.EXPEDIENTE = out0.EXPEDIENTE;
out_in_tmp.CONSECUTIVO = out0.CONSECUTIVO;
out_in = out_in_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "out_in"
if(out_in != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out_in"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						Fabr_IDStruct Fabr_ID = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "Fabr_ID" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopFabr_ID = false;
       		  	    	
       		  	    	
 							Fabr_IDStruct Fabr_IDObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    Fabr_IDHashKey.NOMBRE = out_in.LABORATORIO_FABRICANTE;
                        		    		

								
		                        	Fabr_IDHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_Fabr_ID.lookup( Fabr_IDHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_Fabr_ID != null && tHash_Lookup_Fabr_ID.getCount(Fabr_IDHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'Fabr_ID' and it contains more one result from keys :  Fabr_ID.NOMBRE = '" + Fabr_IDHashKey.NOMBRE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	Fabr_IDStruct fromLookup_Fabr_ID = null;
							Fabr_ID = Fabr_IDDefault;
										 
							
								 
							
							
								if (tHash_Lookup_Fabr_ID !=null && tHash_Lookup_Fabr_ID.hasNext()) { // G 099
								
							
								
								fromLookup_Fabr_ID = tHash_Lookup_Fabr_ID.next();

							
							
								} // G 099
							
							

							if(fromLookup_Fabr_ID != null) {
								Fabr_ID = fromLookup_Fabr_ID;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;
Var.ID = Fabr_ID.ID == null ? BigDecimal.ZERO:(BigDecimal)Fabr_ID.ID ;
Var.RESPUESTA = out_in.RESPUESTA == null || out_in.RESPUESTA.length()==0?"":out_in.RESPUESTA ;
Var.RESPUESTA_ERROR = Fabr_ID.ID != null? "" : " | " + Utils.manejoErrorGFA("Laboratorio-Fabricante", out_in.LABORATORIO_FABRICANTE, "No encontrado") ;// ###############################
        // ###############################
        // # Output tables

out2 = null;


// # Output table : 'out2'
out2_tmp.NUMERO_FILA = out_in.NUMERO_FILA;
out2_tmp.USER_ID = null;
out2_tmp.FORMA_FARMACEUTICA_ID = out_in.FORMA_FARMACEUTICA_ID;
out2_tmp.CARACTERISTICA_CONTRATO_ID = null;
out2_tmp.UNIDAD_MEDIDA_ID = out_in.UNIDAD_MEDIDA_ID;
out2_tmp.LABORATORIO_ID = Var.ID ;
out2_tmp.IMPORTADOR_ID = out_in.IMPORTADOR_ID;
out2_tmp.ESTADO = out_in.ESTADO;
out2_tmp.RESPUESTA = Var.RESPUESTA + Var.RESPUESTA_ERROR ;
out2_tmp.CONTRATO = out_in.CONTRATO ;
out2_tmp.CARACTERISTICA_CONTRATO = out_in.CARACTERISTICA_CONTRATO;
out2_tmp.TIPOLOGIA = out_in.TIPOLOGIA ;
out2_tmp.TIPO_PRODUCTO = out_in.TIPO_PRODUCTO ;
out2_tmp.ITEM_NO = out_in.ITEM_NO;
out2_tmp.CODIGO_SSMP = out_in.CODIGO_SSMP ;
out2_tmp.NOMBRE_GENERICO = out_in.NOMBRE_GENERICO ;
out2_tmp.PRESENTACION = out_in.PRESENTACION ;
out2_tmp.CONCENTRACION = out_in.CONCENTRACION ;
out2_tmp.VIA_ADMINISTRACION = out_in.VIA_ADMINISTRACION ;
out2_tmp.UNIDAD_DE_MEDIDA = out_in.UNIDAD_DE_MEDIDA ;
out2_tmp.ATC = out_in.ATC ;
out2_tmp.GRUPO_FARMACOLOGICO = out_in.GRUPO_FARMACOLOGICO ;
out2_tmp.CADENA_FRIO = out_in.CADENA_FRIO ;
out2_tmp.CODIGO_HOMIC = out_in.CODIGO_HOMIC;
out2_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out_in.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out2_tmp.LABORATORIO_FABRICANTE = out_in.LABORATORIO_FABRICANTE;
out2_tmp.NO_REGISTRO_SANITARIO = out_in.NO_REGISTRO_SANITARIO;
out2_tmp.IMPORTADOR_TITULAR = out_in.IMPORTADOR_TITULAR;
out2_tmp.CUM = out_in.CUM;
out2_tmp.PRECIO = out_in.PRECIO;
out2_tmp.OPCION = out_in.OPCION;
out2_tmp.TIENE_IVA = out_in.TIENE_IVA;
out2_tmp.CODIGO_BARRAS = out_in.CODIGO_BARRAS;
out2_tmp.FORMA_FARMACEUTICA = out_in.FORMA_FARMACEUTICA;
out2_tmp.UNIDOSIS = out_in.UNIDOSIS;
out2_tmp.UNIDAD_MEDIDA = out_in.UNIDAD_MEDIDA;
out2_tmp.CANTIDAD_UNIDAD_MEDIDA = out_in.CANTIDAD_UNIDAD_MEDIDA;
out2_tmp.CANTIDAD_MINIMA = out_in.CANTIDAD_MINIMA;
out2_tmp.CANTIDAD_MAXIMA = out_in.CANTIDAD_MAXIMA;
out2_tmp.FECHA_EXPEDICION_REG_INVIMA = out_in.FECHA_EXPEDICION_REG_INVIMA;
out2_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out_in.FECHA_VENCIMIENTO_REG_INVIMA;
out2_tmp.FECHA_ACTIVO_CUM = out_in.FECHA_ACTIVO_CUM;
out2_tmp.FECHA_INACTIVO_CUM = out_in.FECHA_INACTIVO_CUM;
out2_tmp.LUGAR_DE_ORIGEN = out_in.LUGAR_DE_ORIGEN;
out2_tmp.CARACTERISTICAS = out_in.CARACTERISTICAS;
out2_tmp.CONTRAINDICACIONES = out_in.CONTRAINDICACIONES;
out2_tmp.EFECTOS_POSTERIOR = out_in.EFECTOS_POSTERIOR;
out2_tmp.RIESGOS_ASOCIADOS = out_in.RIESGOS_ASOCIADOS;
out2_tmp.DOSIS_PARA_APLICACION = out_in.DOSIS_PARA_APLICACION;
out2_tmp.NIT_FABRICANTE = out_in.NIT_FABRICANTE;
out2_tmp.NIT_IMPORTADOR = out_in.NIT_IMPORTADOR;
out2_tmp.CODIGO_OPERADOR = out_in.CODIGO_OPERADOR;
out2_tmp.CODIGO_PROVISIONAL_DE_COMITE = out_in.CODIGO_PROVISIONAL_DE_COMITE;
out2_tmp.EXPEDIENTE = out_in.EXPEDIENTE;
out2_tmp.CONSECUTIVO = out_in.CONSECUTIVO;
out2 = out2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "out2"
if(out2 != null) { 



	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
						Fabr_nitStruct Fabr_nit = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "Fabr_nit" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopFabr_nit = false;
       		  	    	
       		  	    	
 							Fabr_nitStruct Fabr_nitObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_17) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_17 = false;
								
                        		    		    Fabr_nitHashKey.ID = out2.LABORATORIO_ID ;
                        		    		

								
		                        	Fabr_nitHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_Fabr_nit.lookup( Fabr_nitHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_Fabr_nit != null && tHash_Lookup_Fabr_nit.getCount(Fabr_nitHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'Fabr_nit' and it contains more one result from keys :  Fabr_nit.ID = '" + Fabr_nitHashKey.ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	Fabr_nitStruct fromLookup_Fabr_nit = null;
							Fabr_nit = Fabr_nitDefault;
										 
							
								 
							
							
								if (tHash_Lookup_Fabr_nit !=null && tHash_Lookup_Fabr_nit.hasNext()) { // G 099
								
							
								
								fromLookup_Fabr_nit = tHash_Lookup_Fabr_nit.next();

							
							
								} // G 099
							
							

							if(fromLookup_Fabr_nit != null) {
								Fabr_nit = fromLookup_Fabr_nit;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;
Var.ID = out2.LABORATORIO_ID!=BigDecimal.ZERO ?out2.LABORATORIO_ID:(Fabr_nit.ID!= null?BigDecimal.ZERO:(BigDecimal)Fabr_nit.ID) ;
Var.RESPUESTA = out2.RESPUESTA == null || out2.RESPUESTA.length()==0?"":out2.RESPUESTA ;
Var.RESPUESTA_ERROR = out2.LABORATORIO_ID!=BigDecimal.ZERO || Fabr_nit.ID!= null ?"": " | " + Utils.manejoErrorGFA("Laboratorio-Fabricante NIT ", out_in.LABORATORIO_FABRICANTE, "No encontrado") ;// ###############################
        // ###############################
        // # Output tables

out3 = null;


// # Output table : 'out3'
out3_tmp.NUMERO_FILA = out2.NUMERO_FILA;
out3_tmp.USER_ID = null;
out3_tmp.FORMA_FARMACEUTICA_ID = out2.FORMA_FARMACEUTICA_ID;
out3_tmp.CARACTERISTICA_CONTRATO_ID = null;
out3_tmp.UNIDAD_MEDIDA_ID = out2.UNIDAD_MEDIDA_ID;
out3_tmp.LABORATORIO_ID = out2.LABORATORIO_ID;
out3_tmp.IMPORTADOR_ID = out2.IMPORTADOR_ID;
out3_tmp.ESTADO = out2.ESTADO;
out3_tmp.RESPUESTA = Var.RESPUESTA+Var.RESPUESTA_ERROR;
out3_tmp.CONTRATO = out2.CONTRATO ;
out3_tmp.CARACTERISTICA_CONTRATO = out2.CARACTERISTICA_CONTRATO;
out3_tmp.TIPOLOGIA = out2.TIPOLOGIA ;
out3_tmp.TIPO_PRODUCTO = out2.TIPO_PRODUCTO ;
out3_tmp.ITEM_NO = out2.ITEM_NO;
out3_tmp.CODIGO_SSMP = out2.CODIGO_SSMP ;
out3_tmp.NOMBRE_GENERICO = out2.NOMBRE_GENERICO ;
out3_tmp.PRESENTACION = out2.PRESENTACION ;
out3_tmp.CONCENTRACION = out2.CONCENTRACION ;
out3_tmp.VIA_ADMINISTRACION = out2.VIA_ADMINISTRACION ;
out3_tmp.UNIDAD_DE_MEDIDA = out2.UNIDAD_DE_MEDIDA ;
out3_tmp.ATC = out2.ATC ;
out3_tmp.GRUPO_FARMACOLOGICO = out2.GRUPO_FARMACOLOGICO ;
out3_tmp.CADENA_FRIO = out2.CADENA_FRIO ;
out3_tmp.CODIGO_HOMIC = out2.CODIGO_HOMIC;
out3_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out2.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out3_tmp.LABORATORIO_FABRICANTE = out2.LABORATORIO_FABRICANTE;
out3_tmp.NO_REGISTRO_SANITARIO = out2.NO_REGISTRO_SANITARIO;
out3_tmp.IMPORTADOR_TITULAR = out2.IMPORTADOR_TITULAR;
out3_tmp.CUM = out2.CUM;
out3_tmp.PRECIO = out2.PRECIO;
out3_tmp.OPCION = out2.OPCION;
out3_tmp.TIENE_IVA = out2.TIENE_IVA;
out3_tmp.CODIGO_BARRAS = out2.CODIGO_BARRAS;
out3_tmp.FORMA_FARMACEUTICA = out2.FORMA_FARMACEUTICA;
out3_tmp.UNIDOSIS = out2.UNIDOSIS;
out3_tmp.UNIDAD_MEDIDA = out2.UNIDAD_MEDIDA;
out3_tmp.CANTIDAD_UNIDAD_MEDIDA = out2.CANTIDAD_UNIDAD_MEDIDA;
out3_tmp.CANTIDAD_MINIMA = out2.CANTIDAD_MINIMA;
out3_tmp.CANTIDAD_MAXIMA = out2.CANTIDAD_MAXIMA;
out3_tmp.FECHA_EXPEDICION_REG_INVIMA = out2.FECHA_EXPEDICION_REG_INVIMA;
out3_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out2.FECHA_VENCIMIENTO_REG_INVIMA;
out3_tmp.FECHA_ACTIVO_CUM = out2.FECHA_ACTIVO_CUM;
out3_tmp.FECHA_INACTIVO_CUM = out2.FECHA_INACTIVO_CUM;
out3_tmp.LUGAR_DE_ORIGEN = out2.LUGAR_DE_ORIGEN;
out3_tmp.CARACTERISTICAS = out2.CARACTERISTICAS;
out3_tmp.CONTRAINDICACIONES = out2.CONTRAINDICACIONES;
out3_tmp.EFECTOS_POSTERIOR = out2.EFECTOS_POSTERIOR;
out3_tmp.RIESGOS_ASOCIADOS = out2.RIESGOS_ASOCIADOS;
out3_tmp.DOSIS_PARA_APLICACION = out2.DOSIS_PARA_APLICACION;
out3_tmp.NIT_FABRICANTE = out2.NIT_FABRICANTE;
out3_tmp.NIT_IMPORTADOR = out2.NIT_IMPORTADOR;
out3_tmp.CODIGO_OPERADOR = out2.CODIGO_OPERADOR;
out3_tmp.CODIGO_PROVISIONAL_DE_COMITE = out2.CODIGO_PROVISIONAL_DE_COMITE;
out3_tmp.EXPEDIENTE = out2.EXPEDIENTE;
out3_tmp.CONSECUTIVO = out2.CONSECUTIVO;
out3 = out3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						Impor_nombreStruct Impor_nombre = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "Impor_nombre" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopImpor_nombre = false;
       		  	    	
       		  	    	
 							Impor_nombreStruct Impor_nombreObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    Impor_nombreHashKey.NOMBRE = out3.IMPORTADOR_TITULAR;
                        		    		

								
		                        	Impor_nombreHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_Impor_nombre.lookup( Impor_nombreHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_Impor_nombre != null && tHash_Lookup_Impor_nombre.getCount(Impor_nombreHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'Impor_nombre' and it contains more one result from keys :  Impor_nombre.NOMBRE = '" + Impor_nombreHashKey.NOMBRE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	Impor_nombreStruct fromLookup_Impor_nombre = null;
							Impor_nombre = Impor_nombreDefault;
										 
							
								 
							
							
								if (tHash_Lookup_Impor_nombre !=null && tHash_Lookup_Impor_nombre.hasNext()) { // G 099
								
							
								
								fromLookup_Impor_nombre = tHash_Lookup_Impor_nombre.next();

							
							
								} // G 099
							
							

							if(fromLookup_Impor_nombre != null) {
								Impor_nombre = fromLookup_Impor_nombre;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;
Var.ID = Impor_nombre.ID== null?BigDecimal.ZERO:(BigDecimal)Impor_nombre.ID ;
Var.RESPUESTA = out3.RESPUESTA == null || out3.RESPUESTA.length()==3?"":out3.RESPUESTA ;
Var.RESPUESTA_ERROR = Impor_nombre.ID != null? "" : Utils.manejoErrorGFA( "Importador", out3.IMPORTADOR_TITULAR, "No encontrado") ;// ###############################
        // ###############################
        // # Output tables

out4 = null;


// # Output table : 'out4'
out4_tmp.NUMERO_FILA = out3.NUMERO_FILA;
out4_tmp.USER_ID = null;
out4_tmp.FORMA_FARMACEUTICA_ID = out3.FORMA_FARMACEUTICA_ID;
out4_tmp.CARACTERISTICA_CONTRATO_ID = null;
out4_tmp.UNIDAD_MEDIDA_ID = out3.UNIDAD_MEDIDA_ID;
out4_tmp.LABORATORIO_ID = out3.LABORATORIO_ID;
out4_tmp.IMPORTADOR_ID = Var.ID ;
out4_tmp.ESTADO = out3.ESTADO;
out4_tmp.RESPUESTA = Var.RESPUESTA +  Var.RESPUESTA_ERROR ;
out4_tmp.CONTRATO = out3.CONTRATO ;
out4_tmp.CARACTERISTICA_CONTRATO = out3.CARACTERISTICA_CONTRATO;
out4_tmp.TIPOLOGIA = out3.TIPOLOGIA ;
out4_tmp.TIPO_PRODUCTO = out3.TIPO_PRODUCTO ;
out4_tmp.ITEM_NO = out3.ITEM_NO;
out4_tmp.CODIGO_SSMP = out3.CODIGO_SSMP ;
out4_tmp.NOMBRE_GENERICO = out3.NOMBRE_GENERICO ;
out4_tmp.PRESENTACION = out3.PRESENTACION ;
out4_tmp.CONCENTRACION = out3.CONCENTRACION ;
out4_tmp.VIA_ADMINISTRACION = out3.VIA_ADMINISTRACION ;
out4_tmp.UNIDAD_DE_MEDIDA = out3.UNIDAD_DE_MEDIDA ;
out4_tmp.ATC = out3.ATC ;
out4_tmp.GRUPO_FARMACOLOGICO = out3.GRUPO_FARMACOLOGICO ;
out4_tmp.CADENA_FRIO = out3.CADENA_FRIO ;
out4_tmp.CODIGO_HOMIC = out3.CODIGO_HOMIC;
out4_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out3.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out4_tmp.LABORATORIO_FABRICANTE = out3.LABORATORIO_FABRICANTE;
out4_tmp.NO_REGISTRO_SANITARIO = out3.NO_REGISTRO_SANITARIO;
out4_tmp.IMPORTADOR_TITULAR = out3.IMPORTADOR_TITULAR;
out4_tmp.CUM = out3.CUM;
out4_tmp.PRECIO = out3.PRECIO;
out4_tmp.OPCION = out3.OPCION;
out4_tmp.TIENE_IVA = out3.TIENE_IVA;
out4_tmp.CODIGO_BARRAS = out3.CODIGO_BARRAS;
out4_tmp.FORMA_FARMACEUTICA = out3.FORMA_FARMACEUTICA;
out4_tmp.UNIDOSIS = out3.UNIDOSIS;
out4_tmp.UNIDAD_MEDIDA = out3.UNIDAD_MEDIDA;
out4_tmp.CANTIDAD_UNIDAD_MEDIDA = out3.CANTIDAD_UNIDAD_MEDIDA;
out4_tmp.CANTIDAD_MINIMA = out3.CANTIDAD_MINIMA;
out4_tmp.CANTIDAD_MAXIMA = out3.CANTIDAD_MAXIMA;
out4_tmp.FECHA_EXPEDICION_REG_INVIMA = out3.FECHA_EXPEDICION_REG_INVIMA;
out4_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out3.FECHA_VENCIMIENTO_REG_INVIMA;
out4_tmp.FECHA_ACTIVO_CUM = out3.FECHA_ACTIVO_CUM;
out4_tmp.FECHA_INACTIVO_CUM = out3.FECHA_INACTIVO_CUM;
out4_tmp.LUGAR_DE_ORIGEN = out3.LUGAR_DE_ORIGEN;
out4_tmp.CARACTERISTICAS = out3.CARACTERISTICAS;
out4_tmp.CONTRAINDICACIONES = out3.CONTRAINDICACIONES;
out4_tmp.EFECTOS_POSTERIOR = out3.EFECTOS_POSTERIOR;
out4_tmp.RIESGOS_ASOCIADOS = out3.RIESGOS_ASOCIADOS;
out4_tmp.DOSIS_PARA_APLICACION = out3.DOSIS_PARA_APLICACION;
out4_tmp.NIT_FABRICANTE = out3.NIT_FABRICANTE;
out4_tmp.NIT_IMPORTADOR = out3.NIT_IMPORTADOR;
out4_tmp.CODIGO_OPERADOR = out3.CODIGO_OPERADOR;
out4_tmp.CODIGO_PROVISIONAL_DE_COMITE = out3.CODIGO_PROVISIONAL_DE_COMITE;
out4_tmp.EXPEDIENTE = out3.EXPEDIENTE;
out4_tmp.CONSECUTIVO = out3.CONSECUTIVO;
out4 = out4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						Impor_nitStruct Impor_nit = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "Impor_nit" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLoopImpor_nit = false;
       		  	    	
       		  	    	
 							Impor_nitStruct Impor_nitObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    Impor_nitHashKey.NIT = out4.NIT_IMPORTADOR;
                        		    		

								
		                        	Impor_nitHashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_Impor_nit.lookup( Impor_nitHashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_Impor_nit != null && tHash_Lookup_Impor_nit.getCount(Impor_nitHashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'Impor_nit' and it contains more one result from keys :  Impor_nit.NIT = '" + Impor_nitHashKey.NIT + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	Impor_nitStruct fromLookup_Impor_nit = null;
							Impor_nit = Impor_nitDefault;
										 
							
								 
							
							
								if (tHash_Lookup_Impor_nit !=null && tHash_Lookup_Impor_nit.hasNext()) { // G 099
								
							
								
								fromLookup_Impor_nit = tHash_Lookup_Impor_nit.next();

							
							
								} // G 099
							
							

							if(fromLookup_Impor_nit != null) {
								Impor_nit = fromLookup_Impor_nit;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;
Var.ID = out4.IMPORTADOR_ID!=BigDecimal.ZERO?out4.IMPORTADOR_ID:(Impor_nit.ID== null?BigDecimal.ZERO:(BigDecimal)Impor_nit.ID) ;
Var.RESPUESTA = out4.RESPUESTA == null || out4.RESPUESTA.length()==0?"":out4.RESPUESTA ;
Var.RESPUESTA_ERROR = out4.IMPORTADOR_ID!=BigDecimal.ZERO || Impor_nit.ID!= null ?"":Utils.manejoErrorGFA("Importador NIT", out4.IMPORTADOR_TITULAR, "No encontrado") ;// ###############################
        // ###############################
        // # Output tables

out9 = null;


// # Output table : 'out9'
out9_tmp.NUMERO_FILA = out4.NUMERO_FILA;
out9_tmp.USER_ID = null;
out9_tmp.FORMA_FARMACEUTICA_ID = out4.FORMA_FARMACEUTICA_ID;
out9_tmp.CARACTERISTICA_CONTRATO_ID = null;
out9_tmp.UNIDAD_MEDIDA_ID = out4.UNIDAD_MEDIDA_ID;
out9_tmp.LABORATORIO_ID = out4.LABORATORIO_ID;
out9_tmp.IMPORTADOR_ID = Var.ID ;
out9_tmp.ESTADO = out4.ESTADO;
out9_tmp.RESPUESTA = Var.RESPUESTA + Var.RESPUESTA_ERROR;
out9_tmp.CONTRATO = out4.CONTRATO ;
out9_tmp.CARACTERISTICA_CONTRATO = out4.CARACTERISTICA_CONTRATO;
out9_tmp.TIPOLOGIA = out4.TIPOLOGIA ;
out9_tmp.TIPO_PRODUCTO = out4.TIPO_PRODUCTO ;
out9_tmp.ITEM_NO = out4.ITEM_NO;
out9_tmp.CODIGO_SSMP = out4.CODIGO_SSMP ;
out9_tmp.NOMBRE_GENERICO = out4.NOMBRE_GENERICO ;
out9_tmp.PRESENTACION = out4.PRESENTACION ;
out9_tmp.CONCENTRACION = out4.CONCENTRACION ;
out9_tmp.VIA_ADMINISTRACION = out4.VIA_ADMINISTRACION ;
out9_tmp.UNIDAD_DE_MEDIDA = out4.UNIDAD_DE_MEDIDA ;
out9_tmp.ATC = out4.ATC ;
out9_tmp.GRUPO_FARMACOLOGICO = out4.GRUPO_FARMACOLOGICO ;
out9_tmp.CADENA_FRIO = out4.CADENA_FRIO ;
out9_tmp.CODIGO_HOMIC = out4.CODIGO_HOMIC;
out9_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out4.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out9_tmp.LABORATORIO_FABRICANTE = out4.LABORATORIO_FABRICANTE;
out9_tmp.NO_REGISTRO_SANITARIO = out4.NO_REGISTRO_SANITARIO;
out9_tmp.IMPORTADOR_TITULAR = out4.IMPORTADOR_TITULAR;
out9_tmp.CUM = out4.CUM;
out9_tmp.PRECIO = out4.PRECIO;
out9_tmp.OPCION = out4.OPCION;
out9_tmp.TIENE_IVA = out4.TIENE_IVA;
out9_tmp.CODIGO_BARRAS = out4.CODIGO_BARRAS;
out9_tmp.FORMA_FARMACEUTICA = out4.FORMA_FARMACEUTICA;
out9_tmp.UNIDOSIS = out4.UNIDOSIS;
out9_tmp.UNIDAD_MEDIDA = out4.UNIDAD_MEDIDA;
out9_tmp.CANTIDAD_UNIDAD_MEDIDA = out4.CANTIDAD_UNIDAD_MEDIDA;
out9_tmp.CANTIDAD_MINIMA = out4.CANTIDAD_MINIMA;
out9_tmp.CANTIDAD_MAXIMA = out4.CANTIDAD_MAXIMA;
out9_tmp.FECHA_EXPEDICION_REG_INVIMA = out4.FECHA_EXPEDICION_REG_INVIMA;
out9_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out4.FECHA_VENCIMIENTO_REG_INVIMA;
out9_tmp.FECHA_ACTIVO_CUM = out4.FECHA_ACTIVO_CUM;
out9_tmp.FECHA_INACTIVO_CUM = out4.FECHA_INACTIVO_CUM;
out9_tmp.LUGAR_DE_ORIGEN = out4.LUGAR_DE_ORIGEN;
out9_tmp.CARACTERISTICAS = out4.CARACTERISTICAS;
out9_tmp.CONTRAINDICACIONES = out4.CONTRAINDICACIONES;
out9_tmp.EFECTOS_POSTERIOR = out4.EFECTOS_POSTERIOR;
out9_tmp.RIESGOS_ASOCIADOS = out4.RIESGOS_ASOCIADOS;
out9_tmp.DOSIS_PARA_APLICACION = out4.DOSIS_PARA_APLICACION;
out9_tmp.NIT_FABRICANTE = out4.NIT_FABRICANTE;
out9_tmp.NIT_IMPORTADOR = out4.NIT_IMPORTADOR;
out9_tmp.CODIGO_OPERADOR = out4.CODIGO_OPERADOR;
out9_tmp.CODIGO_PROVISIONAL_DE_COMITE = out4.CODIGO_PROVISIONAL_DE_COMITE;
out9_tmp.EXPEDIENTE = out4.EXPEDIENTE;
out9_tmp.CONSECUTIVO = out4.CONSECUTIVO;
out9 = out9_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "out9"
if(out9 != null) { 



	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;
Var.CARACTERISTICA_CONTRATO = (out9.TIPOLOGIA == null) ||(out9.TIPOLOGIA.length()==0) || (out9.TIPOLOGIA.equals("ACUERDO"))?"ACU":"CTC" ;
Var.TIPO_PRODUCTO = out9.TIPO_PRODUCTO == null || out9.TIPO_PRODUCTO.length()==0?"M":"" ;
Var.CANTIDAD_UNIDAD_MEDIDA = out9.CANTIDAD_UNIDAD_MEDIDA == null || out9.CANTIDAD_UNIDAD_MEDIDA.length()==0?0:Utils.toInteger(out9.CANTIDAD_UNIDAD_MEDIDA,true) ;
Var.CANTIDAD_MINIMA = 0;
Var.CANTIDAD_MAXIMA = 0;
Var.UNIDOSIS = out9.UNIDOSIS == null || out9.UNIDOSIS.length() == 0?"NO":"SI" ;
Var.TIENE_IVA = out9.TIENE_IVA == null || out9.TIENE_IVA.length() == 0?"NO":"SI" ;// ###############################
        // ###############################
        // # Output tables

out10 = null;


// # Output table : 'out10'
out10_tmp.NUMERO_FILA = out9.NUMERO_FILA;
out10_tmp.USER_ID = null;
out10_tmp.FORMA_FARMACEUTICA_ID = out9.FORMA_FARMACEUTICA_ID;
out10_tmp.CARACTERISTICA_CONTRATO_ID = null;
out10_tmp.UNIDAD_MEDIDA_ID = out9.UNIDAD_MEDIDA_ID;
out10_tmp.LABORATORIO_ID = out9.LABORATORIO_ID;
out10_tmp.IMPORTADOR_ID = out9.IMPORTADOR_ID;
out10_tmp.ESTADO = out9.ESTADO;
out10_tmp.RESPUESTA = out9.RESPUESTA;
out10_tmp.CONTRATO = out9.CONTRATO;
out10_tmp.CARACTERISTICA_CONTRATO = Var.CARACTERISTICA_CONTRATO ;
out10_tmp.TIPOLOGIA = out9.TIPOLOGIA;
out10_tmp.TIPO_PRODUCTO = Var.TIPO_PRODUCTO;
out10_tmp.ITEM_NO = out9.ITEM_NO;
out10_tmp.CODIGO_SSMP = out9.CODIGO_SSMP;
out10_tmp.NOMBRE_GENERICO = out9.NOMBRE_GENERICO;
out10_tmp.PRESENTACION = out9.PRESENTACION;
out10_tmp.CONCENTRACION = out9.CONCENTRACION;
out10_tmp.VIA_ADMINISTRACION = out9.VIA_ADMINISTRACION;
out10_tmp.UNIDAD_DE_MEDIDA = out9.UNIDAD_DE_MEDIDA;
out10_tmp.ATC = out9.ATC;
out10_tmp.GRUPO_FARMACOLOGICO = out9.GRUPO_FARMACOLOGICO;
out10_tmp.CADENA_FRIO = out9.CADENA_FRIO;
out10_tmp.CODIGO_HOMIC = out9.CODIGO_HOMIC;
out10_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out9.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
out10_tmp.LABORATORIO_FABRICANTE = out9.LABORATORIO_FABRICANTE;
out10_tmp.NO_REGISTRO_SANITARIO = out9.NO_REGISTRO_SANITARIO;
out10_tmp.IMPORTADOR_TITULAR = out9.IMPORTADOR_TITULAR;
out10_tmp.CUM = out9.CUM;
out10_tmp.PRECIO = out9.PRECIO;
out10_tmp.OPCION = out9.OPCION;
out10_tmp.TIENE_IVA = Var.TIENE_IVA;
out10_tmp.CODIGO_BARRAS = out9.CODIGO_BARRAS;
out10_tmp.FORMA_FARMACEUTICA = out9.FORMA_FARMACEUTICA;
out10_tmp.UNIDOSIS = Var.UNIDOSIS;
out10_tmp.UNIDAD_MEDIDA = out9.UNIDAD_MEDIDA;
out10_tmp.CANTIDAD_UNIDAD_MEDIDA = String.valueOf(Var.CANTIDAD_UNIDAD_MEDIDA );
out10_tmp.CANTIDAD_MINIMA = String.valueOf(Var.CANTIDAD_MINIMA );
out10_tmp.CANTIDAD_MAXIMA = String.valueOf(Var.CANTIDAD_MAXIMA);
out10_tmp.FECHA_EXPEDICION_REG_INVIMA = out9.FECHA_EXPEDICION_REG_INVIMA;
out10_tmp.FECHA_VENCIMIENTO_REG_INVIMA = out9.FECHA_VENCIMIENTO_REG_INVIMA;
out10_tmp.FECHA_ACTIVO_CUM = out9.FECHA_ACTIVO_CUM;
out10_tmp.FECHA_INACTIVO_CUM = out9.FECHA_INACTIVO_CUM;
out10_tmp.LUGAR_DE_ORIGEN = out9.LUGAR_DE_ORIGEN;
out10_tmp.CARACTERISTICAS = out9.CARACTERISTICAS;
out10_tmp.CONTRAINDICACIONES = out9.CONTRAINDICACIONES;
out10_tmp.EFECTOS_POSTERIOR = out9.EFECTOS_POSTERIOR;
out10_tmp.RIESGOS_ASOCIADOS = out9.RIESGOS_ASOCIADOS;
out10_tmp.DOSIS_PARA_APLICACION = out9.DOSIS_PARA_APLICACION;
out10_tmp.NIT_FABRICANTE = out9.NIT_FABRICANTE;
out10_tmp.NIT_IMPORTADOR = out9.NIT_IMPORTADOR;
out10_tmp.CODIGO_OPERADOR = out9.CODIGO_OPERADOR;
out10_tmp.CODIGO_PROVISIONAL_DE_COMITE = out9.CODIGO_PROVISIONAL_DE_COMITE;
out10_tmp.EXPEDIENTE = out9.EXPEDIENTE;
out10_tmp.CONSECUTIVO = out9.CONSECUTIVO;
out10 = out10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "out10"
if(out10 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out10"
						
						);
					}
					

    //Code generate according to input schema and output schema
row11.NUMERO_FILA = out10.NUMERO_FILA;
row11.USER_ID = out10.USER_ID;
row11.FORMA_FARMACEUTICA_ID = out10.FORMA_FARMACEUTICA_ID;
row11.CARACTERISTICA_CONTRATO_ID = out10.CARACTERISTICA_CONTRATO_ID;
row11.UNIDAD_MEDIDA_ID = out10.UNIDAD_MEDIDA_ID;
row11.LABORATORIO_ID = out10.LABORATORIO_ID;
row11.IMPORTADOR_ID = out10.IMPORTADOR_ID;
row11.ESTADO = out10.ESTADO;
row11.RESPUESTA = out10.RESPUESTA;
row11.CONTRATO = out10.CONTRATO;
row11.CARACTERISTICA_CONTRATO = out10.CARACTERISTICA_CONTRATO;
row11.TIPOLOGIA = out10.TIPOLOGIA;
row11.TIPO_PRODUCTO = out10.TIPO_PRODUCTO;
row11.ITEM_NO = out10.ITEM_NO;
row11.CODIGO_SSMP = out10.CODIGO_SSMP;
row11.NOMBRE_GENERICO = out10.NOMBRE_GENERICO;
row11.PRESENTACION = out10.PRESENTACION;
row11.CONCENTRACION = out10.CONCENTRACION;
row11.VIA_ADMINISTRACION = out10.VIA_ADMINISTRACION;
row11.UNIDAD_DE_MEDIDA = out10.UNIDAD_DE_MEDIDA;
row11.ATC = out10.ATC;
row11.GRUPO_FARMACOLOGICO = out10.GRUPO_FARMACOLOGICO;
row11.CADENA_FRIO = out10.CADENA_FRIO;
row11.CODIGO_HOMIC = out10.CODIGO_HOMIC;
row11.NOMBRE_COMERCIAL_PRODUCTO_MARCA = out10.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
row11.LABORATORIO_FABRICANTE = out10.LABORATORIO_FABRICANTE;
row11.NO_REGISTRO_SANITARIO = out10.NO_REGISTRO_SANITARIO;
row11.IMPORTADOR_TITULAR = out10.IMPORTADOR_TITULAR;
row11.CUM = out10.CUM;
row11.PRECIO = out10.PRECIO;
row11.OPCION = out10.OPCION;
row11.TIENE_IVA = out10.TIENE_IVA;
row11.CODIGO_BARRAS = out10.CODIGO_BARRAS;
row11.FORMA_FARMACEUTICA = out10.FORMA_FARMACEUTICA;
row11.UNIDOSIS = out10.UNIDOSIS;
row11.UNIDAD_MEDIDA = out10.UNIDAD_MEDIDA;
row11.CANTIDAD_UNIDAD_MEDIDA = out10.CANTIDAD_UNIDAD_MEDIDA;
row11.CANTIDAD_MINIMA = out10.CANTIDAD_MINIMA;
row11.CANTIDAD_MAXIMA = out10.CANTIDAD_MAXIMA;
row11.FECHA_EXPEDICION_REG_INVIMA = out10.FECHA_EXPEDICION_REG_INVIMA;
row11.FECHA_VENCIMIENTO_REG_INVIMA = out10.FECHA_VENCIMIENTO_REG_INVIMA;
row11.FECHA_ACTIVO_CUM = out10.FECHA_ACTIVO_CUM;
row11.FECHA_INACTIVO_CUM = out10.FECHA_INACTIVO_CUM;
row11.LUGAR_DE_ORIGEN = out10.LUGAR_DE_ORIGEN;
row11.CARACTERISTICAS = out10.CARACTERISTICAS;
row11.CONTRAINDICACIONES = out10.CONTRAINDICACIONES;
row11.EFECTOS_POSTERIOR = out10.EFECTOS_POSTERIOR;
row11.RIESGOS_ASOCIADOS = out10.RIESGOS_ASOCIADOS;
row11.DOSIS_PARA_APLICACION = out10.DOSIS_PARA_APLICACION;
row11.NIT_FABRICANTE = out10.NIT_FABRICANTE;
row11.NIT_IMPORTADOR = out10.NIT_IMPORTADOR;
row11.CODIGO_OPERADOR = out10.CODIGO_OPERADOR;
row11.CODIGO_PROVISIONAL_DE_COMITE = out10.CODIGO_PROVISIONAL_DE_COMITE;
row11.EXPEDIENTE = out10.EXPEDIENTE;
row11.CONSECUTIVO = out10.CONSECUTIVO;


// VALIDACI√ìN CUM 1
if (out10.CUM != null){
	
	String[] cum = Utils.validarCUM(out10.CUM); 
	
	if ( cum != null  ){
		row11.RESPUESTA = out10.RESPUESTA;
		row11.EXPEDIENTE = cum[0];
		row11.CONSECUTIVO = cum[1];
	}
	else { 
		
		if(out10.RESPUESTA == null){				
			row11.RESPUESTA = "Error en campo: CUM (" + out10.CUM + ") No se reconoce formato CUM.";
			}else{
			row11.RESPUESTA = out10.RESPUESTA + " - CUM (" + out10.CUM + ") No se reconoce formato CUM.";
		}
	}
}
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
						row16Struct row16 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_21) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_21 = false;
								
                        		    		    row16HashKey.SIGLA = row11.CARACTERISTICA_CONTRATO;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row16 != null && tHash_Lookup_row16.getCount(row16HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row16' and it contains more one result from keys :  row16.SIGLA = '" + row16HashKey.SIGLA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

outCaracteristicaContrato = null;


// # Output table : 'outCaracteristicaContrato'
outCaracteristicaContrato_tmp.NUMERO_FILA = row11.NUMERO_FILA;
outCaracteristicaContrato_tmp.USER_ID = null;
outCaracteristicaContrato_tmp.FORMA_FARMACEUTICA_ID = row11.FORMA_FARMACEUTICA_ID;
outCaracteristicaContrato_tmp.CARACTERISTICA_CONTRATO_ID = row16.ID;
outCaracteristicaContrato_tmp.UNIDAD_MEDIDA_ID = row11.UNIDAD_MEDIDA_ID;
outCaracteristicaContrato_tmp.LABORATORIO_ID = row11.LABORATORIO_ID;
outCaracteristicaContrato_tmp.IMPORTADOR_ID = row11.IMPORTADOR_ID;
outCaracteristicaContrato_tmp.ESTADO = row11.ESTADO;
outCaracteristicaContrato_tmp.RESPUESTA = row11.RESPUESTA;
outCaracteristicaContrato_tmp.CONTRATO = row11.CONTRATO ;
outCaracteristicaContrato_tmp.CARACTERISTICA_CONTRATO = row11.CARACTERISTICA_CONTRATO;
outCaracteristicaContrato_tmp.TIPOLOGIA = row11.TIPOLOGIA ;
outCaracteristicaContrato_tmp.TIPO_PRODUCTO = row11.TIPO_PRODUCTO ;
outCaracteristicaContrato_tmp.ITEM_NO = row11.ITEM_NO;
outCaracteristicaContrato_tmp.CODIGO_SSMP = row11.CODIGO_SSMP ;
outCaracteristicaContrato_tmp.NOMBRE_GENERICO = row11.NOMBRE_GENERICO ;
outCaracteristicaContrato_tmp.PRESENTACION = row11.PRESENTACION ;
outCaracteristicaContrato_tmp.CONCENTRACION = row11.CONCENTRACION ;
outCaracteristicaContrato_tmp.VIA_ADMINISTRACION = row11.VIA_ADMINISTRACION ;
outCaracteristicaContrato_tmp.UNIDAD_DE_MEDIDA = row11.UNIDAD_DE_MEDIDA ;
outCaracteristicaContrato_tmp.ATC = row11.ATC ;
outCaracteristicaContrato_tmp.GRUPO_FARMACOLOGICO = row11.GRUPO_FARMACOLOGICO ;
outCaracteristicaContrato_tmp.CADENA_FRIO = row11.CADENA_FRIO ;
outCaracteristicaContrato_tmp.CODIGO_HOMIC = row11.CODIGO_HOMIC;
outCaracteristicaContrato_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row11.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outCaracteristicaContrato_tmp.LABORATORIO_FABRICANTE = row11.LABORATORIO_FABRICANTE;
outCaracteristicaContrato_tmp.NO_REGISTRO_SANITARIO = row11.NO_REGISTRO_SANITARIO;
outCaracteristicaContrato_tmp.IMPORTADOR_TITULAR = row11.IMPORTADOR_TITULAR;
outCaracteristicaContrato_tmp.CUM = row11.CUM;
outCaracteristicaContrato_tmp.PRECIO = row11.PRECIO;
outCaracteristicaContrato_tmp.OPCION = row11.OPCION;
outCaracteristicaContrato_tmp.TIENE_IVA = row11.TIENE_IVA;
outCaracteristicaContrato_tmp.CODIGO_BARRAS = row11.CODIGO_BARRAS;
outCaracteristicaContrato_tmp.FORMA_FARMACEUTICA = row11.FORMA_FARMACEUTICA;
outCaracteristicaContrato_tmp.UNIDOSIS = row11.UNIDOSIS;
outCaracteristicaContrato_tmp.UNIDAD_MEDIDA = row11.UNIDAD_MEDIDA;
outCaracteristicaContrato_tmp.CANTIDAD_UNIDAD_MEDIDA = row11.CANTIDAD_UNIDAD_MEDIDA;
outCaracteristicaContrato_tmp.CANTIDAD_MINIMA = row11.CANTIDAD_MINIMA;
outCaracteristicaContrato_tmp.CANTIDAD_MAXIMA = row11.CANTIDAD_MAXIMA;
outCaracteristicaContrato_tmp.FECHA_EXPEDICION_REG_INVIMA = row11.FECHA_EXPEDICION_REG_INVIMA;
outCaracteristicaContrato_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row11.FECHA_VENCIMIENTO_REG_INVIMA;
outCaracteristicaContrato_tmp.FECHA_ACTIVO_CUM = row11.FECHA_ACTIVO_CUM;
outCaracteristicaContrato_tmp.FECHA_INACTIVO_CUM = row11.FECHA_INACTIVO_CUM;
outCaracteristicaContrato_tmp.LUGAR_DE_ORIGEN = row11.LUGAR_DE_ORIGEN;
outCaracteristicaContrato_tmp.CARACTERISTICAS = row11.CARACTERISTICAS;
outCaracteristicaContrato_tmp.CONTRAINDICACIONES = row11.CONTRAINDICACIONES;
outCaracteristicaContrato_tmp.EFECTOS_POSTERIOR = row11.EFECTOS_POSTERIOR;
outCaracteristicaContrato_tmp.RIESGOS_ASOCIADOS = row11.RIESGOS_ASOCIADOS;
outCaracteristicaContrato_tmp.DOSIS_PARA_APLICACION = row11.DOSIS_PARA_APLICACION;
outCaracteristicaContrato_tmp.NIT_FABRICANTE = row11.NIT_FABRICANTE;
outCaracteristicaContrato_tmp.NIT_IMPORTADOR = row11.NIT_IMPORTADOR;
outCaracteristicaContrato_tmp.CODIGO_OPERADOR = row11.CODIGO_OPERADOR;
outCaracteristicaContrato_tmp.CODIGO_PROVISIONAL_DE_COMITE = row11.CODIGO_PROVISIONAL_DE_COMITE;
outCaracteristicaContrato_tmp.EXPEDIENTE = row11.EXPEDIENTE;
outCaracteristicaContrato_tmp.CONSECUTIVO = row11.CONSECUTIVO;
outCaracteristicaContrato = outCaracteristicaContrato_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "outCaracteristicaContrato"
if(outCaracteristicaContrato != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outCaracteristicaContrato"
						
						);
					}
					

    //Code generate according to input schema and output schema
row12.NUMERO_FILA = outCaracteristicaContrato.NUMERO_FILA;
row12.USER_ID = outCaracteristicaContrato.USER_ID;
row12.FORMA_FARMACEUTICA_ID = outCaracteristicaContrato.FORMA_FARMACEUTICA_ID;
row12.CARACTERISTICA_CONTRATO_ID = outCaracteristicaContrato.CARACTERISTICA_CONTRATO_ID;
row12.UNIDAD_MEDIDA_ID = outCaracteristicaContrato.UNIDAD_MEDIDA_ID;
row12.LABORATORIO_ID = outCaracteristicaContrato.LABORATORIO_ID;
row12.IMPORTADOR_ID = outCaracteristicaContrato.IMPORTADOR_ID;
row12.ESTADO = outCaracteristicaContrato.ESTADO;
row12.RESPUESTA = outCaracteristicaContrato.RESPUESTA;
row12.CONTRATO = outCaracteristicaContrato.CONTRATO;
row12.CARACTERISTICA_CONTRATO = outCaracteristicaContrato.CARACTERISTICA_CONTRATO;
row12.TIPOLOGIA = outCaracteristicaContrato.TIPOLOGIA;
row12.TIPO_PRODUCTO = outCaracteristicaContrato.TIPO_PRODUCTO;
row12.ITEM_NO = outCaracteristicaContrato.ITEM_NO;
row12.CODIGO_SSMP = outCaracteristicaContrato.CODIGO_SSMP;
row12.NOMBRE_GENERICO = outCaracteristicaContrato.NOMBRE_GENERICO;
row12.PRESENTACION = outCaracteristicaContrato.PRESENTACION;
row12.CONCENTRACION = outCaracteristicaContrato.CONCENTRACION;
row12.VIA_ADMINISTRACION = outCaracteristicaContrato.VIA_ADMINISTRACION;
row12.UNIDAD_DE_MEDIDA = outCaracteristicaContrato.UNIDAD_DE_MEDIDA;
row12.ATC = outCaracteristicaContrato.ATC;
row12.GRUPO_FARMACOLOGICO = outCaracteristicaContrato.GRUPO_FARMACOLOGICO;
row12.CADENA_FRIO = outCaracteristicaContrato.CADENA_FRIO;
row12.CODIGO_HOMIC = outCaracteristicaContrato.CODIGO_HOMIC;
row12.NOMBRE_COMERCIAL_PRODUCTO_MARCA = outCaracteristicaContrato.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
row12.LABORATORIO_FABRICANTE = outCaracteristicaContrato.LABORATORIO_FABRICANTE;
row12.NO_REGISTRO_SANITARIO = outCaracteristicaContrato.NO_REGISTRO_SANITARIO;
row12.IMPORTADOR_TITULAR = outCaracteristicaContrato.IMPORTADOR_TITULAR;
row12.CUM = outCaracteristicaContrato.CUM;
row12.PRECIO = outCaracteristicaContrato.PRECIO;
row12.OPCION = outCaracteristicaContrato.OPCION;
row12.TIENE_IVA = outCaracteristicaContrato.TIENE_IVA;
row12.CODIGO_BARRAS = outCaracteristicaContrato.CODIGO_BARRAS;
row12.FORMA_FARMACEUTICA = outCaracteristicaContrato.FORMA_FARMACEUTICA;
row12.UNIDOSIS = outCaracteristicaContrato.UNIDOSIS;
row12.UNIDAD_MEDIDA = outCaracteristicaContrato.UNIDAD_MEDIDA;
row12.CANTIDAD_UNIDAD_MEDIDA = outCaracteristicaContrato.CANTIDAD_UNIDAD_MEDIDA;
row12.CANTIDAD_MINIMA = outCaracteristicaContrato.CANTIDAD_MINIMA;
row12.CANTIDAD_MAXIMA = outCaracteristicaContrato.CANTIDAD_MAXIMA;
row12.FECHA_EXPEDICION_REG_INVIMA = outCaracteristicaContrato.FECHA_EXPEDICION_REG_INVIMA;
row12.FECHA_VENCIMIENTO_REG_INVIMA = outCaracteristicaContrato.FECHA_VENCIMIENTO_REG_INVIMA;
row12.FECHA_ACTIVO_CUM = outCaracteristicaContrato.FECHA_ACTIVO_CUM;
row12.FECHA_INACTIVO_CUM = outCaracteristicaContrato.FECHA_INACTIVO_CUM;
row12.LUGAR_DE_ORIGEN = outCaracteristicaContrato.LUGAR_DE_ORIGEN;
row12.CARACTERISTICAS = outCaracteristicaContrato.CARACTERISTICAS;
row12.CONTRAINDICACIONES = outCaracteristicaContrato.CONTRAINDICACIONES;
row12.EFECTOS_POSTERIOR = outCaracteristicaContrato.EFECTOS_POSTERIOR;
row12.RIESGOS_ASOCIADOS = outCaracteristicaContrato.RIESGOS_ASOCIADOS;
row12.DOSIS_PARA_APLICACION = outCaracteristicaContrato.DOSIS_PARA_APLICACION;
row12.NIT_FABRICANTE = outCaracteristicaContrato.NIT_FABRICANTE;
row12.NIT_IMPORTADOR = outCaracteristicaContrato.NIT_IMPORTADOR;
row12.CODIGO_OPERADOR = outCaracteristicaContrato.CODIGO_OPERADOR;
row12.CODIGO_PROVISIONAL_DE_COMITE = outCaracteristicaContrato.CODIGO_PROVISIONAL_DE_COMITE;
row12.EXPEDIENTE = outCaracteristicaContrato.EXPEDIENTE;
row12.CONSECUTIVO = outCaracteristicaContrato.CONSECUTIVO;


row12.USER_ID = Utils.toInteger(context.userId, false);

if(row12.CARACTERISTICA_CONTRATO_ID != null){	
	row12.CARACTERISTICA_CONTRATO_ID = row12.CARACTERISTICA_CONTRATO_ID.intValue();
}else{
	row12.CARACTERISTICA_CONTRATO_ID =0;
	row12.RESPUESTA = Utils.mensajeErrorGfa( "Tipolog√≠a de contrato", "admite √∫nicamente los valores (ACUERDO; CTC Y TUTELAS)", "",0,row12.RESPUESTA, row12.NOMBRE_COMERCIAL_PRODUCTO_MARCA);
}

// Conversi√≥n precio en contrato 1
if(row12.PRECIO == null){
	row12.RESPUESTA = Utils.mensajeErrorGfa( "Precio de producto en contrato", "Debe ser campo obligatorio", "", 1,row12.RESPUESTA, row12.NOMBRE_COMERCIAL_PRODUCTO_MARCA);
}else{
	row12.PRECIO = Utils.validarValor(row12.PRECIO);
}

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

    //Code generate according to input schema and output schema
row22.NUMERO_FILA = row12.NUMERO_FILA;
row22.USER_ID = row12.USER_ID;
row22.FORMA_FARMACEUTICA_ID = row12.FORMA_FARMACEUTICA_ID;
row22.CARACTERISTICA_CONTRATO_ID = row12.CARACTERISTICA_CONTRATO_ID;
row22.UNIDAD_MEDIDA_ID = row12.UNIDAD_MEDIDA_ID;
row22.LABORATORIO_ID = row12.LABORATORIO_ID;
row22.IMPORTADOR_ID = row12.IMPORTADOR_ID;
row22.ESTADO = row12.ESTADO;
row22.RESPUESTA = row12.RESPUESTA;
row22.CONTRATO = row12.CONTRATO;
row22.CARACTERISTICA_CONTRATO = row12.CARACTERISTICA_CONTRATO;
row22.TIPOLOGIA = row12.TIPOLOGIA;
row22.TIPO_PRODUCTO = row12.TIPO_PRODUCTO;
row22.ITEM_NO = row12.ITEM_NO;
row22.CODIGO_SSMP = row12.CODIGO_SSMP;
row22.NOMBRE_GENERICO = row12.NOMBRE_GENERICO;
row22.PRESENTACION = row12.PRESENTACION;
row22.CONCENTRACION = row12.CONCENTRACION;
row22.VIA_ADMINISTRACION = row12.VIA_ADMINISTRACION;
row22.UNIDAD_DE_MEDIDA = row12.UNIDAD_DE_MEDIDA;
row22.ATC = row12.ATC;
row22.GRUPO_FARMACOLOGICO = row12.GRUPO_FARMACOLOGICO;
row22.CADENA_FRIO = row12.CADENA_FRIO;
row22.CODIGO_HOMIC = row12.CODIGO_HOMIC;
row22.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row12.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
row22.LABORATORIO_FABRICANTE = row12.LABORATORIO_FABRICANTE;
row22.NO_REGISTRO_SANITARIO = row12.NO_REGISTRO_SANITARIO;
row22.IMPORTADOR_TITULAR = row12.IMPORTADOR_TITULAR;
row22.CUM = row12.CUM;
row22.PRECIO = row12.PRECIO;
row22.OPCION = row12.OPCION;
row22.TIENE_IVA = row12.TIENE_IVA;
row22.CODIGO_BARRAS = row12.CODIGO_BARRAS;
row22.FORMA_FARMACEUTICA = row12.FORMA_FARMACEUTICA;
row22.UNIDOSIS = row12.UNIDOSIS;
row22.UNIDAD_MEDIDA = row12.UNIDAD_MEDIDA;
row22.CANTIDAD_UNIDAD_MEDIDA = row12.CANTIDAD_UNIDAD_MEDIDA;
row22.CANTIDAD_MINIMA = row12.CANTIDAD_MINIMA;
row22.CANTIDAD_MAXIMA = row12.CANTIDAD_MAXIMA;
row22.FECHA_EXPEDICION_REG_INVIMA = row12.FECHA_EXPEDICION_REG_INVIMA;
row22.FECHA_VENCIMIENTO_REG_INVIMA = row12.FECHA_VENCIMIENTO_REG_INVIMA;
row22.FECHA_ACTIVO_CUM = row12.FECHA_ACTIVO_CUM;
row22.FECHA_INACTIVO_CUM = row12.FECHA_INACTIVO_CUM;
row22.LUGAR_DE_ORIGEN = row12.LUGAR_DE_ORIGEN;
row22.CARACTERISTICAS = row12.CARACTERISTICAS;
row22.CONTRAINDICACIONES = row12.CONTRAINDICACIONES;
row22.EFECTOS_POSTERIOR = row12.EFECTOS_POSTERIOR;
row22.RIESGOS_ASOCIADOS = row12.RIESGOS_ASOCIADOS;
row22.DOSIS_PARA_APLICACION = row12.DOSIS_PARA_APLICACION;
row22.NIT_FABRICANTE = row12.NIT_FABRICANTE;
row22.NIT_IMPORTADOR = row12.NIT_IMPORTADOR;
row22.CODIGO_OPERADOR = row12.CODIGO_OPERADOR;
row22.CODIGO_PROVISIONAL_DE_COMITE = row12.CODIGO_PROVISIONAL_DE_COMITE;
row22.EXPEDIENTE = row12.EXPEDIENTE;
row22.CONSECUTIVO = row12.CONSECUTIVO;

if(row22.ESTADO == null){
	if(
		(row22.FORMA_FARMACEUTICA!=null && row22.FORMA_FARMACEUTICA.length()>0)&&
		(row22.NOMBRE_COMERCIAL_PRODUCTO_MARCA!=null && row22.NOMBRE_COMERCIAL_PRODUCTO_MARCA.length()>0)&&
		(row22.CUM  !=null && row22.CUM.length()>0)&&
		(row22.PRECIO  !=null && row22.PRECIO.length()>0)
	){
		row22.ESTADO="Correcto";
	}else{
	
		row22.RESPUESTA =row22.RESPUESTA +  " | " + Utils.manejoErrorGFA("No cuenta con todos los campos requeridos", "", "Datos Incompletos");
		row22.ESTADO="Erroneo";
	}
}
    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_53 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_53";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

          row28 = null;
          row24 = null;
    Operator_tFilterRow_53 ope_tFilterRow_53 = new Operator_tFilterRow_53("&&");
      ope_tFilterRow_53.matches((// code sample : use row22 to define the condition.
// row22.columnName1.equals("foo") ||!(row22.columnName2.equals("bar"))
// replace the following expression by your own filter condition 
row22.ESTADO.equals("Correcto")
			), "advanced condition failed");
    
    if (ope_tFilterRow_53.getMatchFlag()) {
              if(row24 == null){ 
                row24 = new row24Struct();
              }
               row24.NUMERO_FILA = row22.NUMERO_FILA;
               row24.USER_ID = row22.USER_ID;
               row24.FORMA_FARMACEUTICA_ID = row22.FORMA_FARMACEUTICA_ID;
               row24.CARACTERISTICA_CONTRATO_ID = row22.CARACTERISTICA_CONTRATO_ID;
               row24.UNIDAD_MEDIDA_ID = row22.UNIDAD_MEDIDA_ID;
               row24.LABORATORIO_ID = row22.LABORATORIO_ID;
               row24.IMPORTADOR_ID = row22.IMPORTADOR_ID;
               row24.ESTADO = row22.ESTADO;
               row24.RESPUESTA = row22.RESPUESTA;
               row24.CONTRATO = row22.CONTRATO;
               row24.CARACTERISTICA_CONTRATO = row22.CARACTERISTICA_CONTRATO;
               row24.TIPOLOGIA = row22.TIPOLOGIA;
               row24.TIPO_PRODUCTO = row22.TIPO_PRODUCTO;
               row24.ITEM_NO = row22.ITEM_NO;
               row24.CODIGO_SSMP = row22.CODIGO_SSMP;
               row24.NOMBRE_GENERICO = row22.NOMBRE_GENERICO;
               row24.PRESENTACION = row22.PRESENTACION;
               row24.CONCENTRACION = row22.CONCENTRACION;
               row24.VIA_ADMINISTRACION = row22.VIA_ADMINISTRACION;
               row24.UNIDAD_DE_MEDIDA = row22.UNIDAD_DE_MEDIDA;
               row24.ATC = row22.ATC;
               row24.GRUPO_FARMACOLOGICO = row22.GRUPO_FARMACOLOGICO;
               row24.CADENA_FRIO = row22.CADENA_FRIO;
               row24.CODIGO_HOMIC = row22.CODIGO_HOMIC;
               row24.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row22.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
               row24.LABORATORIO_FABRICANTE = row22.LABORATORIO_FABRICANTE;
               row24.NO_REGISTRO_SANITARIO = row22.NO_REGISTRO_SANITARIO;
               row24.IMPORTADOR_TITULAR = row22.IMPORTADOR_TITULAR;
               row24.CUM = row22.CUM;
               row24.PRECIO = row22.PRECIO;
               row24.OPCION = row22.OPCION;
               row24.TIENE_IVA = row22.TIENE_IVA;
               row24.CODIGO_BARRAS = row22.CODIGO_BARRAS;
               row24.FORMA_FARMACEUTICA = row22.FORMA_FARMACEUTICA;
               row24.UNIDOSIS = row22.UNIDOSIS;
               row24.UNIDAD_MEDIDA = row22.UNIDAD_MEDIDA;
               row24.CANTIDAD_UNIDAD_MEDIDA = row22.CANTIDAD_UNIDAD_MEDIDA;
               row24.CANTIDAD_MINIMA = row22.CANTIDAD_MINIMA;
               row24.CANTIDAD_MAXIMA = row22.CANTIDAD_MAXIMA;
               row24.FECHA_EXPEDICION_REG_INVIMA = row22.FECHA_EXPEDICION_REG_INVIMA;
               row24.FECHA_VENCIMIENTO_REG_INVIMA = row22.FECHA_VENCIMIENTO_REG_INVIMA;
               row24.FECHA_ACTIVO_CUM = row22.FECHA_ACTIVO_CUM;
               row24.FECHA_INACTIVO_CUM = row22.FECHA_INACTIVO_CUM;
               row24.LUGAR_DE_ORIGEN = row22.LUGAR_DE_ORIGEN;
               row24.CARACTERISTICAS = row22.CARACTERISTICAS;
               row24.CONTRAINDICACIONES = row22.CONTRAINDICACIONES;
               row24.EFECTOS_POSTERIOR = row22.EFECTOS_POSTERIOR;
               row24.RIESGOS_ASOCIADOS = row22.RIESGOS_ASOCIADOS;
               row24.DOSIS_PARA_APLICACION = row22.DOSIS_PARA_APLICACION;
               row24.NIT_FABRICANTE = row22.NIT_FABRICANTE;
               row24.NIT_IMPORTADOR = row22.NIT_IMPORTADOR;
               row24.CODIGO_OPERADOR = row22.CODIGO_OPERADOR;
               row24.CODIGO_PROVISIONAL_DE_COMITE = row22.CODIGO_PROVISIONAL_DE_COMITE;
               row24.EXPEDIENTE = row22.EXPEDIENTE;
               row24.CONSECUTIVO = row22.CONSECUTIVO;    
      nb_line_ok_tFilterRow_53++;
    } else {
            if (row28 == null){
              row28 = new row28Struct();
            }
                row28.NUMERO_FILA = row22.NUMERO_FILA;
                row28.USER_ID = row22.USER_ID;
                row28.FORMA_FARMACEUTICA_ID = row22.FORMA_FARMACEUTICA_ID;
                row28.CARACTERISTICA_CONTRATO_ID = row22.CARACTERISTICA_CONTRATO_ID;
                row28.UNIDAD_MEDIDA_ID = row22.UNIDAD_MEDIDA_ID;
                row28.LABORATORIO_ID = row22.LABORATORIO_ID;
                row28.IMPORTADOR_ID = row22.IMPORTADOR_ID;
                row28.ESTADO = row22.ESTADO;
                row28.RESPUESTA = row22.RESPUESTA;
                row28.CONTRATO = row22.CONTRATO;
                row28.CARACTERISTICA_CONTRATO = row22.CARACTERISTICA_CONTRATO;
                row28.TIPOLOGIA = row22.TIPOLOGIA;
                row28.TIPO_PRODUCTO = row22.TIPO_PRODUCTO;
                row28.ITEM_NO = row22.ITEM_NO;
                row28.CODIGO_SSMP = row22.CODIGO_SSMP;
                row28.NOMBRE_GENERICO = row22.NOMBRE_GENERICO;
                row28.PRESENTACION = row22.PRESENTACION;
                row28.CONCENTRACION = row22.CONCENTRACION;
                row28.VIA_ADMINISTRACION = row22.VIA_ADMINISTRACION;
                row28.UNIDAD_DE_MEDIDA = row22.UNIDAD_DE_MEDIDA;
                row28.ATC = row22.ATC;
                row28.GRUPO_FARMACOLOGICO = row22.GRUPO_FARMACOLOGICO;
                row28.CADENA_FRIO = row22.CADENA_FRIO;
                row28.CODIGO_HOMIC = row22.CODIGO_HOMIC;
                row28.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row22.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
                row28.LABORATORIO_FABRICANTE = row22.LABORATORIO_FABRICANTE;
                row28.NO_REGISTRO_SANITARIO = row22.NO_REGISTRO_SANITARIO;
                row28.IMPORTADOR_TITULAR = row22.IMPORTADOR_TITULAR;
                row28.CUM = row22.CUM;
                row28.PRECIO = row22.PRECIO;
                row28.OPCION = row22.OPCION;
                row28.TIENE_IVA = row22.TIENE_IVA;
                row28.CODIGO_BARRAS = row22.CODIGO_BARRAS;
                row28.FORMA_FARMACEUTICA = row22.FORMA_FARMACEUTICA;
                row28.UNIDOSIS = row22.UNIDOSIS;
                row28.UNIDAD_MEDIDA = row22.UNIDAD_MEDIDA;
                row28.CANTIDAD_UNIDAD_MEDIDA = row22.CANTIDAD_UNIDAD_MEDIDA;
                row28.CANTIDAD_MINIMA = row22.CANTIDAD_MINIMA;
                row28.CANTIDAD_MAXIMA = row22.CANTIDAD_MAXIMA;
                row28.FECHA_EXPEDICION_REG_INVIMA = row22.FECHA_EXPEDICION_REG_INVIMA;
                row28.FECHA_VENCIMIENTO_REG_INVIMA = row22.FECHA_VENCIMIENTO_REG_INVIMA;
                row28.FECHA_ACTIVO_CUM = row22.FECHA_ACTIVO_CUM;
                row28.FECHA_INACTIVO_CUM = row22.FECHA_INACTIVO_CUM;
                row28.LUGAR_DE_ORIGEN = row22.LUGAR_DE_ORIGEN;
                row28.CARACTERISTICAS = row22.CARACTERISTICAS;
                row28.CONTRAINDICACIONES = row22.CONTRAINDICACIONES;
                row28.EFECTOS_POSTERIOR = row22.EFECTOS_POSTERIOR;
                row28.RIESGOS_ASOCIADOS = row22.RIESGOS_ASOCIADOS;
                row28.DOSIS_PARA_APLICACION = row22.DOSIS_PARA_APLICACION;
                row28.NIT_FABRICANTE = row22.NIT_FABRICANTE;
                row28.NIT_IMPORTADOR = row22.NIT_IMPORTADOR;
                row28.CODIGO_OPERADOR = row22.CODIGO_OPERADOR;
                row28.CODIGO_PROVISIONAL_DE_COMITE = row22.CODIGO_PROVISIONAL_DE_COMITE;
                row28.EXPEDIENTE = row22.EXPEDIENTE;
                row28.CONSECUTIVO = row22.CONSECUTIVO;
      nb_line_reject_tFilterRow_53++;
    }

nb_line_tFilterRow_53++;

 


	tos_count_tFilterRow_53++;

/**
 * [tFilterRow_53 main ] stop
 */
	
	/**
	 * [tFilterRow_53 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_53";
	
	

 



/**
 * [tFilterRow_53 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;
Var.PRECIO = row24.PRECIO!=null && row24.PRECIO.length()>0?row24.PRECIO:"0" ;// ###############################
        // ###############################
        // # Output tables

outProducto1 = null;


// # Output table : 'outProducto1'
outProducto1_tmp.User_Id_ = Integer.parseInt(context.userId);
outProducto1_tmp.Caracteristica_contrato_id_ = row24.CARACTERISTICA_CONTRATO_ID ;
outProducto1_tmp.Importador_Id_ = row24.IMPORTADOR_ID ;
outProducto1_tmp.Fabricante_Id_ = row24.LABORATORIO_ID ;
outProducto1_tmp.Formas_Farma_Id_ = row24.FORMA_FARMACEUTICA_ID ;
outProducto1_tmp.ESTADO_ = row24.ESTADO ;
outProducto1_tmp.RESPUESTA_ = row24.RESPUESTA ;
outProducto1_tmp.UMedida_Id_ = row24.UNIDAD_MEDIDA_ID ;
outProducto1_tmp.Cant_Minima_ = Integer.parseInt(row24.CANTIDAD_MINIMA) ;
outProducto1_tmp.Cant_Maxima_ = Integer.parseInt(row24.CANTIDAD_MAXIMA) ;
outProducto1_tmp.Expediente_ = row24.EXPEDIENTE ;
outProducto1_tmp.Consecutivo_ = row24.CONSECUTIVO ;
outProducto1_tmp.Cant_UMedida_ = Integer.parseInt(row24.CANTIDAD_UNIDAD_MEDIDA) ;
outProducto1_tmp.Precio_ = Double.parseDouble(Var.PRECIO) ;
outProducto1_tmp.Opcion_ = Integer.parseInt(row24.OPCION );
outProducto1_tmp.CodigoContrato_ = row24.CONTRATO ;
outProducto1_tmp.TIPOLOGIA = row24.TIPOLOGIA;
outProducto1_tmp.TIPO_PRODUCTO = row24.TIPO_PRODUCTO;
outProducto1_tmp.ITEM_No_ = row24.ITEM_NO ;
outProducto1_tmp.CODIGO_SSMP = row24.CODIGO_SSMP;
outProducto1_tmp.NOMBRE_GENERICO = row24.NOMBRE_GENERICO;
outProducto1_tmp.PRESENTACION = row24.PRESENTACION;
outProducto1_tmp.Concentracion_ = row24.CONCENTRACION ;
outProducto1_tmp.VIA_ADMINISTRACION = row24.VIA_ADMINISTRACION;
outProducto1_tmp.UNIDAD_DE_MEDIDA = row24.UNIDAD_DE_MEDIDA;
outProducto1_tmp.ATC = row24.ATC;
outProducto1_tmp.GRUPO_FARMACOLOGICO = row24.GRUPO_FARMACOLOGICO;
outProducto1_tmp.CADENA_FRIO = row24.CADENA_FRIO;
outProducto1_tmp.Codigo_Homic_ = row24.CODIGO_HOMIC ;
outProducto1_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row24.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outProducto1_tmp.LABORATORIO_FABRICANTE = row24.LABORATORIO_FABRICANTE;
outProducto1_tmp.Reg_Invima_ = row24.NO_REGISTRO_SANITARIO ;
outProducto1_tmp.IMPORTADOR_TITULAR = row24.IMPORTADOR_TITULAR;
outProducto1_tmp.CUM = row24.CUM;
outProducto1_tmp.PRECIO = row24.PRECIO;
outProducto1_tmp.OPCION = row24.OPCION;
outProducto1_tmp.Tiene_Iva_ = row24.TIENE_IVA ;
outProducto1_tmp.Cod_Barras_ = row24.CODIGO_BARRAS ;
outProducto1_tmp.Formas_Farma_ = row24.FORMA_FARMACEUTICA ;
outProducto1_tmp.Unidosis_ = row24.UNIDOSIS ;
outProducto1_tmp.UNIDAD_MEDIDA = row24.UNIDAD_MEDIDA;
outProducto1_tmp.CANTIDAD_UNIDAD_MEDIDA = row24.CANTIDAD_UNIDAD_MEDIDA;
outProducto1_tmp.CANTIDAD_MINIMA = row24.CANTIDAD_MINIMA;
outProducto1_tmp.CANTIDAD_MAXIMA = row24.CANTIDAD_MAXIMA;
outProducto1_tmp.F_Expedicion_ = row24.FECHA_EXPEDICION_REG_INVIMA ;
outProducto1_tmp.F_Vencimiento_ = row24.FECHA_VENCIMIENTO_REG_INVIMA ;
outProducto1_tmp.F_Activo_Cum_ = row24.FECHA_ACTIVO_CUM ;
outProducto1_tmp.F_Inactivo_Cum_ = row24.FECHA_INACTIVO_CUM ;
outProducto1_tmp.Origen_ = row24.LUGAR_DE_ORIGEN ;
outProducto1_tmp.Caracteristicas_producto_ = row24.CARACTERISTICAS ;
outProducto1_tmp.Contraindicaciones_ = row24.CONTRAINDICACIONES ;
outProducto1_tmp.Efectos_ = row24.EFECTOS_POSTERIOR ;
outProducto1_tmp.Riesgos_ = row24.RIESGOS_ASOCIADOS ;
outProducto1_tmp.Dosis_ = row24.DOSIS_PARA_APLICACION ;
outProducto1_tmp.NIT_FABRICANTE = row24.NIT_FABRICANTE;
outProducto1_tmp.NIT_IMPORTADOR = row24.NIT_IMPORTADOR;
outProducto1_tmp.codigo_operador_ = row24.CODIGO_OPERADOR ;
outProducto1_tmp.codigo_provisional_ = row24.CODIGO_PROVISIONAL_DE_COMITE ;
outProducto1_tmp.numeroFila = row24.NUMERO_FILA ;
outProducto1_tmp.item_contrato_ = Integer.parseInt(row24.ITEM_NO) ;
outProducto1 = outProducto1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "outProducto1"
if(outProducto1 != null) { 



	
	/**
	 * [tOracleSP_4 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outProducto1"
						
						);
					}
					

			// code for the argument 1 (User_Id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.User_Id_ == null) {
    						statement_tOracleSP_4.setNull(1, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(1, outProducto1.User_Id_);
    					}
    					
			// code for the argument 2 (item_contrato_) of type 'IN AUTOMAPPING'
    					if (outProducto1.item_contrato_ == null) {
    						statement_tOracleSP_4.setNull(2, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(2, outProducto1.item_contrato_);
    					}
    					
			// code for the argument 3 (Cod_Barras_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Cod_Barras_ == null) {
    						statement_tOracleSP_4.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(3, outProducto1.Cod_Barras_);
    					}
    					
			// code for the argument 4 (NOMBRE_COMERCIAL_PRODUCTO_MARCA) of type 'IN AUTOMAPPING'
    					if (outProducto1.NOMBRE_COMERCIAL_PRODUCTO_MARCA == null) {
    						statement_tOracleSP_4.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(4, outProducto1.NOMBRE_COMERCIAL_PRODUCTO_MARCA);
    					}
    					
			// code for the argument 5 (Formas_Farma_Id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Formas_Farma_Id_ == null) {
    						statement_tOracleSP_4.setNull(5, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(5, outProducto1.Formas_Farma_Id_);
    					}
    					
			// code for the argument 6 (Unidosis_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Unidosis_ == null) {
    						statement_tOracleSP_4.setNull(6, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(6, outProducto1.Unidosis_);
    					}
    					
			// code for the argument 7 (UMedida_Id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.UMedida_Id_ == null) {
    						statement_tOracleSP_4.setNull(7, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(7, outProducto1.UMedida_Id_);
    					}
    					
			// code for the argument 8 (Cant_UMedida_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Cant_UMedida_ == null) {
    						statement_tOracleSP_4.setNull(8, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(8, outProducto1.Cant_UMedida_);
    					}
    					
			// code for the argument 9 (Cant_Minima_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Cant_Minima_ == null) {
    						statement_tOracleSP_4.setNull(9, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(9, outProducto1.Cant_Minima_);
    					}
    					
			// code for the argument 10 (Reg_Invima_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Reg_Invima_ == null) {
    						statement_tOracleSP_4.setNull(10, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(10, outProducto1.Reg_Invima_);
    					}
    					
			// code for the argument 11 (F_Expedicion_) of type 'IN AUTOMAPPING'
    					if (outProducto1.F_Expedicion_ == null) {
    						statement_tOracleSP_4.setNull(11, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(11, outProducto1.F_Expedicion_);
    					}
    					
			// code for the argument 12 (F_Vencimiento_) of type 'IN AUTOMAPPING'
    					if (outProducto1.F_Vencimiento_ == null) {
    						statement_tOracleSP_4.setNull(12, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(12, outProducto1.F_Vencimiento_);
    					}
    					
			// code for the argument 13 (F_Activo_Cum_) of type 'IN AUTOMAPPING'
    					if (outProducto1.F_Activo_Cum_ == null) {
    						statement_tOracleSP_4.setNull(13, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(13, outProducto1.F_Activo_Cum_);
    					}
    					
			// code for the argument 14 (F_Inactivo_Cum_) of type 'IN AUTOMAPPING'
    					if (outProducto1.F_Inactivo_Cum_ == null) {
    						statement_tOracleSP_4.setNull(14, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(14, outProducto1.F_Inactivo_Cum_);
    					}
    					
			// code for the argument 15 (Expediente_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Expediente_ == null) {
    						statement_tOracleSP_4.setNull(15, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(15, outProducto1.Expediente_);
    					}
    					
			// code for the argument 16 (Consecutivo_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Consecutivo_ == null) {
    						statement_tOracleSP_4.setNull(16, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(16, outProducto1.Consecutivo_);
    					}
    					
			// code for the argument 17 (Origen_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Origen_ == null) {
    						statement_tOracleSP_4.setNull(17, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(17, outProducto1.Origen_);
    					}
    					
			// code for the argument 18 (Caracteristicas_producto_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Caracteristicas_producto_ == null) {
    						statement_tOracleSP_4.setNull(18, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(18, outProducto1.Caracteristicas_producto_);
    					}
    					
			// code for the argument 19 (Caracteristica_contrato_id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Caracteristica_contrato_id_ == null) {
    						statement_tOracleSP_4.setNull(19, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(19, outProducto1.Caracteristica_contrato_id_);
    					}
    					
			// code for the argument 20 (F_Inactivo_Cum_) of type 'IN AUTOMAPPING'
    					if (outProducto1.F_Inactivo_Cum_ == null) {
    						statement_tOracleSP_4.setNull(20, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(20, outProducto1.F_Inactivo_Cum_);
    					}
    					
			// code for the argument 21 (Efectos_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Efectos_ == null) {
    						statement_tOracleSP_4.setNull(21, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(21, outProducto1.Efectos_);
    					}
    					
			// code for the argument 22 (Riesgos_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Riesgos_ == null) {
    						statement_tOracleSP_4.setNull(22, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(22, outProducto1.Riesgos_);
    					}
    					
			// code for the argument 23 (Dosis_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Dosis_ == null) {
    						statement_tOracleSP_4.setNull(23, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(23, outProducto1.Dosis_);
    					}
    					
			// code for the argument 24 (Fabricante_Id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Fabricante_Id_ == null) {
    						statement_tOracleSP_4.setNull(24, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(24, outProducto1.Fabricante_Id_);
    					}
    					
			// code for the argument 25 (Importador_Id_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Importador_Id_ == null) {
    						statement_tOracleSP_4.setNull(25, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(25, outProducto1.Importador_Id_);
    					}
    					
			// code for the argument 26 (CodigoContrato_) of type 'IN AUTOMAPPING'
    					if (outProducto1.CodigoContrato_ == null) {
    						statement_tOracleSP_4.setNull(26, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(26, outProducto1.CodigoContrato_);
    					}
    					
			// code for the argument 27 (Precio_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Precio_ == null) {
    						statement_tOracleSP_4.setNull(27, java.sql.Types.DOUBLE);
    					} else {
    					
                        statement_tOracleSP_4.setDouble(27, outProducto1.Precio_);
    					}
    					
			// code for the argument 28 (Opcion_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Opcion_ == null) {
    						statement_tOracleSP_4.setNull(28, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(28, outProducto1.Opcion_);
    					}
    					
			// code for the argument 29 (Tiene_Iva_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Tiene_Iva_ == null) {
    						statement_tOracleSP_4.setNull(29, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(29, outProducto1.Tiene_Iva_);
    					}
    					
			// code for the argument 30 (Codigo_Homic_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Codigo_Homic_ == null) {
    						statement_tOracleSP_4.setNull(30, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(30, outProducto1.Codigo_Homic_);
    					}
    					
			// code for the argument 31 (Cant_Maxima_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Cant_Maxima_ == null) {
    						statement_tOracleSP_4.setNull(31, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(31, outProducto1.Cant_Maxima_);
    					}
    					
			// code for the argument 32 (Formas_Farma_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Formas_Farma_ == null) {
    						statement_tOracleSP_4.setNull(32, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(32, outProducto1.Formas_Farma_);
    					}
    					
			// code for the argument 33 (Concentracion_) of type 'IN AUTOMAPPING'
    					if (outProducto1.Concentracion_ == null) {
    						statement_tOracleSP_4.setNull(33, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(33, outProducto1.Concentracion_);
    					}
    					
			// code for the argument 34 (codigo_operador_) of type 'IN AUTOMAPPING'
    					if (outProducto1.codigo_operador_ == null) {
    						statement_tOracleSP_4.setNull(34, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(34, outProducto1.codigo_operador_);
    					}
    					
			// code for the argument 35 (codigo_provisional_) of type 'IN AUTOMAPPING'
    					if (outProducto1.codigo_provisional_ == null) {
    						statement_tOracleSP_4.setNull(35, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(35, outProducto1.codigo_provisional_);
    					}
    					
			// code for the argument 36 (ESTADO_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(36, java.sql.Types.VARCHAR);
			// code for the argument 37 (RESPUESTA_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(37, java.sql.Types.VARCHAR);
		statement_tOracleSP_4.execute();
		
								row21.User_Id_ = outProducto1.User_Id_;
								
								row21.Caracteristica_contrato_id_ = outProducto1.Caracteristica_contrato_id_;
								
								row21.Importador_Id_ = outProducto1.Importador_Id_;
								
								row21.Fabricante_Id_ = outProducto1.Fabricante_Id_;
								
								row21.Formas_Farma_Id_ = outProducto1.Formas_Farma_Id_;
								
									row21.ESTADO_ = statement_tOracleSP_4.getString(36);
									
									if (statement_tOracleSP_4.wasNull()) {
										row21.ESTADO_ = null;
									}
									
									row21.RESPUESTA_ = statement_tOracleSP_4.getString(37);
									
									if (statement_tOracleSP_4.wasNull()) {
										row21.RESPUESTA_ = null;
									}
									
								row21.UMedida_Id_ = outProducto1.UMedida_Id_;
								
								row21.Cant_Minima_ = outProducto1.Cant_Minima_;
								
								row21.Cant_Maxima_ = outProducto1.Cant_Maxima_;
								
								row21.Expediente_ = outProducto1.Expediente_;
								
								row21.Consecutivo_ = outProducto1.Consecutivo_;
								
								row21.Cant_UMedida_ = outProducto1.Cant_UMedida_;
								
								row21.Precio_ = outProducto1.Precio_;
								
								row21.Opcion_ = outProducto1.Opcion_;
								
								row21.CodigoContrato_ = outProducto1.CodigoContrato_;
								
										row21.TIPOLOGIA = outProducto1.TIPOLOGIA;
										
										row21.TIPO_PRODUCTO = outProducto1.TIPO_PRODUCTO;
										
										row21.ITEM_No_ = outProducto1.ITEM_No_;
										
										row21.CODIGO_SSMP = outProducto1.CODIGO_SSMP;
										
										row21.NOMBRE_GENERICO = outProducto1.NOMBRE_GENERICO;
										
										row21.PRESENTACION = outProducto1.PRESENTACION;
										
								row21.Concentracion_ = outProducto1.Concentracion_;
								
										row21.VIA_ADMINISTRACION = outProducto1.VIA_ADMINISTRACION;
										
										row21.UNIDAD_DE_MEDIDA = outProducto1.UNIDAD_DE_MEDIDA;
										
										row21.ATC = outProducto1.ATC;
										
										row21.GRUPO_FARMACOLOGICO = outProducto1.GRUPO_FARMACOLOGICO;
										
										row21.CADENA_FRIO = outProducto1.CADENA_FRIO;
										
								row21.Codigo_Homic_ = outProducto1.Codigo_Homic_;
								
								row21.NOMBRE_COMERCIAL_PRODUCTO_MARCA = outProducto1.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
								
										row21.LABORATORIO_FABRICANTE = outProducto1.LABORATORIO_FABRICANTE;
										
								row21.Reg_Invima_ = outProducto1.Reg_Invima_;
								
										row21.IMPORTADOR_TITULAR = outProducto1.IMPORTADOR_TITULAR;
										
										row21.CUM = outProducto1.CUM;
										
										row21.PRECIO = outProducto1.PRECIO;
										
										row21.OPCION = outProducto1.OPCION;
										
								row21.Tiene_Iva_ = outProducto1.Tiene_Iva_;
								
								row21.Cod_Barras_ = outProducto1.Cod_Barras_;
								
								row21.Formas_Farma_ = outProducto1.Formas_Farma_;
								
								row21.Unidosis_ = outProducto1.Unidosis_;
								
										row21.UNIDAD_MEDIDA = outProducto1.UNIDAD_MEDIDA;
										
										row21.CANTIDAD_UNIDAD_MEDIDA = outProducto1.CANTIDAD_UNIDAD_MEDIDA;
										
										row21.CANTIDAD_MINIMA = outProducto1.CANTIDAD_MINIMA;
										
										row21.CANTIDAD_MAXIMA = outProducto1.CANTIDAD_MAXIMA;
										
								row21.F_Expedicion_ = outProducto1.F_Expedicion_;
								
								row21.F_Vencimiento_ = outProducto1.F_Vencimiento_;
								
								row21.F_Activo_Cum_ = outProducto1.F_Activo_Cum_;
								
								row21.F_Inactivo_Cum_ = outProducto1.F_Inactivo_Cum_;
								
								row21.Origen_ = outProducto1.Origen_;
								
								row21.Caracteristicas_producto_ = outProducto1.Caracteristicas_producto_;
								
										row21.Contraindicaciones_ = outProducto1.Contraindicaciones_;
										
								row21.Efectos_ = outProducto1.Efectos_;
								
								row21.Riesgos_ = outProducto1.Riesgos_;
								
								row21.Dosis_ = outProducto1.Dosis_;
								
										row21.NIT_FABRICANTE = outProducto1.NIT_FABRICANTE;
										
										row21.NIT_IMPORTADOR = outProducto1.NIT_IMPORTADOR;
										
								row21.codigo_operador_ = outProducto1.codigo_operador_;
								
								row21.codigo_provisional_ = outProducto1.codigo_provisional_;
								
										row21.numeroFila = outProducto1.numeroFila;
										
								row21.item_contrato_ = outProducto1.item_contrato_;
								

 


	tos_count_tOracleSP_4++;

/**
 * [tOracleSP_4 main ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_58 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_58";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

          row31 = null;
    Operator_tFilterRow_58 ope_tFilterRow_58 = new Operator_tFilterRow_58("&&");
      ope_tFilterRow_58.matches((// code sample : use row21 to define the condition.
// row21.columnName1.equals("foo") ||!(row21.columnName2.equals("bar"))
// replace the following expression by your own filter condition 
row21.ESTADO_.contains("Error") || row21.ESTADO_.contains("Correcto")), "advanced condition failed");
    
    if (ope_tFilterRow_58.getMatchFlag()) {
              if(row31 == null){ 
                row31 = new row31Struct();
              }
               row31.User_Id_ = row21.User_Id_;
               row31.Caracteristica_contrato_id_ = row21.Caracteristica_contrato_id_;
               row31.Importador_Id_ = row21.Importador_Id_;
               row31.Fabricante_Id_ = row21.Fabricante_Id_;
               row31.Formas_Farma_Id_ = row21.Formas_Farma_Id_;
               row31.ESTADO_ = row21.ESTADO_;
               row31.RESPUESTA_ = row21.RESPUESTA_;
               row31.UMedida_Id_ = row21.UMedida_Id_;
               row31.Cant_Minima_ = row21.Cant_Minima_;
               row31.Cant_Maxima_ = row21.Cant_Maxima_;
               row31.Expediente_ = row21.Expediente_;
               row31.Consecutivo_ = row21.Consecutivo_;
               row31.Cant_UMedida_ = row21.Cant_UMedida_;
               row31.Precio_ = row21.Precio_;
               row31.Opcion_ = row21.Opcion_;
               row31.CodigoContrato_ = row21.CodigoContrato_;
               row31.TIPOLOGIA = row21.TIPOLOGIA;
               row31.TIPO_PRODUCTO = row21.TIPO_PRODUCTO;
               row31.ITEM_No_ = row21.ITEM_No_;
               row31.CODIGO_SSMP = row21.CODIGO_SSMP;
               row31.NOMBRE_GENERICO = row21.NOMBRE_GENERICO;
               row31.PRESENTACION = row21.PRESENTACION;
               row31.Concentracion_ = row21.Concentracion_;
               row31.VIA_ADMINISTRACION = row21.VIA_ADMINISTRACION;
               row31.UNIDAD_DE_MEDIDA = row21.UNIDAD_DE_MEDIDA;
               row31.ATC = row21.ATC;
               row31.GRUPO_FARMACOLOGICO = row21.GRUPO_FARMACOLOGICO;
               row31.CADENA_FRIO = row21.CADENA_FRIO;
               row31.Codigo_Homic_ = row21.Codigo_Homic_;
               row31.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row21.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
               row31.LABORATORIO_FABRICANTE = row21.LABORATORIO_FABRICANTE;
               row31.Reg_Invima_ = row21.Reg_Invima_;
               row31.IMPORTADOR_TITULAR = row21.IMPORTADOR_TITULAR;
               row31.CUM = row21.CUM;
               row31.PRECIO = row21.PRECIO;
               row31.OPCION = row21.OPCION;
               row31.Tiene_Iva_ = row21.Tiene_Iva_;
               row31.Cod_Barras_ = row21.Cod_Barras_;
               row31.Formas_Farma_ = row21.Formas_Farma_;
               row31.Unidosis_ = row21.Unidosis_;
               row31.UNIDAD_MEDIDA = row21.UNIDAD_MEDIDA;
               row31.CANTIDAD_UNIDAD_MEDIDA = row21.CANTIDAD_UNIDAD_MEDIDA;
               row31.CANTIDAD_MINIMA = row21.CANTIDAD_MINIMA;
               row31.CANTIDAD_MAXIMA = row21.CANTIDAD_MAXIMA;
               row31.F_Expedicion_ = row21.F_Expedicion_;
               row31.F_Vencimiento_ = row21.F_Vencimiento_;
               row31.F_Activo_Cum_ = row21.F_Activo_Cum_;
               row31.F_Inactivo_Cum_ = row21.F_Inactivo_Cum_;
               row31.Origen_ = row21.Origen_;
               row31.Caracteristicas_producto_ = row21.Caracteristicas_producto_;
               row31.Contraindicaciones_ = row21.Contraindicaciones_;
               row31.Efectos_ = row21.Efectos_;
               row31.Riesgos_ = row21.Riesgos_;
               row31.Dosis_ = row21.Dosis_;
               row31.NIT_FABRICANTE = row21.NIT_FABRICANTE;
               row31.NIT_IMPORTADOR = row21.NIT_IMPORTADOR;
               row31.codigo_operador_ = row21.codigo_operador_;
               row31.codigo_provisional_ = row21.codigo_provisional_;
               row31.numeroFila = row21.numeroFila;
               row31.item_contrato_ = row21.item_contrato_;    
      nb_line_ok_tFilterRow_58++;
    } else {
      nb_line_reject_tFilterRow_58++;
    }

nb_line_tFilterRow_58++;

 


	tos_count_tFilterRow_58++;

/**
 * [tFilterRow_58 main ] stop
 */
	
	/**
	 * [tFilterRow_58 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_58";
	
	

 



/**
 * [tFilterRow_58 process_data_begin ] stop
 */
// Start of branch "row31"
if(row31 != null) { 



	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

outErroresPL = null;


// # Output table : 'outErroresPL'
outErroresPL_tmp.ESTADO_ = row31.ESTADO_ ;
outErroresPL_tmp.RESPUESTA_ = row31.RESPUESTA_ ;
outErroresPL_tmp.numeroFila = row31.numeroFila ;
outErroresPL_tmp.CONTRATO = row31.CodigoContrato_ ;
outErroresPL_tmp.TIPOLOGIA = row31.TIPOLOGIA ;
outErroresPL_tmp.TIPO_PRODUCTO = row31.TIPO_PRODUCTO ;
outErroresPL_tmp.ITEM_No_ = row31.ITEM_No_ ;
outErroresPL_tmp.CODIGO_SSMP = row31.CODIGO_SSMP ;
outErroresPL_tmp.NOMBRE_GENERICO = row31.NOMBRE_GENERICO ;
outErroresPL_tmp.PRESENTACION = row31.PRESENTACION ;
outErroresPL_tmp.CONCENTRACION = row31.Concentracion_ ;
outErroresPL_tmp.VIA_ADMINISTRACION = row31.VIA_ADMINISTRACION ;
outErroresPL_tmp.UNIDAD_DE_MEDIDA = row31.UNIDAD_DE_MEDIDA ;
outErroresPL_tmp.ATC = row31.ATC ;
outErroresPL_tmp.GRUPO_FARMACOLOGICO = row31.GRUPO_FARMACOLOGICO ;
outErroresPL_tmp.CADENA_FRIO = row31.CADENA_FRIO ;
outErroresPL_tmp.CODIGO_HOMIC = row31.Codigo_Homic_ ;
outErroresPL_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row31.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outErroresPL_tmp.LABORATORIO_FABRICANTE = row31.LABORATORIO_FABRICANTE ;
outErroresPL_tmp.NO_REGISTRO_SANITARIO = row31.Reg_Invima_ ;
outErroresPL_tmp.IMPORTADOR_TITULAR = row31.IMPORTADOR_TITULAR;
outErroresPL_tmp.CUM = row31.CUM;
outErroresPL_tmp.PRECIO = row31.PRECIO;
outErroresPL_tmp.OPCION = row31.OPCION;
outErroresPL_tmp.TIENE_IVA = row31.Tiene_Iva_ ;
outErroresPL_tmp.CODIGO_BARRAS = row31.Cod_Barras_ ;
outErroresPL_tmp.FORMA_FARMACEUTICA = row31.Formas_Farma_ ;
outErroresPL_tmp.UNIDOSIS = row31.Unidosis_ ;
outErroresPL_tmp.UNIDAD_MEDIDA = row31.UNIDAD_MEDIDA;
outErroresPL_tmp.CANTIDAD_UNIDAD_MEDIDA = row31.CANTIDAD_UNIDAD_MEDIDA;
outErroresPL_tmp.CANTIDAD_MINIMA = row31.CANTIDAD_MINIMA;
outErroresPL_tmp.CANTIDAD_MAXIMA = row31.CANTIDAD_MAXIMA;
outErroresPL_tmp.FECHA_EXPEDICION_REG_INVIMA = row31.F_Expedicion_ ;
outErroresPL_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row31.F_Vencimiento_ ;
outErroresPL_tmp.FECHA_ACTIVO_CUM = row31.F_Activo_Cum_ ;
outErroresPL_tmp.FECHA_INACTIVO_CUM = row31.F_Inactivo_Cum_ ;
outErroresPL_tmp.LUGAR_DE_ORIGEN = row31.Origen_ ;
outErroresPL_tmp.CARACTERISTICAS = row31.Caracteristicas_producto_ ;
outErroresPL_tmp.CONTRAINDICACIONES = row31.Contraindicaciones_ ;
outErroresPL_tmp.EFECTOS_POSTERIOR = row31.Efectos_ ;
outErroresPL_tmp.RIESGOS_ASOCIADOS = row31.Riesgos_ ;
outErroresPL_tmp.DOSIS_PARA_APLICACION = row31.Dosis_ ;
outErroresPL_tmp.NIT_FABRICANTE = row31.NIT_FABRICANTE;
outErroresPL_tmp.NIT_IMPORTADOR = row31.NIT_IMPORTADOR;
outErroresPL_tmp.CODIGO_OPERADOR = row31.codigo_operador_ ;
outErroresPL_tmp.CODIGO_PROVISIONAL_DE_COMITE = row31.codigo_provisional_ ;
outErroresPL = outErroresPL_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "outErroresPL"
if(outErroresPL != null) { 



	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"outErroresPL"
									
							);
						}
						
//////////
 

// for output
			row35 = new row35Struct();
								
			row35.ESTADO_ = outErroresPL.ESTADO_;								
			row35.RESPUESTA_ = outErroresPL.RESPUESTA_;								
			row35.numeroFila = outErroresPL.numeroFila;								
			row35.CONTRATO = outErroresPL.CONTRATO;								
			row35.TIPOLOGIA = outErroresPL.TIPOLOGIA;								
			row35.TIPO_PRODUCTO = outErroresPL.TIPO_PRODUCTO;								
			row35.ITEM_No_ = outErroresPL.ITEM_No_;								
			row35.CODIGO_SSMP = outErroresPL.CODIGO_SSMP;								
			row35.NOMBRE_GENERICO = outErroresPL.NOMBRE_GENERICO;								
			row35.PRESENTACION = outErroresPL.PRESENTACION;								
			row35.CONCENTRACION = outErroresPL.CONCENTRACION;								
			row35.VIA_ADMINISTRACION = outErroresPL.VIA_ADMINISTRACION;								
			row35.UNIDAD_DE_MEDIDA = outErroresPL.UNIDAD_DE_MEDIDA;								
			row35.ATC = outErroresPL.ATC;								
			row35.GRUPO_FARMACOLOGICO = outErroresPL.GRUPO_FARMACOLOGICO;								
			row35.CADENA_FRIO = outErroresPL.CADENA_FRIO;								
			row35.CODIGO_HOMIC = outErroresPL.CODIGO_HOMIC;								
			row35.NOMBRE_COMERCIAL_PRODUCTO_MARCA = outErroresPL.NOMBRE_COMERCIAL_PRODUCTO_MARCA;								
			row35.LABORATORIO_FABRICANTE = outErroresPL.LABORATORIO_FABRICANTE;								
			row35.NO_REGISTRO_SANITARIO = outErroresPL.NO_REGISTRO_SANITARIO;								
			row35.IMPORTADOR_TITULAR = outErroresPL.IMPORTADOR_TITULAR;								
			row35.CUM = outErroresPL.CUM;								
			row35.PRECIO = outErroresPL.PRECIO;								
			row35.OPCION = outErroresPL.OPCION;								
			row35.TIENE_IVA = outErroresPL.TIENE_IVA;								
			row35.CODIGO_BARRAS = outErroresPL.CODIGO_BARRAS;								
			row35.FORMA_FARMACEUTICA = outErroresPL.FORMA_FARMACEUTICA;								
			row35.UNIDOSIS = outErroresPL.UNIDOSIS;								
			row35.UNIDAD_MEDIDA = outErroresPL.UNIDAD_MEDIDA;								
			row35.CANTIDAD_UNIDAD_MEDIDA = outErroresPL.CANTIDAD_UNIDAD_MEDIDA;								
			row35.CANTIDAD_MINIMA = outErroresPL.CANTIDAD_MINIMA;								
			row35.CANTIDAD_MAXIMA = outErroresPL.CANTIDAD_MAXIMA;								
			row35.FECHA_EXPEDICION_REG_INVIMA = outErroresPL.FECHA_EXPEDICION_REG_INVIMA;								
			row35.FECHA_VENCIMIENTO_REG_INVIMA = outErroresPL.FECHA_VENCIMIENTO_REG_INVIMA;								
			row35.FECHA_ACTIVO_CUM = outErroresPL.FECHA_ACTIVO_CUM;								
			row35.FECHA_INACTIVO_CUM = outErroresPL.FECHA_INACTIVO_CUM;								
			row35.LUGAR_DE_ORIGEN = outErroresPL.LUGAR_DE_ORIGEN;								
			row35.CARACTERISTICAS = outErroresPL.CARACTERISTICAS;								
			row35.CONTRAINDICACIONES = outErroresPL.CONTRAINDICACIONES;								
			row35.EFECTOS_POSTERIOR = outErroresPL.EFECTOS_POSTERIOR;								
			row35.RIESGOS_ASOCIADOS = outErroresPL.RIESGOS_ASOCIADOS;								
			row35.DOSIS_PARA_APLICACION = outErroresPL.DOSIS_PARA_APLICACION;								
			row35.NIT_FABRICANTE = outErroresPL.NIT_FABRICANTE;								
			row35.NIT_IMPORTADOR = outErroresPL.NIT_IMPORTADOR;								
			row35.CODIGO_OPERADOR = outErroresPL.CODIGO_OPERADOR;								
			row35.CODIGO_PROVISIONAL_DE_COMITE = outErroresPL.CODIGO_PROVISIONAL_DE_COMITE;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					



	Comparablerow35Struct arrayRowtSortRow_1_SortOut = new Comparablerow35Struct();

	arrayRowtSortRow_1_SortOut.ESTADO_ = row35.ESTADO_;
	arrayRowtSortRow_1_SortOut.RESPUESTA_ = row35.RESPUESTA_;
	arrayRowtSortRow_1_SortOut.numeroFila = row35.numeroFila;
	arrayRowtSortRow_1_SortOut.CONTRATO = row35.CONTRATO;
	arrayRowtSortRow_1_SortOut.TIPOLOGIA = row35.TIPOLOGIA;
	arrayRowtSortRow_1_SortOut.TIPO_PRODUCTO = row35.TIPO_PRODUCTO;
	arrayRowtSortRow_1_SortOut.ITEM_No_ = row35.ITEM_No_;
	arrayRowtSortRow_1_SortOut.CODIGO_SSMP = row35.CODIGO_SSMP;
	arrayRowtSortRow_1_SortOut.NOMBRE_GENERICO = row35.NOMBRE_GENERICO;
	arrayRowtSortRow_1_SortOut.PRESENTACION = row35.PRESENTACION;
	arrayRowtSortRow_1_SortOut.CONCENTRACION = row35.CONCENTRACION;
	arrayRowtSortRow_1_SortOut.VIA_ADMINISTRACION = row35.VIA_ADMINISTRACION;
	arrayRowtSortRow_1_SortOut.UNIDAD_DE_MEDIDA = row35.UNIDAD_DE_MEDIDA;
	arrayRowtSortRow_1_SortOut.ATC = row35.ATC;
	arrayRowtSortRow_1_SortOut.GRUPO_FARMACOLOGICO = row35.GRUPO_FARMACOLOGICO;
	arrayRowtSortRow_1_SortOut.CADENA_FRIO = row35.CADENA_FRIO;
	arrayRowtSortRow_1_SortOut.CODIGO_HOMIC = row35.CODIGO_HOMIC;
	arrayRowtSortRow_1_SortOut.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row35.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	arrayRowtSortRow_1_SortOut.LABORATORIO_FABRICANTE = row35.LABORATORIO_FABRICANTE;
	arrayRowtSortRow_1_SortOut.NO_REGISTRO_SANITARIO = row35.NO_REGISTRO_SANITARIO;
	arrayRowtSortRow_1_SortOut.IMPORTADOR_TITULAR = row35.IMPORTADOR_TITULAR;
	arrayRowtSortRow_1_SortOut.CUM = row35.CUM;
	arrayRowtSortRow_1_SortOut.PRECIO = row35.PRECIO;
	arrayRowtSortRow_1_SortOut.OPCION = row35.OPCION;
	arrayRowtSortRow_1_SortOut.TIENE_IVA = row35.TIENE_IVA;
	arrayRowtSortRow_1_SortOut.CODIGO_BARRAS = row35.CODIGO_BARRAS;
	arrayRowtSortRow_1_SortOut.FORMA_FARMACEUTICA = row35.FORMA_FARMACEUTICA;
	arrayRowtSortRow_1_SortOut.UNIDOSIS = row35.UNIDOSIS;
	arrayRowtSortRow_1_SortOut.UNIDAD_MEDIDA = row35.UNIDAD_MEDIDA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_UNIDAD_MEDIDA = row35.CANTIDAD_UNIDAD_MEDIDA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_MINIMA = row35.CANTIDAD_MINIMA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_MAXIMA = row35.CANTIDAD_MAXIMA;
	arrayRowtSortRow_1_SortOut.FECHA_EXPEDICION_REG_INVIMA = row35.FECHA_EXPEDICION_REG_INVIMA;
	arrayRowtSortRow_1_SortOut.FECHA_VENCIMIENTO_REG_INVIMA = row35.FECHA_VENCIMIENTO_REG_INVIMA;
	arrayRowtSortRow_1_SortOut.FECHA_ACTIVO_CUM = row35.FECHA_ACTIVO_CUM;
	arrayRowtSortRow_1_SortOut.FECHA_INACTIVO_CUM = row35.FECHA_INACTIVO_CUM;
	arrayRowtSortRow_1_SortOut.LUGAR_DE_ORIGEN = row35.LUGAR_DE_ORIGEN;
	arrayRowtSortRow_1_SortOut.CARACTERISTICAS = row35.CARACTERISTICAS;
	arrayRowtSortRow_1_SortOut.CONTRAINDICACIONES = row35.CONTRAINDICACIONES;
	arrayRowtSortRow_1_SortOut.EFECTOS_POSTERIOR = row35.EFECTOS_POSTERIOR;
	arrayRowtSortRow_1_SortOut.RIESGOS_ASOCIADOS = row35.RIESGOS_ASOCIADOS;
	arrayRowtSortRow_1_SortOut.DOSIS_PARA_APLICACION = row35.DOSIS_PARA_APLICACION;
	arrayRowtSortRow_1_SortOut.NIT_FABRICANTE = row35.NIT_FABRICANTE;
	arrayRowtSortRow_1_SortOut.NIT_IMPORTADOR = row35.NIT_IMPORTADOR;
	arrayRowtSortRow_1_SortOut.CODIGO_OPERADOR = row35.CODIGO_OPERADOR;
	arrayRowtSortRow_1_SortOut.CODIGO_PROVISIONAL_DE_COMITE = row35.CODIGO_PROVISIONAL_DE_COMITE;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */

} // End of branch "outErroresPL"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */

} // End of branch "row31"




	
	/**
	 * [tFilterRow_58 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_58";
	
	

 



/**
 * [tFilterRow_58 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_end ] stop
 */

} // End of branch "outProducto1"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




// Start of branch "row28"
if(row28 != null) { 



	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

outErroneos = null;


// # Output table : 'outErroneos'
outErroneos_tmp.ESTADO_ = row28.ESTADO;
outErroneos_tmp.RESPUESTA_ = row28.RESPUESTA;
outErroneos_tmp.numeroFila = row28.NUMERO_FILA ;
outErroneos_tmp.CONTRATO = row28.CONTRATO ;
outErroneos_tmp.TIPOLOGIA = row28.TIPOLOGIA ;
outErroneos_tmp.TIPO_PRODUCTO = row28.TIPO_PRODUCTO ;
outErroneos_tmp.ITEM_No_ = row28.ITEM_NO;
outErroneos_tmp.CODIGO_SSMP = row28.CODIGO_SSMP ;
outErroneos_tmp.NOMBRE_GENERICO = row28.NOMBRE_GENERICO ;
outErroneos_tmp.PRESENTACION = row28.PRESENTACION ;
outErroneos_tmp.CONCENTRACION = row28.CONCENTRACION ;
outErroneos_tmp.VIA_ADMINISTRACION = row28.VIA_ADMINISTRACION ;
outErroneos_tmp.UNIDAD_DE_MEDIDA = row28.UNIDAD_DE_MEDIDA ;
outErroneos_tmp.ATC = row28.ATC ;
outErroneos_tmp.GRUPO_FARMACOLOGICO = row28.GRUPO_FARMACOLOGICO ;
outErroneos_tmp.CADENA_FRIO = row28.CADENA_FRIO ;
outErroneos_tmp.CODIGO_HOMIC = row28.CODIGO_HOMIC;
outErroneos_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row28.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outErroneos_tmp.LABORATORIO_FABRICANTE = row28.LABORATORIO_FABRICANTE;
outErroneos_tmp.NO_REGISTRO_SANITARIO = row28.NO_REGISTRO_SANITARIO;
outErroneos_tmp.IMPORTADOR_TITULAR = row28.IMPORTADOR_TITULAR;
outErroneos_tmp.CUM = row28.CUM;
outErroneos_tmp.PRECIO = row28.PRECIO;
outErroneos_tmp.OPCION = row28.OPCION;
outErroneos_tmp.TIENE_IVA = row28.TIENE_IVA;
outErroneos_tmp.CODIGO_BARRAS = row28.CODIGO_BARRAS;
outErroneos_tmp.FORMA_FARMACEUTICA = row28.FORMA_FARMACEUTICA;
outErroneos_tmp.UNIDOSIS = row28.UNIDOSIS;
outErroneos_tmp.UNIDAD_MEDIDA = row28.UNIDAD_MEDIDA;
outErroneos_tmp.CANTIDAD_UNIDAD_MEDIDA = row28.CANTIDAD_UNIDAD_MEDIDA;
outErroneos_tmp.CANTIDAD_MINIMA = row28.CANTIDAD_MINIMA;
outErroneos_tmp.CANTIDAD_MAXIMA = row28.CANTIDAD_MAXIMA;
outErroneos_tmp.FECHA_EXPEDICION_REG_INVIMA = row28.FECHA_EXPEDICION_REG_INVIMA;
outErroneos_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row28.FECHA_VENCIMIENTO_REG_INVIMA;
outErroneos_tmp.FECHA_ACTIVO_CUM = row28.FECHA_ACTIVO_CUM;
outErroneos_tmp.FECHA_INACTIVO_CUM = row28.FECHA_INACTIVO_CUM;
outErroneos_tmp.LUGAR_DE_ORIGEN = row28.LUGAR_DE_ORIGEN;
outErroneos_tmp.CARACTERISTICAS = row28.CARACTERISTICAS;
outErroneos_tmp.CONTRAINDICACIONES = row28.CONTRAINDICACIONES;
outErroneos_tmp.EFECTOS_POSTERIOR = row28.EFECTOS_POSTERIOR;
outErroneos_tmp.RIESGOS_ASOCIADOS = row28.RIESGOS_ASOCIADOS;
outErroneos_tmp.DOSIS_PARA_APLICACION = row28.DOSIS_PARA_APLICACION;
outErroneos_tmp.NIT_FABRICANTE = row28.NIT_FABRICANTE;
outErroneos_tmp.NIT_IMPORTADOR = row28.NIT_IMPORTADOR;
outErroneos_tmp.CODIGO_OPERADOR = row28.CODIGO_OPERADOR;
outErroneos_tmp.CODIGO_PROVISIONAL_DE_COMITE = row28.CODIGO_PROVISIONAL_DE_COMITE;
outErroneos = outErroneos_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "outErroneos"
if(outErroneos != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outErroneos"
						
						);
					}
					



    
		outErroneosStruct oneRow_tHashOutput_2 = new outErroneosStruct();
				
					oneRow_tHashOutput_2.ESTADO_ = outErroneos.ESTADO_;
					oneRow_tHashOutput_2.RESPUESTA_ = outErroneos.RESPUESTA_;
					oneRow_tHashOutput_2.numeroFila = outErroneos.numeroFila;
					oneRow_tHashOutput_2.CONTRATO = outErroneos.CONTRATO;
					oneRow_tHashOutput_2.TIPOLOGIA = outErroneos.TIPOLOGIA;
					oneRow_tHashOutput_2.TIPO_PRODUCTO = outErroneos.TIPO_PRODUCTO;
					oneRow_tHashOutput_2.ITEM_No_ = outErroneos.ITEM_No_;
					oneRow_tHashOutput_2.CODIGO_SSMP = outErroneos.CODIGO_SSMP;
					oneRow_tHashOutput_2.NOMBRE_GENERICO = outErroneos.NOMBRE_GENERICO;
					oneRow_tHashOutput_2.PRESENTACION = outErroneos.PRESENTACION;
					oneRow_tHashOutput_2.CONCENTRACION = outErroneos.CONCENTRACION;
					oneRow_tHashOutput_2.VIA_ADMINISTRACION = outErroneos.VIA_ADMINISTRACION;
					oneRow_tHashOutput_2.UNIDAD_DE_MEDIDA = outErroneos.UNIDAD_DE_MEDIDA;
					oneRow_tHashOutput_2.ATC = outErroneos.ATC;
					oneRow_tHashOutput_2.GRUPO_FARMACOLOGICO = outErroneos.GRUPO_FARMACOLOGICO;
					oneRow_tHashOutput_2.CADENA_FRIO = outErroneos.CADENA_FRIO;
					oneRow_tHashOutput_2.CODIGO_HOMIC = outErroneos.CODIGO_HOMIC;
					oneRow_tHashOutput_2.NOMBRE_COMERCIAL_PRODUCTO_MARCA = outErroneos.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
					oneRow_tHashOutput_2.LABORATORIO_FABRICANTE = outErroneos.LABORATORIO_FABRICANTE;
					oneRow_tHashOutput_2.NO_REGISTRO_SANITARIO = outErroneos.NO_REGISTRO_SANITARIO;
					oneRow_tHashOutput_2.IMPORTADOR_TITULAR = outErroneos.IMPORTADOR_TITULAR;
					oneRow_tHashOutput_2.CUM = outErroneos.CUM;
					oneRow_tHashOutput_2.PRECIO = outErroneos.PRECIO;
					oneRow_tHashOutput_2.OPCION = outErroneos.OPCION;
					oneRow_tHashOutput_2.TIENE_IVA = outErroneos.TIENE_IVA;
					oneRow_tHashOutput_2.CODIGO_BARRAS = outErroneos.CODIGO_BARRAS;
					oneRow_tHashOutput_2.FORMA_FARMACEUTICA = outErroneos.FORMA_FARMACEUTICA;
					oneRow_tHashOutput_2.UNIDOSIS = outErroneos.UNIDOSIS;
					oneRow_tHashOutput_2.UNIDAD_MEDIDA = outErroneos.UNIDAD_MEDIDA;
					oneRow_tHashOutput_2.CANTIDAD_UNIDAD_MEDIDA = outErroneos.CANTIDAD_UNIDAD_MEDIDA;
					oneRow_tHashOutput_2.CANTIDAD_MINIMA = outErroneos.CANTIDAD_MINIMA;
					oneRow_tHashOutput_2.CANTIDAD_MAXIMA = outErroneos.CANTIDAD_MAXIMA;
					oneRow_tHashOutput_2.FECHA_EXPEDICION_REG_INVIMA = outErroneos.FECHA_EXPEDICION_REG_INVIMA;
					oneRow_tHashOutput_2.FECHA_VENCIMIENTO_REG_INVIMA = outErroneos.FECHA_VENCIMIENTO_REG_INVIMA;
					oneRow_tHashOutput_2.FECHA_ACTIVO_CUM = outErroneos.FECHA_ACTIVO_CUM;
					oneRow_tHashOutput_2.FECHA_INACTIVO_CUM = outErroneos.FECHA_INACTIVO_CUM;
					oneRow_tHashOutput_2.LUGAR_DE_ORIGEN = outErroneos.LUGAR_DE_ORIGEN;
					oneRow_tHashOutput_2.CARACTERISTICAS = outErroneos.CARACTERISTICAS;
					oneRow_tHashOutput_2.CONTRAINDICACIONES = outErroneos.CONTRAINDICACIONES;
					oneRow_tHashOutput_2.EFECTOS_POSTERIOR = outErroneos.EFECTOS_POSTERIOR;
					oneRow_tHashOutput_2.RIESGOS_ASOCIADOS = outErroneos.RIESGOS_ASOCIADOS;
					oneRow_tHashOutput_2.DOSIS_PARA_APLICACION = outErroneos.DOSIS_PARA_APLICACION;
					oneRow_tHashOutput_2.NIT_FABRICANTE = outErroneos.NIT_FABRICANTE;
					oneRow_tHashOutput_2.NIT_IMPORTADOR = outErroneos.NIT_IMPORTADOR;
					oneRow_tHashOutput_2.CODIGO_OPERADOR = outErroneos.CODIGO_OPERADOR;
					oneRow_tHashOutput_2.CODIGO_PROVISIONAL_DE_COMITE = outErroneos.CODIGO_PROVISIONAL_DE_COMITE;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "outErroneos"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */

} // End of branch "row28"




	
	/**
	 * [tFilterRow_53 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_53";
	
	

 



/**
 * [tFilterRow_53 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "outCaracteristicaContrato"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "out10"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */

} // End of branch "out9"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "out3"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */

} // End of branch "out2"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "out_in"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "out0"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "row8"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    		
    		mf_tHashInput_14.clearCache("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_5");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_Medida != null) {
						tHash_Lookup_Medida.endGet();
					}
					globalMap.remove( "tHash_Lookup_Medida" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out0");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_Fabr_ID != null) {
						tHash_Lookup_Fabr_ID.endGet();
					}
					globalMap.remove( "tHash_Lookup_Fabr_ID" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out_in");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_Fabr_nit != null) {
						tHash_Lookup_Fabr_nit.endGet();
					}
					globalMap.remove( "tHash_Lookup_Fabr_nit" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out2");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_Impor_nombre != null) {
						tHash_Lookup_Impor_nombre.endGet();
					}
					globalMap.remove( "tHash_Lookup_Impor_nombre" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_Impor_nit != null) {
						tHash_Lookup_Impor_nit.endGet();
					}
					globalMap.remove( "tHash_Lookup_Impor_nit" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out4");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out9");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out10");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outCaracteristicaContrato");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tFilterRow_53 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_53";
	
	
    globalMap.put("tFilterRow_53_NB_LINE", nb_line_tFilterRow_53);
    globalMap.put("tFilterRow_53_NB_LINE_OK", nb_line_ok_tFilterRow_53);
    globalMap.put("tFilterRow_53_NB_LINE_REJECT", nb_line_reject_tFilterRow_53);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tFilterRow_53", true);
end_Hash.put("tFilterRow_53", System.currentTimeMillis());




/**
 * [tFilterRow_53 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tOracleSP_4 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	


	statement_tOracleSP_4.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outProducto1");
			  	}
			  	
 

ok_Hash.put("tOracleSP_4", true);
end_Hash.put("tOracleSP_4", System.currentTimeMillis());




/**
 * [tOracleSP_4 end ] stop
 */

	
	/**
	 * [tFilterRow_58 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_58";
	
	
    globalMap.put("tFilterRow_58_NB_LINE", nb_line_tFilterRow_58);
    globalMap.put("tFilterRow_58_NB_LINE_OK", nb_line_ok_tFilterRow_58);
    globalMap.put("tFilterRow_58_NB_LINE_REJECT", nb_line_reject_tFilterRow_58);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tFilterRow_58", true);
end_Hash.put("tFilterRow_58", System.currentTimeMillis());




/**
 * [tFilterRow_58 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */













	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outErroneos");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */













































	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<outErroneosStruct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<outErroneosStruct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    outErroneosStruct next_tHashInput_2 = iterator_tHashInput_2.next();

	row34.ESTADO_ = next_tHashInput_2.ESTADO_;
	row34.RESPUESTA_ = next_tHashInput_2.RESPUESTA_;
	row34.numeroFila = next_tHashInput_2.numeroFila;
	row34.CONTRATO = next_tHashInput_2.CONTRATO;
	row34.TIPOLOGIA = next_tHashInput_2.TIPOLOGIA;
	row34.TIPO_PRODUCTO = next_tHashInput_2.TIPO_PRODUCTO;
	row34.ITEM_No_ = next_tHashInput_2.ITEM_No_;
	row34.CODIGO_SSMP = next_tHashInput_2.CODIGO_SSMP;
	row34.NOMBRE_GENERICO = next_tHashInput_2.NOMBRE_GENERICO;
	row34.PRESENTACION = next_tHashInput_2.PRESENTACION;
	row34.CONCENTRACION = next_tHashInput_2.CONCENTRACION;
	row34.VIA_ADMINISTRACION = next_tHashInput_2.VIA_ADMINISTRACION;
	row34.UNIDAD_DE_MEDIDA = next_tHashInput_2.UNIDAD_DE_MEDIDA;
	row34.ATC = next_tHashInput_2.ATC;
	row34.GRUPO_FARMACOLOGICO = next_tHashInput_2.GRUPO_FARMACOLOGICO;
	row34.CADENA_FRIO = next_tHashInput_2.CADENA_FRIO;
	row34.CODIGO_HOMIC = next_tHashInput_2.CODIGO_HOMIC;
	row34.NOMBRE_COMERCIAL_PRODUCTO_MARCA = next_tHashInput_2.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	row34.LABORATORIO_FABRICANTE = next_tHashInput_2.LABORATORIO_FABRICANTE;
	row34.NO_REGISTRO_SANITARIO = next_tHashInput_2.NO_REGISTRO_SANITARIO;
	row34.IMPORTADOR_TITULAR = next_tHashInput_2.IMPORTADOR_TITULAR;
	row34.CUM = next_tHashInput_2.CUM;
	row34.PRECIO = next_tHashInput_2.PRECIO;
	row34.OPCION = next_tHashInput_2.OPCION;
	row34.TIENE_IVA = next_tHashInput_2.TIENE_IVA;
	row34.CODIGO_BARRAS = next_tHashInput_2.CODIGO_BARRAS;
	row34.FORMA_FARMACEUTICA = next_tHashInput_2.FORMA_FARMACEUTICA;
	row34.UNIDOSIS = next_tHashInput_2.UNIDOSIS;
	row34.UNIDAD_MEDIDA = next_tHashInput_2.UNIDAD_MEDIDA;
	row34.CANTIDAD_UNIDAD_MEDIDA = next_tHashInput_2.CANTIDAD_UNIDAD_MEDIDA;
	row34.CANTIDAD_MINIMA = next_tHashInput_2.CANTIDAD_MINIMA;
	row34.CANTIDAD_MAXIMA = next_tHashInput_2.CANTIDAD_MAXIMA;
	row34.FECHA_EXPEDICION_REG_INVIMA = next_tHashInput_2.FECHA_EXPEDICION_REG_INVIMA;
	row34.FECHA_VENCIMIENTO_REG_INVIMA = next_tHashInput_2.FECHA_VENCIMIENTO_REG_INVIMA;
	row34.FECHA_ACTIVO_CUM = next_tHashInput_2.FECHA_ACTIVO_CUM;
	row34.FECHA_INACTIVO_CUM = next_tHashInput_2.FECHA_INACTIVO_CUM;
	row34.LUGAR_DE_ORIGEN = next_tHashInput_2.LUGAR_DE_ORIGEN;
	row34.CARACTERISTICAS = next_tHashInput_2.CARACTERISTICAS;
	row34.CONTRAINDICACIONES = next_tHashInput_2.CONTRAINDICACIONES;
	row34.EFECTOS_POSTERIOR = next_tHashInput_2.EFECTOS_POSTERIOR;
	row34.RIESGOS_ASOCIADOS = next_tHashInput_2.RIESGOS_ASOCIADOS;
	row34.DOSIS_PARA_APLICACION = next_tHashInput_2.DOSIS_PARA_APLICACION;
	row34.NIT_FABRICANTE = next_tHashInput_2.NIT_FABRICANTE;
	row34.NIT_IMPORTADOR = next_tHashInput_2.NIT_IMPORTADOR;
	row34.CODIGO_OPERADOR = next_tHashInput_2.CODIGO_OPERADOR;
	row34.CODIGO_PROVISIONAL_DE_COMITE = next_tHashInput_2.CODIGO_PROVISIONAL_DE_COMITE;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row34"
									
							);
						}
						
//////////
 

// for output
			row35 = new row35Struct();
								
			row35.ESTADO_ = row34.ESTADO_;								
			row35.RESPUESTA_ = row34.RESPUESTA_;								
			row35.numeroFila = row34.numeroFila;								
			row35.CONTRATO = row34.CONTRATO;								
			row35.TIPOLOGIA = row34.TIPOLOGIA;								
			row35.TIPO_PRODUCTO = row34.TIPO_PRODUCTO;								
			row35.ITEM_No_ = row34.ITEM_No_;								
			row35.CODIGO_SSMP = row34.CODIGO_SSMP;								
			row35.NOMBRE_GENERICO = row34.NOMBRE_GENERICO;								
			row35.PRESENTACION = row34.PRESENTACION;								
			row35.CONCENTRACION = row34.CONCENTRACION;								
			row35.VIA_ADMINISTRACION = row34.VIA_ADMINISTRACION;								
			row35.UNIDAD_DE_MEDIDA = row34.UNIDAD_DE_MEDIDA;								
			row35.ATC = row34.ATC;								
			row35.GRUPO_FARMACOLOGICO = row34.GRUPO_FARMACOLOGICO;								
			row35.CADENA_FRIO = row34.CADENA_FRIO;								
			row35.CODIGO_HOMIC = row34.CODIGO_HOMIC;								
			row35.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row34.NOMBRE_COMERCIAL_PRODUCTO_MARCA;								
			row35.LABORATORIO_FABRICANTE = row34.LABORATORIO_FABRICANTE;								
			row35.NO_REGISTRO_SANITARIO = row34.NO_REGISTRO_SANITARIO;								
			row35.IMPORTADOR_TITULAR = row34.IMPORTADOR_TITULAR;								
			row35.CUM = row34.CUM;								
			row35.PRECIO = row34.PRECIO;								
			row35.OPCION = row34.OPCION;								
			row35.TIENE_IVA = row34.TIENE_IVA;								
			row35.CODIGO_BARRAS = row34.CODIGO_BARRAS;								
			row35.FORMA_FARMACEUTICA = row34.FORMA_FARMACEUTICA;								
			row35.UNIDOSIS = row34.UNIDOSIS;								
			row35.UNIDAD_MEDIDA = row34.UNIDAD_MEDIDA;								
			row35.CANTIDAD_UNIDAD_MEDIDA = row34.CANTIDAD_UNIDAD_MEDIDA;								
			row35.CANTIDAD_MINIMA = row34.CANTIDAD_MINIMA;								
			row35.CANTIDAD_MAXIMA = row34.CANTIDAD_MAXIMA;								
			row35.FECHA_EXPEDICION_REG_INVIMA = row34.FECHA_EXPEDICION_REG_INVIMA;								
			row35.FECHA_VENCIMIENTO_REG_INVIMA = row34.FECHA_VENCIMIENTO_REG_INVIMA;								
			row35.FECHA_ACTIVO_CUM = row34.FECHA_ACTIVO_CUM;								
			row35.FECHA_INACTIVO_CUM = row34.FECHA_INACTIVO_CUM;								
			row35.LUGAR_DE_ORIGEN = row34.LUGAR_DE_ORIGEN;								
			row35.CARACTERISTICAS = row34.CARACTERISTICAS;								
			row35.CONTRAINDICACIONES = row34.CONTRAINDICACIONES;								
			row35.EFECTOS_POSTERIOR = row34.EFECTOS_POSTERIOR;								
			row35.RIESGOS_ASOCIADOS = row34.RIESGOS_ASOCIADOS;								
			row35.DOSIS_PARA_APLICACION = row34.DOSIS_PARA_APLICACION;								
			row35.NIT_FABRICANTE = row34.NIT_FABRICANTE;								
			row35.NIT_IMPORTADOR = row34.NIT_IMPORTADOR;								
			row35.CODIGO_OPERADOR = row34.CODIGO_OPERADOR;								
			row35.CODIGO_PROVISIONAL_DE_COMITE = row34.CODIGO_PROVISIONAL_DE_COMITE;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					



	Comparablerow35Struct arrayRowtSortRow_1_SortOut = new Comparablerow35Struct();

	arrayRowtSortRow_1_SortOut.ESTADO_ = row35.ESTADO_;
	arrayRowtSortRow_1_SortOut.RESPUESTA_ = row35.RESPUESTA_;
	arrayRowtSortRow_1_SortOut.numeroFila = row35.numeroFila;
	arrayRowtSortRow_1_SortOut.CONTRATO = row35.CONTRATO;
	arrayRowtSortRow_1_SortOut.TIPOLOGIA = row35.TIPOLOGIA;
	arrayRowtSortRow_1_SortOut.TIPO_PRODUCTO = row35.TIPO_PRODUCTO;
	arrayRowtSortRow_1_SortOut.ITEM_No_ = row35.ITEM_No_;
	arrayRowtSortRow_1_SortOut.CODIGO_SSMP = row35.CODIGO_SSMP;
	arrayRowtSortRow_1_SortOut.NOMBRE_GENERICO = row35.NOMBRE_GENERICO;
	arrayRowtSortRow_1_SortOut.PRESENTACION = row35.PRESENTACION;
	arrayRowtSortRow_1_SortOut.CONCENTRACION = row35.CONCENTRACION;
	arrayRowtSortRow_1_SortOut.VIA_ADMINISTRACION = row35.VIA_ADMINISTRACION;
	arrayRowtSortRow_1_SortOut.UNIDAD_DE_MEDIDA = row35.UNIDAD_DE_MEDIDA;
	arrayRowtSortRow_1_SortOut.ATC = row35.ATC;
	arrayRowtSortRow_1_SortOut.GRUPO_FARMACOLOGICO = row35.GRUPO_FARMACOLOGICO;
	arrayRowtSortRow_1_SortOut.CADENA_FRIO = row35.CADENA_FRIO;
	arrayRowtSortRow_1_SortOut.CODIGO_HOMIC = row35.CODIGO_HOMIC;
	arrayRowtSortRow_1_SortOut.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row35.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	arrayRowtSortRow_1_SortOut.LABORATORIO_FABRICANTE = row35.LABORATORIO_FABRICANTE;
	arrayRowtSortRow_1_SortOut.NO_REGISTRO_SANITARIO = row35.NO_REGISTRO_SANITARIO;
	arrayRowtSortRow_1_SortOut.IMPORTADOR_TITULAR = row35.IMPORTADOR_TITULAR;
	arrayRowtSortRow_1_SortOut.CUM = row35.CUM;
	arrayRowtSortRow_1_SortOut.PRECIO = row35.PRECIO;
	arrayRowtSortRow_1_SortOut.OPCION = row35.OPCION;
	arrayRowtSortRow_1_SortOut.TIENE_IVA = row35.TIENE_IVA;
	arrayRowtSortRow_1_SortOut.CODIGO_BARRAS = row35.CODIGO_BARRAS;
	arrayRowtSortRow_1_SortOut.FORMA_FARMACEUTICA = row35.FORMA_FARMACEUTICA;
	arrayRowtSortRow_1_SortOut.UNIDOSIS = row35.UNIDOSIS;
	arrayRowtSortRow_1_SortOut.UNIDAD_MEDIDA = row35.UNIDAD_MEDIDA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_UNIDAD_MEDIDA = row35.CANTIDAD_UNIDAD_MEDIDA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_MINIMA = row35.CANTIDAD_MINIMA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_MAXIMA = row35.CANTIDAD_MAXIMA;
	arrayRowtSortRow_1_SortOut.FECHA_EXPEDICION_REG_INVIMA = row35.FECHA_EXPEDICION_REG_INVIMA;
	arrayRowtSortRow_1_SortOut.FECHA_VENCIMIENTO_REG_INVIMA = row35.FECHA_VENCIMIENTO_REG_INVIMA;
	arrayRowtSortRow_1_SortOut.FECHA_ACTIVO_CUM = row35.FECHA_ACTIVO_CUM;
	arrayRowtSortRow_1_SortOut.FECHA_INACTIVO_CUM = row35.FECHA_INACTIVO_CUM;
	arrayRowtSortRow_1_SortOut.LUGAR_DE_ORIGEN = row35.LUGAR_DE_ORIGEN;
	arrayRowtSortRow_1_SortOut.CARACTERISTICAS = row35.CARACTERISTICAS;
	arrayRowtSortRow_1_SortOut.CONTRAINDICACIONES = row35.CONTRAINDICACIONES;
	arrayRowtSortRow_1_SortOut.EFECTOS_POSTERIOR = row35.EFECTOS_POSTERIOR;
	arrayRowtSortRow_1_SortOut.RIESGOS_ASOCIADOS = row35.RIESGOS_ASOCIADOS;
	arrayRowtSortRow_1_SortOut.DOSIS_PARA_APLICACION = row35.DOSIS_PARA_APLICACION;
	arrayRowtSortRow_1_SortOut.NIT_FABRICANTE = row35.NIT_FABRICANTE;
	arrayRowtSortRow_1_SortOut.NIT_IMPORTADOR = row35.NIT_IMPORTADOR;
	arrayRowtSortRow_1_SortOut.CODIGO_OPERADOR = row35.CODIGO_OPERADOR;
	arrayRowtSortRow_1_SortOut.CODIGO_PROVISIONAL_DE_COMITE = row35.CODIGO_PROVISIONAL_DE_COMITE;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */
	
	/**
	 * [tUnite_1 end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

globalMap.put("tUnite_1_NB_LINE", nb_line_tUnite_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outErroresPL","row34");
			  	}
			  	
 

ok_Hash.put("tUnite_1", true);
end_Hash.put("tUnite_1", System.currentTimeMillis());




/**
 * [tUnite_1 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

row35Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablerow35Struct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */





	
	/**
	 * [tFileOutputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_3", false);
		start_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outFinalFinal");
					}
				
		int tos_count_tFileOutputExcel_3 = 0;
		


		
		int columnIndex_tFileOutputExcel_3 = 0;
		boolean headerIsInserted_tFileOutputExcel_3 = false;
		
		
		int nb_line_tFileOutputExcel_3 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_3 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_3.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_3.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_3.setSheet("Respuesta y Datos de Anexo t√©cnico");
		xlsxTool_tFileOutputExcel_3.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_3.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_3.setXY(false,0,0,false);
		
		xlsxTool_tFileOutputExcel_3.prepareStream();
		
		xlsxTool_tFileOutputExcel_3.setFont("");
		
		if (xlsxTool_tFileOutputExcel_3.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_3.addRow();
		
		xlsxTool_tFileOutputExcel_3.addCellValue("ESTADO_");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("RESPUESTA_");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CONTRATO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TIPOLOGIA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TIPO_PRODUCTO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("ITEM_No_");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CODIGO_SSMP");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOMBRE_GENERICO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PRESENTACION");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CONCENTRACION");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("VIA_ADMINISTRACION");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("UNIDAD_DE_MEDIDA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("ATC");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("GRUPO_FARMACOLOGICO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CADENA_FRIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CODIGO_HOMIC");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NOMBRE_COMERCIAL_PRODUCTO_MARCA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("LABORATORIO_FABRICANTE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NO_REGISTRO_SANITARIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("IMPORTADOR_TITULAR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CUM");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PRECIO");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("OPCION");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("TIENE_IVA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CODIGO_BARRAS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FORMA_FARMACEUTICA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("UNIDOSIS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("UNIDAD_MEDIDA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CANTIDAD_UNIDAD_MEDIDA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CANTIDAD_MINIMA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CANTIDAD_MAXIMA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FECHA_EXPEDICION_REG_INVIMA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FECHA_VENCIMIENTO_REG_INVIMA");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FECHA_ACTIVO_CUM");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("FECHA_INACTIVO_CUM");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("LUGAR_DE_ORIGEN");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CARACTERISTICAS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CONTRAINDICACIONES");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("EFECTOS_POSTERIOR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("RIESGOS_ASOCIADOS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("DOSIS_PARA_APLICACION");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NIT_FABRICANTE");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("NIT_IMPORTADOR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CODIGO_OPERADOR");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("CODIGO_PROVISIONAL_DE_COMITE");
		
		nb_line_tFileOutputExcel_3++;
		headerIsInserted_tFileOutputExcel_3 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_3 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
outFinalFinalStruct outFinalFinal_tmp = new outFinalFinalStruct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tJavaFlex_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_2", false);
		start_Hash.put("tJavaFlex_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outFin");
					}
				
		int tos_count_tJavaFlex_2 = 0;
		


int count = 1;   


 



/**
 * [tJavaFlex_2 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
outFinStruct outFin_tmp = new outFinStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


row35Struct[] array_tSortRow_1_SortIn = (row35Struct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

row35Struct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row37.ESTADO_ = current_tSortRow_1_SortIn.ESTADO_;
	row37.RESPUESTA_ = current_tSortRow_1_SortIn.RESPUESTA_;
	row37.numeroFila = current_tSortRow_1_SortIn.numeroFila;
	row37.CONTRATO = current_tSortRow_1_SortIn.CONTRATO;
	row37.TIPOLOGIA = current_tSortRow_1_SortIn.TIPOLOGIA;
	row37.TIPO_PRODUCTO = current_tSortRow_1_SortIn.TIPO_PRODUCTO;
	row37.ITEM_No_ = current_tSortRow_1_SortIn.ITEM_No_;
	row37.CODIGO_SSMP = current_tSortRow_1_SortIn.CODIGO_SSMP;
	row37.NOMBRE_GENERICO = current_tSortRow_1_SortIn.NOMBRE_GENERICO;
	row37.PRESENTACION = current_tSortRow_1_SortIn.PRESENTACION;
	row37.CONCENTRACION = current_tSortRow_1_SortIn.CONCENTRACION;
	row37.VIA_ADMINISTRACION = current_tSortRow_1_SortIn.VIA_ADMINISTRACION;
	row37.UNIDAD_DE_MEDIDA = current_tSortRow_1_SortIn.UNIDAD_DE_MEDIDA;
	row37.ATC = current_tSortRow_1_SortIn.ATC;
	row37.GRUPO_FARMACOLOGICO = current_tSortRow_1_SortIn.GRUPO_FARMACOLOGICO;
	row37.CADENA_FRIO = current_tSortRow_1_SortIn.CADENA_FRIO;
	row37.CODIGO_HOMIC = current_tSortRow_1_SortIn.CODIGO_HOMIC;
	row37.NOMBRE_COMERCIAL_PRODUCTO_MARCA = current_tSortRow_1_SortIn.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	row37.LABORATORIO_FABRICANTE = current_tSortRow_1_SortIn.LABORATORIO_FABRICANTE;
	row37.NO_REGISTRO_SANITARIO = current_tSortRow_1_SortIn.NO_REGISTRO_SANITARIO;
	row37.IMPORTADOR_TITULAR = current_tSortRow_1_SortIn.IMPORTADOR_TITULAR;
	row37.CUM = current_tSortRow_1_SortIn.CUM;
	row37.PRECIO = current_tSortRow_1_SortIn.PRECIO;
	row37.OPCION = current_tSortRow_1_SortIn.OPCION;
	row37.TIENE_IVA = current_tSortRow_1_SortIn.TIENE_IVA;
	row37.CODIGO_BARRAS = current_tSortRow_1_SortIn.CODIGO_BARRAS;
	row37.FORMA_FARMACEUTICA = current_tSortRow_1_SortIn.FORMA_FARMACEUTICA;
	row37.UNIDOSIS = current_tSortRow_1_SortIn.UNIDOSIS;
	row37.UNIDAD_MEDIDA = current_tSortRow_1_SortIn.UNIDAD_MEDIDA;
	row37.CANTIDAD_UNIDAD_MEDIDA = current_tSortRow_1_SortIn.CANTIDAD_UNIDAD_MEDIDA;
	row37.CANTIDAD_MINIMA = current_tSortRow_1_SortIn.CANTIDAD_MINIMA;
	row37.CANTIDAD_MAXIMA = current_tSortRow_1_SortIn.CANTIDAD_MAXIMA;
	row37.FECHA_EXPEDICION_REG_INVIMA = current_tSortRow_1_SortIn.FECHA_EXPEDICION_REG_INVIMA;
	row37.FECHA_VENCIMIENTO_REG_INVIMA = current_tSortRow_1_SortIn.FECHA_VENCIMIENTO_REG_INVIMA;
	row37.FECHA_ACTIVO_CUM = current_tSortRow_1_SortIn.FECHA_ACTIVO_CUM;
	row37.FECHA_INACTIVO_CUM = current_tSortRow_1_SortIn.FECHA_INACTIVO_CUM;
	row37.LUGAR_DE_ORIGEN = current_tSortRow_1_SortIn.LUGAR_DE_ORIGEN;
	row37.CARACTERISTICAS = current_tSortRow_1_SortIn.CARACTERISTICAS;
	row37.CONTRAINDICACIONES = current_tSortRow_1_SortIn.CONTRAINDICACIONES;
	row37.EFECTOS_POSTERIOR = current_tSortRow_1_SortIn.EFECTOS_POSTERIOR;
	row37.RIESGOS_ASOCIADOS = current_tSortRow_1_SortIn.RIESGOS_ASOCIADOS;
	row37.DOSIS_PARA_APLICACION = current_tSortRow_1_SortIn.DOSIS_PARA_APLICACION;
	row37.NIT_FABRICANTE = current_tSortRow_1_SortIn.NIT_FABRICANTE;
	row37.NIT_IMPORTADOR = current_tSortRow_1_SortIn.NIT_IMPORTADOR;
	row37.CODIGO_OPERADOR = current_tSortRow_1_SortIn.CODIGO_OPERADOR;
	row37.CODIGO_PROVISIONAL_DE_COMITE = current_tSortRow_1_SortIn.CODIGO_PROVISIONAL_DE_COMITE;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

outFin = null;


// # Output table : 'outFin'
outFin_tmp.ESTADO_ = row37.ESTADO_ ;
outFin_tmp.RESPUESTA_ = row37.RESPUESTA_ ;
outFin_tmp.CONTRATO = row37.CONTRATO ;
outFin_tmp.TIPOLOGIA = row37.TIPOLOGIA ;
outFin_tmp.TIPO_PRODUCTO = row37.TIPO_PRODUCTO ;
outFin_tmp.ITEM_No_ = row37.ITEM_No_ ;
outFin_tmp.CODIGO_SSMP = row37.CODIGO_SSMP ;
outFin_tmp.NOMBRE_GENERICO = row37.NOMBRE_GENERICO ;
outFin_tmp.PRESENTACION = row37.PRESENTACION ;
outFin_tmp.CONCENTRACION = row37.CONCENTRACION ;
outFin_tmp.VIA_ADMINISTRACION = row37.VIA_ADMINISTRACION ;
outFin_tmp.UNIDAD_DE_MEDIDA = row37.UNIDAD_DE_MEDIDA ;
outFin_tmp.ATC = row37.ATC ;
outFin_tmp.GRUPO_FARMACOLOGICO = row37.GRUPO_FARMACOLOGICO ;
outFin_tmp.CADENA_FRIO = row37.CADENA_FRIO ;
outFin_tmp.CODIGO_HOMIC = row37.CODIGO_HOMIC;
outFin_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row37.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outFin_tmp.LABORATORIO_FABRICANTE = row37.LABORATORIO_FABRICANTE;
outFin_tmp.NO_REGISTRO_SANITARIO = row37.NO_REGISTRO_SANITARIO;
outFin_tmp.IMPORTADOR_TITULAR = row37.IMPORTADOR_TITULAR;
outFin_tmp.CUM = row37.CUM;
outFin_tmp.PRECIO = row37.PRECIO;
outFin_tmp.OPCION = row37.OPCION;
outFin_tmp.TIENE_IVA = row37.TIENE_IVA;
outFin_tmp.CODIGO_BARRAS = row37.CODIGO_BARRAS;
outFin_tmp.FORMA_FARMACEUTICA = row37.FORMA_FARMACEUTICA;
outFin_tmp.UNIDOSIS = row37.UNIDOSIS;
outFin_tmp.UNIDAD_MEDIDA = row37.UNIDAD_MEDIDA;
outFin_tmp.CANTIDAD_UNIDAD_MEDIDA = row37.CANTIDAD_UNIDAD_MEDIDA;
outFin_tmp.CANTIDAD_MINIMA = row37.CANTIDAD_MINIMA;
outFin_tmp.CANTIDAD_MAXIMA = row37.CANTIDAD_MAXIMA ;
outFin_tmp.FECHA_EXPEDICION_REG_INVIMA = row37.FECHA_EXPEDICION_REG_INVIMA;
outFin_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row37.FECHA_VENCIMIENTO_REG_INVIMA;
outFin_tmp.FECHA_ACTIVO_CUM = row37.FECHA_ACTIVO_CUM ;
outFin_tmp.FECHA_INACTIVO_CUM = row37.FECHA_INACTIVO_CUM;
outFin_tmp.LUGAR_DE_ORIGEN = row37.LUGAR_DE_ORIGEN;
outFin_tmp.CARACTERISTICAS = row37.CARACTERISTICAS;
outFin_tmp.CONTRAINDICACIONES = row37.CONTRAINDICACIONES;
outFin_tmp.EFECTOS_POSTERIOR = row37.EFECTOS_POSTERIOR;
outFin_tmp.RIESGOS_ASOCIADOS = row37.RIESGOS_ASOCIADOS;
outFin_tmp.DOSIS_PARA_APLICACION = row37.DOSIS_PARA_APLICACION;
outFin_tmp.NIT_FABRICANTE = row37.NIT_FABRICANTE;
outFin_tmp.NIT_IMPORTADOR = row37.NIT_IMPORTADOR;
outFin_tmp.CODIGO_OPERADOR = row37.CODIGO_OPERADOR;
outFin_tmp.CODIGO_PROVISIONAL_DE_COMITE = row37.CODIGO_PROVISIONAL_DE_COMITE;
outFin_tmp.conteoErroneos = null;
outFin = outFin_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "outFin"
if(outFin != null) { 



	
	/**
	 * [tJavaFlex_2 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outFin"
						
						);
					}
					


	        				row40.ESTADO_ = outFin.ESTADO_;
	        				row40.RESPUESTA_ = outFin.RESPUESTA_;
	        				row40.CONTRATO = outFin.CONTRATO;
	        				row40.TIPOLOGIA = outFin.TIPOLOGIA;
	        				row40.TIPO_PRODUCTO = outFin.TIPO_PRODUCTO;
	        				row40.ITEM_No_ = outFin.ITEM_No_;
	        				row40.CODIGO_SSMP = outFin.CODIGO_SSMP;
	        				row40.NOMBRE_GENERICO = outFin.NOMBRE_GENERICO;
	        				row40.PRESENTACION = outFin.PRESENTACION;
	        				row40.CONCENTRACION = outFin.CONCENTRACION;
	        				row40.VIA_ADMINISTRACION = outFin.VIA_ADMINISTRACION;
	        				row40.UNIDAD_DE_MEDIDA = outFin.UNIDAD_DE_MEDIDA;
	        				row40.ATC = outFin.ATC;
	        				row40.GRUPO_FARMACOLOGICO = outFin.GRUPO_FARMACOLOGICO;
	        				row40.CADENA_FRIO = outFin.CADENA_FRIO;
	        				row40.CODIGO_HOMIC = outFin.CODIGO_HOMIC;
	        				row40.NOMBRE_COMERCIAL_PRODUCTO_MARCA = outFin.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
	        				row40.LABORATORIO_FABRICANTE = outFin.LABORATORIO_FABRICANTE;
	        				row40.NO_REGISTRO_SANITARIO = outFin.NO_REGISTRO_SANITARIO;
	        				row40.IMPORTADOR_TITULAR = outFin.IMPORTADOR_TITULAR;
	        				row40.CUM = outFin.CUM;
	        				row40.PRECIO = outFin.PRECIO;
	        				row40.OPCION = outFin.OPCION;
	        				row40.TIENE_IVA = outFin.TIENE_IVA;
	        				row40.CODIGO_BARRAS = outFin.CODIGO_BARRAS;
	        				row40.FORMA_FARMACEUTICA = outFin.FORMA_FARMACEUTICA;
	        				row40.UNIDOSIS = outFin.UNIDOSIS;
	        				row40.UNIDAD_MEDIDA = outFin.UNIDAD_MEDIDA;
	        				row40.CANTIDAD_UNIDAD_MEDIDA = outFin.CANTIDAD_UNIDAD_MEDIDA;
	        				row40.CANTIDAD_MINIMA = outFin.CANTIDAD_MINIMA;
	        				row40.CANTIDAD_MAXIMA = outFin.CANTIDAD_MAXIMA;
	        				row40.FECHA_EXPEDICION_REG_INVIMA = outFin.FECHA_EXPEDICION_REG_INVIMA;
	        				row40.FECHA_VENCIMIENTO_REG_INVIMA = outFin.FECHA_VENCIMIENTO_REG_INVIMA;
	        				row40.FECHA_ACTIVO_CUM = outFin.FECHA_ACTIVO_CUM;
	        				row40.FECHA_INACTIVO_CUM = outFin.FECHA_INACTIVO_CUM;
	        				row40.LUGAR_DE_ORIGEN = outFin.LUGAR_DE_ORIGEN;
	        				row40.CARACTERISTICAS = outFin.CARACTERISTICAS;
	        				row40.CONTRAINDICACIONES = outFin.CONTRAINDICACIONES;
	        				row40.EFECTOS_POSTERIOR = outFin.EFECTOS_POSTERIOR;
	        				row40.RIESGOS_ASOCIADOS = outFin.RIESGOS_ASOCIADOS;
	        				row40.DOSIS_PARA_APLICACION = outFin.DOSIS_PARA_APLICACION;
	        				row40.NIT_FABRICANTE = outFin.NIT_FABRICANTE;
	        				row40.NIT_IMPORTADOR = outFin.NIT_IMPORTADOR;
	        				row40.CODIGO_OPERADOR = outFin.CODIGO_OPERADOR;
	        				row40.CODIGO_PROVISIONAL_DE_COMITE = outFin.CODIGO_PROVISIONAL_DE_COMITE;
	        				row40.conteoErroneos = outFin.conteoErroneos;

// here is the main part of the component,
// a piece of code executed in the row
// loop
outFin.conteoErroneos = count;
count +=1; 

 


	tos_count_tJavaFlex_2++;

/**
 * [tJavaFlex_2 main ] stop
 */
	
	/**
	 * [tJavaFlex_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

outFinalFinal = null;


// # Output table : 'outFinalFinal'
outFinalFinal_tmp.ESTADO_ = row40.ESTADO_ ;
outFinalFinal_tmp.RESPUESTA_ = row40.RESPUESTA_ ;
outFinalFinal_tmp.CONTRATO = row40.CONTRATO ;
outFinalFinal_tmp.TIPOLOGIA = row40.TIPOLOGIA ;
outFinalFinal_tmp.TIPO_PRODUCTO = row40.TIPO_PRODUCTO ;
outFinalFinal_tmp.ITEM_No_ = row40.ITEM_No_ ;
outFinalFinal_tmp.CODIGO_SSMP = row40.CODIGO_SSMP ;
outFinalFinal_tmp.NOMBRE_GENERICO = row40.NOMBRE_GENERICO ;
outFinalFinal_tmp.PRESENTACION = row40.PRESENTACION ;
outFinalFinal_tmp.CONCENTRACION = row40.CONCENTRACION ;
outFinalFinal_tmp.VIA_ADMINISTRACION = row40.VIA_ADMINISTRACION ;
outFinalFinal_tmp.UNIDAD_DE_MEDIDA = row40.UNIDAD_DE_MEDIDA ;
outFinalFinal_tmp.ATC = row40.ATC ;
outFinalFinal_tmp.GRUPO_FARMACOLOGICO = row40.GRUPO_FARMACOLOGICO ;
outFinalFinal_tmp.CADENA_FRIO = row40.CADENA_FRIO ;
outFinalFinal_tmp.CODIGO_HOMIC = row40.CODIGO_HOMIC;
outFinalFinal_tmp.NOMBRE_COMERCIAL_PRODUCTO_MARCA = row40.NOMBRE_COMERCIAL_PRODUCTO_MARCA;
outFinalFinal_tmp.LABORATORIO_FABRICANTE = row40.LABORATORIO_FABRICANTE;
outFinalFinal_tmp.NO_REGISTRO_SANITARIO = row40.NO_REGISTRO_SANITARIO;
outFinalFinal_tmp.IMPORTADOR_TITULAR = row40.IMPORTADOR_TITULAR;
outFinalFinal_tmp.CUM = row40.CUM;
outFinalFinal_tmp.PRECIO = row40.PRECIO;
outFinalFinal_tmp.OPCION = row40.OPCION;
outFinalFinal_tmp.TIENE_IVA = row40.TIENE_IVA;
outFinalFinal_tmp.CODIGO_BARRAS = row40.CODIGO_BARRAS;
outFinalFinal_tmp.FORMA_FARMACEUTICA = row40.FORMA_FARMACEUTICA;
outFinalFinal_tmp.UNIDOSIS = row40.UNIDOSIS;
outFinalFinal_tmp.UNIDAD_MEDIDA = row40.UNIDAD_MEDIDA;
outFinalFinal_tmp.CANTIDAD_UNIDAD_MEDIDA = row40.CANTIDAD_UNIDAD_MEDIDA;
outFinalFinal_tmp.CANTIDAD_MINIMA = row40.CANTIDAD_MINIMA;
outFinalFinal_tmp.CANTIDAD_MAXIMA = row40.CANTIDAD_MAXIMA ;
outFinalFinal_tmp.FECHA_EXPEDICION_REG_INVIMA = row40.FECHA_EXPEDICION_REG_INVIMA;
outFinalFinal_tmp.FECHA_VENCIMIENTO_REG_INVIMA = row40.FECHA_VENCIMIENTO_REG_INVIMA;
outFinalFinal_tmp.FECHA_ACTIVO_CUM = row40.FECHA_ACTIVO_CUM;
outFinalFinal_tmp.FECHA_INACTIVO_CUM = row40.FECHA_INACTIVO_CUM;
outFinalFinal_tmp.LUGAR_DE_ORIGEN = row40.LUGAR_DE_ORIGEN;
outFinalFinal_tmp.CARACTERISTICAS = row40.CARACTERISTICAS;
outFinalFinal_tmp.CONTRAINDICACIONES = row40.CONTRAINDICACIONES;
outFinalFinal_tmp.EFECTOS_POSTERIOR = row40.EFECTOS_POSTERIOR;
outFinalFinal_tmp.RIESGOS_ASOCIADOS = row40.RIESGOS_ASOCIADOS;
outFinalFinal_tmp.DOSIS_PARA_APLICACION = row40.DOSIS_PARA_APLICACION;
outFinalFinal_tmp.NIT_FABRICANTE = row40.NIT_FABRICANTE;
outFinalFinal_tmp.NIT_IMPORTADOR = row40.NIT_IMPORTADOR;
outFinalFinal_tmp.CODIGO_OPERADOR = row40.CODIGO_OPERADOR;
outFinalFinal_tmp.CODIGO_PROVISIONAL_DE_COMITE = row40.CODIGO_PROVISIONAL_DE_COMITE;
outFinalFinal = outFinalFinal_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "outFinalFinal"
if(outFinalFinal != null) { 



	
	/**
	 * [tFileOutputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outFinalFinal"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_3.addRow();
									   				
	    				if(outFinalFinal.ESTADO_ != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.ESTADO_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.RESPUESTA_ != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.RESPUESTA_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CONTRATO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CONTRATO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.TIPOLOGIA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.TIPOLOGIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.TIPO_PRODUCTO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.TIPO_PRODUCTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.ITEM_No_ != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.ITEM_No_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CODIGO_SSMP != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CODIGO_SSMP));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.NOMBRE_GENERICO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.NOMBRE_GENERICO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.PRESENTACION != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.PRESENTACION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CONCENTRACION != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CONCENTRACION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.VIA_ADMINISTRACION != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.VIA_ADMINISTRACION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.UNIDAD_DE_MEDIDA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.UNIDAD_DE_MEDIDA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.ATC != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.ATC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.GRUPO_FARMACOLOGICO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.GRUPO_FARMACOLOGICO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CADENA_FRIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CADENA_FRIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CODIGO_HOMIC != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CODIGO_HOMIC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.NOMBRE_COMERCIAL_PRODUCTO_MARCA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.NOMBRE_COMERCIAL_PRODUCTO_MARCA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.LABORATORIO_FABRICANTE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.LABORATORIO_FABRICANTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.NO_REGISTRO_SANITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.NO_REGISTRO_SANITARIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.IMPORTADOR_TITULAR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.IMPORTADOR_TITULAR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CUM != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CUM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.PRECIO != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.PRECIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.OPCION != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.OPCION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.TIENE_IVA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.TIENE_IVA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CODIGO_BARRAS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CODIGO_BARRAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.FORMA_FARMACEUTICA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.FORMA_FARMACEUTICA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.UNIDOSIS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.UNIDOSIS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.UNIDAD_MEDIDA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.UNIDAD_MEDIDA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CANTIDAD_UNIDAD_MEDIDA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CANTIDAD_UNIDAD_MEDIDA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CANTIDAD_MINIMA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CANTIDAD_MINIMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CANTIDAD_MAXIMA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CANTIDAD_MAXIMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.FECHA_EXPEDICION_REG_INVIMA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.FECHA_EXPEDICION_REG_INVIMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.FECHA_VENCIMIENTO_REG_INVIMA != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.FECHA_VENCIMIENTO_REG_INVIMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.FECHA_ACTIVO_CUM != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.FECHA_ACTIVO_CUM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.FECHA_INACTIVO_CUM != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.FECHA_INACTIVO_CUM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.LUGAR_DE_ORIGEN != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.LUGAR_DE_ORIGEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CARACTERISTICAS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CARACTERISTICAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CONTRAINDICACIONES != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CONTRAINDICACIONES));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.EFECTOS_POSTERIOR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.EFECTOS_POSTERIOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.RIESGOS_ASOCIADOS != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.RIESGOS_ASOCIADOS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.DOSIS_PARA_APLICACION != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.DOSIS_PARA_APLICACION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.NIT_FABRICANTE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.NIT_FABRICANTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.NIT_IMPORTADOR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.NIT_IMPORTADOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CODIGO_OPERADOR != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CODIGO_OPERADOR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(outFinalFinal.CODIGO_PROVISIONAL_DE_COMITE != null) {
    				
							xlsxTool_tFileOutputExcel_3.addCellValue(String.valueOf(outFinalFinal.CODIGO_PROVISIONAL_DE_COMITE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_3++;
				
 


	tos_count_tFileOutputExcel_3++;

/**
 * [tFileOutputExcel_3 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_end ] stop
 */

} // End of branch "outFinalFinal"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_end ] stop
 */

} // End of branch "outFin"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tJavaFlex_2 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	


if(count > 1 ){
	context.result = "1";
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outFin");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_2", true);
end_Hash.put("tJavaFlex_2", System.currentTimeMillis());




/**
 * [tJavaFlex_2 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_3.writeExcel((java.io.OutputStream)globalMap.get("archivo_salida"));
	
		if(headerIsInserted_tFileOutputExcel_3 && nb_line_tFileOutputExcel_3 > 0){
			nb_line_tFileOutputExcel_3 = nb_line_tFileOutputExcel_3 -1;
		}
		globalMap.put("tFileOutputExcel_3_NB_LINE",nb_line_tFileOutputExcel_3);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outFinalFinal");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_3", true);
end_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());




/**
 * [tFileOutputExcel_3 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_14:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tJava_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
					     			//free memory for "tMap_21"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_Impor_nit"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_Impor_nombre"); 
				     			
					     			//free memory for "tMap_17"
					     			globalMap.remove("tHash_Lookup_Fabr_nit"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_Fabr_ID"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_Medida"); 
				     			
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tFilterRow_53 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_53";
	
	

 



/**
 * [tFilterRow_53 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tOracleSP_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 finally ] stop
 */

	
	/**
	 * [tFilterRow_58 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_58";
	
	

 



/**
 * [tFilterRow_58 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */













	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */













































	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */
	
	/**
	 * [tUnite_1 finally ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tJavaFlex_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class logCargaStruct implements routines.system.IPersistableRow<logCargaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return false;
				}
				public Boolean Id_IsKey(){
				    return true;
				}
				public Integer Id_Length(){
				    return 0;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return "SALUDSIS\".\"ISEQ$$_108067\".nextval";
				
				}
				public String Id_Comment(){
				
				    return "PK - Llave primaria";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public Object Log_;

				public Object getLog_ () {
					return this.Log_;
				}

				public Boolean Log_IsNullable(){
				    return true;
				}
				public Boolean Log_IsKey(){
				    return false;
				}
				public Integer Log_Length(){
				    return 4000;
				}
				public Integer Log_Precision(){
				    return 0;
				}
				public String Log_Default(){
				
					return null;
				
				}
				public String Log_Comment(){
				
				    return "Descripcion del log de errores";
				
				}
				public String Log_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Log_OriginalDbColumnName(){
				
					return "Log_";
				
				}

				
			    public String Extension_;

				public String getExtension_ () {
					return this.Extension_;
				}

				public Boolean Extension_IsNullable(){
				    return true;
				}
				public Boolean Extension_IsKey(){
				    return false;
				}
				public Integer Extension_Length(){
				    return null;
				}
				public Integer Extension_Precision(){
				    return null;
				}
				public String Extension_Default(){
				
					return null;
				
				}
				public String Extension_Comment(){
				
				    return "";
				
				}
				public String Extension_Pattern(){
				
					return "";
				
				}
				public String Extension_OriginalDbColumnName(){
				
					return "Extension_";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Id_ == null) ? 0 : this.Id_.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final logCargaStruct other = (logCargaStruct) obj;
		
						if (this.Id_ == null) {
							if (other.Id_ != null)
								return false;
						
						} else if (!this.Id_.equals(other.Id_))
						
							return false;
					

		return true;
    }

	public void copyDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            other.Log_ = this.Log_;
	            other.Extension_ = this.Extension_;
	            
	}

	public void copyKeysDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// Object
				
       			    	dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Log_="+String.valueOf(Log_));
		sb.append(",Extension_="+Extension_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(logCargaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Id_, other.Id_);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String NO_DATA;

				public String getNO_DATA () {
					return this.NO_DATA;
				}

				public Boolean NO_DATAIsNullable(){
				    return false;
				}
				public Boolean NO_DATAIsKey(){
				    return false;
				}
				public Integer NO_DATALength(){
				    return null;
				}
				public Integer NO_DATAPrecision(){
				    return null;
				}
				public String NO_DATADefault(){
				
					return null;
				
				}
				public String NO_DATAComment(){
				
				    return "";
				
				}
				public String NO_DATAPattern(){
				
					return "";
				
				}
				public String NO_DATAOriginalDbColumnName(){
				
					return "NO_DATA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NO_DATA="+NO_DATA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row38Struct row38 = new row38Struct();
logCargaStruct logCarga = new logCargaStruct();





	
	/**
	 * [tOracleSP_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_2", false);
		start_Hash.put("tOracleSP_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"logCarga");
					}
				
		int tos_count_tOracleSP_2 = 0;
		

	java.sql.Connection connection_tOracleSP_2 = null;
	connection_tOracleSP_2 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_2 = connection_tOracleSP_2.prepareCall("{call " + "MED.UpdLogCargaMasiva" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_2;
String tmpString_tOracleSP_2;

 



/**
 * [tOracleSP_2 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
logCargaStruct logCarga_tmp = new logCargaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


context.Salida = globalMap.get("archivo_salida");

//System.out.println(context.Salida);
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

logCarga = null;


// # Output table : 'logCarga'
logCarga_tmp.Id_ = context.carga_id ;
logCarga_tmp.Log_ = ((ByteArrayOutputStream)context.Salida).toByteArray(); ;
logCarga_tmp.Extension_ = "xlsx";
logCarga = logCarga_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "logCarga"
if(logCarga != null) { 



	
	/**
	 * [tOracleSP_2 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"logCarga"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_2.setBigDecimal(1, logCarga.Id_);
			// code for the argument 2 (Log_) of type 'IN AUTOMAPPING'
    					if (logCarga.Log_ == null) {
    						statement_tOracleSP_2.setNull(2, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_2.setObject(2, logCarga.Log_);
    					}
    					
			// code for the argument 3 (Extension_) of type 'IN AUTOMAPPING'
    					if (logCarga.Extension_ == null) {
    						statement_tOracleSP_2.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_2.setString(3, logCarga.Extension_);
    					}
    					
		statement_tOracleSP_2.execute();
		

 


	tos_count_tOracleSP_2++;

/**
 * [tOracleSP_2 main ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_end ] stop
 */

} // End of branch "logCarga"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */



	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tOracleSP_2 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	


	statement_tOracleSP_2.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"logCarga");
			  	}
			  	
 

ok_Hash.put("tOracleSP_2", true);
end_Hash.put("tOracleSP_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk18", 0, "ok");
				}
				tFixedFlowInput_5Process(globalMap);



/**
 * [tOracleSP_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tOracleSP_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tBufferOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_2", false);
		start_Hash.put("tBufferOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tBufferOutput_2 = 0;
		

 



/**
 * [tBufferOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row36.Result = "1";
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_2 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					



String[] row_tBufferOutput_2=new String[]{"",};		
	    if(row36.Result != null){
	        
	            row_tBufferOutput_2[0] = row36.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_2[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_2);	
	
 


	tos_count_tBufferOutput_2++;

/**
 * [tBufferOutput_2 main ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tBufferOutput_2 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_2", true);
end_Hash.put("tBufferOutput_2", System.currentTimeMillis());




/**
 * [tBufferOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tBufferOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return 0;
				}
				public Integer Id_Precision(){
				    return 0;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return 0;
				}
				public Integer Estado_Precision(){
				    return 0;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Estado_="+Estado_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tOracleSP_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_5", false);
		start_Hash.put("tOracleSP_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tOracleSP_5 = 0;
		

	java.sql.Connection connection_tOracleSP_5 = null;
	connection_tOracleSP_5 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_5 = connection_tOracleSP_5.prepareCall("{call " + "MED.UpdEstadoCargaMasiva" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_5;
String tmpString_tOracleSP_5;

 



/**
 * [tOracleSP_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_5", false);
		start_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_5";
	
	
		int tos_count_tFixedFlowInput_5 = 0;
		

	    for (int i_tFixedFlowInput_5 = 0 ; i_tFixedFlowInput_5 < 1 ; i_tFixedFlowInput_5++) {
	                	            	
    	            		row20.Id_ = context.carga_id;
    	            	        	            	
    	            		row20.Estado_ = context.estadoFinalizado;
    	            	

 



/**
 * [tFixedFlowInput_5 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 


	tos_count_tFixedFlowInput_5++;

/**
 * [tFixedFlowInput_5 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_5 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
    					if (row20.Id_ == null) {
    						statement_tOracleSP_5.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(1, row20.Id_);
    					}
    					
			// code for the argument 2 (Estado_) of type 'IN AUTOMAPPING'
    					if (row20.Estado_ == null) {
    						statement_tOracleSP_5.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_5.setString(2, row20.Estado_);
    					}
    					
		statement_tOracleSP_5.execute();
		

 


	tos_count_tOracleSP_5++;

/**
 * [tOracleSP_5 main ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

        }
        globalMap.put("tFixedFlowInput_5_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_5", true);
end_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());




/**
 * [tFixedFlowInput_5 end ] stop
 */

	
	/**
	 * [tOracleSP_5 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	


	statement_tOracleSP_5.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tOracleSP_5", true);
end_Hash.put("tOracleSP_5", System.currentTimeMillis());




/**
 * [tOracleSP_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_5 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 finally ] stop
 */

	
	/**
	 * [tOracleSP_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NIT_NOMBRE;

				public String getNIT_NOMBRE () {
					return this.NIT_NOMBRE;
				}

				public Boolean NIT_NOMBREIsNullable(){
				    return true;
				}
				public Boolean NIT_NOMBREIsKey(){
				    return false;
				}
				public Integer NIT_NOMBRELength(){
				    return 0;
				}
				public Integer NIT_NOMBREPrecision(){
				    return 0;
				}
				public String NIT_NOMBREDefault(){
				
					return null;
				
				}
				public String NIT_NOMBREComment(){
				
				    return "";
				
				}
				public String NIT_NOMBREPattern(){
				
					return "";
				
				}
				public String NIT_NOMBREOriginalDbColumnName(){
				
					return "NIT_NOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 0;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NIT_NOMBRE = readString(dis);
					
					this.NOMBRE = readString(dis);
					
					this.NIT = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NIT_NOMBRE = readString(dis);
					
					this.NOMBRE = readString(dis);
					
					this.NIT = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NIT_NOMBRE,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.NIT,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NIT_NOMBRE,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.NIT,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NIT_NOMBRE="+NIT_NOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_4.setFetchSize(1000);


		    String dbquery_tOracleInput_4 = "SELECT \n  GPR.ID, \n  CONCAT(UPPER(TRIM(MED.MayusculasSinAcentos(GPR.NOMBRE))),GPR.NIT ) AS NIT_NOMBRE,\n  UPPER(TRIM("
+"MED.MayusculasSinAcentos(GPR.NOMBRE))) AS NOMBRE, \n  GPR.NIT  \nFROM\n  GEN_PROVEEDORES GPR\nWHERE\n  GPR.ESTREGISTRO_I"
+"D = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row39.ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row39.ID = rs_tOracleInput_4.getBigDecimal(1);
					} else {
				
						row39.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row39.NIT_NOMBRE = null;
							} else {
	                         		
        	row39.NIT_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row39.NOMBRE = null;
							} else {
	                         		
        	row39.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 4) {
								row39.NIT = null;
							} else {
	                         		
        	row39.NIT = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 4, false);
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					



    
		row39Struct oneRow_tHashOutput_4 = new row39Struct();
				
					oneRow_tHashOutput_4.ID = row39.ID;
					oneRow_tHashOutput_4.NIT_NOMBRE = row39.NIT_NOMBRE;
					oneRow_tHashOutput_4.NOMBRE = row39.NOMBRE;
					oneRow_tHashOutput_4.NIT = row39.NIT;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());




/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tOracleInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 25;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_CargaAnexoTecnico_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT \n  MEU.ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(MEU.NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAce"
+"ntos(MEU.SIGLA))) AS SIGLA\nFROM\n	MED_UMEDIDA MEU\nWHERE\n	MEU.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row17.ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(1) != null) {
						row17.ID = rs_tOracleInput_2.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row17.NOMBRE = null;
							} else {
	                         		
        	row17.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row17.SIGLA = null;
							} else {
	                         		
        	row17.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					



    
		row17Struct oneRow_tHashOutput_3 = new row17Struct();
				
					oneRow_tHashOutput_3.ID = row17.ID;
					oneRow_tHashOutput_3.NOMBRE = row17.NOMBRE;
					oneRow_tHashOutput_3.SIGLA = row17.SIGLA;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tOracleInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer NUMERO_FILA;

				public Integer getNUMERO_FILA () {
					return this.NUMERO_FILA;
				}

				public Boolean NUMERO_FILAIsNullable(){
				    return true;
				}
				public Boolean NUMERO_FILAIsKey(){
				    return false;
				}
				public Integer NUMERO_FILALength(){
				    return 0;
				}
				public Integer NUMERO_FILAPrecision(){
				    return 0;
				}
				public String NUMERO_FILADefault(){
				
					return null;
				
				}
				public String NUMERO_FILAComment(){
				
				    return "";
				
				}
				public String NUMERO_FILAPattern(){
				
					return "";
				
				}
				public String NUMERO_FILAOriginalDbColumnName(){
				
					return "NUMERO_FILA";
				
				}

				
			    public Integer FORMA_FARMACEUTICA_ID;

				public Integer getFORMA_FARMACEUTICA_ID () {
					return this.FORMA_FARMACEUTICA_ID;
				}

				public Boolean FORMA_FARMACEUTICA_IDIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICA_IDIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICA_IDLength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICA_IDPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICA_IDDefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICA_IDComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICA_IDPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICA_IDOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA_ID";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 0;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 0;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 0;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String RESPUESTA;

				public String getRESPUESTA () {
					return this.RESPUESTA;
				}

				public Boolean RESPUESTAIsNullable(){
				    return true;
				}
				public Boolean RESPUESTAIsKey(){
				    return false;
				}
				public Integer RESPUESTALength(){
				    return 0;
				}
				public Integer RESPUESTAPrecision(){
				    return 0;
				}
				public String RESPUESTADefault(){
				
					return null;
				
				}
				public String RESPUESTAComment(){
				
				    return "";
				
				}
				public String RESPUESTAPattern(){
				
					return "";
				
				}
				public String RESPUESTAOriginalDbColumnName(){
				
					return "RESPUESTA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NUMERO_FILA == null) ? 0 : this.NUMERO_FILA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.NUMERO_FILA == null) {
							if (other.NUMERO_FILA != null)
								return false;
						
						} else if (!this.NUMERO_FILA.equals(other.NUMERO_FILA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.NUMERO_FILA = this.NUMERO_FILA;
	            other.FORMA_FARMACEUTICA_ID = this.FORMA_FARMACEUTICA_ID;
	            other.NOMBRE_GENERICO = this.NOMBRE_GENERICO;
	            other.FORMA_FARMACEUTICA = this.FORMA_FARMACEUTICA;
	            other.CONCENTRACION = this.CONCENTRACION;
	            other.ESTADO = this.ESTADO;
	            other.RESPUESTA = this.RESPUESTA;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.NUMERO_FILA = this.NUMERO_FILA;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.NUMERO_FILA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.NUMERO_FILA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.FORMA_FARMACEUTICA_ID = readInteger(dis,ois);
					
						this.NOMBRE_GENERICO = readString(dis,ois);
					
						this.FORMA_FARMACEUTICA = readString(dis,ois);
					
						this.CONCENTRACION = readString(dis,ois);
					
						this.ESTADO = readString(dis,ois);
					
						this.RESPUESTA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.FORMA_FARMACEUTICA_ID = readInteger(dis,objectIn);
					
						this.NOMBRE_GENERICO = readString(dis,objectIn);
					
						this.FORMA_FARMACEUTICA = readString(dis,objectIn);
					
						this.CONCENTRACION = readString(dis,objectIn);
					
						this.ESTADO = readString(dis,objectIn);
					
						this.RESPUESTA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.FORMA_FARMACEUTICA_ID, dos, oos);
					
						writeString(this.NOMBRE_GENERICO, dos, oos);
					
						writeString(this.FORMA_FARMACEUTICA, dos, oos);
					
						writeString(this.CONCENTRACION, dos, oos);
					
						writeString(this.ESTADO, dos, oos);
					
						writeString(this.RESPUESTA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.FORMA_FARMACEUTICA_ID, dos, objectOut);
					
						writeString(this.NOMBRE_GENERICO, dos, objectOut);
					
						writeString(this.FORMA_FARMACEUTICA, dos, objectOut);
					
						writeString(this.CONCENTRACION, dos, objectOut);
					
						writeString(this.ESTADO, dos, objectOut);
					
						writeString(this.RESPUESTA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUMERO_FILA="+String.valueOf(NUMERO_FILA));
		sb.append(",FORMA_FARMACEUTICA_ID="+String.valueOf(FORMA_FARMACEUTICA_ID));
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESPUESTA="+RESPUESTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NUMERO_FILA, other.NUMERO_FILA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tHashInput_15 - inputs:(after_tHashInput_14) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_10 - inputs:(row9,row13) outputs:(row8)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row110Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row110Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    row110Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row13.NUMERO_FILA = next_tHashInput_15.NUMERO_FILA;
	row13.FORMA_FARMACEUTICA_ID = next_tHashInput_15.FORMA_FARMACEUTICA_ID;
	row13.NOMBRE_GENERICO = next_tHashInput_15.NOMBRE_GENERICO;
	row13.FORMA_FARMACEUTICA = next_tHashInput_15.FORMA_FARMACEUTICA;
	row13.CONCENTRACION = next_tHashInput_15.CONCENTRACION;
	row13.ESTADO = next_tHashInput_15.ESTADO;
	row13.RESPUESTA = next_tHashInput_15.RESPUESTA;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.NUMERO_FILA = row13.NUMERO_FILA;
				
				row13_HashRow.FORMA_FARMACEUTICA_ID = row13.FORMA_FARMACEUTICA_ID;
				
				row13_HashRow.NOMBRE_GENERICO = row13.NOMBRE_GENERICO;
				
				row13_HashRow.FORMA_FARMACEUTICA = row13.FORMA_FARMACEUTICA;
				
				row13_HashRow.CONCENTRACION = row13.CONCENTRACION;
				
				row13_HashRow.ESTADO = row13.ESTADO;
				
				row13_HashRow.RESPUESTA = row13.RESPUESTA;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    		
    		mf_tHashInput_15.clearCache("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_6");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class MedidaStruct implements routines.system.IPersistableComparableLookupRow<MedidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 25;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final MedidaStruct other = (MedidaStruct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(MedidaStruct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(MedidaStruct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(MedidaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		MedidaStruct Medida = new MedidaStruct();




	
	/**
	 * [tAdvancedHash_Medida begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_Medida", false);
		start_Hash.put("tAdvancedHash_Medida", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_Medida";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Medida");
					}
				
		int tos_count_tAdvancedHash_Medida = 0;
		

			   		// connection name:Medida
			   		// source node:tHashInput_1 - inputs:(after_tHashInput_14) outputs:(Medida,Medida) | target node:tAdvancedHash_Medida - inputs:(Medida) outputs:()
			   		// linked node: tMap_4 - inputs:(out0,Medida) outputs:(out_in)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_Medida = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<MedidaStruct> tHash_Lookup_Medida =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<MedidaStruct>getLookup(matchingModeEnum_Medida);
	   						   
		   	   	   globalMap.put("tHash_Lookup_Medida", tHash_Lookup_Medida);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_Medida begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row17Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row17Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	Medida.ID = next_tHashInput_1.ID;
	Medida.NOMBRE = next_tHashInput_1.NOMBRE;
	Medida.SIGLA = next_tHashInput_1.SIGLA;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_Medida main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Medida";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Medida"
						
						);
					}
					


			   
			   

					MedidaStruct Medida_HashRow = new MedidaStruct();
		   	   	   
				
				Medida_HashRow.ID = Medida.ID;
				
				Medida_HashRow.NOMBRE = Medida.NOMBRE;
				
				Medida_HashRow.SIGLA = Medida.SIGLA;
				
			tHash_Lookup_Medida.put(Medida_HashRow);
			
            




 


	tos_count_tAdvancedHash_Medida++;

/**
 * [tAdvancedHash_Medida main ] stop
 */
	
	/**
	 * [tAdvancedHash_Medida process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Medida";
	
	

 



/**
 * [tAdvancedHash_Medida process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_Medida process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Medida";
	
	

 



/**
 * [tAdvancedHash_Medida process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tAdvancedHash_Medida end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Medida";
	
	

tHash_Lookup_Medida.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Medida");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_Medida", true);
end_Hash.put("tAdvancedHash_Medida", System.currentTimeMillis());




/**
 * [tAdvancedHash_Medida end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_Medida finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Medida";
	
	

 



/**
 * [tAdvancedHash_Medida finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class Fabr_IDStruct implements routines.system.IPersistableComparableLookupRow<Fabr_IDStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NIT_NOMBRE;

				public String getNIT_NOMBRE () {
					return this.NIT_NOMBRE;
				}

				public Boolean NIT_NOMBREIsNullable(){
				    return true;
				}
				public Boolean NIT_NOMBREIsKey(){
				    return false;
				}
				public Integer NIT_NOMBRELength(){
				    return 0;
				}
				public Integer NIT_NOMBREPrecision(){
				    return 0;
				}
				public String NIT_NOMBREDefault(){
				
					return null;
				
				}
				public String NIT_NOMBREComment(){
				
				    return "";
				
				}
				public String NIT_NOMBREPattern(){
				
					return "";
				
				}
				public String NIT_NOMBREOriginalDbColumnName(){
				
					return "NIT_NOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 0;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Fabr_IDStruct other = (Fabr_IDStruct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Fabr_IDStruct other) {

		other.ID = this.ID;
	            other.NIT_NOMBRE = this.NIT_NOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(Fabr_IDStruct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NIT_NOMBRE = readString(dis,ois);
					
						this.NIT = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NIT_NOMBRE = readString(dis,objectIn);
					
						this.NIT = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, oos);
					
						writeString(this.NIT, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, objectOut);
					
						writeString(this.NIT, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NIT_NOMBRE="+NIT_NOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Fabr_IDStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		Fabr_IDStruct Fabr_ID = new Fabr_IDStruct();




	
	/**
	 * [tAdvancedHash_Fabr_ID begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_Fabr_ID", false);
		start_Hash.put("tAdvancedHash_Fabr_ID", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Fabr_ID");
					}
				
		int tos_count_tAdvancedHash_Fabr_ID = 0;
		

			   		// connection name:Fabr_ID
			   		// source node:tHashInput_4 - inputs:(after_tHashInput_14) outputs:(Fabr_ID,Fabr_ID) | target node:tAdvancedHash_Fabr_ID - inputs:(Fabr_ID) outputs:()
			   		// linked node: tMap_5 - inputs:(out_in,Fabr_ID) outputs:(out2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_Fabr_ID = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_IDStruct> tHash_Lookup_Fabr_ID =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<Fabr_IDStruct>getLookup(matchingModeEnum_Fabr_ID);
	   						   
		   	   	   globalMap.put("tHash_Lookup_Fabr_ID", tHash_Lookup_Fabr_ID);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_Fabr_ID begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row39Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row39Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	Fabr_ID.ID = next_tHashInput_4.ID;
	Fabr_ID.NIT_NOMBRE = next_tHashInput_4.NIT_NOMBRE;
	Fabr_ID.NOMBRE = next_tHashInput_4.NOMBRE;
	Fabr_ID.NIT = next_tHashInput_4.NIT;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_ID main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Fabr_ID"
						
						);
					}
					


			   
			   

					Fabr_IDStruct Fabr_ID_HashRow = new Fabr_IDStruct();
		   	   	   
				
				Fabr_ID_HashRow.ID = Fabr_ID.ID;
				
				Fabr_ID_HashRow.NIT_NOMBRE = Fabr_ID.NIT_NOMBRE;
				
				Fabr_ID_HashRow.NOMBRE = Fabr_ID.NOMBRE;
				
				Fabr_ID_HashRow.NIT = Fabr_ID.NIT;
				
			tHash_Lookup_Fabr_ID.put(Fabr_ID_HashRow);
			
            




 


	tos_count_tAdvancedHash_Fabr_ID++;

/**
 * [tAdvancedHash_Fabr_ID main ] stop
 */
	
	/**
	 * [tAdvancedHash_Fabr_ID process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	

 



/**
 * [tAdvancedHash_Fabr_ID process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_Fabr_ID process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	

 



/**
 * [tAdvancedHash_Fabr_ID process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_ID end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	

tHash_Lookup_Fabr_ID.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Fabr_ID");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_Fabr_ID", true);
end_Hash.put("tAdvancedHash_Fabr_ID", System.currentTimeMillis());




/**
 * [tAdvancedHash_Fabr_ID end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_ID finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_ID";
	
	

 



/**
 * [tAdvancedHash_Fabr_ID finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class Fabr_nitStruct implements routines.system.IPersistableComparableLookupRow<Fabr_nitStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NIT_NOMBRE;

				public String getNIT_NOMBRE () {
					return this.NIT_NOMBRE;
				}

				public Boolean NIT_NOMBREIsNullable(){
				    return true;
				}
				public Boolean NIT_NOMBREIsKey(){
				    return false;
				}
				public Integer NIT_NOMBRELength(){
				    return 0;
				}
				public Integer NIT_NOMBREPrecision(){
				    return 0;
				}
				public String NIT_NOMBREDefault(){
				
					return null;
				
				}
				public String NIT_NOMBREComment(){
				
				    return "";
				
				}
				public String NIT_NOMBREPattern(){
				
					return "";
				
				}
				public String NIT_NOMBREOriginalDbColumnName(){
				
					return "NIT_NOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 0;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Fabr_nitStruct other = (Fabr_nitStruct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Fabr_nitStruct other) {

		other.ID = this.ID;
	            other.NIT_NOMBRE = this.NIT_NOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(Fabr_nitStruct other) {

		other.ID = this.ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.NIT_NOMBRE = readString(dis,ois);
					
						this.NOMBRE = readString(dis,ois);
					
						this.NIT = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.NIT_NOMBRE = readString(dis,objectIn);
					
						this.NOMBRE = readString(dis,objectIn);
					
						this.NIT = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.NIT_NOMBRE, dos, oos);
					
						writeString(this.NOMBRE, dos, oos);
					
						writeString(this.NIT, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.NIT_NOMBRE, dos, objectOut);
					
						writeString(this.NOMBRE, dos, objectOut);
					
						writeString(this.NIT, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NIT_NOMBRE="+NIT_NOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Fabr_nitStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		Fabr_nitStruct Fabr_nit = new Fabr_nitStruct();




	
	/**
	 * [tAdvancedHash_Fabr_nit begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_Fabr_nit", false);
		start_Hash.put("tAdvancedHash_Fabr_nit", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Fabr_nit");
					}
				
		int tos_count_tAdvancedHash_Fabr_nit = 0;
		

			   		// connection name:Fabr_nit
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_14) outputs:(Fabr_nit,Fabr_nit) | target node:tAdvancedHash_Fabr_nit - inputs:(Fabr_nit) outputs:()
			   		// linked node: tMap_17 - inputs:(out2,Fabr_nit) outputs:(out3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_Fabr_nit = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Fabr_nitStruct> tHash_Lookup_Fabr_nit =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<Fabr_nitStruct>getLookup(matchingModeEnum_Fabr_nit);
	   						   
		   	   	   globalMap.put("tHash_Lookup_Fabr_nit", tHash_Lookup_Fabr_nit);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_Fabr_nit begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row39Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row39Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	Fabr_nit.ID = next_tHashInput_3.ID;
	Fabr_nit.NIT_NOMBRE = next_tHashInput_3.NIT_NOMBRE;
	Fabr_nit.NOMBRE = next_tHashInput_3.NOMBRE;
	Fabr_nit.NIT = next_tHashInput_3.NIT;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_nit main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Fabr_nit"
						
						);
					}
					


			   
			   

					Fabr_nitStruct Fabr_nit_HashRow = new Fabr_nitStruct();
		   	   	   
				
				Fabr_nit_HashRow.ID = Fabr_nit.ID;
				
				Fabr_nit_HashRow.NIT_NOMBRE = Fabr_nit.NIT_NOMBRE;
				
				Fabr_nit_HashRow.NOMBRE = Fabr_nit.NOMBRE;
				
				Fabr_nit_HashRow.NIT = Fabr_nit.NIT;
				
			tHash_Lookup_Fabr_nit.put(Fabr_nit_HashRow);
			
            




 


	tos_count_tAdvancedHash_Fabr_nit++;

/**
 * [tAdvancedHash_Fabr_nit main ] stop
 */
	
	/**
	 * [tAdvancedHash_Fabr_nit process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	

 



/**
 * [tAdvancedHash_Fabr_nit process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_Fabr_nit process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	

 



/**
 * [tAdvancedHash_Fabr_nit process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_nit end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	

tHash_Lookup_Fabr_nit.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Fabr_nit");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_Fabr_nit", true);
end_Hash.put("tAdvancedHash_Fabr_nit", System.currentTimeMillis());




/**
 * [tAdvancedHash_Fabr_nit end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_Fabr_nit finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Fabr_nit";
	
	

 



/**
 * [tAdvancedHash_Fabr_nit finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class Impor_nombreStruct implements routines.system.IPersistableComparableLookupRow<Impor_nombreStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NIT_NOMBRE;

				public String getNIT_NOMBRE () {
					return this.NIT_NOMBRE;
				}

				public Boolean NIT_NOMBREIsNullable(){
				    return true;
				}
				public Boolean NIT_NOMBREIsKey(){
				    return false;
				}
				public Integer NIT_NOMBRELength(){
				    return 0;
				}
				public Integer NIT_NOMBREPrecision(){
				    return 0;
				}
				public String NIT_NOMBREDefault(){
				
					return null;
				
				}
				public String NIT_NOMBREComment(){
				
				    return "";
				
				}
				public String NIT_NOMBREPattern(){
				
					return "";
				
				}
				public String NIT_NOMBREOriginalDbColumnName(){
				
					return "NIT_NOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 0;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Impor_nombreStruct other = (Impor_nombreStruct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Impor_nombreStruct other) {

		other.ID = this.ID;
	            other.NIT_NOMBRE = this.NIT_NOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(Impor_nombreStruct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NIT_NOMBRE = readString(dis,ois);
					
						this.NIT = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NIT_NOMBRE = readString(dis,objectIn);
					
						this.NIT = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, oos);
					
						writeString(this.NIT, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, objectOut);
					
						writeString(this.NIT, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NIT_NOMBRE="+NIT_NOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Impor_nombreStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		Impor_nombreStruct Impor_nombre = new Impor_nombreStruct();




	
	/**
	 * [tAdvancedHash_Impor_nombre begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_Impor_nombre", false);
		start_Hash.put("tAdvancedHash_Impor_nombre", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Impor_nombre");
					}
				
		int tos_count_tAdvancedHash_Impor_nombre = 0;
		

			   		// connection name:Impor_nombre
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_14) outputs:(Impor_nombre,Impor_nombre) | target node:tAdvancedHash_Impor_nombre - inputs:(Impor_nombre) outputs:()
			   		// linked node: tMap_7 - inputs:(out3,Impor_nombre) outputs:(out4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_Impor_nombre = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nombreStruct> tHash_Lookup_Impor_nombre =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<Impor_nombreStruct>getLookup(matchingModeEnum_Impor_nombre);
	   						   
		   	   	   globalMap.put("tHash_Lookup_Impor_nombre", tHash_Lookup_Impor_nombre);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_Impor_nombre begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row39Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row39Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	Impor_nombre.ID = next_tHashInput_6.ID;
	Impor_nombre.NIT_NOMBRE = next_tHashInput_6.NIT_NOMBRE;
	Impor_nombre.NOMBRE = next_tHashInput_6.NOMBRE;
	Impor_nombre.NIT = next_tHashInput_6.NIT;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nombre main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Impor_nombre"
						
						);
					}
					


			   
			   

					Impor_nombreStruct Impor_nombre_HashRow = new Impor_nombreStruct();
		   	   	   
				
				Impor_nombre_HashRow.ID = Impor_nombre.ID;
				
				Impor_nombre_HashRow.NIT_NOMBRE = Impor_nombre.NIT_NOMBRE;
				
				Impor_nombre_HashRow.NOMBRE = Impor_nombre.NOMBRE;
				
				Impor_nombre_HashRow.NIT = Impor_nombre.NIT;
				
			tHash_Lookup_Impor_nombre.put(Impor_nombre_HashRow);
			
            




 


	tos_count_tAdvancedHash_Impor_nombre++;

/**
 * [tAdvancedHash_Impor_nombre main ] stop
 */
	
	/**
	 * [tAdvancedHash_Impor_nombre process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	

 



/**
 * [tAdvancedHash_Impor_nombre process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_Impor_nombre process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	

 



/**
 * [tAdvancedHash_Impor_nombre process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nombre end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	

tHash_Lookup_Impor_nombre.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Impor_nombre");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_Impor_nombre", true);
end_Hash.put("tAdvancedHash_Impor_nombre", System.currentTimeMillis());




/**
 * [tAdvancedHash_Impor_nombre end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nombre finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nombre";
	
	

 



/**
 * [tAdvancedHash_Impor_nombre finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class Impor_nitStruct implements routines.system.IPersistableComparableLookupRow<Impor_nitStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NIT_NOMBRE;

				public String getNIT_NOMBRE () {
					return this.NIT_NOMBRE;
				}

				public Boolean NIT_NOMBREIsNullable(){
				    return true;
				}
				public Boolean NIT_NOMBREIsKey(){
				    return false;
				}
				public Integer NIT_NOMBRELength(){
				    return 0;
				}
				public Integer NIT_NOMBREPrecision(){
				    return 0;
				}
				public String NIT_NOMBREDefault(){
				
					return null;
				
				}
				public String NIT_NOMBREComment(){
				
				    return "";
				
				}
				public String NIT_NOMBREPattern(){
				
					return "";
				
				}
				public String NIT_NOMBREOriginalDbColumnName(){
				
					return "NIT_NOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 0;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NIT == null) ? 0 : this.NIT.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Impor_nitStruct other = (Impor_nitStruct) obj;
		
						if (this.NIT == null) {
							if (other.NIT != null)
								return false;
						
						} else if (!this.NIT.equals(other.NIT))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Impor_nitStruct other) {

		other.ID = this.ID;
	            other.NIT_NOMBRE = this.NIT_NOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(Impor_nitStruct other) {

		other.NIT = this.NIT;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NIT = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.NIT = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NIT,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NIT,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NIT_NOMBRE = readString(dis,ois);
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NIT_NOMBRE = readString(dis,objectIn);
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, oos);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NIT_NOMBRE, dos, objectOut);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NIT_NOMBRE="+NIT_NOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Impor_nitStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NIT, other.NIT);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		Impor_nitStruct Impor_nit = new Impor_nitStruct();




	
	/**
	 * [tAdvancedHash_Impor_nit begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_Impor_nit", false);
		start_Hash.put("tAdvancedHash_Impor_nit", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Impor_nit");
					}
				
		int tos_count_tAdvancedHash_Impor_nit = 0;
		

			   		// connection name:Impor_nit
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_14) outputs:(Impor_nit,Impor_nit) | target node:tAdvancedHash_Impor_nit - inputs:(Impor_nit) outputs:()
			   		// linked node: tMap_8 - inputs:(out4,Impor_nit) outputs:(out9)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_Impor_nit = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<Impor_nitStruct> tHash_Lookup_Impor_nit =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<Impor_nitStruct>getLookup(matchingModeEnum_Impor_nit);
	   						   
		   	   	   globalMap.put("tHash_Lookup_Impor_nit", tHash_Lookup_Impor_nit);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_Impor_nit begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row39Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row39Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row39Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	Impor_nit.ID = next_tHashInput_7.ID;
	Impor_nit.NIT_NOMBRE = next_tHashInput_7.NIT_NOMBRE;
	Impor_nit.NOMBRE = next_tHashInput_7.NOMBRE;
	Impor_nit.NIT = next_tHashInput_7.NIT;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nit main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Impor_nit"
						
						);
					}
					


			   
			   

					Impor_nitStruct Impor_nit_HashRow = new Impor_nitStruct();
		   	   	   
				
				Impor_nit_HashRow.ID = Impor_nit.ID;
				
				Impor_nit_HashRow.NIT_NOMBRE = Impor_nit.NIT_NOMBRE;
				
				Impor_nit_HashRow.NOMBRE = Impor_nit.NOMBRE;
				
				Impor_nit_HashRow.NIT = Impor_nit.NIT;
				
			tHash_Lookup_Impor_nit.put(Impor_nit_HashRow);
			
            




 


	tos_count_tAdvancedHash_Impor_nit++;

/**
 * [tAdvancedHash_Impor_nit main ] stop
 */
	
	/**
	 * [tAdvancedHash_Impor_nit process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	

 



/**
 * [tAdvancedHash_Impor_nit process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_Impor_nit process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	

 



/**
 * [tAdvancedHash_Impor_nit process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaAnexoTecnico_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nit end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	

tHash_Lookup_Impor_nit.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Impor_nit");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_Impor_nit", true);
end_Hash.put("tAdvancedHash_Impor_nit", System.currentTimeMillis());




/**
 * [tAdvancedHash_Impor_nit end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_Impor_nit finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_Impor_nit";
	
	

 



/**
 * [tAdvancedHash_Impor_nit finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 4000;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tOracleInput_5 - inputs:(after_tHashInput_14) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_21 - inputs:(row11,row16) outputs:(outCaracteristicaContrato)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement();

		    String dbquery_tOracleInput_5 = "SELECT \n  ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAcentos(SIG"
+"LA))) AS SIGLA\nFROM MED_TCARACTERISTICAS\nWHERE TIPO = 'Costo' AND ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row16.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row16.ID = rs_tOracleInput_5.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row16.NOMBRE = null;
							} else {
	                         		
        	row16.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 3) {
								row16.SIGLA = null;
							} else {
	                         		
        	row16.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 3, false);
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.ID = row16.ID;
				
				row16_HashRow.NOMBRE = row16.NOMBRE;
				
				row16_HashRow.SIGLA = row16.SIGLA;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());




/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class mailStruct implements routines.system.IPersistableRow<mailStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(mailStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class salidaStruct implements routines.system.IPersistableRow<salidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(salidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];
    static byte[] commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length) {
				if(length < 1024 && commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico.length == 0) {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[1024];
				} else {
   					commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length);
			strReturn = new String(commonByteArray_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGAR_ANEXO_TECNICO_CargaAnexoTecnico) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();
salidaStruct salida = new salidaStruct();
salidaStruct mail = salida;
row3Struct row3 = new row3Struct();







	
	/**
	 * [tJava_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_6", false);
		start_Hash.put("tJava_6", System.currentTimeMillis());
		
	
	currentComponent="tJava_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJava_6 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";


 



/**
 * [tJava_6 begin ] stop
 */



	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"mail");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"salida");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("moment");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("root_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("father_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("project");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("context");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("priority");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("type");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("origin");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("message");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("code");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
	String var1;
	String var2;
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
salidaStruct salida_tmp = new salidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row45.type = lcm.getType();
		row45.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row45.priority = lcm.getPriority();
		row45.message = lcm.getMessage();
		row45.code = lcm.getCode();
		
		row45.moment = java.util.Calendar.getInstance().getTime();
	
    	row45.pid = pid;
		row45.root_pid = rootPid;
		row45.father_pid = fatherPid;
	
    	row45.project = projectName;
    	row45.job = jobName;
    	row45.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;
Var.var1 = context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY"); ;
Var.var2 = context.ESTADO_EXEC = "Interrumpido";;// ###############################
        // ###############################
        // # Output tables

salida = null;


// # Output table : 'salida'
salida_tmp.moment = row45.moment;
salida_tmp.pid = row45.pid;
salida_tmp.root_pid = row45.root_pid;
salida_tmp.father_pid = row45.father_pid;
salida_tmp.project = row45.project;
salida_tmp.job = row45.job;
salida_tmp.context = row45.context;
salida_tmp.priority = row45.priority;
salida_tmp.type = row45.type;
salida_tmp.origin = row45.origin;
salida_tmp.message = row45.message;
salida_tmp.code = row45.code;
salida = salida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "salida"
if(salida != null) { 



	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"salida"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(salida.moment != null) {
                        sb_tFileOutputDelimited_2.append(
                            FormatterUtils.format_Date(salida.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.root_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.father_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.project != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.project
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.job != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.job
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.context != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.context
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.priority != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.priority
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.type != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.type
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.origin != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.origin
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.message != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.message
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.code != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.code
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 
     mail = salida;


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"mail"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xpathutil-1.0.0.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;../lib/jaxen-1.1.6.jar;mail_1_5.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargar_anexo_tecnico.mail_1_5.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xpathutil-1.0.0.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/../lib/jaxen-1.1.6.jar:$ROOT_PATH/mail_1_5.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargar_anexo_tecnico.mail_1_5.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = mail.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.pid;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param pid=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param pid=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param pid=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("pid", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */

	
	/**
	 * [tJava_6 main ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

 


	tos_count_tJava_6++;

/**
 * [tJava_6 main ] stop
 */
	
	/**
	 * [tJava_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_begin ] stop
 */
	
	/**
	 * [tJava_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_end ] stop
 */



	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */

} // End of branch "salida"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"salida");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"mail");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */

	
	/**
	 * [tJava_6 end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJava_6", true);
end_Hash.put("tJava_6", System.currentTimeMillis());




/**
 * [tJava_6 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */

	
	/**
	 * [tJava_6 finally ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final CargaAnexoTecnico CargaAnexoTecnicoClass = new CargaAnexoTecnico();

        int exitCode = CargaAnexoTecnicoClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = (String[][])globalBuffer.toArray(new String[globalBuffer.size()][]);

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        		hastBufferOutput = true;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = CargaAnexoTecnico.class.getClassLoader().getResourceAsStream("med_cargar_anexo_tecnico/cargaanexotecnico_1_19/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = CargaAnexoTecnico.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("numFila", "id_String");
                        if(context.getStringValue("numFila") == null) {
                            context.numFila = null;
                        } else {
                            context.numFila=(String) context.getProperty("numFila");
                        }
                        context.setContextType("estadoEnproceso", "id_String");
                        if(context.getStringValue("estadoEnproceso") == null) {
                            context.estadoEnproceso = null;
                        } else {
                            context.estadoEnproceso=(String) context.getProperty("estadoEnproceso");
                        }
                        context.setContextType("estadoActivo", "id_String");
                        if(context.getStringValue("estadoActivo") == null) {
                            context.estadoActivo = null;
                        } else {
                            context.estadoActivo=(String) context.getProperty("estadoActivo");
                        }
                        context.setContextType("estadoInactivo", "id_String");
                        if(context.getStringValue("estadoInactivo") == null) {
                            context.estadoInactivo = null;
                        } else {
                            context.estadoInactivo=(String) context.getProperty("estadoInactivo");
                        }
                        context.setContextType("anexoTecnicoTipoContenido", "id_String");
                        if(context.getStringValue("anexoTecnicoTipoContenido") == null) {
                            context.anexoTecnicoTipoContenido = null;
                        } else {
                            context.anexoTecnicoTipoContenido=(String) context.getProperty("anexoTecnicoTipoContenido");
                        }
                        context.setContextType("anexoTecnicoContenido", "id_Object");
                        if(context.getStringValue("anexoTecnicoContenido") == null) {
                            context.anexoTecnicoContenido = null;
                        } else {
                            context.anexoTecnicoContenido=(Object) context.getProperty("anexoTecnicoContenido");
                        }
                        context.setContextType("estadoInicial", "id_String");
                        if(context.getStringValue("estadoInicial") == null) {
                            context.estadoInicial = null;
                        } else {
                            context.estadoInicial=(String) context.getProperty("estadoInicial");
                        }
                        context.setContextType("estadoNoRegistra", "id_String");
                        if(context.getStringValue("estadoNoRegistra") == null) {
                            context.estadoNoRegistra = null;
                        } else {
                            context.estadoNoRegistra=(String) context.getProperty("estadoNoRegistra");
                        }
                        context.setContextType("estadoFinalizado", "id_String");
                        if(context.getStringValue("estadoFinalizado") == null) {
                            context.estadoFinalizado = null;
                        } else {
                            context.estadoFinalizado=(String) context.getProperty("estadoFinalizado");
                        }
                        context.setContextType("cantFilas", "id_Integer");
                        if(context.getStringValue("cantFilas") == null) {
                            context.cantFilas = null;
                        } else {
                            try{
                                context.cantFilas=routines.system.ParserUtils.parseTo_Integer (context.getProperty("cantFilas"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "cantFilas", e.getMessage()));
                                context.cantFilas=null;
                            }
                        }
                        context.setContextType("carga_id", "id_BigDecimal");
                        if(context.getStringValue("carga_id") == null) {
                            context.carga_id = null;
                        } else {
                            try{
                                context.carga_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("carga_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "carga_id", e.getMessage()));
                                context.carga_id=null;
                            }
                        }
                        context.setContextType("Contenido", "id_Object");
                        if(context.getStringValue("Contenido") == null) {
                            context.Contenido = null;
                        } else {
                            context.Contenido=(Object) context.getProperty("Contenido");
                        }
                        context.setContextType("IsValid", "id_Boolean");
                        if(context.getStringValue("IsValid") == null) {
                            context.IsValid = null;
                        } else {
                            try{
                                context.IsValid=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("IsValid"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "IsValid", e.getMessage()));
                                context.IsValid=null;
                            }
                        }
                        context.setContextType("nombre", "id_String");
                        if(context.getStringValue("nombre") == null) {
                            context.nombre = null;
                        } else {
                            context.nombre=(String) context.getProperty("nombre");
                        }
                        context.setContextType("numeroContrato", "id_String");
                        if(context.getStringValue("numeroContrato") == null) {
                            context.numeroContrato = null;
                        } else {
                            context.numeroContrato=(String) context.getProperty("numeroContrato");
                        }
                        context.setContextType("result", "id_String");
                        if(context.getStringValue("result") == null) {
                            context.result = null;
                        } else {
                            context.result=(String) context.getProperty("result");
                        }
                        context.setContextType("Salida", "id_Object");
                        if(context.getStringValue("Salida") == null) {
                            context.Salida = null;
                        } else {
                            context.Salida=(Object) context.getProperty("Salida");
                        }
                        context.setContextType("TContenido", "id_String");
                        if(context.getStringValue("TContenido") == null) {
                            context.TContenido = null;
                        } else {
                            context.TContenido=(String) context.getProperty("TContenido");
                        }
                        context.setContextType("userId", "id_String");
                        if(context.getStringValue("userId") == null) {
                            context.userId = null;
                        } else {
                            context.userId=(String) context.getProperty("userId");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_String");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            context.db_origen_Password=(String) context.getProperty("db_origen_Password");
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("numFila")) {
                context.numFila = (String) parentContextMap.get("numFila");
            }if (parentContextMap.containsKey("estadoEnproceso")) {
                context.estadoEnproceso = (String) parentContextMap.get("estadoEnproceso");
            }if (parentContextMap.containsKey("estadoActivo")) {
                context.estadoActivo = (String) parentContextMap.get("estadoActivo");
            }if (parentContextMap.containsKey("estadoInactivo")) {
                context.estadoInactivo = (String) parentContextMap.get("estadoInactivo");
            }if (parentContextMap.containsKey("anexoTecnicoTipoContenido")) {
                context.anexoTecnicoTipoContenido = (String) parentContextMap.get("anexoTecnicoTipoContenido");
            }if (parentContextMap.containsKey("anexoTecnicoContenido")) {
                context.anexoTecnicoContenido = (Object) parentContextMap.get("anexoTecnicoContenido");
            }if (parentContextMap.containsKey("estadoInicial")) {
                context.estadoInicial = (String) parentContextMap.get("estadoInicial");
            }if (parentContextMap.containsKey("estadoNoRegistra")) {
                context.estadoNoRegistra = (String) parentContextMap.get("estadoNoRegistra");
            }if (parentContextMap.containsKey("estadoFinalizado")) {
                context.estadoFinalizado = (String) parentContextMap.get("estadoFinalizado");
            }if (parentContextMap.containsKey("cantFilas")) {
                context.cantFilas = (Integer) parentContextMap.get("cantFilas");
            }if (parentContextMap.containsKey("carga_id")) {
                context.carga_id = (BigDecimal) parentContextMap.get("carga_id");
            }if (parentContextMap.containsKey("Contenido")) {
                context.Contenido = (Object) parentContextMap.get("Contenido");
            }if (parentContextMap.containsKey("IsValid")) {
                context.IsValid = (Boolean) parentContextMap.get("IsValid");
            }if (parentContextMap.containsKey("nombre")) {
                context.nombre = (String) parentContextMap.get("nombre");
            }if (parentContextMap.containsKey("numeroContrato")) {
                context.numeroContrato = (String) parentContextMap.get("numeroContrato");
            }if (parentContextMap.containsKey("result")) {
                context.result = (String) parentContextMap.get("result");
            }if (parentContextMap.containsKey("Salida")) {
                context.Salida = (Object) parentContextMap.get("Salida");
            }if (parentContextMap.containsKey("TContenido")) {
                context.TContenido = (String) parentContextMap.get("TContenido");
            }if (parentContextMap.containsKey("userId")) {
                context.userId = (String) parentContextMap.get("userId");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tOracleInput_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tOracleInput_2) {
globalMap.put("tOracleInput_2_SUBPROCESS_STATE", -1);

e_tOracleInput_2.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : CargaAnexoTecnico");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     3097094 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 2:43:58‚ÄØPM COT
 ************************************************************************************************/