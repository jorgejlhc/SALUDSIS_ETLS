// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package rep_consolidados.aficonsolidados_0_1;

import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.getEdad;
import routines.Relational;
import routines.GenerarUUID;
import routines.Mathematical;
import routines.Numeric;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.ArrayFromFile;
import routines.TalendDate;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;
import java.io.*;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: AfiConsolidados Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class AfiConsolidados implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_destino_ServiceName != null){
				
					this.setProperty("db_destino_ServiceName", db_destino_ServiceName.toString());
				
			}
			
			if(db_destino_AdditionalParams != null){
				
					this.setProperty("db_destino_AdditionalParams", db_destino_AdditionalParams.toString());
				
			}
			
			if(db_destino_Login != null){
				
					this.setProperty("db_destino_Login", db_destino_Login.toString());
				
			}
			
			if(db_destino_Port != null){
				
					this.setProperty("db_destino_Port", db_destino_Port.toString());
				
			}
			
			if(db_destino_Schema != null){
				
					this.setProperty("db_destino_Schema", db_destino_Schema.toString());
				
			}
			
			if(db_destino_Server != null){
				
					this.setProperty("db_destino_Server", db_destino_Server.toString());
				
			}
			
			if(db_destino_Password != null){
				
					this.setProperty("db_destino_Password", db_destino_Password.toString());
				
			}
			
			if(ACTUALIZACION_TOTAL != null){
				
					this.setProperty("ACTUALIZACION_TOTAL", ACTUALIZACION_TOTAL.toString());
				
			}
			
			if(FECHA_TERMINACION != null){
				
					this.setProperty("FECHA_TERMINACION", FECHA_TERMINACION.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(FANTERIOR != null){
				
					this.setProperty("FANTERIOR", FANTERIOR.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(BODEGA != null){
				
					this.setProperty("BODEGA", BODEGA.toString());
				
			}
			
			if(ID_SOLICITUD != null){
				
					this.setProperty("ID_SOLICITUD", ID_SOLICITUD.toString());
				
			}
			
			if(LAST_DAYS != null){
				
					this.setProperty("LAST_DAYS", LAST_DAYS.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(mail_User != null){
				
					this.setProperty("mail_User", mail_User.toString());
				
			}
			
			if(mail_Message != null){
				
					this.setProperty("mail_Message", mail_Message.toString());
				
			}
			
			if(mail_To != null){
				
					this.setProperty("mail_To", mail_To.toString());
				
			}
			
			if(mail_SMTP_Port != null){
				
					this.setProperty("mail_SMTP_Port", mail_SMTP_Port.toString());
				
			}
			
			if(mail_Password != null){
				
					this.setProperty("mail_Password", mail_Password.toString());
				
			}
			
			if(mail_SMTP_Host != null){
				
					this.setProperty("mail_SMTP_Host", mail_SMTP_Host.toString());
				
			}
			
			if(mail_Sendername != null){
				
					this.setProperty("mail_Sendername", mail_Sendername.toString());
				
			}
			
			if(mail_Subject != null){
				
					this.setProperty("mail_Subject", mail_Subject.toString());
				
			}
			
			if(FUERZA != null){
				
					this.setProperty("FUERZA", FUERZA.toString());
				
			}
			
			if(ESM_REMITE != null){
				
					this.setProperty("ESM_REMITE", ESM_REMITE.toString());
				
			}
			
			if(VINCULACION != null){
				
					this.setProperty("VINCULACION", VINCULACION.toString());
				
			}
			
			if(ESQUEMA != null){
				
					this.setProperty("ESQUEMA", ESQUEMA.toString());
				
			}
			
			if(ARCHIVOS_ID != null){
				
					this.setProperty("ARCHIVOS_ID", ARCHIVOS_ID.toString());
				
			}
			
			if(USUARIO != null){
				
					this.setProperty("USUARIO", USUARIO.toString());
				
			}
			
			if(EDAD_INICIAL != null){
				
					this.setProperty("EDAD_INICIAL", EDAD_INICIAL.toString());
				
			}
			
			if(CARPETA_TEMPORAL != null){
				
					this.setProperty("CARPETA_TEMPORAL", CARPETA_TEMPORAL.toString());
				
			}
			
			if(FECHA_FINAL != null){
				
					this.setProperty("FECHA_FINAL", FECHA_FINAL.toString());
				
			}
			
			if(CARPETA_SALIDA != null){
				
					this.setProperty("CARPETA_SALIDA", CARPETA_SALIDA.toString());
				
			}
			
			if(SIGLA != null){
				
					this.setProperty("SIGLA", SIGLA.toString());
				
			}
			
			if(NOMBRE_CONSOLIDADO != null){
				
					this.setProperty("NOMBRE_CONSOLIDADO", NOMBRE_CONSOLIDADO.toString());
				
			}
			
			if(DEPARTAMENTO != null){
				
					this.setProperty("DEPARTAMENTO", DEPARTAMENTO.toString());
				
			}
			
			if(CLASIFICACION != null){
				
					this.setProperty("CLASIFICACION", CLASIFICACION.toString());
				
			}
			
			if(CIUDAD != null){
				
					this.setProperty("CIUDAD", CIUDAD.toString());
				
			}
			
			if(FECHA_HORA_FINAL_EJECUCION != null){
				
					String pattern_FECHA_HORA_FINAL_EJECUCION = "yyyy-MM-dd HH:mm:ss";
					String value_FECHA_HORA_FINAL_EJECUCION = "";
					String[] parts_FECHA_HORA_FINAL_EJECUCION = value_FECHA_HORA_FINAL_EJECUCION.split(";");
					if(parts_FECHA_HORA_FINAL_EJECUCION.length > 1){
						pattern_FECHA_HORA_FINAL_EJECUCION = parts_FECHA_HORA_FINAL_EJECUCION[0];
						this.setProperty("FECHA_HORA_FINAL_EJECUCION", pattern_FECHA_HORA_FINAL_EJECUCION + ";" + FormatterUtils.format_Date(FECHA_HORA_FINAL_EJECUCION, pattern_FECHA_HORA_FINAL_EJECUCION));
					}else{
						this.setProperty("FECHA_HORA_FINAL_EJECUCION", FormatterUtils.format_Date(FECHA_HORA_FINAL_EJECUCION, pattern_FECHA_HORA_FINAL_EJECUCION));
					}
				
			}
			
			if(ID != null){
				
					this.setProperty("ID", ID.toString());
				
			}
			
			if(FECHA_HORA_INICIO_EJECUCION != null){
				
					String pattern_FECHA_HORA_INICIO_EJECUCION = "yyyy-MM-dd HH:mm:ss";
					String value_FECHA_HORA_INICIO_EJECUCION = "";
					String[] parts_FECHA_HORA_INICIO_EJECUCION = value_FECHA_HORA_INICIO_EJECUCION.split(";");
					if(parts_FECHA_HORA_INICIO_EJECUCION.length > 1){
						pattern_FECHA_HORA_INICIO_EJECUCION = parts_FECHA_HORA_INICIO_EJECUCION[0];
						this.setProperty("FECHA_HORA_INICIO_EJECUCION", pattern_FECHA_HORA_INICIO_EJECUCION + ";" + FormatterUtils.format_Date(FECHA_HORA_INICIO_EJECUCION, pattern_FECHA_HORA_INICIO_EJECUCION));
					}else{
						this.setProperty("FECHA_HORA_INICIO_EJECUCION", FormatterUtils.format_Date(FECHA_HORA_INICIO_EJECUCION, pattern_FECHA_HORA_INICIO_EJECUCION));
					}
				
			}
			
			if(FECHA_INICIAL != null){
				
					this.setProperty("FECHA_INICIAL", FECHA_INICIAL.toString());
				
			}
			
			if(REGIONAL != null){
				
					this.setProperty("REGIONAL", REGIONAL.toString());
				
			}
			
			if(EDAD_FINAL != null){
				
					this.setProperty("EDAD_FINAL", EDAD_FINAL.toString());
				
			}
			
			if(ESPECIALIDAD_ID != null){
				
					this.setProperty("ESPECIALIDAD_ID", ESPECIALIDAD_ID.toString());
				
			}
			
			if(TIPO_USUARIO != null){
				
					this.setProperty("TIPO_USUARIO", TIPO_USUARIO.toString());
				
			}
			
			if(FECHA_REALIZACION != null){
				
					this.setProperty("FECHA_REALIZACION", FECHA_REALIZACION.toString());
				
			}
			
			if(PERIODO_INICIAL != null){
				
					this.setProperty("PERIODO_INICIAL", PERIODO_INICIAL.toString());
				
			}
			
			if(RAN_CONDICION_ODH != null){
				
					this.setProperty("RAN_CONDICION_ODH", RAN_CONDICION_ODH.toString());
				
			}
			
			if(NOMBRE_CSV != null){
				
					this.setProperty("NOMBRE_CSV", NOMBRE_CSV.toString());
				
			}
			
			if(ESPECIALIDAD != null){
				
					this.setProperty("ESPECIALIDAD", ESPECIALIDAD.toString());
				
			}
			
			if(RAN_CONDICION_PA != null){
				
					this.setProperty("RAN_CONDICION_PA", RAN_CONDICION_PA.toString());
				
			}
			
			if(TPLANAFILIACION != null){
				
					this.setProperty("TPLANAFILIACION", TPLANAFILIACION.toString());
				
			}
			
			if(ROLES_ID != null){
				
					this.setProperty("ROLES_ID", ROLES_ID.toString());
				
			}
			
			if(GRADO != null){
				
					this.setProperty("GRADO", GRADO.toString());
				
			}
			
			if(SEXO != null){
				
					this.setProperty("SEXO", SEXO.toString());
				
			}
			
			if(NOMBRE_ZIP != null){
				
					this.setProperty("NOMBRE_ZIP", NOMBRE_ZIP.toString());
				
			}
			
			if(GRUPO_EDAD != null){
				
					this.setProperty("GRUPO_EDAD", GRUPO_EDAD.toString());
				
			}
			
			if(TCOTIZACION != null){
				
					this.setProperty("TCOTIZACION", TCOTIZACION.toString());
				
			}
			
			if(ESM_NOMBRE != null){
				
					this.setProperty("ESM_NOMBRE", ESM_NOMBRE.toString());
				
			}
			
			if(FECHA_TITULO != null){
				
					this.setProperty("FECHA_TITULO", FECHA_TITULO.toString());
				
			}
			
			if(ESM_USUARIO != null){
				
					this.setProperty("ESM_USUARIO", ESM_USUARIO.toString());
				
			}
			
			if(FUERZA_NOMBRE != null){
				
					this.setProperty("FUERZA_NOMBRE", FUERZA_NOMBRE.toString());
				
			}
			
			if(TIPO_CITA != null){
				
					this.setProperty("TIPO_CITA", TIPO_CITA.toString());
				
			}
			
			if(PERIODO_FINAL != null){
				
					this.setProperty("PERIODO_FINAL", PERIODO_FINAL.toString());
				
			}
			
			if(TIPO_SOLICITUD != null){
				
					this.setProperty("TIPO_SOLICITUD", TIPO_SOLICITUD.toString());
				
			}
			
			if(GE_VALOR_MENOR != null){
				
					this.setProperty("GE_VALOR_MENOR", GE_VALOR_MENOR.toString());
				
			}
			
			if(RAN_CONDICION_AD != null){
				
					this.setProperty("RAN_CONDICION_AD", RAN_CONDICION_AD.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public java.lang.String db_origen_Password;
public java.lang.String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_destino_ServiceName;
public String getDb_destino_ServiceName(){
	return this.db_destino_ServiceName;
}
public String db_destino_AdditionalParams;
public String getDb_destino_AdditionalParams(){
	return this.db_destino_AdditionalParams;
}
public String db_destino_Login;
public String getDb_destino_Login(){
	return this.db_destino_Login;
}
public String db_destino_Port;
public String getDb_destino_Port(){
	return this.db_destino_Port;
}
public String db_destino_Schema;
public String getDb_destino_Schema(){
	return this.db_destino_Schema;
}
public String db_destino_Server;
public String getDb_destino_Server(){
	return this.db_destino_Server;
}
public java.lang.String db_destino_Password;
public java.lang.String getDb_destino_Password(){
	return this.db_destino_Password;
}
public Boolean ACTUALIZACION_TOTAL;
public Boolean getACTUALIZACION_TOTAL(){
	return this.ACTUALIZACION_TOTAL;
}
public String FECHA_TERMINACION;
public String getFECHA_TERMINACION(){
	return this.FECHA_TERMINACION;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String FANTERIOR;
public String getFANTERIOR(){
	return this.FANTERIOR;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String BODEGA;
public String getBODEGA(){
	return this.BODEGA;
}
public Integer ID_SOLICITUD;
public Integer getID_SOLICITUD(){
	return this.ID_SOLICITUD;
}
public Integer LAST_DAYS;
public Integer getLAST_DAYS(){
	return this.LAST_DAYS;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public String mail_User;
public String getMail_User(){
	return this.mail_User;
}
public String mail_Message;
public String getMail_Message(){
	return this.mail_Message;
}
public String mail_To;
public String getMail_To(){
	return this.mail_To;
}
public String mail_SMTP_Port;
public String getMail_SMTP_Port(){
	return this.mail_SMTP_Port;
}
public java.lang.String mail_Password;
public java.lang.String getMail_Password(){
	return this.mail_Password;
}
public String mail_SMTP_Host;
public String getMail_SMTP_Host(){
	return this.mail_SMTP_Host;
}
public String mail_Sendername;
public String getMail_Sendername(){
	return this.mail_Sendername;
}
public String mail_Subject;
public String getMail_Subject(){
	return this.mail_Subject;
}
public String FUERZA;
public String getFUERZA(){
	return this.FUERZA;
}
public String ESM_REMITE;
public String getESM_REMITE(){
	return this.ESM_REMITE;
}
public String VINCULACION;
public String getVINCULACION(){
	return this.VINCULACION;
}
public String ESQUEMA;
public String getESQUEMA(){
	return this.ESQUEMA;
}
public BigDecimal ARCHIVOS_ID;
public BigDecimal getARCHIVOS_ID(){
	return this.ARCHIVOS_ID;
}
public String USUARIO;
public String getUSUARIO(){
	return this.USUARIO;
}
public String EDAD_INICIAL;
public String getEDAD_INICIAL(){
	return this.EDAD_INICIAL;
}
public String CARPETA_TEMPORAL;
public String getCARPETA_TEMPORAL(){
	return this.CARPETA_TEMPORAL;
}
public String FECHA_FINAL;
public String getFECHA_FINAL(){
	return this.FECHA_FINAL;
}
public String CARPETA_SALIDA;
public String getCARPETA_SALIDA(){
	return this.CARPETA_SALIDA;
}
public String SIGLA;
public String getSIGLA(){
	return this.SIGLA;
}
public String NOMBRE_CONSOLIDADO;
public String getNOMBRE_CONSOLIDADO(){
	return this.NOMBRE_CONSOLIDADO;
}
public String DEPARTAMENTO;
public String getDEPARTAMENTO(){
	return this.DEPARTAMENTO;
}
public String CLASIFICACION;
public String getCLASIFICACION(){
	return this.CLASIFICACION;
}
public String CIUDAD;
public String getCIUDAD(){
	return this.CIUDAD;
}
public java.util.Date FECHA_HORA_FINAL_EJECUCION;
public java.util.Date getFECHA_HORA_FINAL_EJECUCION(){
	return this.FECHA_HORA_FINAL_EJECUCION;
}
public BigDecimal ID;
public BigDecimal getID(){
	return this.ID;
}
public java.util.Date FECHA_HORA_INICIO_EJECUCION;
public java.util.Date getFECHA_HORA_INICIO_EJECUCION(){
	return this.FECHA_HORA_INICIO_EJECUCION;
}
public String FECHA_INICIAL;
public String getFECHA_INICIAL(){
	return this.FECHA_INICIAL;
}
public String REGIONAL;
public String getREGIONAL(){
	return this.REGIONAL;
}
public String EDAD_FINAL;
public String getEDAD_FINAL(){
	return this.EDAD_FINAL;
}
public String ESPECIALIDAD_ID;
public String getESPECIALIDAD_ID(){
	return this.ESPECIALIDAD_ID;
}
public String TIPO_USUARIO;
public String getTIPO_USUARIO(){
	return this.TIPO_USUARIO;
}
public String FECHA_REALIZACION;
public String getFECHA_REALIZACION(){
	return this.FECHA_REALIZACION;
}
public String PERIODO_INICIAL;
public String getPERIODO_INICIAL(){
	return this.PERIODO_INICIAL;
}
public String RAN_CONDICION_ODH;
public String getRAN_CONDICION_ODH(){
	return this.RAN_CONDICION_ODH;
}
public String NOMBRE_CSV;
public String getNOMBRE_CSV(){
	return this.NOMBRE_CSV;
}
public String ESPECIALIDAD;
public String getESPECIALIDAD(){
	return this.ESPECIALIDAD;
}
public String RAN_CONDICION_PA;
public String getRAN_CONDICION_PA(){
	return this.RAN_CONDICION_PA;
}
public String TPLANAFILIACION;
public String getTPLANAFILIACION(){
	return this.TPLANAFILIACION;
}
public String ROLES_ID;
public String getROLES_ID(){
	return this.ROLES_ID;
}
public String GRADO;
public String getGRADO(){
	return this.GRADO;
}
public String SEXO;
public String getSEXO(){
	return this.SEXO;
}
public String NOMBRE_ZIP;
public String getNOMBRE_ZIP(){
	return this.NOMBRE_ZIP;
}
public String GRUPO_EDAD;
public String getGRUPO_EDAD(){
	return this.GRUPO_EDAD;
}
public String TCOTIZACION;
public String getTCOTIZACION(){
	return this.TCOTIZACION;
}
public String ESM_NOMBRE;
public String getESM_NOMBRE(){
	return this.ESM_NOMBRE;
}
public String FECHA_TITULO;
public String getFECHA_TITULO(){
	return this.FECHA_TITULO;
}
public String ESM_USUARIO;
public String getESM_USUARIO(){
	return this.ESM_USUARIO;
}
public String FUERZA_NOMBRE;
public String getFUERZA_NOMBRE(){
	return this.FUERZA_NOMBRE;
}
public String TIPO_CITA;
public String getTIPO_CITA(){
	return this.TIPO_CITA;
}
public String PERIODO_FINAL;
public String getPERIODO_FINAL(){
	return this.PERIODO_FINAL;
}
public String TIPO_SOLICITUD;
public String getTIPO_SOLICITUD(){
	return this.TIPO_SOLICITUD;
}
public String GE_VALOR_MENOR;
public String getGE_VALOR_MENOR(){
	return this.GE_VALOR_MENOR;
}
public String RAN_CONDICION_AD;
public String getRAN_CONDICION_AD(){
	return this.RAN_CONDICION_AD;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "AfiConsolidados";
	private final String projectName = "REP_CONSOLIDADOS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				AfiConsolidados.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(AfiConsolidados.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileArchive_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileArchive_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileDelete_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileList_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileList_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileList_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileArchive_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileList_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileList_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 48;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				
			    public String MailTo;

				public String getMailTo () {
					return this.MailTo;
				}

				public Boolean MailToIsNullable(){
				    return true;
				}
				public Boolean MailToIsKey(){
				    return false;
				}
				public Integer MailToLength(){
				    return 0;
				}
				public Integer MailToPrecision(){
				    return 0;
				}
				public String MailToDefault(){
				
					return null;
				
				}
				public String MailToComment(){
				
				    return "";
				
				}
				public String MailToPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MailToOriginalDbColumnName(){
				
					return "MailTo";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.PathStorage = this.PathStorage;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            other.MailTo = this.MailTo;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
					this.MailTo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
					this.MailTo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
					// String
				
						writeString(this.MailTo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
					// String
				
						writeString(this.MailTo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
		sb.append(",MailTo="+MailTo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class XML_API_tFileInputXML_1{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();

String[] queryPaths_tFileInputXML_1 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"	
	,"PathStorage"		
	,"PathStorage"+"/@xsi:nil"	
	,"SMTPHost"		
	,"SMTPHost"+"/@xsi:nil"	
	,"SMTPPort"		
	,"SMTPPort"+"/@xsi:nil"	
	,"UsernameMail"		
	,"UsernameMail"+"/@xsi:nil"	
	,"PasswordMail"		
	,"PasswordMail"+"/@xsi:nil"	
	,"MailTo"		
	,"MailTo"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_1 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_1 = "";
String[] node_tFileInputXML_1 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_1 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_1,asXMLs_tFileInputXML_1);
looper_tFileInputXML_1.setEncoding("UTF-8");
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_1 instanceof java.io.InputStream){
	looper_tFileInputXML_1.parse((java.io.InputStream)filename_tFileInputXML_1);
}else{
	looper_tFileInputXML_1.parse(String.valueOf(filename_tFileInputXML_1));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_1  = looper_tFileInputXML_1.iterator();
while (it_tFileInputXML_1.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_1 = it_tFileInputXML_1.next();
	if (nb_line_tFileInputXML_1>=50) {
	
			looper_tFileInputXML_1.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row8 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row8 = new row8Struct();
	try{
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Host");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.Host =null;
									}else{
		row8.Host = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Port");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.Port =null;
									}else{
		row8.Port = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Sid");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.Sid =null;
									}else{
		row8.Sid = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("ServiceName");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.ServiceName =null;
									}else{
		row8.ServiceName = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Schema");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.Schema =null;
									}else{
		row8.Schema = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("User");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.User =null;
									}else{
		row8.User = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("Password");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.Password =null;
									}else{
		row8.Password = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PathStorage");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PathStorage"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.PathStorage =null;
									}else{
		row8.PathStorage = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPHost");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPHost"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.SMTPHost =null;
									}else{
		row8.SMTPHost = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("SMTPPort");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("SMTPPort"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.SMTPPort =null;
									}else{
		row8.SMTPPort = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("UsernameMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("UsernameMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.UsernameMail =null;
									}else{
		row8.UsernameMail = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("PasswordMail");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("PasswordMail"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.PasswordMail =null;
									}else{
		row8.PasswordMail = str_tFileInputXML_1;
	}
	str_tFileInputXML_1 = row_tFileInputXML_1.get("MailTo");
	node_tFileInputXML_1 = new String[]{str_tFileInputXML_1,row_tFileInputXML_1.get("MailTo"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row8.MailTo =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row8.MailTo ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row8.MailTo =null;
									}else{
		row8.MailTo = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row8"
if(row8 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

    context.db_origen_Server = row8.Host;
context.db_origen_Port = row8.Port;
/*context.db_origen_Sid = row8.Sid;*/
context.db_origen_Login = row8.User;
context.db_origen_Password = row8.Password;
context.db_origen_ServiceName = row8.ServiceName;
context.db_origen_Schema = row8.Schema;

context.FECHA_HORA_INICIO_EJECUCION = new Date();
context.ESTADO_EXEC = "Fail" ;
context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row8"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


	}
	try {
		looper_tFileInputXML_1.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tFileInputXML_2Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 12;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFileInputXML_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_2", false);
		start_Hash.put("tFileInputXML_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_2";
	
	
		int tos_count_tFileInputXML_2 = 0;
		

	

int nb_line_tFileInputXML_2 = 0;

	String os_tFileInputXML_2 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_2=false;
	if(os_tFileInputXML_2.indexOf("windows") > -1 || os_tFileInputXML_2.indexOf("nt") > -1){
		isWindows_tFileInputXML_2=true;
	}
class XML_API_tFileInputXML_2{
	public boolean isDefNull(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0] != null && node[1]!=null && ("true").equals(node[1])){
        	return true;
        }
        return false;
    }

    public boolean isMissing(String[] node) throws javax.xml.transform.TransformerException {
        return node[0] == null ? true : false;
    }

    public boolean isEmpty(String[] node) throws javax.xml.transform.TransformerException {
        if(node[0]!=null ){
        	return node[0].length() == 0;
        }
        return false;
    }
}
XML_API_tFileInputXML_2 xml_api_tFileInputXML_2 = new XML_API_tFileInputXML_2();

String[] queryPaths_tFileInputXML_2 = new String[]{	
	"Host"		
	,"Host"+"/@xsi:nil"	
	,"Port"		
	,"Port"+"/@xsi:nil"	
	,"Sid"		
	,"Sid"+"/@xsi:nil"	
	,"ServiceName"		
	,"ServiceName"+"/@xsi:nil"	
	,"Schema"		
	,"Schema"+"/@xsi:nil"	
	,"User"		
	,"User"+"/@xsi:nil"	
	,"Password"		
	,"Password"+"/@xsi:nil"
};

boolean[] asXMLs_tFileInputXML_2 = new boolean[]{	
	false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false	
	,false		
	,false
};

String str_tFileInputXML_2 = "";
String[] node_tFileInputXML_2 = null;
org.talend.xml.sax.SAXLooper looper_tFileInputXML_2 = new org.talend.xml.sax.SAXLooper("/connectionStrings",queryPaths_tFileInputXML_2,asXMLs_tFileInputXML_2);
looper_tFileInputXML_2.setEncoding("UTF-8");
Object filename_tFileInputXML_2 = null;
try {
	filename_tFileInputXML_2 = context.BODEGA;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
	
	throw(e);
	
}
if(filename_tFileInputXML_2 != null && filename_tFileInputXML_2 instanceof String && filename_tFileInputXML_2.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_2){
		filename_tFileInputXML_2 = filename_tFileInputXML_2.toString().replaceFirst("//","/");
	}
}
if(filename_tFileInputXML_2 instanceof java.io.InputStream){
	looper_tFileInputXML_2.parse((java.io.InputStream)filename_tFileInputXML_2);
}else{
	looper_tFileInputXML_2.parse(String.valueOf(filename_tFileInputXML_2));
}
java.util.Iterator<java.util.Map<String, String>> it_tFileInputXML_2  = looper_tFileInputXML_2.iterator();
while (it_tFileInputXML_2.hasNext()) {
	java.util.Map<String, String> row_tFileInputXML_2 = it_tFileInputXML_2.next();
	if (nb_line_tFileInputXML_2>=50) {
	
			looper_tFileInputXML_2.stopRead();
	
		break;
	}
		nb_line_tFileInputXML_2++;
		
	row9 = null;			
	boolean whetherReject_tFileInputXML_2 = false;
	row9 = new row9Struct();
	try{
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Host");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Host"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.Host =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.Host ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.Host =null;
									}else{
		row9.Host = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Port");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Port"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.Port =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.Port ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.Port =null;
									}else{
		row9.Port = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Sid");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Sid"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.Sid =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.Sid ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.Sid =null;
									}else{
		row9.Sid = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("ServiceName");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("ServiceName"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.ServiceName =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.ServiceName ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.ServiceName =null;
									}else{
		row9.ServiceName = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Schema");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Schema"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.Schema =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.Schema ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.Schema =null;
									}else{
		row9.Schema = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("User");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("User"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.User =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.User ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.User =null;
									}else{
		row9.User = str_tFileInputXML_2;
	}
	str_tFileInputXML_2 = row_tFileInputXML_2.get("Password");
	node_tFileInputXML_2 = new String[]{str_tFileInputXML_2,row_tFileInputXML_2.get("Password"+"/@xsi:nil")};
									if(xml_api_tFileInputXML_2.isDefNull(node_tFileInputXML_2)){
											row9.Password =null;
									}else if(xml_api_tFileInputXML_2.isEmpty(node_tFileInputXML_2)){
										row9.Password ="";
									}else if(xml_api_tFileInputXML_2.isMissing(node_tFileInputXML_2 )){ 
										row9.Password =null;
									}else{
		row9.Password = str_tFileInputXML_2;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_2 = true;
            throw(e);
    }
			
			

 



/**
 * [tFileInputXML_2 begin ] stop
 */
	
	/**
	 * [tFileInputXML_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 


	tos_count_tFileInputXML_2++;

/**
 * [tFileInputXML_2 main ] stop
 */
	
	/**
	 * [tFileInputXML_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_begin ] stop
 */
// Start of branch "row9"
if(row9 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

    context.db_destino_Server = row9.Host;
context.db_destino_Port = row9.Port;
/*context.db_destino_Sid = row9.Sid;*/
context.db_destino_Login = row9.User;
context.db_destino_Password = row9.Password;
context.db_destino_ServiceName = row9.ServiceName;
context.db_destino_Schema = row9.Schema;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row9"




	
	/**
	 * [tFileInputXML_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	


	}
	try {
		looper_tFileInputXML_2.handleTaskResponse();
	} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_2_ERROR_MESSAGE",e.getMessage());
		if(!(e.getCause() instanceof org.talend.xml.sax.exception.EnoughDataException))
	
		throw(e);
	
	}
	globalMap.put("tFileInputXML_2_NB_LINE",nb_line_tFileInputXML_2);

	

 

ok_Hash.put("tFileInputXML_2", true);
end_Hash.put("tFileInputXML_2", System.currentTimeMillis());




/**
 * [tFileInputXML_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tOracleConnection_2Process(globalMap);



/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_2";
	
	

 



/**
 * [tFileInputXML_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_2_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_2", false);
		start_Hash.put("tOracleConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_2";
	
	
		int tos_count_tOracleConnection_2 = 0;
		
	

	
        String url_tOracleConnection_2 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_destino_Server + ")(port=" + context.db_destino_Port + "))(connect_data=(service_name=" + context.db_destino_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_2", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_2 = context.db_destino_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_2 = context.db_destino_Password; 
		String dbPwd_tOracleConnection_2 = decryptedPassword_tOracleConnection_2;
	
	
	java.sql.Connection conn_tOracleConnection_2 = null;
	
		
			String driverClass_tOracleConnection_2 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_2 = java.lang.Class.forName(driverClass_tOracleConnection_2);
			globalMap.put("driverClass_tOracleConnection_2", driverClass_tOracleConnection_2);
		
			java.util.Properties atnParamsPrope_tOracleConnection_2 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_2.put("user",dbUser_tOracleConnection_2);
			    atnParamsPrope_tOracleConnection_2.put("password",dbPwd_tOracleConnection_2);
			if(context.db_destino_AdditionalParams != null && !"\"\"".equals(context.db_destino_AdditionalParams) && !"".equals(context.db_destino_AdditionalParams)){
                atnParamsPrope_tOracleConnection_2.load(new java.io.ByteArrayInputStream(context.db_destino_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_2 = java.sql.DriverManager.getConnection(url_tOracleConnection_2, atnParamsPrope_tOracleConnection_2);

		globalMap.put("conn_tOracleConnection_2", conn_tOracleConnection_2);
	if (null != conn_tOracleConnection_2) {
		
			conn_tOracleConnection_2.setAutoCommit(false);
	}
        globalMap.put("host_" + "tOracleConnection_2",context.db_destino_Server);
        globalMap.put("port_" + "tOracleConnection_2",context.db_destino_Port);
        globalMap.put("dbname_" + "tOracleConnection_2",context.db_destino_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_2", context.db_destino_Schema);
	globalMap.put("username_" + "tOracleConnection_2",context.db_destino_Login);
	globalMap.put("password_" + "tOracleConnection_2",dbPwd_tOracleConnection_2);

 



/**
 * [tOracleConnection_2 begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 


	tos_count_tOracleConnection_2++;

/**
 * [tOracleConnection_2 main ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_2 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 

ok_Hash.put("tOracleConnection_2", true);
end_Hash.put("tOracleConnection_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tOracleInput_1Process(globalMap);



/**
 * [tOracleConnection_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_2";
	
	

 



/**
 * [tOracleConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_2_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal UORG_ID;

				public BigDecimal getUORG_ID () {
					return this.UORG_ID;
				}

				public Boolean UORG_IDIsNullable(){
				    return true;
				}
				public Boolean UORG_IDIsKey(){
				    return false;
				}
				public Integer UORG_IDLength(){
				    return 0;
				}
				public Integer UORG_IDPrecision(){
				    return 0;
				}
				public String UORG_IDDefault(){
				
					return "";
				
				}
				public String UORG_IDComment(){
				
				    return "";
				
				}
				public String UORG_IDPattern(){
				
					return "";
				
				}
				public String UORG_IDOriginalDbColumnName(){
				
					return "UORG_ID";
				
				}

				
			    public BigDecimal USUARIO_ID;

				public BigDecimal getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 0;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return "";
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public String PARAMETTROS;

				public String getPARAMETTROS () {
					return this.PARAMETTROS;
				}

				public Boolean PARAMETTROSIsNullable(){
				    return true;
				}
				public Boolean PARAMETTROSIsKey(){
				    return false;
				}
				public Integer PARAMETTROSLength(){
				    return 250;
				}
				public Integer PARAMETTROSPrecision(){
				    return 0;
				}
				public String PARAMETTROSDefault(){
				
					return null;
				
				}
				public String PARAMETTROSComment(){
				
				    return "";
				
				}
				public String PARAMETTROSPattern(){
				
					return "";
				
				}
				public String PARAMETTROSOriginalDbColumnName(){
				
					return "PARAMETTROS";
				
				}

				
			    public String TIPO_ARCHIVO;

				public String getTIPO_ARCHIVO () {
					return this.TIPO_ARCHIVO;
				}

				public Boolean TIPO_ARCHIVOIsNullable(){
				    return true;
				}
				public Boolean TIPO_ARCHIVOIsKey(){
				    return false;
				}
				public Integer TIPO_ARCHIVOLength(){
				    return 50;
				}
				public Integer TIPO_ARCHIVOPrecision(){
				    return 0;
				}
				public String TIPO_ARCHIVODefault(){
				
					return null;
				
				}
				public String TIPO_ARCHIVOComment(){
				
				    return "";
				
				}
				public String TIPO_ARCHIVOPattern(){
				
					return "";
				
				}
				public String TIPO_ARCHIVOOriginalDbColumnName(){
				
					return "TIPO_ARCHIVO";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 10;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 25;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIO_ID = (BigDecimal) dis.readObject();
					
					this.PARAMETTROS = readString(dis);
					
					this.TIPO_ARCHIVO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.UORG_ID = (BigDecimal) dis.readObject();
					
						this.USUARIO_ID = (BigDecimal) dis.readObject();
					
					this.PARAMETTROS = readString(dis);
					
					this.TIPO_ARCHIVO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.USUARIO_ID);
					
					// String
				
						writeString(this.PARAMETTROS,dos);
					
					// String
				
						writeString(this.TIPO_ARCHIVO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UORG_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.USUARIO_ID);
					
					// String
				
						writeString(this.PARAMETTROS,dos);
					
					// String
				
						writeString(this.TIPO_ARCHIVO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",UORG_ID="+String.valueOf(UORG_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",PARAMETTROS="+PARAMETTROS);
		sb.append(",TIPO_ARCHIVO="+TIPO_ARCHIVO);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",ESTADO="+ESTADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tJava_2 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement();

		    String dbquery_tOracleInput_1 = "SELECT RSA.ID,\n       RSA.UORG_ID,\n       RSA.USUARIO_ID,\n       RSA.PARAMETTROS,\n       RTSA.NOMBRE AS TIPO_ARCHIV"
+"O,\n       RTSA.SIGLA,\n       RSA.ESTADO\nFROM   SALUDSIS.REP_SARCHIVO RSA\nINNER  JOIN SALUDSIS.REP_TSARCHIVO RTSA ON "
+"RTSA.ID = RSA.TSARCHIVO_ID\nWHERE  RSA.ID = " +  context.ID + "\nORDER  BY RSA.ID DESC"
;
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row3.ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row3.ID = rs_tOracleInput_1.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row3.UORG_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(2) != null) {
						row3.UORG_ID = rs_tOracleInput_1.getBigDecimal(2);
					} else {
				
						row3.UORG_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row3.USUARIO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(3) != null) {
						row3.USUARIO_ID = rs_tOracleInput_1.getBigDecimal(3);
					} else {
				
						row3.USUARIO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row3.PARAMETTROS = null;
							} else {
	                         		
        	row3.PARAMETTROS = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 5) {
								row3.TIPO_ARCHIVO = null;
							} else {
	                         		
        	row3.TIPO_ARCHIVO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 6) {
								row3.SIGLA = null;
							} else {
	                         		
        	row3.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 7) {
								row3.ESTADO = null;
							} else {
	                         		
        	row3.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 7, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


    	            
            globalMap.put("row3.ID", row3.ID);
    	            
            globalMap.put("row3.UORG_ID", row3.UORG_ID);
    	            
            globalMap.put("row3.USUARIO_ID", row3.USUARIO_ID);
    	            
            globalMap.put("row3.PARAMETTROS", row3.PARAMETTROS);
    	            
            globalMap.put("row3.TIPO_ARCHIVO", row3.TIPO_ARCHIVO);
    	            
            globalMap.put("row3.SIGLA", row3.SIGLA);
    	            
            globalMap.put("row3.ESTADO", row3.ESTADO);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tJava_2++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row101", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("If1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outSolicitudArchivo", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("out1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row102", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("If2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate4", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tJava_2);
					//Thread.sleep(1000);
				}				
			

	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("Run on SubJob AfiConsolidados: "+context.NOMBRE_CONSOLIDADO);

//////////////Obtiene los parametros de los consolidados en un objeto JSON /////////////////////
JSONObject data = new JSONObject(row3.PARAMETTROS);

System.out.println(row3.PARAMETTROS);

///////////////////////Variables generales del consolidado ////////////////////////
context.ID = row3.ID; // ID 
context.SIGLA = row3.SIGLA; //SIGLA
context.NOMBRE_CONSOLIDADO = row3.TIPO_ARCHIVO; //Nombre del consolidado


/////////////////////////Filtros generales ////////////////////////////////////////
try 
{

	context.FECHA_INICIAL = data.getString("FECHA_INICIAL"); // fecha inicial
	context.FECHA_FINAL = data.getString("FECHA_FINAL"); // fecha final
} catch (Exception e) {
	System.err.println("Error parámetro no encontrado: "+e.getMessage()+context.NOMBRE_CONSOLIDADO);
}

try 
{

	context.ESM_REMITE = data.getString("UORG_ID") ; // esm
	
} catch (Exception e) {
	System.err.println("Error parámetro no encontrado: "+e.getMessage()+context.NOMBRE_CONSOLIDADO);
}

///// PARAMETROS OPCIONALES EXCLUSIVO PARA CADA REPORTE


///// REPORTE CONSOLIDADO ENCUESTA DE SALUD AFILIADOS - AFIENC
if ( row3.SIGLA.equals("AFIENC")  )
{
	try 
	{				

		context.FUERZA = data.getString("FUERZA_ID");
	} 
	catch (Exception e) 
	{
		System.err.println("Error parámetro no encontrado: "+e.getMessage()+context.NOMBRE_CONSOLIDADO);
	}
} 

////////////////IMPRIME EN CONSOLA LOS PARÁMETROS DE LOS CONSOLIDADOS /////////////////////

///////////////////////CONDICION PARA UORG_ID////////////////////////////////

if (context.ESM_REMITE.equals("0")) {
	context.ESM_REMITE = "200";
	System.out.println("UORG_ID con valor = 0 :"+context.ESM_REMITE);
} else {
System.out.println("UORG_ID con valor <> 0 :"+context.ESM_REMITE);
}

System.out.println("---------------------------------------------------------------------");
System.out.println("Consolidado Solicitado: "+context.NOMBRE_CONSOLIDADO);
System.out.println("context.FECHA_INICIAL: "+context.FECHA_INICIAL);
System.out.println("context.FECHA_FINAL: "+context.FECHA_FINAL);
System.out.println("context.FUERZA: "+context.FUERZA);
System.out.println("context.ESM_REMITE: "+context.ESM_REMITE);
System.out.println("context.ESM_USUARIO: "+context.ESM_USUARIO);
System.out.println("context.SIGLA: "+context.SIGLA);
System.out.println("context.USUARIO: "+context.USUARIO);
System.out.println("context.CIUDAD: "+context.CIUDAD);
System.out.println("context.DEPARTAMENTO: "+context.DEPARTAMENTO);
System.out.println("context.REGIONAL: "+context.REGIONAL);
System.out.println("context.EDAD_INICIAL: "+context.EDAD_INICIAL);
System.out.println("context.EDAD_FINAL: "+context.EDAD_FINAL);
System.out.println("context.ESQUEMA: "+context.ESQUEMA);
System.out.println("context.PERIODO_INICIAL: "+context.PERIODO_INICIAL);
System.out.println("context.PERIODO_FINAL: "+context.PERIODO_FINAL);
System.out.println("context.TIPO_USUARIO: "+context.TIPO_USUARIO);
System.out.println("context.GRUPO_EDAD: "+context.GRUPO_EDAD);
System.out.println("context.GRADO: "+context.GRADO);
System.out.println("context.SEXO: "+context.SEXO);
System.out.println("context.ESPECIALIDAD_ID: "+context.ESPECIALIDAD_ID);
System.out.println("context.TIPO_SOLICITUD: "+context.TIPO_SOLICITUD);
System.out.println("context.TIPO_CITA: "+context.TIPO_CITA);
System.out.println("context.ROLES_ID: "+context.ROLES_ID);
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

   			if (row3.SIGLA.equals("AFIENC")) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tOracleInput_2Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}
   			if (true) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If1", 0, "true");
					}
				tJava_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If1", 0, "false");
					}   	 
   				}



/**
 * [tJava_2 end ] stop
 */
						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tJava_2);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row101Struct implements routines.system.IPersistableRow<row101Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public String ESM;

				public String getESM () {
					return this.ESM;
				}

				public Boolean ESMIsNullable(){
				    return true;
				}
				public Boolean ESMIsKey(){
				    return false;
				}
				public Integer ESMLength(){
				    return 2000;
				}
				public Integer ESMPrecision(){
				    return 0;
				}
				public String ESMDefault(){
				
					return null;
				
				}
				public String ESMComment(){
				
				    return "";
				
				}
				public String ESMPattern(){
				
					return "";
				
				}
				public String ESMOriginalDbColumnName(){
				
					return "ESM";
				
				}

				
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return 500;
				}
				public Integer FUERZAPrecision(){
				    return 0;
				}
				public String FUERZADefault(){
				
					return null;
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String ESM_INGRESO;

				public String getESM_INGRESO () {
					return this.ESM_INGRESO;
				}

				public Boolean ESM_INGRESOIsNullable(){
				    return true;
				}
				public Boolean ESM_INGRESOIsKey(){
				    return false;
				}
				public Integer ESM_INGRESOLength(){
				    return 2000;
				}
				public Integer ESM_INGRESOPrecision(){
				    return 0;
				}
				public String ESM_INGRESODefault(){
				
					return null;
				
				}
				public String ESM_INGRESOComment(){
				
				    return "";
				
				}
				public String ESM_INGRESOPattern(){
				
					return "";
				
				}
				public String ESM_INGRESOOriginalDbColumnName(){
				
					return "ESM_INGRESO";
				
				}

				
			    public String USUARIO;

				public String getUSUARIO () {
					return this.USUARIO;
				}

				public Boolean USUARIOIsNullable(){
				    return true;
				}
				public Boolean USUARIOIsKey(){
				    return false;
				}
				public Integer USUARIOLength(){
				    return 500;
				}
				public Integer USUARIOPrecision(){
				    return 0;
				}
				public String USUARIODefault(){
				
					return null;
				
				}
				public String USUARIOComment(){
				
				    return "";
				
				}
				public String USUARIOPattern(){
				
					return "";
				
				}
				public String USUARIOOriginalDbColumnName(){
				
					return "USUARIO";
				
				}

				
			    public String PREGUNTAS_ENCABEZADO;

				public String getPREGUNTAS_ENCABEZADO () {
					return this.PREGUNTAS_ENCABEZADO;
				}

				public Boolean PREGUNTAS_ENCABEZADOIsNullable(){
				    return false;
				}
				public Boolean PREGUNTAS_ENCABEZADOIsKey(){
				    return false;
				}
				public Integer PREGUNTAS_ENCABEZADOLength(){
				    return 4000;
				}
				public Integer PREGUNTAS_ENCABEZADOPrecision(){
				    return null;
				}
				public String PREGUNTAS_ENCABEZADODefault(){
				
					return null;
				
				}
				public String PREGUNTAS_ENCABEZADOComment(){
				
				    return "";
				
				}
				public String PREGUNTAS_ENCABEZADOPattern(){
				
					return "";
				
				}
				public String PREGUNTAS_ENCABEZADOOriginalDbColumnName(){
				
					return "PREGUNTAS_ENCABEZADO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.ESM = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.ESM_INGRESO = readString(dis);
					
					this.USUARIO = readString(dis);
					
					this.PREGUNTAS_ENCABEZADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.ESM = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.ESM_INGRESO = readString(dis);
					
					this.USUARIO = readString(dis);
					
					this.PREGUNTAS_ENCABEZADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ESM,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.ESM_INGRESO,dos);
					
					// String
				
						writeString(this.USUARIO,dos);
					
					// String
				
						writeString(this.PREGUNTAS_ENCABEZADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ESM,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.ESM_INGRESO,dos);
					
					// String
				
						writeString(this.USUARIO,dos);
					
					// String
				
						writeString(this.PREGUNTAS_ENCABEZADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESM="+ESM);
		sb.append(",FUERZA="+FUERZA);
		sb.append(",ESM_INGRESO="+ESM_INGRESO);
		sb.append(",USUARIO="+USUARIO);
		sb.append(",PREGUNTAS_ENCABEZADO="+PREGUNTAS_ENCABEZADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row101Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row101Struct row101 = new row101Struct();




	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row101");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement();

		    String dbquery_tOracleInput_2 = "\nSELECT \n	NVL((SELECT NOMBRE FROM GEN_UORG WHERE ID = '"+context.ESM_REMITE+"'),  '- - -') AS ESM,\n	NVL((SELECT NOMBRE FROM GEN_FUERZAS WHERE ID = '"+context.FUERZA+"'),   '- - -') AS FUERZA,\n    NVL((SELECT NOMBRE FROM GEN_UORG WHERE ID = '"+context.ESM_USUARIO+"'), '- - -') AS ESM_INGRESO,\n    NVL((SELECT USUARIO FROM GEN_USUARIOS WHERE ID = '"+context.USUARIO+"'),   '- - -') AS USUARIO,\n    (SELECT LISTAGG(INITCAP(ADS.TEXTO) || ': ' || ADP.DS_ORDEN || '-' || ADP.TEXTO  , ';') "
+"WITHIN GROUP(ORDER BY ADP.DS_ORDEN)  FROM AFI_DS_PREGUNTAS ADP INNER JOIN AFI_DS_SECCIONES ADS ON ADS.ID = ADP.DS_SECCIO"
+"N_ID) AS PREGUNTAS_ENCABEZADO\nFROM DUAL\n";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row101.ESM = null;
							} else {
	                         		
        	row101.ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row101.FUERZA = null;
							} else {
	                         		
        	row101.FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row101.ESM_INGRESO = null;
							} else {
	                         		
        	row101.ESM_INGRESO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row101.USUARIO = null;
							} else {
	                         		
        	row101.USUARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 5) {
								row101.PREGUNTAS_ENCABEZADO = null;
							} else {
	                         		
        	row101.PREGUNTAS_ENCABEZADO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 5, false);
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row101"
						
						);
					}
					

    ///Fecha de realización:
context.FECHA_REALIZACION = TalendDate.getDate("DD-MM-YYYY HH:mm:ss" );
context.FECHA_TITULO = TalendDate.getDate("DD-MM-YYYY");

File theDirSalida = new File(context.CARPETA_SALIDA);

// if the directory does not exist, create it
if (!theDirSalida.exists()) {
    System.out.println("creating directory: " + theDirSalida.getName());
    boolean result = false;
    
    try{
        theDirSalida.mkdir();
        result = true;
    } 
    catch(SecurityException se){
        //handle it
    }        
    if(result) {    
        System.out.println("DIR created");  
    }
}

context.NOMBRE_CSV = context.ID +"-"+"ConsolidadoEncuestaSalud"+"-"+context.FECHA_TITULO +".csv";
context.NOMBRE_ZIP = context.ID +"-"+"ConsolidadoEncuestaSalud"+"-"+ context.FECHA_TITULO+".zip";
System.out.println(context.CARPETA_SALIDA);
System.out.println(context.NOMBRE_ZIP);  

/*Agrega los titulos y nombre*/	
File archivo = new File(context.CARPETA_SALIDA+"/"+context.NOMBRE_CSV);	
OutputStreamWriter bw = new OutputStreamWriter(new FileOutputStream(archivo), "ISO-8859-15");	

// Título
bw.write("Reporte consolidado encuesta salud afiliados");
bw.write("\n\n");	
bw.write("Fecha de generación: " +context.FECHA_REALIZACION);
bw.write("\n\n");

// Filtros
bw.write("Filtros: ");
bw.write("\n\nESM: " + row101.ESM);
bw.write("\nFuerza: " + row101.FUERZA);
bw.write("\nFecha inicial: " + context.FECHA_INICIAL);
bw.write("\nFecha final: "+ context.FECHA_FINAL);
bw.write("\nUsuario: " + row101.USUARIO);
bw.write("\n\n");

// Encabezados
bw.write("PRIMER NOMBRE;SEGUNDO NOMBRE;PRIMER APELLIDO;SEGUNDO APELLIDO;TIPO DOCUMENTO;DOCUMENTO;GRADO;FUERZA ADSCRIPCION;ESM ADSCRIPCION;TIPO AFILIADO;TIPO VINCULACION;"+ row101.PREGUNTAS_ENCABEZADO);
bw.write("\n");

// Cierra archivo
bw.close();

    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row101");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tOracleInput_3Process(globalMap);



/**
 * [tJavaRow_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return false;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 100;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 100;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 100;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 100;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 40;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return false;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return 100;
				}
				public Integer GRADOPrecision(){
				    return 0;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String FUERZA_ADSCRIPCION;

				public String getFUERZA_ADSCRIPCION () {
					return this.FUERZA_ADSCRIPCION;
				}

				public Boolean FUERZA_ADSCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean FUERZA_ADSCRIPCIONIsKey(){
				    return false;
				}
				public Integer FUERZA_ADSCRIPCIONLength(){
				    return 500;
				}
				public Integer FUERZA_ADSCRIPCIONPrecision(){
				    return 0;
				}
				public String FUERZA_ADSCRIPCIONDefault(){
				
					return null;
				
				}
				public String FUERZA_ADSCRIPCIONComment(){
				
				    return "";
				
				}
				public String FUERZA_ADSCRIPCIONPattern(){
				
					return "";
				
				}
				public String FUERZA_ADSCRIPCIONOriginalDbColumnName(){
				
					return "FUERZA_ADSCRIPCION";
				
				}

				
			    public String ESM_ADSCRIPCION;

				public String getESM_ADSCRIPCION () {
					return this.ESM_ADSCRIPCION;
				}

				public Boolean ESM_ADSCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean ESM_ADSCRIPCIONIsKey(){
				    return false;
				}
				public Integer ESM_ADSCRIPCIONLength(){
				    return null;
				}
				public Integer ESM_ADSCRIPCIONPrecision(){
				    return null;
				}
				public String ESM_ADSCRIPCIONDefault(){
				
					return null;
				
				}
				public String ESM_ADSCRIPCIONComment(){
				
				    return "";
				
				}
				public String ESM_ADSCRIPCIONPattern(){
				
					return "";
				
				}
				public String ESM_ADSCRIPCIONOriginalDbColumnName(){
				
					return "ESM_ADSCRIPCION";
				
				}

				
			    public String TIPO_AFILIADO;

				public String getTIPO_AFILIADO () {
					return this.TIPO_AFILIADO;
				}

				public Boolean TIPO_AFILIADOIsNullable(){
				    return false;
				}
				public Boolean TIPO_AFILIADOIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIADOLength(){
				    return null;
				}
				public Integer TIPO_AFILIADOPrecision(){
				    return null;
				}
				public String TIPO_AFILIADODefault(){
				
					return null;
				
				}
				public String TIPO_AFILIADOComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIADOPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIADOOriginalDbColumnName(){
				
					return "TIPO_AFILIADO";
				
				}

				
			    public String TIPO_VINCULACION;

				public String getTIPO_VINCULACION () {
					return this.TIPO_VINCULACION;
				}

				public Boolean TIPO_VINCULACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_VINCULACIONIsKey(){
				    return false;
				}
				public Integer TIPO_VINCULACIONLength(){
				    return null;
				}
				public Integer TIPO_VINCULACIONPrecision(){
				    return null;
				}
				public String TIPO_VINCULACIONDefault(){
				
					return null;
				
				}
				public String TIPO_VINCULACIONComment(){
				
				    return "";
				
				}
				public String TIPO_VINCULACIONPattern(){
				
					return "";
				
				}
				public String TIPO_VINCULACIONOriginalDbColumnName(){
				
					return "TIPO_VINCULACION";
				
				}

				
			    public String _PREGUNTA_1_;

				public String get_PREGUNTA_1_ () {
					return this._PREGUNTA_1_;
				}

				public Boolean _PREGUNTA_1_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_1_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_1_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_1_Precision(){
				    return 0;
				}
				public String _PREGUNTA_1_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_1_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_1_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_1_OriginalDbColumnName(){
				
					return "'PREGUNTA_1'";
				
				}

				
			    public String _PREGUNTA_2_;

				public String get_PREGUNTA_2_ () {
					return this._PREGUNTA_2_;
				}

				public Boolean _PREGUNTA_2_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_2_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_2_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_2_Precision(){
				    return 0;
				}
				public String _PREGUNTA_2_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_2_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_2_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_2_OriginalDbColumnName(){
				
					return "'PREGUNTA_2'";
				
				}

				
			    public String _PREGUNTA_3_;

				public String get_PREGUNTA_3_ () {
					return this._PREGUNTA_3_;
				}

				public Boolean _PREGUNTA_3_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_3_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_3_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_3_Precision(){
				    return 0;
				}
				public String _PREGUNTA_3_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_3_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_3_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_3_OriginalDbColumnName(){
				
					return "'PREGUNTA_3'";
				
				}

				
			    public String _PREGUNTA_4_;

				public String get_PREGUNTA_4_ () {
					return this._PREGUNTA_4_;
				}

				public Boolean _PREGUNTA_4_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_4_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_4_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_4_Precision(){
				    return 0;
				}
				public String _PREGUNTA_4_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_4_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_4_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_4_OriginalDbColumnName(){
				
					return "'PREGUNTA_4'";
				
				}

				
			    public String _PREGUNTA_5_;

				public String get_PREGUNTA_5_ () {
					return this._PREGUNTA_5_;
				}

				public Boolean _PREGUNTA_5_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_5_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_5_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_5_Precision(){
				    return 0;
				}
				public String _PREGUNTA_5_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_5_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_5_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_5_OriginalDbColumnName(){
				
					return "'PREGUNTA_5'";
				
				}

				
			    public String _PREGUNTA_6_;

				public String get_PREGUNTA_6_ () {
					return this._PREGUNTA_6_;
				}

				public Boolean _PREGUNTA_6_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_6_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_6_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_6_Precision(){
				    return 0;
				}
				public String _PREGUNTA_6_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_6_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_6_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_6_OriginalDbColumnName(){
				
					return "'PREGUNTA_6'";
				
				}

				
			    public String _PREGUNTA_7_;

				public String get_PREGUNTA_7_ () {
					return this._PREGUNTA_7_;
				}

				public Boolean _PREGUNTA_7_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_7_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_7_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_7_Precision(){
				    return 0;
				}
				public String _PREGUNTA_7_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_7_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_7_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_7_OriginalDbColumnName(){
				
					return "'PREGUNTA_7'";
				
				}

				
			    public String _PREGUNTA_8_;

				public String get_PREGUNTA_8_ () {
					return this._PREGUNTA_8_;
				}

				public Boolean _PREGUNTA_8_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_8_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_8_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_8_Precision(){
				    return 0;
				}
				public String _PREGUNTA_8_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_8_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_8_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_8_OriginalDbColumnName(){
				
					return "'PREGUNTA_8'";
				
				}

				
			    public String _PREGUNTA_9_;

				public String get_PREGUNTA_9_ () {
					return this._PREGUNTA_9_;
				}

				public Boolean _PREGUNTA_9_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_9_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_9_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_9_Precision(){
				    return 0;
				}
				public String _PREGUNTA_9_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_9_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_9_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_9_OriginalDbColumnName(){
				
					return "'PREGUNTA_9'";
				
				}

				
			    public String _PREGUNTA_10_;

				public String get_PREGUNTA_10_ () {
					return this._PREGUNTA_10_;
				}

				public Boolean _PREGUNTA_10_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_10_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_10_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_10_Precision(){
				    return 0;
				}
				public String _PREGUNTA_10_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_10_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_10_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_10_OriginalDbColumnName(){
				
					return "'PREGUNTA_10'";
				
				}

				
			    public String _PREGUNTA_11_;

				public String get_PREGUNTA_11_ () {
					return this._PREGUNTA_11_;
				}

				public Boolean _PREGUNTA_11_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_11_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_11_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_11_Precision(){
				    return 0;
				}
				public String _PREGUNTA_11_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_11_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_11_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_11_OriginalDbColumnName(){
				
					return "'PREGUNTA_11'";
				
				}

				
			    public String _PREGUNTA_12_;

				public String get_PREGUNTA_12_ () {
					return this._PREGUNTA_12_;
				}

				public Boolean _PREGUNTA_12_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_12_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_12_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_12_Precision(){
				    return 0;
				}
				public String _PREGUNTA_12_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_12_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_12_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_12_OriginalDbColumnName(){
				
					return "'PREGUNTA_12'";
				
				}

				
			    public String _PREGUNTA_13_;

				public String get_PREGUNTA_13_ () {
					return this._PREGUNTA_13_;
				}

				public Boolean _PREGUNTA_13_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_13_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_13_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_13_Precision(){
				    return 0;
				}
				public String _PREGUNTA_13_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_13_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_13_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_13_OriginalDbColumnName(){
				
					return "'PREGUNTA_13'";
				
				}

				
			    public String _PREGUNTA_14_;

				public String get_PREGUNTA_14_ () {
					return this._PREGUNTA_14_;
				}

				public Boolean _PREGUNTA_14_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_14_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_14_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_14_Precision(){
				    return 0;
				}
				public String _PREGUNTA_14_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_14_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_14_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_14_OriginalDbColumnName(){
				
					return "'PREGUNTA_14'";
				
				}

				
			    public String _PREGUNTA_15_;

				public String get_PREGUNTA_15_ () {
					return this._PREGUNTA_15_;
				}

				public Boolean _PREGUNTA_15_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_15_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_15_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_15_Precision(){
				    return 0;
				}
				public String _PREGUNTA_15_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_15_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_15_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_15_OriginalDbColumnName(){
				
					return "'PREGUNTA_15'";
				
				}

				
			    public String _PREGUNTA_16_;

				public String get_PREGUNTA_16_ () {
					return this._PREGUNTA_16_;
				}

				public Boolean _PREGUNTA_16_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_16_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_16_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_16_Precision(){
				    return 0;
				}
				public String _PREGUNTA_16_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_16_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_16_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_16_OriginalDbColumnName(){
				
					return "'PREGUNTA_16'";
				
				}

				
			    public String _PREGUNTA_17_;

				public String get_PREGUNTA_17_ () {
					return this._PREGUNTA_17_;
				}

				public Boolean _PREGUNTA_17_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_17_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_17_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_17_Precision(){
				    return 0;
				}
				public String _PREGUNTA_17_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_17_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_17_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_17_OriginalDbColumnName(){
				
					return "'PREGUNTA_17'";
				
				}

				
			    public String _PREGUNTA_18_;

				public String get_PREGUNTA_18_ () {
					return this._PREGUNTA_18_;
				}

				public Boolean _PREGUNTA_18_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_18_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_18_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_18_Precision(){
				    return 0;
				}
				public String _PREGUNTA_18_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_18_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_18_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_18_OriginalDbColumnName(){
				
					return "'PREGUNTA_18'";
				
				}

				
			    public String _PREGUNTA_19_;

				public String get_PREGUNTA_19_ () {
					return this._PREGUNTA_19_;
				}

				public Boolean _PREGUNTA_19_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_19_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_19_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_19_Precision(){
				    return 0;
				}
				public String _PREGUNTA_19_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_19_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_19_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_19_OriginalDbColumnName(){
				
					return "'PREGUNTA_19'";
				
				}

				
			    public String _PREGUNTA_20_;

				public String get_PREGUNTA_20_ () {
					return this._PREGUNTA_20_;
				}

				public Boolean _PREGUNTA_20_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_20_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_20_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_20_Precision(){
				    return 0;
				}
				public String _PREGUNTA_20_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_20_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_20_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_20_OriginalDbColumnName(){
				
					return "'PREGUNTA_20'";
				
				}

				
			    public String _PREGUNTA_21_;

				public String get_PREGUNTA_21_ () {
					return this._PREGUNTA_21_;
				}

				public Boolean _PREGUNTA_21_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_21_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_21_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_21_Precision(){
				    return 0;
				}
				public String _PREGUNTA_21_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_21_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_21_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_21_OriginalDbColumnName(){
				
					return "'PREGUNTA_21'";
				
				}

				
			    public String _PREGUNTA_22_;

				public String get_PREGUNTA_22_ () {
					return this._PREGUNTA_22_;
				}

				public Boolean _PREGUNTA_22_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_22_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_22_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_22_Precision(){
				    return 0;
				}
				public String _PREGUNTA_22_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_22_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_22_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_22_OriginalDbColumnName(){
				
					return "'PREGUNTA_22'";
				
				}

				
			    public String _PREGUNTA_23_;

				public String get_PREGUNTA_23_ () {
					return this._PREGUNTA_23_;
				}

				public Boolean _PREGUNTA_23_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_23_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_23_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_23_Precision(){
				    return 0;
				}
				public String _PREGUNTA_23_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_23_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_23_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_23_OriginalDbColumnName(){
				
					return "'PREGUNTA_23'";
				
				}

				
			    public String _PREGUNTA_24_;

				public String get_PREGUNTA_24_ () {
					return this._PREGUNTA_24_;
				}

				public Boolean _PREGUNTA_24_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_24_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_24_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_24_Precision(){
				    return 0;
				}
				public String _PREGUNTA_24_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_24_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_24_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_24_OriginalDbColumnName(){
				
					return "'PREGUNTA_24'";
				
				}

				
			    public String _PREGUNTA_25_;

				public String get_PREGUNTA_25_ () {
					return this._PREGUNTA_25_;
				}

				public Boolean _PREGUNTA_25_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_25_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_25_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_25_Precision(){
				    return 0;
				}
				public String _PREGUNTA_25_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_25_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_25_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_25_OriginalDbColumnName(){
				
					return "'PREGUNTA_25'";
				
				}

				
			    public String _PREGUNTA_26_;

				public String get_PREGUNTA_26_ () {
					return this._PREGUNTA_26_;
				}

				public Boolean _PREGUNTA_26_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_26_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_26_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_26_Precision(){
				    return 0;
				}
				public String _PREGUNTA_26_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_26_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_26_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_26_OriginalDbColumnName(){
				
					return "'PREGUNTA_26'";
				
				}

				
			    public String _PREGUNTA_27_;

				public String get_PREGUNTA_27_ () {
					return this._PREGUNTA_27_;
				}

				public Boolean _PREGUNTA_27_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_27_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_27_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_27_Precision(){
				    return 0;
				}
				public String _PREGUNTA_27_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_27_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_27_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_27_OriginalDbColumnName(){
				
					return "'PREGUNTA_27'";
				
				}

				
			    public String _PREGUNTA_28_;

				public String get_PREGUNTA_28_ () {
					return this._PREGUNTA_28_;
				}

				public Boolean _PREGUNTA_28_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_28_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_28_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_28_Precision(){
				    return 0;
				}
				public String _PREGUNTA_28_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_28_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_28_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_28_OriginalDbColumnName(){
				
					return "'PREGUNTA_28'";
				
				}

				
			    public String _PREGUNTA_29_;

				public String get_PREGUNTA_29_ () {
					return this._PREGUNTA_29_;
				}

				public Boolean _PREGUNTA_29_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_29_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_29_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_29_Precision(){
				    return 0;
				}
				public String _PREGUNTA_29_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_29_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_29_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_29_OriginalDbColumnName(){
				
					return "'PREGUNTA_29'";
				
				}

				
			    public String _PREGUNTA_30_;

				public String get_PREGUNTA_30_ () {
					return this._PREGUNTA_30_;
				}

				public Boolean _PREGUNTA_30_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_30_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_30_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_30_Precision(){
				    return 0;
				}
				public String _PREGUNTA_30_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_30_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_30_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_30_OriginalDbColumnName(){
				
					return "'PREGUNTA_30'";
				
				}

				
			    public String _PREGUNTA_31_;

				public String get_PREGUNTA_31_ () {
					return this._PREGUNTA_31_;
				}

				public Boolean _PREGUNTA_31_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_31_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_31_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_31_Precision(){
				    return 0;
				}
				public String _PREGUNTA_31_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_31_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_31_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_31_OriginalDbColumnName(){
				
					return "'PREGUNTA_31'";
				
				}

				
			    public String _PREGUNTA_32_;

				public String get_PREGUNTA_32_ () {
					return this._PREGUNTA_32_;
				}

				public Boolean _PREGUNTA_32_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_32_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_32_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_32_Precision(){
				    return 0;
				}
				public String _PREGUNTA_32_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_32_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_32_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_32_OriginalDbColumnName(){
				
					return "'PREGUNTA_32'";
				
				}

				
			    public String _PREGUNTA_33_;

				public String get_PREGUNTA_33_ () {
					return this._PREGUNTA_33_;
				}

				public Boolean _PREGUNTA_33_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_33_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_33_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_33_Precision(){
				    return 0;
				}
				public String _PREGUNTA_33_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_33_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_33_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_33_OriginalDbColumnName(){
				
					return "'PREGUNTA_33'";
				
				}

				
			    public String _PREGUNTA_34_;

				public String get_PREGUNTA_34_ () {
					return this._PREGUNTA_34_;
				}

				public Boolean _PREGUNTA_34_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_34_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_34_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_34_Precision(){
				    return 0;
				}
				public String _PREGUNTA_34_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_34_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_34_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_34_OriginalDbColumnName(){
				
					return "'PREGUNTA_34'";
				
				}

				
			    public String _PREGUNTA_35_;

				public String get_PREGUNTA_35_ () {
					return this._PREGUNTA_35_;
				}

				public Boolean _PREGUNTA_35_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_35_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_35_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_35_Precision(){
				    return 0;
				}
				public String _PREGUNTA_35_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_35_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_35_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_35_OriginalDbColumnName(){
				
					return "'PREGUNTA_35'";
				
				}

				
			    public String _PREGUNTA_36_;

				public String get_PREGUNTA_36_ () {
					return this._PREGUNTA_36_;
				}

				public Boolean _PREGUNTA_36_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_36_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_36_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_36_Precision(){
				    return 0;
				}
				public String _PREGUNTA_36_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_36_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_36_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_36_OriginalDbColumnName(){
				
					return "'PREGUNTA_36'";
				
				}

				
			    public String _PREGUNTA_37_;

				public String get_PREGUNTA_37_ () {
					return this._PREGUNTA_37_;
				}

				public Boolean _PREGUNTA_37_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_37_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_37_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_37_Precision(){
				    return 0;
				}
				public String _PREGUNTA_37_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_37_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_37_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_37_OriginalDbColumnName(){
				
					return "'PREGUNTA_37'";
				
				}

				
			    public String _PREGUNTA_38_;

				public String get_PREGUNTA_38_ () {
					return this._PREGUNTA_38_;
				}

				public Boolean _PREGUNTA_38_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_38_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_38_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_38_Precision(){
				    return 0;
				}
				public String _PREGUNTA_38_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_38_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_38_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_38_OriginalDbColumnName(){
				
					return "'PREGUNTA_38'";
				
				}

				
			    public String _PREGUNTA_39_;

				public String get_PREGUNTA_39_ () {
					return this._PREGUNTA_39_;
				}

				public Boolean _PREGUNTA_39_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_39_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_39_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_39_Precision(){
				    return 0;
				}
				public String _PREGUNTA_39_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_39_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_39_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_39_OriginalDbColumnName(){
				
					return "'PREGUNTA_39'";
				
				}

				
			    public String _PREGUNTA_40_;

				public String get_PREGUNTA_40_ () {
					return this._PREGUNTA_40_;
				}

				public Boolean _PREGUNTA_40_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_40_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_40_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_40_Precision(){
				    return 0;
				}
				public String _PREGUNTA_40_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_40_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_40_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_40_OriginalDbColumnName(){
				
					return "'PREGUNTA_40'";
				
				}

				
			    public String _PREGUNTA_41_;

				public String get_PREGUNTA_41_ () {
					return this._PREGUNTA_41_;
				}

				public Boolean _PREGUNTA_41_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_41_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_41_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_41_Precision(){
				    return 0;
				}
				public String _PREGUNTA_41_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_41_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_41_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_41_OriginalDbColumnName(){
				
					return "'PREGUNTA_41'";
				
				}

				
			    public String _PREGUNTA_42_;

				public String get_PREGUNTA_42_ () {
					return this._PREGUNTA_42_;
				}

				public Boolean _PREGUNTA_42_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_42_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_42_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_42_Precision(){
				    return 0;
				}
				public String _PREGUNTA_42_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_42_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_42_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_42_OriginalDbColumnName(){
				
					return "'PREGUNTA_42'";
				
				}

				
			    public String _PREGUNTA_43_;

				public String get_PREGUNTA_43_ () {
					return this._PREGUNTA_43_;
				}

				public Boolean _PREGUNTA_43_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_43_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_43_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_43_Precision(){
				    return 0;
				}
				public String _PREGUNTA_43_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_43_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_43_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_43_OriginalDbColumnName(){
				
					return "'PREGUNTA_43'";
				
				}

				
			    public String _PREGUNTA_44_;

				public String get_PREGUNTA_44_ () {
					return this._PREGUNTA_44_;
				}

				public Boolean _PREGUNTA_44_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_44_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_44_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_44_Precision(){
				    return 0;
				}
				public String _PREGUNTA_44_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_44_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_44_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_44_OriginalDbColumnName(){
				
					return "'PREGUNTA_44'";
				
				}

				
			    public String _PREGUNTA_45_;

				public String get_PREGUNTA_45_ () {
					return this._PREGUNTA_45_;
				}

				public Boolean _PREGUNTA_45_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_45_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_45_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_45_Precision(){
				    return 0;
				}
				public String _PREGUNTA_45_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_45_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_45_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_45_OriginalDbColumnName(){
				
					return "'PREGUNTA_45'";
				
				}

				
			    public String _PREGUNTA_46_;

				public String get_PREGUNTA_46_ () {
					return this._PREGUNTA_46_;
				}

				public Boolean _PREGUNTA_46_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_46_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_46_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_46_Precision(){
				    return 0;
				}
				public String _PREGUNTA_46_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_46_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_46_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_46_OriginalDbColumnName(){
				
					return "'PREGUNTA_46'";
				
				}

				
			    public String _PREGUNTA_47_;

				public String get_PREGUNTA_47_ () {
					return this._PREGUNTA_47_;
				}

				public Boolean _PREGUNTA_47_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_47_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_47_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_47_Precision(){
				    return 0;
				}
				public String _PREGUNTA_47_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_47_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_47_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_47_OriginalDbColumnName(){
				
					return "'PREGUNTA_47'";
				
				}

				
			    public String _PREGUNTA_48_;

				public String get_PREGUNTA_48_ () {
					return this._PREGUNTA_48_;
				}

				public Boolean _PREGUNTA_48_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_48_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_48_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_48_Precision(){
				    return 0;
				}
				public String _PREGUNTA_48_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_48_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_48_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_48_OriginalDbColumnName(){
				
					return "'PREGUNTA_48'";
				
				}

				
			    public String _PREGUNTA_49_;

				public String get_PREGUNTA_49_ () {
					return this._PREGUNTA_49_;
				}

				public Boolean _PREGUNTA_49_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_49_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_49_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_49_Precision(){
				    return 0;
				}
				public String _PREGUNTA_49_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_49_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_49_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_49_OriginalDbColumnName(){
				
					return "'PREGUNTA_49'";
				
				}

				
			    public String _PREGUNTA_50_;

				public String get_PREGUNTA_50_ () {
					return this._PREGUNTA_50_;
				}

				public Boolean _PREGUNTA_50_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_50_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_50_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_50_Precision(){
				    return 0;
				}
				public String _PREGUNTA_50_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_50_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_50_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_50_OriginalDbColumnName(){
				
					return "'PREGUNTA_50'";
				
				}

				
			    public String _PREGUNTA_51_;

				public String get_PREGUNTA_51_ () {
					return this._PREGUNTA_51_;
				}

				public Boolean _PREGUNTA_51_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_51_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_51_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_51_Precision(){
				    return 0;
				}
				public String _PREGUNTA_51_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_51_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_51_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_51_OriginalDbColumnName(){
				
					return "'PREGUNTA_51'";
				
				}

				
			    public String _PREGUNTA_52_;

				public String get_PREGUNTA_52_ () {
					return this._PREGUNTA_52_;
				}

				public Boolean _PREGUNTA_52_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_52_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_52_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_52_Precision(){
				    return 0;
				}
				public String _PREGUNTA_52_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_52_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_52_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_52_OriginalDbColumnName(){
				
					return "'PREGUNTA_52'";
				
				}

				
			    public String _PREGUNTA_53_;

				public String get_PREGUNTA_53_ () {
					return this._PREGUNTA_53_;
				}

				public Boolean _PREGUNTA_53_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_53_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_53_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_53_Precision(){
				    return 0;
				}
				public String _PREGUNTA_53_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_53_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_53_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_53_OriginalDbColumnName(){
				
					return "'PREGUNTA_53'";
				
				}

				
			    public String _PREGUNTA_54_;

				public String get_PREGUNTA_54_ () {
					return this._PREGUNTA_54_;
				}

				public Boolean _PREGUNTA_54_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_54_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_54_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_54_Precision(){
				    return 0;
				}
				public String _PREGUNTA_54_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_54_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_54_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_54_OriginalDbColumnName(){
				
					return "'PREGUNTA_54'";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.FUERZA_ADSCRIPCION = readString(dis);
					
					this.ESM_ADSCRIPCION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.TIPO_VINCULACION = readString(dis);
					
					this._PREGUNTA_1_ = readString(dis);
					
					this._PREGUNTA_2_ = readString(dis);
					
					this._PREGUNTA_3_ = readString(dis);
					
					this._PREGUNTA_4_ = readString(dis);
					
					this._PREGUNTA_5_ = readString(dis);
					
					this._PREGUNTA_6_ = readString(dis);
					
					this._PREGUNTA_7_ = readString(dis);
					
					this._PREGUNTA_8_ = readString(dis);
					
					this._PREGUNTA_9_ = readString(dis);
					
					this._PREGUNTA_10_ = readString(dis);
					
					this._PREGUNTA_11_ = readString(dis);
					
					this._PREGUNTA_12_ = readString(dis);
					
					this._PREGUNTA_13_ = readString(dis);
					
					this._PREGUNTA_14_ = readString(dis);
					
					this._PREGUNTA_15_ = readString(dis);
					
					this._PREGUNTA_16_ = readString(dis);
					
					this._PREGUNTA_17_ = readString(dis);
					
					this._PREGUNTA_18_ = readString(dis);
					
					this._PREGUNTA_19_ = readString(dis);
					
					this._PREGUNTA_20_ = readString(dis);
					
					this._PREGUNTA_21_ = readString(dis);
					
					this._PREGUNTA_22_ = readString(dis);
					
					this._PREGUNTA_23_ = readString(dis);
					
					this._PREGUNTA_24_ = readString(dis);
					
					this._PREGUNTA_25_ = readString(dis);
					
					this._PREGUNTA_26_ = readString(dis);
					
					this._PREGUNTA_27_ = readString(dis);
					
					this._PREGUNTA_28_ = readString(dis);
					
					this._PREGUNTA_29_ = readString(dis);
					
					this._PREGUNTA_30_ = readString(dis);
					
					this._PREGUNTA_31_ = readString(dis);
					
					this._PREGUNTA_32_ = readString(dis);
					
					this._PREGUNTA_33_ = readString(dis);
					
					this._PREGUNTA_34_ = readString(dis);
					
					this._PREGUNTA_35_ = readString(dis);
					
					this._PREGUNTA_36_ = readString(dis);
					
					this._PREGUNTA_37_ = readString(dis);
					
					this._PREGUNTA_38_ = readString(dis);
					
					this._PREGUNTA_39_ = readString(dis);
					
					this._PREGUNTA_40_ = readString(dis);
					
					this._PREGUNTA_41_ = readString(dis);
					
					this._PREGUNTA_42_ = readString(dis);
					
					this._PREGUNTA_43_ = readString(dis);
					
					this._PREGUNTA_44_ = readString(dis);
					
					this._PREGUNTA_45_ = readString(dis);
					
					this._PREGUNTA_46_ = readString(dis);
					
					this._PREGUNTA_47_ = readString(dis);
					
					this._PREGUNTA_48_ = readString(dis);
					
					this._PREGUNTA_49_ = readString(dis);
					
					this._PREGUNTA_50_ = readString(dis);
					
					this._PREGUNTA_51_ = readString(dis);
					
					this._PREGUNTA_52_ = readString(dis);
					
					this._PREGUNTA_53_ = readString(dis);
					
					this._PREGUNTA_54_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.FUERZA_ADSCRIPCION = readString(dis);
					
					this.ESM_ADSCRIPCION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.TIPO_VINCULACION = readString(dis);
					
					this._PREGUNTA_1_ = readString(dis);
					
					this._PREGUNTA_2_ = readString(dis);
					
					this._PREGUNTA_3_ = readString(dis);
					
					this._PREGUNTA_4_ = readString(dis);
					
					this._PREGUNTA_5_ = readString(dis);
					
					this._PREGUNTA_6_ = readString(dis);
					
					this._PREGUNTA_7_ = readString(dis);
					
					this._PREGUNTA_8_ = readString(dis);
					
					this._PREGUNTA_9_ = readString(dis);
					
					this._PREGUNTA_10_ = readString(dis);
					
					this._PREGUNTA_11_ = readString(dis);
					
					this._PREGUNTA_12_ = readString(dis);
					
					this._PREGUNTA_13_ = readString(dis);
					
					this._PREGUNTA_14_ = readString(dis);
					
					this._PREGUNTA_15_ = readString(dis);
					
					this._PREGUNTA_16_ = readString(dis);
					
					this._PREGUNTA_17_ = readString(dis);
					
					this._PREGUNTA_18_ = readString(dis);
					
					this._PREGUNTA_19_ = readString(dis);
					
					this._PREGUNTA_20_ = readString(dis);
					
					this._PREGUNTA_21_ = readString(dis);
					
					this._PREGUNTA_22_ = readString(dis);
					
					this._PREGUNTA_23_ = readString(dis);
					
					this._PREGUNTA_24_ = readString(dis);
					
					this._PREGUNTA_25_ = readString(dis);
					
					this._PREGUNTA_26_ = readString(dis);
					
					this._PREGUNTA_27_ = readString(dis);
					
					this._PREGUNTA_28_ = readString(dis);
					
					this._PREGUNTA_29_ = readString(dis);
					
					this._PREGUNTA_30_ = readString(dis);
					
					this._PREGUNTA_31_ = readString(dis);
					
					this._PREGUNTA_32_ = readString(dis);
					
					this._PREGUNTA_33_ = readString(dis);
					
					this._PREGUNTA_34_ = readString(dis);
					
					this._PREGUNTA_35_ = readString(dis);
					
					this._PREGUNTA_36_ = readString(dis);
					
					this._PREGUNTA_37_ = readString(dis);
					
					this._PREGUNTA_38_ = readString(dis);
					
					this._PREGUNTA_39_ = readString(dis);
					
					this._PREGUNTA_40_ = readString(dis);
					
					this._PREGUNTA_41_ = readString(dis);
					
					this._PREGUNTA_42_ = readString(dis);
					
					this._PREGUNTA_43_ = readString(dis);
					
					this._PREGUNTA_44_ = readString(dis);
					
					this._PREGUNTA_45_ = readString(dis);
					
					this._PREGUNTA_46_ = readString(dis);
					
					this._PREGUNTA_47_ = readString(dis);
					
					this._PREGUNTA_48_ = readString(dis);
					
					this._PREGUNTA_49_ = readString(dis);
					
					this._PREGUNTA_50_ = readString(dis);
					
					this._PREGUNTA_51_ = readString(dis);
					
					this._PREGUNTA_52_ = readString(dis);
					
					this._PREGUNTA_53_ = readString(dis);
					
					this._PREGUNTA_54_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.FUERZA_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.ESM_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.TIPO_VINCULACION,dos);
					
					// String
				
						writeString(this._PREGUNTA_1_,dos);
					
					// String
				
						writeString(this._PREGUNTA_2_,dos);
					
					// String
				
						writeString(this._PREGUNTA_3_,dos);
					
					// String
				
						writeString(this._PREGUNTA_4_,dos);
					
					// String
				
						writeString(this._PREGUNTA_5_,dos);
					
					// String
				
						writeString(this._PREGUNTA_6_,dos);
					
					// String
				
						writeString(this._PREGUNTA_7_,dos);
					
					// String
				
						writeString(this._PREGUNTA_8_,dos);
					
					// String
				
						writeString(this._PREGUNTA_9_,dos);
					
					// String
				
						writeString(this._PREGUNTA_10_,dos);
					
					// String
				
						writeString(this._PREGUNTA_11_,dos);
					
					// String
				
						writeString(this._PREGUNTA_12_,dos);
					
					// String
				
						writeString(this._PREGUNTA_13_,dos);
					
					// String
				
						writeString(this._PREGUNTA_14_,dos);
					
					// String
				
						writeString(this._PREGUNTA_15_,dos);
					
					// String
				
						writeString(this._PREGUNTA_16_,dos);
					
					// String
				
						writeString(this._PREGUNTA_17_,dos);
					
					// String
				
						writeString(this._PREGUNTA_18_,dos);
					
					// String
				
						writeString(this._PREGUNTA_19_,dos);
					
					// String
				
						writeString(this._PREGUNTA_20_,dos);
					
					// String
				
						writeString(this._PREGUNTA_21_,dos);
					
					// String
				
						writeString(this._PREGUNTA_22_,dos);
					
					// String
				
						writeString(this._PREGUNTA_23_,dos);
					
					// String
				
						writeString(this._PREGUNTA_24_,dos);
					
					// String
				
						writeString(this._PREGUNTA_25_,dos);
					
					// String
				
						writeString(this._PREGUNTA_26_,dos);
					
					// String
				
						writeString(this._PREGUNTA_27_,dos);
					
					// String
				
						writeString(this._PREGUNTA_28_,dos);
					
					// String
				
						writeString(this._PREGUNTA_29_,dos);
					
					// String
				
						writeString(this._PREGUNTA_30_,dos);
					
					// String
				
						writeString(this._PREGUNTA_31_,dos);
					
					// String
				
						writeString(this._PREGUNTA_32_,dos);
					
					// String
				
						writeString(this._PREGUNTA_33_,dos);
					
					// String
				
						writeString(this._PREGUNTA_34_,dos);
					
					// String
				
						writeString(this._PREGUNTA_35_,dos);
					
					// String
				
						writeString(this._PREGUNTA_36_,dos);
					
					// String
				
						writeString(this._PREGUNTA_37_,dos);
					
					// String
				
						writeString(this._PREGUNTA_38_,dos);
					
					// String
				
						writeString(this._PREGUNTA_39_,dos);
					
					// String
				
						writeString(this._PREGUNTA_40_,dos);
					
					// String
				
						writeString(this._PREGUNTA_41_,dos);
					
					// String
				
						writeString(this._PREGUNTA_42_,dos);
					
					// String
				
						writeString(this._PREGUNTA_43_,dos);
					
					// String
				
						writeString(this._PREGUNTA_44_,dos);
					
					// String
				
						writeString(this._PREGUNTA_45_,dos);
					
					// String
				
						writeString(this._PREGUNTA_46_,dos);
					
					// String
				
						writeString(this._PREGUNTA_47_,dos);
					
					// String
				
						writeString(this._PREGUNTA_48_,dos);
					
					// String
				
						writeString(this._PREGUNTA_49_,dos);
					
					// String
				
						writeString(this._PREGUNTA_50_,dos);
					
					// String
				
						writeString(this._PREGUNTA_51_,dos);
					
					// String
				
						writeString(this._PREGUNTA_52_,dos);
					
					// String
				
						writeString(this._PREGUNTA_53_,dos);
					
					// String
				
						writeString(this._PREGUNTA_54_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.FUERZA_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.ESM_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.TIPO_VINCULACION,dos);
					
					// String
				
						writeString(this._PREGUNTA_1_,dos);
					
					// String
				
						writeString(this._PREGUNTA_2_,dos);
					
					// String
				
						writeString(this._PREGUNTA_3_,dos);
					
					// String
				
						writeString(this._PREGUNTA_4_,dos);
					
					// String
				
						writeString(this._PREGUNTA_5_,dos);
					
					// String
				
						writeString(this._PREGUNTA_6_,dos);
					
					// String
				
						writeString(this._PREGUNTA_7_,dos);
					
					// String
				
						writeString(this._PREGUNTA_8_,dos);
					
					// String
				
						writeString(this._PREGUNTA_9_,dos);
					
					// String
				
						writeString(this._PREGUNTA_10_,dos);
					
					// String
				
						writeString(this._PREGUNTA_11_,dos);
					
					// String
				
						writeString(this._PREGUNTA_12_,dos);
					
					// String
				
						writeString(this._PREGUNTA_13_,dos);
					
					// String
				
						writeString(this._PREGUNTA_14_,dos);
					
					// String
				
						writeString(this._PREGUNTA_15_,dos);
					
					// String
				
						writeString(this._PREGUNTA_16_,dos);
					
					// String
				
						writeString(this._PREGUNTA_17_,dos);
					
					// String
				
						writeString(this._PREGUNTA_18_,dos);
					
					// String
				
						writeString(this._PREGUNTA_19_,dos);
					
					// String
				
						writeString(this._PREGUNTA_20_,dos);
					
					// String
				
						writeString(this._PREGUNTA_21_,dos);
					
					// String
				
						writeString(this._PREGUNTA_22_,dos);
					
					// String
				
						writeString(this._PREGUNTA_23_,dos);
					
					// String
				
						writeString(this._PREGUNTA_24_,dos);
					
					// String
				
						writeString(this._PREGUNTA_25_,dos);
					
					// String
				
						writeString(this._PREGUNTA_26_,dos);
					
					// String
				
						writeString(this._PREGUNTA_27_,dos);
					
					// String
				
						writeString(this._PREGUNTA_28_,dos);
					
					// String
				
						writeString(this._PREGUNTA_29_,dos);
					
					// String
				
						writeString(this._PREGUNTA_30_,dos);
					
					// String
				
						writeString(this._PREGUNTA_31_,dos);
					
					// String
				
						writeString(this._PREGUNTA_32_,dos);
					
					// String
				
						writeString(this._PREGUNTA_33_,dos);
					
					// String
				
						writeString(this._PREGUNTA_34_,dos);
					
					// String
				
						writeString(this._PREGUNTA_35_,dos);
					
					// String
				
						writeString(this._PREGUNTA_36_,dos);
					
					// String
				
						writeString(this._PREGUNTA_37_,dos);
					
					// String
				
						writeString(this._PREGUNTA_38_,dos);
					
					// String
				
						writeString(this._PREGUNTA_39_,dos);
					
					// String
				
						writeString(this._PREGUNTA_40_,dos);
					
					// String
				
						writeString(this._PREGUNTA_41_,dos);
					
					// String
				
						writeString(this._PREGUNTA_42_,dos);
					
					// String
				
						writeString(this._PREGUNTA_43_,dos);
					
					// String
				
						writeString(this._PREGUNTA_44_,dos);
					
					// String
				
						writeString(this._PREGUNTA_45_,dos);
					
					// String
				
						writeString(this._PREGUNTA_46_,dos);
					
					// String
				
						writeString(this._PREGUNTA_47_,dos);
					
					// String
				
						writeString(this._PREGUNTA_48_,dos);
					
					// String
				
						writeString(this._PREGUNTA_49_,dos);
					
					// String
				
						writeString(this._PREGUNTA_50_,dos);
					
					// String
				
						writeString(this._PREGUNTA_51_,dos);
					
					// String
				
						writeString(this._PREGUNTA_52_,dos);
					
					// String
				
						writeString(this._PREGUNTA_53_,dos);
					
					// String
				
						writeString(this._PREGUNTA_54_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",GRADO="+GRADO);
		sb.append(",FUERZA_ADSCRIPCION="+FUERZA_ADSCRIPCION);
		sb.append(",ESM_ADSCRIPCION="+ESM_ADSCRIPCION);
		sb.append(",TIPO_AFILIADO="+TIPO_AFILIADO);
		sb.append(",TIPO_VINCULACION="+TIPO_VINCULACION);
		sb.append(",_PREGUNTA_1_="+_PREGUNTA_1_);
		sb.append(",_PREGUNTA_2_="+_PREGUNTA_2_);
		sb.append(",_PREGUNTA_3_="+_PREGUNTA_3_);
		sb.append(",_PREGUNTA_4_="+_PREGUNTA_4_);
		sb.append(",_PREGUNTA_5_="+_PREGUNTA_5_);
		sb.append(",_PREGUNTA_6_="+_PREGUNTA_6_);
		sb.append(",_PREGUNTA_7_="+_PREGUNTA_7_);
		sb.append(",_PREGUNTA_8_="+_PREGUNTA_8_);
		sb.append(",_PREGUNTA_9_="+_PREGUNTA_9_);
		sb.append(",_PREGUNTA_10_="+_PREGUNTA_10_);
		sb.append(",_PREGUNTA_11_="+_PREGUNTA_11_);
		sb.append(",_PREGUNTA_12_="+_PREGUNTA_12_);
		sb.append(",_PREGUNTA_13_="+_PREGUNTA_13_);
		sb.append(",_PREGUNTA_14_="+_PREGUNTA_14_);
		sb.append(",_PREGUNTA_15_="+_PREGUNTA_15_);
		sb.append(",_PREGUNTA_16_="+_PREGUNTA_16_);
		sb.append(",_PREGUNTA_17_="+_PREGUNTA_17_);
		sb.append(",_PREGUNTA_18_="+_PREGUNTA_18_);
		sb.append(",_PREGUNTA_19_="+_PREGUNTA_19_);
		sb.append(",_PREGUNTA_20_="+_PREGUNTA_20_);
		sb.append(",_PREGUNTA_21_="+_PREGUNTA_21_);
		sb.append(",_PREGUNTA_22_="+_PREGUNTA_22_);
		sb.append(",_PREGUNTA_23_="+_PREGUNTA_23_);
		sb.append(",_PREGUNTA_24_="+_PREGUNTA_24_);
		sb.append(",_PREGUNTA_25_="+_PREGUNTA_25_);
		sb.append(",_PREGUNTA_26_="+_PREGUNTA_26_);
		sb.append(",_PREGUNTA_27_="+_PREGUNTA_27_);
		sb.append(",_PREGUNTA_28_="+_PREGUNTA_28_);
		sb.append(",_PREGUNTA_29_="+_PREGUNTA_29_);
		sb.append(",_PREGUNTA_30_="+_PREGUNTA_30_);
		sb.append(",_PREGUNTA_31_="+_PREGUNTA_31_);
		sb.append(",_PREGUNTA_32_="+_PREGUNTA_32_);
		sb.append(",_PREGUNTA_33_="+_PREGUNTA_33_);
		sb.append(",_PREGUNTA_34_="+_PREGUNTA_34_);
		sb.append(",_PREGUNTA_35_="+_PREGUNTA_35_);
		sb.append(",_PREGUNTA_36_="+_PREGUNTA_36_);
		sb.append(",_PREGUNTA_37_="+_PREGUNTA_37_);
		sb.append(",_PREGUNTA_38_="+_PREGUNTA_38_);
		sb.append(",_PREGUNTA_39_="+_PREGUNTA_39_);
		sb.append(",_PREGUNTA_40_="+_PREGUNTA_40_);
		sb.append(",_PREGUNTA_41_="+_PREGUNTA_41_);
		sb.append(",_PREGUNTA_42_="+_PREGUNTA_42_);
		sb.append(",_PREGUNTA_43_="+_PREGUNTA_43_);
		sb.append(",_PREGUNTA_44_="+_PREGUNTA_44_);
		sb.append(",_PREGUNTA_45_="+_PREGUNTA_45_);
		sb.append(",_PREGUNTA_46_="+_PREGUNTA_46_);
		sb.append(",_PREGUNTA_47_="+_PREGUNTA_47_);
		sb.append(",_PREGUNTA_48_="+_PREGUNTA_48_);
		sb.append(",_PREGUNTA_49_="+_PREGUNTA_49_);
		sb.append(",_PREGUNTA_50_="+_PREGUNTA_50_);
		sb.append(",_PREGUNTA_51_="+_PREGUNTA_51_);
		sb.append(",_PREGUNTA_52_="+_PREGUNTA_52_);
		sb.append(",_PREGUNTA_53_="+_PREGUNTA_53_);
		sb.append(",_PREGUNTA_54_="+_PREGUNTA_54_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row102Struct implements routines.system.IPersistableRow<row102Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return false;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 100;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 100;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 100;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 100;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return false;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 5;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 40;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String GRADO;

				public String getGRADO () {
					return this.GRADO;
				}

				public Boolean GRADOIsNullable(){
				    return false;
				}
				public Boolean GRADOIsKey(){
				    return false;
				}
				public Integer GRADOLength(){
				    return 100;
				}
				public Integer GRADOPrecision(){
				    return 0;
				}
				public String GRADODefault(){
				
					return null;
				
				}
				public String GRADOComment(){
				
				    return "";
				
				}
				public String GRADOPattern(){
				
					return "";
				
				}
				public String GRADOOriginalDbColumnName(){
				
					return "GRADO";
				
				}

				
			    public String FUERZA_ADSCRIPCION;

				public String getFUERZA_ADSCRIPCION () {
					return this.FUERZA_ADSCRIPCION;
				}

				public Boolean FUERZA_ADSCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean FUERZA_ADSCRIPCIONIsKey(){
				    return false;
				}
				public Integer FUERZA_ADSCRIPCIONLength(){
				    return 500;
				}
				public Integer FUERZA_ADSCRIPCIONPrecision(){
				    return 0;
				}
				public String FUERZA_ADSCRIPCIONDefault(){
				
					return null;
				
				}
				public String FUERZA_ADSCRIPCIONComment(){
				
				    return "";
				
				}
				public String FUERZA_ADSCRIPCIONPattern(){
				
					return "";
				
				}
				public String FUERZA_ADSCRIPCIONOriginalDbColumnName(){
				
					return "FUERZA_ADSCRIPCION";
				
				}

				
			    public String ESM_ADSCRIPCION;

				public String getESM_ADSCRIPCION () {
					return this.ESM_ADSCRIPCION;
				}

				public Boolean ESM_ADSCRIPCIONIsNullable(){
				    return false;
				}
				public Boolean ESM_ADSCRIPCIONIsKey(){
				    return false;
				}
				public Integer ESM_ADSCRIPCIONLength(){
				    return null;
				}
				public Integer ESM_ADSCRIPCIONPrecision(){
				    return null;
				}
				public String ESM_ADSCRIPCIONDefault(){
				
					return null;
				
				}
				public String ESM_ADSCRIPCIONComment(){
				
				    return "";
				
				}
				public String ESM_ADSCRIPCIONPattern(){
				
					return "";
				
				}
				public String ESM_ADSCRIPCIONOriginalDbColumnName(){
				
					return "ESM_ADSCRIPCION";
				
				}

				
			    public String TIPO_AFILIADO;

				public String getTIPO_AFILIADO () {
					return this.TIPO_AFILIADO;
				}

				public Boolean TIPO_AFILIADOIsNullable(){
				    return false;
				}
				public Boolean TIPO_AFILIADOIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIADOLength(){
				    return null;
				}
				public Integer TIPO_AFILIADOPrecision(){
				    return null;
				}
				public String TIPO_AFILIADODefault(){
				
					return null;
				
				}
				public String TIPO_AFILIADOComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIADOPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIADOOriginalDbColumnName(){
				
					return "TIPO_AFILIADO";
				
				}

				
			    public String TIPO_VINCULACION;

				public String getTIPO_VINCULACION () {
					return this.TIPO_VINCULACION;
				}

				public Boolean TIPO_VINCULACIONIsNullable(){
				    return false;
				}
				public Boolean TIPO_VINCULACIONIsKey(){
				    return false;
				}
				public Integer TIPO_VINCULACIONLength(){
				    return null;
				}
				public Integer TIPO_VINCULACIONPrecision(){
				    return null;
				}
				public String TIPO_VINCULACIONDefault(){
				
					return null;
				
				}
				public String TIPO_VINCULACIONComment(){
				
				    return "";
				
				}
				public String TIPO_VINCULACIONPattern(){
				
					return "";
				
				}
				public String TIPO_VINCULACIONOriginalDbColumnName(){
				
					return "TIPO_VINCULACION";
				
				}

				
			    public String _PREGUNTA_1_;

				public String get_PREGUNTA_1_ () {
					return this._PREGUNTA_1_;
				}

				public Boolean _PREGUNTA_1_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_1_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_1_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_1_Precision(){
				    return 0;
				}
				public String _PREGUNTA_1_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_1_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_1_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_1_OriginalDbColumnName(){
				
					return "'PREGUNTA_1'";
				
				}

				
			    public String _PREGUNTA_2_;

				public String get_PREGUNTA_2_ () {
					return this._PREGUNTA_2_;
				}

				public Boolean _PREGUNTA_2_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_2_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_2_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_2_Precision(){
				    return 0;
				}
				public String _PREGUNTA_2_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_2_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_2_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_2_OriginalDbColumnName(){
				
					return "'PREGUNTA_2'";
				
				}

				
			    public String _PREGUNTA_3_;

				public String get_PREGUNTA_3_ () {
					return this._PREGUNTA_3_;
				}

				public Boolean _PREGUNTA_3_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_3_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_3_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_3_Precision(){
				    return 0;
				}
				public String _PREGUNTA_3_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_3_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_3_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_3_OriginalDbColumnName(){
				
					return "'PREGUNTA_3'";
				
				}

				
			    public String _PREGUNTA_4_;

				public String get_PREGUNTA_4_ () {
					return this._PREGUNTA_4_;
				}

				public Boolean _PREGUNTA_4_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_4_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_4_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_4_Precision(){
				    return 0;
				}
				public String _PREGUNTA_4_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_4_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_4_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_4_OriginalDbColumnName(){
				
					return "'PREGUNTA_4'";
				
				}

				
			    public String _PREGUNTA_5_;

				public String get_PREGUNTA_5_ () {
					return this._PREGUNTA_5_;
				}

				public Boolean _PREGUNTA_5_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_5_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_5_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_5_Precision(){
				    return 0;
				}
				public String _PREGUNTA_5_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_5_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_5_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_5_OriginalDbColumnName(){
				
					return "'PREGUNTA_5'";
				
				}

				
			    public String _PREGUNTA_6_;

				public String get_PREGUNTA_6_ () {
					return this._PREGUNTA_6_;
				}

				public Boolean _PREGUNTA_6_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_6_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_6_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_6_Precision(){
				    return 0;
				}
				public String _PREGUNTA_6_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_6_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_6_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_6_OriginalDbColumnName(){
				
					return "'PREGUNTA_6'";
				
				}

				
			    public String _PREGUNTA_7_;

				public String get_PREGUNTA_7_ () {
					return this._PREGUNTA_7_;
				}

				public Boolean _PREGUNTA_7_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_7_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_7_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_7_Precision(){
				    return 0;
				}
				public String _PREGUNTA_7_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_7_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_7_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_7_OriginalDbColumnName(){
				
					return "'PREGUNTA_7'";
				
				}

				
			    public String _PREGUNTA_8_;

				public String get_PREGUNTA_8_ () {
					return this._PREGUNTA_8_;
				}

				public Boolean _PREGUNTA_8_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_8_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_8_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_8_Precision(){
				    return 0;
				}
				public String _PREGUNTA_8_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_8_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_8_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_8_OriginalDbColumnName(){
				
					return "'PREGUNTA_8'";
				
				}

				
			    public String _PREGUNTA_9_;

				public String get_PREGUNTA_9_ () {
					return this._PREGUNTA_9_;
				}

				public Boolean _PREGUNTA_9_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_9_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_9_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_9_Precision(){
				    return 0;
				}
				public String _PREGUNTA_9_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_9_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_9_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_9_OriginalDbColumnName(){
				
					return "'PREGUNTA_9'";
				
				}

				
			    public String _PREGUNTA_10_;

				public String get_PREGUNTA_10_ () {
					return this._PREGUNTA_10_;
				}

				public Boolean _PREGUNTA_10_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_10_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_10_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_10_Precision(){
				    return 0;
				}
				public String _PREGUNTA_10_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_10_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_10_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_10_OriginalDbColumnName(){
				
					return "'PREGUNTA_10'";
				
				}

				
			    public String _PREGUNTA_11_;

				public String get_PREGUNTA_11_ () {
					return this._PREGUNTA_11_;
				}

				public Boolean _PREGUNTA_11_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_11_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_11_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_11_Precision(){
				    return 0;
				}
				public String _PREGUNTA_11_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_11_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_11_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_11_OriginalDbColumnName(){
				
					return "'PREGUNTA_11'";
				
				}

				
			    public String _PREGUNTA_12_;

				public String get_PREGUNTA_12_ () {
					return this._PREGUNTA_12_;
				}

				public Boolean _PREGUNTA_12_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_12_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_12_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_12_Precision(){
				    return 0;
				}
				public String _PREGUNTA_12_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_12_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_12_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_12_OriginalDbColumnName(){
				
					return "'PREGUNTA_12'";
				
				}

				
			    public String _PREGUNTA_13_;

				public String get_PREGUNTA_13_ () {
					return this._PREGUNTA_13_;
				}

				public Boolean _PREGUNTA_13_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_13_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_13_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_13_Precision(){
				    return 0;
				}
				public String _PREGUNTA_13_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_13_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_13_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_13_OriginalDbColumnName(){
				
					return "'PREGUNTA_13'";
				
				}

				
			    public String _PREGUNTA_14_;

				public String get_PREGUNTA_14_ () {
					return this._PREGUNTA_14_;
				}

				public Boolean _PREGUNTA_14_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_14_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_14_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_14_Precision(){
				    return 0;
				}
				public String _PREGUNTA_14_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_14_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_14_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_14_OriginalDbColumnName(){
				
					return "'PREGUNTA_14'";
				
				}

				
			    public String _PREGUNTA_15_;

				public String get_PREGUNTA_15_ () {
					return this._PREGUNTA_15_;
				}

				public Boolean _PREGUNTA_15_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_15_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_15_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_15_Precision(){
				    return 0;
				}
				public String _PREGUNTA_15_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_15_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_15_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_15_OriginalDbColumnName(){
				
					return "'PREGUNTA_15'";
				
				}

				
			    public String _PREGUNTA_16_;

				public String get_PREGUNTA_16_ () {
					return this._PREGUNTA_16_;
				}

				public Boolean _PREGUNTA_16_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_16_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_16_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_16_Precision(){
				    return 0;
				}
				public String _PREGUNTA_16_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_16_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_16_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_16_OriginalDbColumnName(){
				
					return "'PREGUNTA_16'";
				
				}

				
			    public String _PREGUNTA_17_;

				public String get_PREGUNTA_17_ () {
					return this._PREGUNTA_17_;
				}

				public Boolean _PREGUNTA_17_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_17_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_17_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_17_Precision(){
				    return 0;
				}
				public String _PREGUNTA_17_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_17_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_17_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_17_OriginalDbColumnName(){
				
					return "'PREGUNTA_17'";
				
				}

				
			    public String _PREGUNTA_18_;

				public String get_PREGUNTA_18_ () {
					return this._PREGUNTA_18_;
				}

				public Boolean _PREGUNTA_18_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_18_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_18_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_18_Precision(){
				    return 0;
				}
				public String _PREGUNTA_18_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_18_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_18_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_18_OriginalDbColumnName(){
				
					return "'PREGUNTA_18'";
				
				}

				
			    public String _PREGUNTA_19_;

				public String get_PREGUNTA_19_ () {
					return this._PREGUNTA_19_;
				}

				public Boolean _PREGUNTA_19_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_19_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_19_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_19_Precision(){
				    return 0;
				}
				public String _PREGUNTA_19_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_19_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_19_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_19_OriginalDbColumnName(){
				
					return "'PREGUNTA_19'";
				
				}

				
			    public String _PREGUNTA_20_;

				public String get_PREGUNTA_20_ () {
					return this._PREGUNTA_20_;
				}

				public Boolean _PREGUNTA_20_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_20_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_20_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_20_Precision(){
				    return 0;
				}
				public String _PREGUNTA_20_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_20_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_20_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_20_OriginalDbColumnName(){
				
					return "'PREGUNTA_20'";
				
				}

				
			    public String _PREGUNTA_21_;

				public String get_PREGUNTA_21_ () {
					return this._PREGUNTA_21_;
				}

				public Boolean _PREGUNTA_21_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_21_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_21_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_21_Precision(){
				    return 0;
				}
				public String _PREGUNTA_21_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_21_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_21_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_21_OriginalDbColumnName(){
				
					return "'PREGUNTA_21'";
				
				}

				
			    public String _PREGUNTA_22_;

				public String get_PREGUNTA_22_ () {
					return this._PREGUNTA_22_;
				}

				public Boolean _PREGUNTA_22_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_22_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_22_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_22_Precision(){
				    return 0;
				}
				public String _PREGUNTA_22_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_22_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_22_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_22_OriginalDbColumnName(){
				
					return "'PREGUNTA_22'";
				
				}

				
			    public String _PREGUNTA_23_;

				public String get_PREGUNTA_23_ () {
					return this._PREGUNTA_23_;
				}

				public Boolean _PREGUNTA_23_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_23_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_23_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_23_Precision(){
				    return 0;
				}
				public String _PREGUNTA_23_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_23_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_23_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_23_OriginalDbColumnName(){
				
					return "'PREGUNTA_23'";
				
				}

				
			    public String _PREGUNTA_24_;

				public String get_PREGUNTA_24_ () {
					return this._PREGUNTA_24_;
				}

				public Boolean _PREGUNTA_24_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_24_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_24_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_24_Precision(){
				    return 0;
				}
				public String _PREGUNTA_24_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_24_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_24_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_24_OriginalDbColumnName(){
				
					return "'PREGUNTA_24'";
				
				}

				
			    public String _PREGUNTA_25_;

				public String get_PREGUNTA_25_ () {
					return this._PREGUNTA_25_;
				}

				public Boolean _PREGUNTA_25_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_25_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_25_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_25_Precision(){
				    return 0;
				}
				public String _PREGUNTA_25_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_25_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_25_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_25_OriginalDbColumnName(){
				
					return "'PREGUNTA_25'";
				
				}

				
			    public String _PREGUNTA_26_;

				public String get_PREGUNTA_26_ () {
					return this._PREGUNTA_26_;
				}

				public Boolean _PREGUNTA_26_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_26_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_26_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_26_Precision(){
				    return 0;
				}
				public String _PREGUNTA_26_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_26_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_26_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_26_OriginalDbColumnName(){
				
					return "'PREGUNTA_26'";
				
				}

				
			    public String _PREGUNTA_27_;

				public String get_PREGUNTA_27_ () {
					return this._PREGUNTA_27_;
				}

				public Boolean _PREGUNTA_27_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_27_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_27_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_27_Precision(){
				    return 0;
				}
				public String _PREGUNTA_27_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_27_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_27_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_27_OriginalDbColumnName(){
				
					return "'PREGUNTA_27'";
				
				}

				
			    public String _PREGUNTA_28_;

				public String get_PREGUNTA_28_ () {
					return this._PREGUNTA_28_;
				}

				public Boolean _PREGUNTA_28_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_28_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_28_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_28_Precision(){
				    return 0;
				}
				public String _PREGUNTA_28_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_28_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_28_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_28_OriginalDbColumnName(){
				
					return "'PREGUNTA_28'";
				
				}

				
			    public String _PREGUNTA_29_;

				public String get_PREGUNTA_29_ () {
					return this._PREGUNTA_29_;
				}

				public Boolean _PREGUNTA_29_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_29_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_29_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_29_Precision(){
				    return 0;
				}
				public String _PREGUNTA_29_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_29_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_29_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_29_OriginalDbColumnName(){
				
					return "'PREGUNTA_29'";
				
				}

				
			    public String _PREGUNTA_30_;

				public String get_PREGUNTA_30_ () {
					return this._PREGUNTA_30_;
				}

				public Boolean _PREGUNTA_30_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_30_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_30_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_30_Precision(){
				    return 0;
				}
				public String _PREGUNTA_30_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_30_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_30_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_30_OriginalDbColumnName(){
				
					return "'PREGUNTA_30'";
				
				}

				
			    public String _PREGUNTA_31_;

				public String get_PREGUNTA_31_ () {
					return this._PREGUNTA_31_;
				}

				public Boolean _PREGUNTA_31_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_31_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_31_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_31_Precision(){
				    return 0;
				}
				public String _PREGUNTA_31_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_31_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_31_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_31_OriginalDbColumnName(){
				
					return "'PREGUNTA_31'";
				
				}

				
			    public String _PREGUNTA_32_;

				public String get_PREGUNTA_32_ () {
					return this._PREGUNTA_32_;
				}

				public Boolean _PREGUNTA_32_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_32_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_32_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_32_Precision(){
				    return 0;
				}
				public String _PREGUNTA_32_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_32_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_32_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_32_OriginalDbColumnName(){
				
					return "'PREGUNTA_32'";
				
				}

				
			    public String _PREGUNTA_33_;

				public String get_PREGUNTA_33_ () {
					return this._PREGUNTA_33_;
				}

				public Boolean _PREGUNTA_33_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_33_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_33_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_33_Precision(){
				    return 0;
				}
				public String _PREGUNTA_33_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_33_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_33_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_33_OriginalDbColumnName(){
				
					return "'PREGUNTA_33'";
				
				}

				
			    public String _PREGUNTA_34_;

				public String get_PREGUNTA_34_ () {
					return this._PREGUNTA_34_;
				}

				public Boolean _PREGUNTA_34_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_34_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_34_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_34_Precision(){
				    return 0;
				}
				public String _PREGUNTA_34_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_34_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_34_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_34_OriginalDbColumnName(){
				
					return "'PREGUNTA_34'";
				
				}

				
			    public String _PREGUNTA_35_;

				public String get_PREGUNTA_35_ () {
					return this._PREGUNTA_35_;
				}

				public Boolean _PREGUNTA_35_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_35_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_35_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_35_Precision(){
				    return 0;
				}
				public String _PREGUNTA_35_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_35_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_35_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_35_OriginalDbColumnName(){
				
					return "'PREGUNTA_35'";
				
				}

				
			    public String _PREGUNTA_36_;

				public String get_PREGUNTA_36_ () {
					return this._PREGUNTA_36_;
				}

				public Boolean _PREGUNTA_36_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_36_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_36_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_36_Precision(){
				    return 0;
				}
				public String _PREGUNTA_36_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_36_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_36_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_36_OriginalDbColumnName(){
				
					return "'PREGUNTA_36'";
				
				}

				
			    public String _PREGUNTA_37_;

				public String get_PREGUNTA_37_ () {
					return this._PREGUNTA_37_;
				}

				public Boolean _PREGUNTA_37_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_37_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_37_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_37_Precision(){
				    return 0;
				}
				public String _PREGUNTA_37_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_37_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_37_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_37_OriginalDbColumnName(){
				
					return "'PREGUNTA_37'";
				
				}

				
			    public String _PREGUNTA_38_;

				public String get_PREGUNTA_38_ () {
					return this._PREGUNTA_38_;
				}

				public Boolean _PREGUNTA_38_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_38_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_38_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_38_Precision(){
				    return 0;
				}
				public String _PREGUNTA_38_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_38_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_38_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_38_OriginalDbColumnName(){
				
					return "'PREGUNTA_38'";
				
				}

				
			    public String _PREGUNTA_39_;

				public String get_PREGUNTA_39_ () {
					return this._PREGUNTA_39_;
				}

				public Boolean _PREGUNTA_39_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_39_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_39_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_39_Precision(){
				    return 0;
				}
				public String _PREGUNTA_39_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_39_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_39_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_39_OriginalDbColumnName(){
				
					return "'PREGUNTA_39'";
				
				}

				
			    public String _PREGUNTA_40_;

				public String get_PREGUNTA_40_ () {
					return this._PREGUNTA_40_;
				}

				public Boolean _PREGUNTA_40_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_40_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_40_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_40_Precision(){
				    return 0;
				}
				public String _PREGUNTA_40_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_40_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_40_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_40_OriginalDbColumnName(){
				
					return "'PREGUNTA_40'";
				
				}

				
			    public String _PREGUNTA_41_;

				public String get_PREGUNTA_41_ () {
					return this._PREGUNTA_41_;
				}

				public Boolean _PREGUNTA_41_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_41_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_41_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_41_Precision(){
				    return 0;
				}
				public String _PREGUNTA_41_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_41_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_41_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_41_OriginalDbColumnName(){
				
					return "'PREGUNTA_41'";
				
				}

				
			    public String _PREGUNTA_42_;

				public String get_PREGUNTA_42_ () {
					return this._PREGUNTA_42_;
				}

				public Boolean _PREGUNTA_42_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_42_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_42_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_42_Precision(){
				    return 0;
				}
				public String _PREGUNTA_42_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_42_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_42_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_42_OriginalDbColumnName(){
				
					return "'PREGUNTA_42'";
				
				}

				
			    public String _PREGUNTA_43_;

				public String get_PREGUNTA_43_ () {
					return this._PREGUNTA_43_;
				}

				public Boolean _PREGUNTA_43_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_43_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_43_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_43_Precision(){
				    return 0;
				}
				public String _PREGUNTA_43_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_43_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_43_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_43_OriginalDbColumnName(){
				
					return "'PREGUNTA_43'";
				
				}

				
			    public String _PREGUNTA_44_;

				public String get_PREGUNTA_44_ () {
					return this._PREGUNTA_44_;
				}

				public Boolean _PREGUNTA_44_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_44_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_44_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_44_Precision(){
				    return 0;
				}
				public String _PREGUNTA_44_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_44_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_44_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_44_OriginalDbColumnName(){
				
					return "'PREGUNTA_44'";
				
				}

				
			    public String _PREGUNTA_45_;

				public String get_PREGUNTA_45_ () {
					return this._PREGUNTA_45_;
				}

				public Boolean _PREGUNTA_45_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_45_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_45_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_45_Precision(){
				    return 0;
				}
				public String _PREGUNTA_45_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_45_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_45_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_45_OriginalDbColumnName(){
				
					return "'PREGUNTA_45'";
				
				}

				
			    public String _PREGUNTA_46_;

				public String get_PREGUNTA_46_ () {
					return this._PREGUNTA_46_;
				}

				public Boolean _PREGUNTA_46_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_46_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_46_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_46_Precision(){
				    return 0;
				}
				public String _PREGUNTA_46_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_46_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_46_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_46_OriginalDbColumnName(){
				
					return "'PREGUNTA_46'";
				
				}

				
			    public String _PREGUNTA_47_;

				public String get_PREGUNTA_47_ () {
					return this._PREGUNTA_47_;
				}

				public Boolean _PREGUNTA_47_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_47_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_47_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_47_Precision(){
				    return 0;
				}
				public String _PREGUNTA_47_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_47_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_47_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_47_OriginalDbColumnName(){
				
					return "'PREGUNTA_47'";
				
				}

				
			    public String _PREGUNTA_48_;

				public String get_PREGUNTA_48_ () {
					return this._PREGUNTA_48_;
				}

				public Boolean _PREGUNTA_48_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_48_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_48_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_48_Precision(){
				    return 0;
				}
				public String _PREGUNTA_48_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_48_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_48_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_48_OriginalDbColumnName(){
				
					return "'PREGUNTA_48'";
				
				}

				
			    public String _PREGUNTA_49_;

				public String get_PREGUNTA_49_ () {
					return this._PREGUNTA_49_;
				}

				public Boolean _PREGUNTA_49_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_49_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_49_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_49_Precision(){
				    return 0;
				}
				public String _PREGUNTA_49_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_49_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_49_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_49_OriginalDbColumnName(){
				
					return "'PREGUNTA_49'";
				
				}

				
			    public String _PREGUNTA_50_;

				public String get_PREGUNTA_50_ () {
					return this._PREGUNTA_50_;
				}

				public Boolean _PREGUNTA_50_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_50_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_50_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_50_Precision(){
				    return 0;
				}
				public String _PREGUNTA_50_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_50_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_50_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_50_OriginalDbColumnName(){
				
					return "'PREGUNTA_50'";
				
				}

				
			    public String _PREGUNTA_51_;

				public String get_PREGUNTA_51_ () {
					return this._PREGUNTA_51_;
				}

				public Boolean _PREGUNTA_51_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_51_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_51_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_51_Precision(){
				    return 0;
				}
				public String _PREGUNTA_51_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_51_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_51_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_51_OriginalDbColumnName(){
				
					return "'PREGUNTA_51'";
				
				}

				
			    public String _PREGUNTA_52_;

				public String get_PREGUNTA_52_ () {
					return this._PREGUNTA_52_;
				}

				public Boolean _PREGUNTA_52_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_52_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_52_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_52_Precision(){
				    return 0;
				}
				public String _PREGUNTA_52_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_52_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_52_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_52_OriginalDbColumnName(){
				
					return "'PREGUNTA_52'";
				
				}

				
			    public String _PREGUNTA_53_;

				public String get_PREGUNTA_53_ () {
					return this._PREGUNTA_53_;
				}

				public Boolean _PREGUNTA_53_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_53_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_53_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_53_Precision(){
				    return 0;
				}
				public String _PREGUNTA_53_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_53_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_53_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_53_OriginalDbColumnName(){
				
					return "'PREGUNTA_53'";
				
				}

				
			    public String _PREGUNTA_54_;

				public String get_PREGUNTA_54_ () {
					return this._PREGUNTA_54_;
				}

				public Boolean _PREGUNTA_54_IsNullable(){
				    return true;
				}
				public Boolean _PREGUNTA_54_IsKey(){
				    return false;
				}
				public Integer _PREGUNTA_54_Length(){
				    return 500;
				}
				public Integer _PREGUNTA_54_Precision(){
				    return 0;
				}
				public String _PREGUNTA_54_Default(){
				
					return null;
				
				}
				public String _PREGUNTA_54_Comment(){
				
				    return "";
				
				}
				public String _PREGUNTA_54_Pattern(){
				
					return "";
				
				}
				public String _PREGUNTA_54_OriginalDbColumnName(){
				
					return "'PREGUNTA_54'";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.FUERZA_ADSCRIPCION = readString(dis);
					
					this.ESM_ADSCRIPCION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.TIPO_VINCULACION = readString(dis);
					
					this._PREGUNTA_1_ = readString(dis);
					
					this._PREGUNTA_2_ = readString(dis);
					
					this._PREGUNTA_3_ = readString(dis);
					
					this._PREGUNTA_4_ = readString(dis);
					
					this._PREGUNTA_5_ = readString(dis);
					
					this._PREGUNTA_6_ = readString(dis);
					
					this._PREGUNTA_7_ = readString(dis);
					
					this._PREGUNTA_8_ = readString(dis);
					
					this._PREGUNTA_9_ = readString(dis);
					
					this._PREGUNTA_10_ = readString(dis);
					
					this._PREGUNTA_11_ = readString(dis);
					
					this._PREGUNTA_12_ = readString(dis);
					
					this._PREGUNTA_13_ = readString(dis);
					
					this._PREGUNTA_14_ = readString(dis);
					
					this._PREGUNTA_15_ = readString(dis);
					
					this._PREGUNTA_16_ = readString(dis);
					
					this._PREGUNTA_17_ = readString(dis);
					
					this._PREGUNTA_18_ = readString(dis);
					
					this._PREGUNTA_19_ = readString(dis);
					
					this._PREGUNTA_20_ = readString(dis);
					
					this._PREGUNTA_21_ = readString(dis);
					
					this._PREGUNTA_22_ = readString(dis);
					
					this._PREGUNTA_23_ = readString(dis);
					
					this._PREGUNTA_24_ = readString(dis);
					
					this._PREGUNTA_25_ = readString(dis);
					
					this._PREGUNTA_26_ = readString(dis);
					
					this._PREGUNTA_27_ = readString(dis);
					
					this._PREGUNTA_28_ = readString(dis);
					
					this._PREGUNTA_29_ = readString(dis);
					
					this._PREGUNTA_30_ = readString(dis);
					
					this._PREGUNTA_31_ = readString(dis);
					
					this._PREGUNTA_32_ = readString(dis);
					
					this._PREGUNTA_33_ = readString(dis);
					
					this._PREGUNTA_34_ = readString(dis);
					
					this._PREGUNTA_35_ = readString(dis);
					
					this._PREGUNTA_36_ = readString(dis);
					
					this._PREGUNTA_37_ = readString(dis);
					
					this._PREGUNTA_38_ = readString(dis);
					
					this._PREGUNTA_39_ = readString(dis);
					
					this._PREGUNTA_40_ = readString(dis);
					
					this._PREGUNTA_41_ = readString(dis);
					
					this._PREGUNTA_42_ = readString(dis);
					
					this._PREGUNTA_43_ = readString(dis);
					
					this._PREGUNTA_44_ = readString(dis);
					
					this._PREGUNTA_45_ = readString(dis);
					
					this._PREGUNTA_46_ = readString(dis);
					
					this._PREGUNTA_47_ = readString(dis);
					
					this._PREGUNTA_48_ = readString(dis);
					
					this._PREGUNTA_49_ = readString(dis);
					
					this._PREGUNTA_50_ = readString(dis);
					
					this._PREGUNTA_51_ = readString(dis);
					
					this._PREGUNTA_52_ = readString(dis);
					
					this._PREGUNTA_53_ = readString(dis);
					
					this._PREGUNTA_54_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.SIGLA = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.GRADO = readString(dis);
					
					this.FUERZA_ADSCRIPCION = readString(dis);
					
					this.ESM_ADSCRIPCION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.TIPO_VINCULACION = readString(dis);
					
					this._PREGUNTA_1_ = readString(dis);
					
					this._PREGUNTA_2_ = readString(dis);
					
					this._PREGUNTA_3_ = readString(dis);
					
					this._PREGUNTA_4_ = readString(dis);
					
					this._PREGUNTA_5_ = readString(dis);
					
					this._PREGUNTA_6_ = readString(dis);
					
					this._PREGUNTA_7_ = readString(dis);
					
					this._PREGUNTA_8_ = readString(dis);
					
					this._PREGUNTA_9_ = readString(dis);
					
					this._PREGUNTA_10_ = readString(dis);
					
					this._PREGUNTA_11_ = readString(dis);
					
					this._PREGUNTA_12_ = readString(dis);
					
					this._PREGUNTA_13_ = readString(dis);
					
					this._PREGUNTA_14_ = readString(dis);
					
					this._PREGUNTA_15_ = readString(dis);
					
					this._PREGUNTA_16_ = readString(dis);
					
					this._PREGUNTA_17_ = readString(dis);
					
					this._PREGUNTA_18_ = readString(dis);
					
					this._PREGUNTA_19_ = readString(dis);
					
					this._PREGUNTA_20_ = readString(dis);
					
					this._PREGUNTA_21_ = readString(dis);
					
					this._PREGUNTA_22_ = readString(dis);
					
					this._PREGUNTA_23_ = readString(dis);
					
					this._PREGUNTA_24_ = readString(dis);
					
					this._PREGUNTA_25_ = readString(dis);
					
					this._PREGUNTA_26_ = readString(dis);
					
					this._PREGUNTA_27_ = readString(dis);
					
					this._PREGUNTA_28_ = readString(dis);
					
					this._PREGUNTA_29_ = readString(dis);
					
					this._PREGUNTA_30_ = readString(dis);
					
					this._PREGUNTA_31_ = readString(dis);
					
					this._PREGUNTA_32_ = readString(dis);
					
					this._PREGUNTA_33_ = readString(dis);
					
					this._PREGUNTA_34_ = readString(dis);
					
					this._PREGUNTA_35_ = readString(dis);
					
					this._PREGUNTA_36_ = readString(dis);
					
					this._PREGUNTA_37_ = readString(dis);
					
					this._PREGUNTA_38_ = readString(dis);
					
					this._PREGUNTA_39_ = readString(dis);
					
					this._PREGUNTA_40_ = readString(dis);
					
					this._PREGUNTA_41_ = readString(dis);
					
					this._PREGUNTA_42_ = readString(dis);
					
					this._PREGUNTA_43_ = readString(dis);
					
					this._PREGUNTA_44_ = readString(dis);
					
					this._PREGUNTA_45_ = readString(dis);
					
					this._PREGUNTA_46_ = readString(dis);
					
					this._PREGUNTA_47_ = readString(dis);
					
					this._PREGUNTA_48_ = readString(dis);
					
					this._PREGUNTA_49_ = readString(dis);
					
					this._PREGUNTA_50_ = readString(dis);
					
					this._PREGUNTA_51_ = readString(dis);
					
					this._PREGUNTA_52_ = readString(dis);
					
					this._PREGUNTA_53_ = readString(dis);
					
					this._PREGUNTA_54_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.FUERZA_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.ESM_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.TIPO_VINCULACION,dos);
					
					// String
				
						writeString(this._PREGUNTA_1_,dos);
					
					// String
				
						writeString(this._PREGUNTA_2_,dos);
					
					// String
				
						writeString(this._PREGUNTA_3_,dos);
					
					// String
				
						writeString(this._PREGUNTA_4_,dos);
					
					// String
				
						writeString(this._PREGUNTA_5_,dos);
					
					// String
				
						writeString(this._PREGUNTA_6_,dos);
					
					// String
				
						writeString(this._PREGUNTA_7_,dos);
					
					// String
				
						writeString(this._PREGUNTA_8_,dos);
					
					// String
				
						writeString(this._PREGUNTA_9_,dos);
					
					// String
				
						writeString(this._PREGUNTA_10_,dos);
					
					// String
				
						writeString(this._PREGUNTA_11_,dos);
					
					// String
				
						writeString(this._PREGUNTA_12_,dos);
					
					// String
				
						writeString(this._PREGUNTA_13_,dos);
					
					// String
				
						writeString(this._PREGUNTA_14_,dos);
					
					// String
				
						writeString(this._PREGUNTA_15_,dos);
					
					// String
				
						writeString(this._PREGUNTA_16_,dos);
					
					// String
				
						writeString(this._PREGUNTA_17_,dos);
					
					// String
				
						writeString(this._PREGUNTA_18_,dos);
					
					// String
				
						writeString(this._PREGUNTA_19_,dos);
					
					// String
				
						writeString(this._PREGUNTA_20_,dos);
					
					// String
				
						writeString(this._PREGUNTA_21_,dos);
					
					// String
				
						writeString(this._PREGUNTA_22_,dos);
					
					// String
				
						writeString(this._PREGUNTA_23_,dos);
					
					// String
				
						writeString(this._PREGUNTA_24_,dos);
					
					// String
				
						writeString(this._PREGUNTA_25_,dos);
					
					// String
				
						writeString(this._PREGUNTA_26_,dos);
					
					// String
				
						writeString(this._PREGUNTA_27_,dos);
					
					// String
				
						writeString(this._PREGUNTA_28_,dos);
					
					// String
				
						writeString(this._PREGUNTA_29_,dos);
					
					// String
				
						writeString(this._PREGUNTA_30_,dos);
					
					// String
				
						writeString(this._PREGUNTA_31_,dos);
					
					// String
				
						writeString(this._PREGUNTA_32_,dos);
					
					// String
				
						writeString(this._PREGUNTA_33_,dos);
					
					// String
				
						writeString(this._PREGUNTA_34_,dos);
					
					// String
				
						writeString(this._PREGUNTA_35_,dos);
					
					// String
				
						writeString(this._PREGUNTA_36_,dos);
					
					// String
				
						writeString(this._PREGUNTA_37_,dos);
					
					// String
				
						writeString(this._PREGUNTA_38_,dos);
					
					// String
				
						writeString(this._PREGUNTA_39_,dos);
					
					// String
				
						writeString(this._PREGUNTA_40_,dos);
					
					// String
				
						writeString(this._PREGUNTA_41_,dos);
					
					// String
				
						writeString(this._PREGUNTA_42_,dos);
					
					// String
				
						writeString(this._PREGUNTA_43_,dos);
					
					// String
				
						writeString(this._PREGUNTA_44_,dos);
					
					// String
				
						writeString(this._PREGUNTA_45_,dos);
					
					// String
				
						writeString(this._PREGUNTA_46_,dos);
					
					// String
				
						writeString(this._PREGUNTA_47_,dos);
					
					// String
				
						writeString(this._PREGUNTA_48_,dos);
					
					// String
				
						writeString(this._PREGUNTA_49_,dos);
					
					// String
				
						writeString(this._PREGUNTA_50_,dos);
					
					// String
				
						writeString(this._PREGUNTA_51_,dos);
					
					// String
				
						writeString(this._PREGUNTA_52_,dos);
					
					// String
				
						writeString(this._PREGUNTA_53_,dos);
					
					// String
				
						writeString(this._PREGUNTA_54_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.GRADO,dos);
					
					// String
				
						writeString(this.FUERZA_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.ESM_ADSCRIPCION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.TIPO_VINCULACION,dos);
					
					// String
				
						writeString(this._PREGUNTA_1_,dos);
					
					// String
				
						writeString(this._PREGUNTA_2_,dos);
					
					// String
				
						writeString(this._PREGUNTA_3_,dos);
					
					// String
				
						writeString(this._PREGUNTA_4_,dos);
					
					// String
				
						writeString(this._PREGUNTA_5_,dos);
					
					// String
				
						writeString(this._PREGUNTA_6_,dos);
					
					// String
				
						writeString(this._PREGUNTA_7_,dos);
					
					// String
				
						writeString(this._PREGUNTA_8_,dos);
					
					// String
				
						writeString(this._PREGUNTA_9_,dos);
					
					// String
				
						writeString(this._PREGUNTA_10_,dos);
					
					// String
				
						writeString(this._PREGUNTA_11_,dos);
					
					// String
				
						writeString(this._PREGUNTA_12_,dos);
					
					// String
				
						writeString(this._PREGUNTA_13_,dos);
					
					// String
				
						writeString(this._PREGUNTA_14_,dos);
					
					// String
				
						writeString(this._PREGUNTA_15_,dos);
					
					// String
				
						writeString(this._PREGUNTA_16_,dos);
					
					// String
				
						writeString(this._PREGUNTA_17_,dos);
					
					// String
				
						writeString(this._PREGUNTA_18_,dos);
					
					// String
				
						writeString(this._PREGUNTA_19_,dos);
					
					// String
				
						writeString(this._PREGUNTA_20_,dos);
					
					// String
				
						writeString(this._PREGUNTA_21_,dos);
					
					// String
				
						writeString(this._PREGUNTA_22_,dos);
					
					// String
				
						writeString(this._PREGUNTA_23_,dos);
					
					// String
				
						writeString(this._PREGUNTA_24_,dos);
					
					// String
				
						writeString(this._PREGUNTA_25_,dos);
					
					// String
				
						writeString(this._PREGUNTA_26_,dos);
					
					// String
				
						writeString(this._PREGUNTA_27_,dos);
					
					// String
				
						writeString(this._PREGUNTA_28_,dos);
					
					// String
				
						writeString(this._PREGUNTA_29_,dos);
					
					// String
				
						writeString(this._PREGUNTA_30_,dos);
					
					// String
				
						writeString(this._PREGUNTA_31_,dos);
					
					// String
				
						writeString(this._PREGUNTA_32_,dos);
					
					// String
				
						writeString(this._PREGUNTA_33_,dos);
					
					// String
				
						writeString(this._PREGUNTA_34_,dos);
					
					// String
				
						writeString(this._PREGUNTA_35_,dos);
					
					// String
				
						writeString(this._PREGUNTA_36_,dos);
					
					// String
				
						writeString(this._PREGUNTA_37_,dos);
					
					// String
				
						writeString(this._PREGUNTA_38_,dos);
					
					// String
				
						writeString(this._PREGUNTA_39_,dos);
					
					// String
				
						writeString(this._PREGUNTA_40_,dos);
					
					// String
				
						writeString(this._PREGUNTA_41_,dos);
					
					// String
				
						writeString(this._PREGUNTA_42_,dos);
					
					// String
				
						writeString(this._PREGUNTA_43_,dos);
					
					// String
				
						writeString(this._PREGUNTA_44_,dos);
					
					// String
				
						writeString(this._PREGUNTA_45_,dos);
					
					// String
				
						writeString(this._PREGUNTA_46_,dos);
					
					// String
				
						writeString(this._PREGUNTA_47_,dos);
					
					// String
				
						writeString(this._PREGUNTA_48_,dos);
					
					// String
				
						writeString(this._PREGUNTA_49_,dos);
					
					// String
				
						writeString(this._PREGUNTA_50_,dos);
					
					// String
				
						writeString(this._PREGUNTA_51_,dos);
					
					// String
				
						writeString(this._PREGUNTA_52_,dos);
					
					// String
				
						writeString(this._PREGUNTA_53_,dos);
					
					// String
				
						writeString(this._PREGUNTA_54_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",GRADO="+GRADO);
		sb.append(",FUERZA_ADSCRIPCION="+FUERZA_ADSCRIPCION);
		sb.append(",ESM_ADSCRIPCION="+ESM_ADSCRIPCION);
		sb.append(",TIPO_AFILIADO="+TIPO_AFILIADO);
		sb.append(",TIPO_VINCULACION="+TIPO_VINCULACION);
		sb.append(",_PREGUNTA_1_="+_PREGUNTA_1_);
		sb.append(",_PREGUNTA_2_="+_PREGUNTA_2_);
		sb.append(",_PREGUNTA_3_="+_PREGUNTA_3_);
		sb.append(",_PREGUNTA_4_="+_PREGUNTA_4_);
		sb.append(",_PREGUNTA_5_="+_PREGUNTA_5_);
		sb.append(",_PREGUNTA_6_="+_PREGUNTA_6_);
		sb.append(",_PREGUNTA_7_="+_PREGUNTA_7_);
		sb.append(",_PREGUNTA_8_="+_PREGUNTA_8_);
		sb.append(",_PREGUNTA_9_="+_PREGUNTA_9_);
		sb.append(",_PREGUNTA_10_="+_PREGUNTA_10_);
		sb.append(",_PREGUNTA_11_="+_PREGUNTA_11_);
		sb.append(",_PREGUNTA_12_="+_PREGUNTA_12_);
		sb.append(",_PREGUNTA_13_="+_PREGUNTA_13_);
		sb.append(",_PREGUNTA_14_="+_PREGUNTA_14_);
		sb.append(",_PREGUNTA_15_="+_PREGUNTA_15_);
		sb.append(",_PREGUNTA_16_="+_PREGUNTA_16_);
		sb.append(",_PREGUNTA_17_="+_PREGUNTA_17_);
		sb.append(",_PREGUNTA_18_="+_PREGUNTA_18_);
		sb.append(",_PREGUNTA_19_="+_PREGUNTA_19_);
		sb.append(",_PREGUNTA_20_="+_PREGUNTA_20_);
		sb.append(",_PREGUNTA_21_="+_PREGUNTA_21_);
		sb.append(",_PREGUNTA_22_="+_PREGUNTA_22_);
		sb.append(",_PREGUNTA_23_="+_PREGUNTA_23_);
		sb.append(",_PREGUNTA_24_="+_PREGUNTA_24_);
		sb.append(",_PREGUNTA_25_="+_PREGUNTA_25_);
		sb.append(",_PREGUNTA_26_="+_PREGUNTA_26_);
		sb.append(",_PREGUNTA_27_="+_PREGUNTA_27_);
		sb.append(",_PREGUNTA_28_="+_PREGUNTA_28_);
		sb.append(",_PREGUNTA_29_="+_PREGUNTA_29_);
		sb.append(",_PREGUNTA_30_="+_PREGUNTA_30_);
		sb.append(",_PREGUNTA_31_="+_PREGUNTA_31_);
		sb.append(",_PREGUNTA_32_="+_PREGUNTA_32_);
		sb.append(",_PREGUNTA_33_="+_PREGUNTA_33_);
		sb.append(",_PREGUNTA_34_="+_PREGUNTA_34_);
		sb.append(",_PREGUNTA_35_="+_PREGUNTA_35_);
		sb.append(",_PREGUNTA_36_="+_PREGUNTA_36_);
		sb.append(",_PREGUNTA_37_="+_PREGUNTA_37_);
		sb.append(",_PREGUNTA_38_="+_PREGUNTA_38_);
		sb.append(",_PREGUNTA_39_="+_PREGUNTA_39_);
		sb.append(",_PREGUNTA_40_="+_PREGUNTA_40_);
		sb.append(",_PREGUNTA_41_="+_PREGUNTA_41_);
		sb.append(",_PREGUNTA_42_="+_PREGUNTA_42_);
		sb.append(",_PREGUNTA_43_="+_PREGUNTA_43_);
		sb.append(",_PREGUNTA_44_="+_PREGUNTA_44_);
		sb.append(",_PREGUNTA_45_="+_PREGUNTA_45_);
		sb.append(",_PREGUNTA_46_="+_PREGUNTA_46_);
		sb.append(",_PREGUNTA_47_="+_PREGUNTA_47_);
		sb.append(",_PREGUNTA_48_="+_PREGUNTA_48_);
		sb.append(",_PREGUNTA_49_="+_PREGUNTA_49_);
		sb.append(",_PREGUNTA_50_="+_PREGUNTA_50_);
		sb.append(",_PREGUNTA_51_="+_PREGUNTA_51_);
		sb.append(",_PREGUNTA_52_="+_PREGUNTA_52_);
		sb.append(",_PREGUNTA_53_="+_PREGUNTA_53_);
		sb.append(",_PREGUNTA_54_="+_PREGUNTA_54_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row102Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row102Struct row102 = new row102Struct();
out1Struct out1 = new out1Struct();





	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.CARPETA_SALIDA+"/"+context.NOMBRE_CSV)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row102");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "\nSELECT *\nFROM   (SELECT GP.PRIMER_NOMBRE,\n               GP.SEGUNDO_NOMBRE,\n               GP.PRIMER_APELLIDO,\n  "
+"             GP.SEGUNDO_APELLIDO,\n               GT.SIGLA,\n               GP.DOCUMENTO,\n               GG.NOMBRE AS G"
+"RADO,\n               GFADS.NOMBRE AS FUERZA_ADSCRIPCION,\n               GUADS.NOMBRE AS ESM_ADSCRIPCION,\n            "
+"   AFT.NOMBRE AS TIPO_AFILIADO,\n               ATV.NOMBRE AS TIPO_VINCULACION,\n               'PREGUNTA_' || ADP.DS_OR"
+"DEN AS PREGUNTA,\n               CASE\n                 WHEN ADR.DS_OPCION_ID IS NULL THEN\n                  ADR.VALOR"
+"\n                 ELSE\n                  ADO.TEXTO\n               END AS RESPUESTA\n        FROM   AFI_DS_RESPUESTAS A"
+"DR\n        LEFT   JOIN AFI_DS_OPCIONES ADO ON ADO.ID = ADR.DS_OPCION_ID\n        INNER  JOIN AFI_DS_PREGUNTAS ADP ON AD"
+"P.ID = ADR.DS_PREGUNTA_ID\n        -- INFO AFILIACION\n        INNER  JOIN GEN_AFILIADOS GA ON GA.ID = ADR.AFILIADOS_ID"
+"\n        INNER  JOIN GEN_AFILIADOS_ENTAPORTANTE GAE ON GAE.AFILIADOS_ID = NVL(GA.PADRE_ID, GA.ID)\n        INNER  JOIN G"
+"EN_GRDMILITARES GG ON GG.ID = GAE.GRDMILITARES_ID\n        -- DATOS PERSONA\n        INNER  JOIN GEN_PERSONAS GP ON GP.I"
+"D = GA.PERSONAS_ID\n        INNER  JOIN GEN_TDOCUMENTOS GT ON GT.ID = GP.TDOCUMENTOS_ID\n        -- ADSCRIPCION\n       "
+" INNER  JOIN GEN_FUERZAS GFADS ON GFADS.ID = GAE.FUERZAS_ID\n        INNER  JOIN GEN_UORG GUADS ON GUADS.ID = GP.ESMADSC"
+"RITO\n        -- TIPO DE AFILIADO\n        INNER  JOIN AFI_PLANAFILIACIONES AFTT ON AFTT.ID = GA.PLANAFILIACIONES_ID\n  "
+"      INNER  JOIN AFI_TAFILIADOS AFT ON AFT.ID = AFTT.TAFILIADOS_ID\n        -- TIPO DE VINCULACION\n        INNER  JOIN"
+" AFI_TVINCULACIONES ATV ON ATV.ID = GAE.TVINCULACIONES_ID AND ATV.ESTREGISTRO_ID = 1\n        -- ESM\n        INNER JOIN"
+" (SELECT GU2.id\n                      FROM GEN_UORG GU2\n                     WHERE gu2.id = '"+context.ESM_REMITE+"'\n                    UNION\n                    SELECT GU.ID\n                      FROM GEN_UORG GU\n               "
+"      START WITH PADRE_ID = '"+context.ESM_REMITE+"'\n                    CONNECT BY PRIOR id = PADRE_ID) ESM_FILTRO\n            ON ESM_FILTRO.ID = GP.ESMADSCRITO\n     "
+"   \n        WHERE  ADR.ESTREGISTRO_ID = 1 AND GA.ESTREGISTRO_ID = 1 AND GP.ESTREGISTRO_ID = 1 AND GT.ESTREGISTRO_ID = 1"
+" AND ADP.ESTREGISTRO_ID = 1 AND\n               GAE.ESTREGISTRO_ID = 1 AND GAE.PRINCIPAL = 1 AND GAE.ESTADO = 'Activo' A"
+"ND GG.ESTREGISTRO_ID = 1 AND GFADS.ESTREGISTRO_ID = 1\n               -- Filtro Fuerza\n               AND (GFADS.ID = '"
+""+context.FUERZA+"' OR '"+context.FUERZA+"' IS NULL) \n               -- Filtro fech encuesta\n               AND ADR.FREGISTRO BETWEEN TO_DATE('"+context.FECHA_INICIAL+"', 'DD/MM/YYYY') AND TO_DATE('"+context.FECHA_FINAL+"', 'DD/MM/YYYY') + 1\n              )\nPIVOT(MAX(RESPUESTA)\nFOR    PREGUNTA IN('PREGUNTA_1', 'PREGUNTA_2', 'PREGUNTA_3"
+"', 'PREGUNTA_4', 'PREGUNTA_5', 'PREGUNTA_6', 'PREGUNTA_7', 'PREGUNTA_8', 'PREGUNTA_9', 'PREGUNTA_10', 'PREGUNTA_11', 'PR"
+"EGUNTA_12', 'PREGUNTA_13', 'PREGUNTA_14', 'PREGUNTA_15', 'PREGUNTA_16', 'PREGUNTA_17', 'PREGUNTA_18', 'PREGUNTA_19', 'PR"
+"EGUNTA_20', 'PREGUNTA_21', 'PREGUNTA_22', 'PREGUNTA_23', 'PREGUNTA_24', 'PREGUNTA_25', 'PREGUNTA_26', 'PREGUNTA_27', 'PR"
+"EGUNTA_28', 'PREGUNTA_29', 'PREGUNTA_30', 'PREGUNTA_31', 'PREGUNTA_32', 'PREGUNTA_33', 'PREGUNTA_34', 'PREGUNTA_35', 'PR"
+"EGUNTA_36', 'PREGUNTA_37', 'PREGUNTA_38', 'PREGUNTA_39', 'PREGUNTA_40', 'PREGUNTA_41', 'PREGUNTA_42', 'PREGUNTA_43', 'PR"
+"EGUNTA_44', 'PREGUNTA_45', 'PREGUNTA_46', 'PREGUNTA_47', 'PREGUNTA_48', 'PREGUNTA_49', 'PREGUNTA_50', 'PREGUNTA_51', 'PR"
+"EGUNTA_52', 'PREGUNTA_53', 'PREGUNTA_54'))\n\n";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row102.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row102.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row102.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row102.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row102.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row102.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 4) {
								row102.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row102.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 5) {
								row102.SIGLA = null;
							} else {
	                         		
        	row102.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 6) {
								row102.DOCUMENTO = null;
							} else {
	                         		
        	row102.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 7) {
								row102.GRADO = null;
							} else {
	                         		
        	row102.GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 8) {
								row102.FUERZA_ADSCRIPCION = null;
							} else {
	                         		
        	row102.FUERZA_ADSCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 9) {
								row102.ESM_ADSCRIPCION = null;
							} else {
	                         		
        	row102.ESM_ADSCRIPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 10) {
								row102.TIPO_AFILIADO = null;
							} else {
	                         		
        	row102.TIPO_AFILIADO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 11) {
								row102.TIPO_VINCULACION = null;
							} else {
	                         		
        	row102.TIPO_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 12) {
								row102._PREGUNTA_1_ = null;
							} else {
	                         		
        	row102._PREGUNTA_1_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 13) {
								row102._PREGUNTA_2_ = null;
							} else {
	                         		
        	row102._PREGUNTA_2_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 14) {
								row102._PREGUNTA_3_ = null;
							} else {
	                         		
        	row102._PREGUNTA_3_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 15) {
								row102._PREGUNTA_4_ = null;
							} else {
	                         		
        	row102._PREGUNTA_4_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 16) {
								row102._PREGUNTA_5_ = null;
							} else {
	                         		
        	row102._PREGUNTA_5_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 17) {
								row102._PREGUNTA_6_ = null;
							} else {
	                         		
        	row102._PREGUNTA_6_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 18) {
								row102._PREGUNTA_7_ = null;
							} else {
	                         		
        	row102._PREGUNTA_7_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 19) {
								row102._PREGUNTA_8_ = null;
							} else {
	                         		
        	row102._PREGUNTA_8_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 20) {
								row102._PREGUNTA_9_ = null;
							} else {
	                         		
        	row102._PREGUNTA_9_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 21) {
								row102._PREGUNTA_10_ = null;
							} else {
	                         		
        	row102._PREGUNTA_10_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 22) {
								row102._PREGUNTA_11_ = null;
							} else {
	                         		
        	row102._PREGUNTA_11_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 23) {
								row102._PREGUNTA_12_ = null;
							} else {
	                         		
        	row102._PREGUNTA_12_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 24) {
								row102._PREGUNTA_13_ = null;
							} else {
	                         		
        	row102._PREGUNTA_13_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 25) {
								row102._PREGUNTA_14_ = null;
							} else {
	                         		
        	row102._PREGUNTA_14_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 26) {
								row102._PREGUNTA_15_ = null;
							} else {
	                         		
        	row102._PREGUNTA_15_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 27) {
								row102._PREGUNTA_16_ = null;
							} else {
	                         		
        	row102._PREGUNTA_16_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 28) {
								row102._PREGUNTA_17_ = null;
							} else {
	                         		
        	row102._PREGUNTA_17_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 29) {
								row102._PREGUNTA_18_ = null;
							} else {
	                         		
        	row102._PREGUNTA_18_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 30) {
								row102._PREGUNTA_19_ = null;
							} else {
	                         		
        	row102._PREGUNTA_19_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 31) {
								row102._PREGUNTA_20_ = null;
							} else {
	                         		
        	row102._PREGUNTA_20_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 32) {
								row102._PREGUNTA_21_ = null;
							} else {
	                         		
        	row102._PREGUNTA_21_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 33) {
								row102._PREGUNTA_22_ = null;
							} else {
	                         		
        	row102._PREGUNTA_22_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 34) {
								row102._PREGUNTA_23_ = null;
							} else {
	                         		
        	row102._PREGUNTA_23_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 35) {
								row102._PREGUNTA_24_ = null;
							} else {
	                         		
        	row102._PREGUNTA_24_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 36) {
								row102._PREGUNTA_25_ = null;
							} else {
	                         		
        	row102._PREGUNTA_25_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 37) {
								row102._PREGUNTA_26_ = null;
							} else {
	                         		
        	row102._PREGUNTA_26_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 38) {
								row102._PREGUNTA_27_ = null;
							} else {
	                         		
        	row102._PREGUNTA_27_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 39) {
								row102._PREGUNTA_28_ = null;
							} else {
	                         		
        	row102._PREGUNTA_28_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 39, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 40) {
								row102._PREGUNTA_29_ = null;
							} else {
	                         		
        	row102._PREGUNTA_29_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 40, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 41) {
								row102._PREGUNTA_30_ = null;
							} else {
	                         		
        	row102._PREGUNTA_30_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 41, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 42) {
								row102._PREGUNTA_31_ = null;
							} else {
	                         		
        	row102._PREGUNTA_31_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 42, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 43) {
								row102._PREGUNTA_32_ = null;
							} else {
	                         		
        	row102._PREGUNTA_32_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 43, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 44) {
								row102._PREGUNTA_33_ = null;
							} else {
	                         		
        	row102._PREGUNTA_33_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 44, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 45) {
								row102._PREGUNTA_34_ = null;
							} else {
	                         		
        	row102._PREGUNTA_34_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 45, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 46) {
								row102._PREGUNTA_35_ = null;
							} else {
	                         		
        	row102._PREGUNTA_35_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 46, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 47) {
								row102._PREGUNTA_36_ = null;
							} else {
	                         		
        	row102._PREGUNTA_36_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 47, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 48) {
								row102._PREGUNTA_37_ = null;
							} else {
	                         		
        	row102._PREGUNTA_37_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 48, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 49) {
								row102._PREGUNTA_38_ = null;
							} else {
	                         		
        	row102._PREGUNTA_38_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 49, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 50) {
								row102._PREGUNTA_39_ = null;
							} else {
	                         		
        	row102._PREGUNTA_39_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 50, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 51) {
								row102._PREGUNTA_40_ = null;
							} else {
	                         		
        	row102._PREGUNTA_40_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 51, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 52) {
								row102._PREGUNTA_41_ = null;
							} else {
	                         		
        	row102._PREGUNTA_41_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 52, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 53) {
								row102._PREGUNTA_42_ = null;
							} else {
	                         		
        	row102._PREGUNTA_42_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 53, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 54) {
								row102._PREGUNTA_43_ = null;
							} else {
	                         		
        	row102._PREGUNTA_43_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 54, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 55) {
								row102._PREGUNTA_44_ = null;
							} else {
	                         		
        	row102._PREGUNTA_44_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 55, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 56) {
								row102._PREGUNTA_45_ = null;
							} else {
	                         		
        	row102._PREGUNTA_45_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 56, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 57) {
								row102._PREGUNTA_46_ = null;
							} else {
	                         		
        	row102._PREGUNTA_46_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 57, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 58) {
								row102._PREGUNTA_47_ = null;
							} else {
	                         		
        	row102._PREGUNTA_47_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 58, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 59) {
								row102._PREGUNTA_48_ = null;
							} else {
	                         		
        	row102._PREGUNTA_48_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 59, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 60) {
								row102._PREGUNTA_49_ = null;
							} else {
	                         		
        	row102._PREGUNTA_49_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 60, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 61) {
								row102._PREGUNTA_50_ = null;
							} else {
	                         		
        	row102._PREGUNTA_50_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 61, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 62) {
								row102._PREGUNTA_51_ = null;
							} else {
	                         		
        	row102._PREGUNTA_51_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 62, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 63) {
								row102._PREGUNTA_52_ = null;
							} else {
	                         		
        	row102._PREGUNTA_52_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 63, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 64) {
								row102._PREGUNTA_53_ = null;
							} else {
	                         		
        	row102._PREGUNTA_53_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 64, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 65) {
								row102._PREGUNTA_54_ = null;
							} else {
	                         		
        	row102._PREGUNTA_54_ = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 65, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row102"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.PRIMER_NOMBRE = row102.PRIMER_NOMBRE;
out1_tmp.SEGUNDO_NOMBRE = row102.SEGUNDO_NOMBRE;
out1_tmp.PRIMER_APELLIDO = row102.PRIMER_APELLIDO;
out1_tmp.SEGUNDO_APELLIDO = row102.SEGUNDO_APELLIDO;
out1_tmp.SIGLA = row102.SIGLA;
out1_tmp.DOCUMENTO = row102.DOCUMENTO;
out1_tmp.GRADO = row102.GRADO;
out1_tmp.FUERZA_ADSCRIPCION = row102.FUERZA_ADSCRIPCION;
out1_tmp.ESM_ADSCRIPCION = row102.ESM_ADSCRIPCION;
out1_tmp.TIPO_AFILIADO = row102.TIPO_AFILIADO;
out1_tmp.TIPO_VINCULACION = row102.TIPO_VINCULACION;
out1_tmp._PREGUNTA_1_ = row102._PREGUNTA_1_;
out1_tmp._PREGUNTA_2_ = row102._PREGUNTA_2_;
out1_tmp._PREGUNTA_3_ = row102._PREGUNTA_3_;
out1_tmp._PREGUNTA_4_ = row102._PREGUNTA_4_;
out1_tmp._PREGUNTA_5_ = row102._PREGUNTA_5_;
out1_tmp._PREGUNTA_6_ = row102._PREGUNTA_6_;
out1_tmp._PREGUNTA_7_ = row102._PREGUNTA_7_;
out1_tmp._PREGUNTA_8_ = row102._PREGUNTA_8_;
out1_tmp._PREGUNTA_9_ = row102._PREGUNTA_9_;
out1_tmp._PREGUNTA_10_ = row102._PREGUNTA_10_;
out1_tmp._PREGUNTA_11_ = row102._PREGUNTA_11_;
out1_tmp._PREGUNTA_12_ = row102._PREGUNTA_12_;
out1_tmp._PREGUNTA_13_ = row102._PREGUNTA_13_;
out1_tmp._PREGUNTA_14_ = row102._PREGUNTA_14_;
out1_tmp._PREGUNTA_15_ = row102._PREGUNTA_15_;
out1_tmp._PREGUNTA_16_ = row102._PREGUNTA_16_;
out1_tmp._PREGUNTA_17_ = row102._PREGUNTA_17_;
out1_tmp._PREGUNTA_18_ = row102._PREGUNTA_18_;
out1_tmp._PREGUNTA_19_ = row102._PREGUNTA_19_;
out1_tmp._PREGUNTA_20_ = row102._PREGUNTA_20_;
out1_tmp._PREGUNTA_21_ = row102._PREGUNTA_21_;
out1_tmp._PREGUNTA_22_ = row102._PREGUNTA_22_;
out1_tmp._PREGUNTA_23_ = row102._PREGUNTA_23_;
out1_tmp._PREGUNTA_24_ = row102._PREGUNTA_24_;
out1_tmp._PREGUNTA_25_ = row102._PREGUNTA_25_;
out1_tmp._PREGUNTA_26_ = row102._PREGUNTA_26_;
out1_tmp._PREGUNTA_27_ = row102._PREGUNTA_27_;
out1_tmp._PREGUNTA_28_ = row102._PREGUNTA_28_;
out1_tmp._PREGUNTA_29_ = row102._PREGUNTA_29_;
out1_tmp._PREGUNTA_30_ = row102._PREGUNTA_30_;
out1_tmp._PREGUNTA_31_ = row102._PREGUNTA_31_;
out1_tmp._PREGUNTA_32_ = row102._PREGUNTA_32_;
out1_tmp._PREGUNTA_33_ = row102._PREGUNTA_33_;
out1_tmp._PREGUNTA_34_ = row102._PREGUNTA_34_;
out1_tmp._PREGUNTA_35_ = row102._PREGUNTA_35_;
out1_tmp._PREGUNTA_36_ = row102._PREGUNTA_36_;
out1_tmp._PREGUNTA_37_ = row102._PREGUNTA_37_;
out1_tmp._PREGUNTA_38_ = row102._PREGUNTA_38_;
out1_tmp._PREGUNTA_39_ = row102._PREGUNTA_39_;
out1_tmp._PREGUNTA_40_ = row102._PREGUNTA_40_;
out1_tmp._PREGUNTA_41_ = row102._PREGUNTA_41_;
out1_tmp._PREGUNTA_42_ = row102._PREGUNTA_42_;
out1_tmp._PREGUNTA_43_ = row102._PREGUNTA_43_;
out1_tmp._PREGUNTA_44_ = row102._PREGUNTA_44_;
out1_tmp._PREGUNTA_45_ = row102._PREGUNTA_45_;
out1_tmp._PREGUNTA_46_ = row102._PREGUNTA_46_;
out1_tmp._PREGUNTA_47_ = row102._PREGUNTA_47_;
out1_tmp._PREGUNTA_48_ = row102._PREGUNTA_48_;
out1_tmp._PREGUNTA_49_ = row102._PREGUNTA_49_;
out1_tmp._PREGUNTA_50_ = row102._PREGUNTA_50_;
out1_tmp._PREGUNTA_51_ = row102._PREGUNTA_51_;
out1_tmp._PREGUNTA_52_ = row102._PREGUNTA_52_;
out1_tmp._PREGUNTA_53_ = row102._PREGUNTA_53_;
out1_tmp._PREGUNTA_54_ = row102._PREGUNTA_54_;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(out1.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.SIGLA != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.SIGLA
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.GRADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.GRADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.FUERZA_ADSCRIPCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.FUERZA_ADSCRIPCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.ESM_ADSCRIPCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.ESM_ADSCRIPCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.TIPO_AFILIADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.TIPO_AFILIADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1.TIPO_VINCULACION != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1.TIPO_VINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_1_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_1_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_2_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_2_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_3_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_3_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_4_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_4_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_5_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_5_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_6_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_6_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_7_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_7_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_8_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_8_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_9_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_9_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_10_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_10_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_11_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_11_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_12_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_12_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_13_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_13_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_14_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_14_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_15_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_15_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_16_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_16_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_17_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_17_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_18_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_18_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_19_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_19_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_20_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_20_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_21_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_21_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_22_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_22_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_23_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_23_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_24_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_24_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_25_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_25_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_26_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_26_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_27_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_27_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_28_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_28_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_29_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_29_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_30_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_30_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_31_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_31_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_32_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_32_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_33_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_33_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_34_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_34_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_35_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_35_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_36_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_36_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_37_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_37_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_38_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_38_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_39_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_39_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_40_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_40_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_41_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_41_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_42_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_42_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_43_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_43_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_44_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_44_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_45_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_45_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_46_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_46_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_47_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_47_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_48_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_48_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_49_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_49_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_50_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_50_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_51_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_51_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_52_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_52_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_53_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_53_
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(out1._PREGUNTA_54_ != null) {
                        sb_tFileOutputDelimited_2.append(
                            out1._PREGUNTA_54_
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row102");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tFileArchive_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tFileArchive_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileArchive_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileArchive_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileArchive_1", false);
		start_Hash.put("tFileArchive_1", System.currentTimeMillis());
		
	
	currentComponent="tFileArchive_1";
	
	
		int tos_count_tFileArchive_1 = 0;
		

 



/**
 * [tFileArchive_1 begin ] stop
 */
	
	/**
	 * [tFileArchive_1 main ] start
	 */

	

	
	
	currentComponent="tFileArchive_1";
	
	

	

		String sourceFile_tFileArchive_1 = context.CARPETA_SALIDA;
	

    if (java.nio.file.Files.notExists(java.nio.file.Paths.get(sourceFile_tFileArchive_1), java.nio.file.LinkOption.NOFOLLOW_LINKS)){
        throw new java.io.FileNotFoundException(sourceFile_tFileArchive_1 + " (The system cannot find the path specified)");
    }

    String zipFile_tFileArchive_1 = context.CARPETA_SALIDA+"/"+context.NOMBRE_ZIP;
    
    com.talend.compress.zip.Zip zip_tFileArchive_1 = new com.talend.compress.zip.Zip(sourceFile_tFileArchive_1, zipFile_tFileArchive_1);
    zip_tFileArchive_1.setOverwriteExistTargetZip(true);
	zip_tFileArchive_1.setMakeTargetDir(false);
	zip_tFileArchive_1.setCompressLevel(4);
	zip_tFileArchive_1.setArchiveFormat("zip");
	zip_tFileArchive_1.setAllFiles(true);
	
	
	   zip_tFileArchive_1.setContainSubDir(true);
	   zip_tFileArchive_1.setEncoding("ISO-8859-15");
	   zip_tFileArchive_1.setZip64Mode("ASNEEDED");
	   zip_tFileArchive_1.setEncrypted(false);
		        
	   
	    
	    
	final String decryptedPassword_tFileArchive_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:kdK1i0H3/L+pit647XUVhYjjaK8Kf5XVq4TyTg==");
	    
	   zip_tFileArchive_1.setPassword(decryptedPassword_tFileArchive_1);
	   
	      zip_tFileArchive_1.setUseZip4jEncryption(true);

	      
	   	  zip_tFileArchive_1.setEncryptionMethod("ZIP_STANDARD");
	   	  
  
  
   globalMap.put("tFileArchive_1_ARCHIVE_FILEPATH",zipFile_tFileArchive_1);
   
   globalMap.put("tFileArchive_1_ARCHIVE_FILENAME", new java.io.File(zipFile_tFileArchive_1).getName());

   zip_tFileArchive_1.doZip();


 


	tos_count_tFileArchive_1++;

/**
 * [tFileArchive_1 main ] stop
 */
	
	/**
	 * [tFileArchive_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileArchive_1";
	
	

 



/**
 * [tFileArchive_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileArchive_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileArchive_1";
	
	

 



/**
 * [tFileArchive_1 process_data_end ] stop
 */
	
	/**
	 * [tFileArchive_1 end ] start
	 */

	

	
	
	currentComponent="tFileArchive_1";
	
	

 

ok_Hash.put("tFileArchive_1", true);
end_Hash.put("tFileArchive_1", System.currentTimeMillis());




/**
 * [tFileArchive_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileArchive_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tFileDelete_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileArchive_1 finally ] start
	 */

	

	
	
	currentComponent="tFileArchive_1";
	
	

 



/**
 * [tFileArchive_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileArchive_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_2", false);
		start_Hash.put("tFileDelete_2", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_2";
	
	
		int tos_count_tFileDelete_2 = 0;
		

 



/**
 * [tFileDelete_2 begin ] stop
 */
	
	/**
	 * [tFileDelete_2 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

class DeleteFoldertFileDelete_2{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_2=new java.io.File(context.CARPETA_SALIDA+"/"+context.NOMBRE_CSV);
    if(file_tFileDelete_2.exists()&& file_tFileDelete_2.isFile()){
    	if(file_tFileDelete_2.delete()){
    		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_2_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_2_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_2.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_2_DELETE_PATH",context.CARPETA_SALIDA+"/"+context.NOMBRE_CSV);
 


	tos_count_tFileDelete_2++;

/**
 * [tFileDelete_2 main ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_2 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 

ok_Hash.put("tFileDelete_2", true);
end_Hash.put("tFileDelete_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tFileList_1Process(globalMap);



/**
 * [tFileDelete_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_2 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_2";
	
	

 



/**
 * [tFileDelete_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_2_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_;

				public String getNOMBRE_ () {
					return this.NOMBRE_;
				}

				public Boolean NOMBRE_IsNullable(){
				    return true;
				}
				public Boolean NOMBRE_IsKey(){
				    return false;
				}
				public Integer NOMBRE_Length(){
				    return null;
				}
				public Integer NOMBRE_Precision(){
				    return null;
				}
				public String NOMBRE_Default(){
				
					return null;
				
				}
				public String NOMBRE_Comment(){
				
				    return "";
				
				}
				public String NOMBRE_Pattern(){
				
					return "";
				
				}
				public String NOMBRE_OriginalDbColumnName(){
				
					return "NOMBRE_";
				
				}

				
			    public Object CONTENIDO_;

				public Object getCONTENIDO_ () {
					return this.CONTENIDO_;
				}

				public Boolean CONTENIDO_IsNullable(){
				    return true;
				}
				public Boolean CONTENIDO_IsKey(){
				    return false;
				}
				public Integer CONTENIDO_Length(){
				    return null;
				}
				public Integer CONTENIDO_Precision(){
				    return null;
				}
				public String CONTENIDO_Default(){
				
					return null;
				
				}
				public String CONTENIDO_Comment(){
				
				    return "";
				
				}
				public String CONTENIDO_Pattern(){
				
					return "";
				
				}
				public String CONTENIDO_OriginalDbColumnName(){
				
					return "CONTENIDO_";
				
				}

				
			    public String TCONTENIDO_;

				public String getTCONTENIDO_ () {
					return this.TCONTENIDO_;
				}

				public Boolean TCONTENIDO_IsNullable(){
				    return true;
				}
				public Boolean TCONTENIDO_IsKey(){
				    return false;
				}
				public Integer TCONTENIDO_Length(){
				    return null;
				}
				public Integer TCONTENIDO_Precision(){
				    return null;
				}
				public String TCONTENIDO_Default(){
				
					return null;
				
				}
				public String TCONTENIDO_Comment(){
				
				    return "";
				
				}
				public String TCONTENIDO_Pattern(){
				
					return "";
				
				}
				public String TCONTENIDO_OriginalDbColumnName(){
				
					return "TCONTENIDO_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
						this.CONTENIDO_ = (Object) dis.readObject();
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
						this.CONTENIDO_ = (Object) dis.readObject();
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO_);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO_);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_="+NOMBRE_);
		sb.append(",CONTENIDO_="+String.valueOf(CONTENIDO_));
		sb.append(",TCONTENIDO_="+TCONTENIDO_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outSolicitudArchivoStruct implements routines.system.IPersistableRow<outSolicitudArchivoStruct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE_;

				public String getNOMBRE_ () {
					return this.NOMBRE_;
				}

				public Boolean NOMBRE_IsNullable(){
				    return true;
				}
				public Boolean NOMBRE_IsKey(){
				    return false;
				}
				public Integer NOMBRE_Length(){
				    return null;
				}
				public Integer NOMBRE_Precision(){
				    return null;
				}
				public String NOMBRE_Default(){
				
					return null;
				
				}
				public String NOMBRE_Comment(){
				
				    return "";
				
				}
				public String NOMBRE_Pattern(){
				
					return "";
				
				}
				public String NOMBRE_OriginalDbColumnName(){
				
					return "NOMBRE_";
				
				}

				
			    public byte[] CONTENIDO_;

				public byte[] getCONTENIDO_ () {
					return this.CONTENIDO_;
				}

				public Boolean CONTENIDO_IsNullable(){
				    return true;
				}
				public Boolean CONTENIDO_IsKey(){
				    return false;
				}
				public Integer CONTENIDO_Length(){
				    return null;
				}
				public Integer CONTENIDO_Precision(){
				    return null;
				}
				public String CONTENIDO_Default(){
				
					return null;
				
				}
				public String CONTENIDO_Comment(){
				
				    return "";
				
				}
				public String CONTENIDO_Pattern(){
				
					return "";
				
				}
				public String CONTENIDO_OriginalDbColumnName(){
				
					return "CONTENIDO_";
				
				}

				
			    public String TCONTENIDO_;

				public String getTCONTENIDO_ () {
					return this.TCONTENIDO_;
				}

				public Boolean TCONTENIDO_IsNullable(){
				    return true;
				}
				public Boolean TCONTENIDO_IsKey(){
				    return false;
				}
				public Integer TCONTENIDO_Length(){
				    return null;
				}
				public Integer TCONTENIDO_Precision(){
				    return null;
				}
				public String TCONTENIDO_Default(){
				
					return null;
				
				}
				public String TCONTENIDO_Comment(){
				
				    return "";
				
				}
				public String TCONTENIDO_Pattern(){
				
					return "";
				
				}
				public String TCONTENIDO_OriginalDbColumnName(){
				
					return "TCONTENIDO_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private byte[] readByteArray(ObjectInputStream dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}
	
	private byte[] readByteArray(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		byte[] byteArrayReturn;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			byteArrayReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.readFully(byteArray);
			byteArrayReturn = byteArray;
		}
		return byteArrayReturn;
	}

    private void writeByteArray(byte[] byteArray, ObjectOutputStream dos) throws IOException{
		if(byteArray == null) {
            dos.writeInt(-1);
		} else {
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeByteArray(byte[] byteArray, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(byteArray == null) {
			marshaller.writeInt(-1);
		} else {
			marshaller.writeInt(byteArray.length);
			marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_ = readString(dis);
					
					this.CONTENIDO_ = readByteArray(dis);
					
					this.TCONTENIDO_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// String
				
						writeString(this.NOMBRE_,dos);
					
					// byte[]
				
						writeByteArray(this.CONTENIDO_,dos);
					
					// String
				
						writeString(this.TCONTENIDO_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE_="+NOMBRE_);
		sb.append(",CONTENIDO_="+String.valueOf(CONTENIDO_));
		sb.append(",TCONTENIDO_="+TCONTENIDO_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outSolicitudArchivoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public String filepath;

				public String getFilepath () {
					return this.filepath;
				}

				public Boolean filepathIsNullable(){
				    return true;
				}
				public Boolean filepathIsKey(){
				    return false;
				}
				public Integer filepathLength(){
				    return 0;
				}
				public Integer filepathPrecision(){
				    return 0;
				}
				public String filepathDefault(){
				
					return null;
				
				}
				public String filepathComment(){
				
				    return "";
				
				}
				public String filepathPattern(){
				
					return "";
				
				}
				public String filepathOriginalDbColumnName(){
				
					return "filepath";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.filepath = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.filepath = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.filepath,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.filepath,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("filepath="+filepath);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileList_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileList_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
outSolicitudArchivoStruct outSolicitudArchivo = new outSolicitudArchivoStruct();
row7Struct row7 = new row7Struct();



	
	/**
	 * [tFileList_1 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFileList_1", false);
		start_Hash.put("tFileList_1", System.currentTimeMillis());
		
	
	currentComponent="tFileList_1";
	
	
		int tos_count_tFileList_1 = 0;
		
	
 
     
    
  String directory_tFileList_1 = context.CARPETA_SALIDA+"/";
  final java.util.List<String> maskList_tFileList_1 = new java.util.ArrayList<String>();
  final java.util.List<java.util.regex.Pattern> patternList_tFileList_1 = new java.util.ArrayList<java.util.regex.Pattern>();
      maskList_tFileList_1.add("*");  
  for (final String filemask_tFileList_1 : maskList_tFileList_1) {
	String filemask_compile_tFileList_1 = filemask_tFileList_1;
	
		filemask_compile_tFileList_1 = org.apache.oro.text.GlobCompiler.globToPerl5(filemask_tFileList_1.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
	
		java.util.regex.Pattern fileNamePattern_tFileList_1 = java.util.regex.Pattern.compile(filemask_compile_tFileList_1);
	patternList_tFileList_1.add(fileNamePattern_tFileList_1);
  }
  int NB_FILEtFileList_1 = 0;

  final boolean case_sensitive_tFileList_1 = true;
	
	
	
    final java.util.List<java.io.File> list_tFileList_1 = new java.util.ArrayList<java.io.File>();
    final java.util.Set<String> filePath_tFileList_1 = new java.util.HashSet<String>();
	java.io.File file_tFileList_1 = new java.io.File(directory_tFileList_1);
     
		file_tFileList_1.listFiles(new java.io.FilenameFilter() {
			public boolean accept(java.io.File dir, String name) {
				java.io.File file = new java.io.File(dir, name);
                if (!file.isDirectory()) {
                	
    	String fileName_tFileList_1 = file.getName();
		for (final java.util.regex.Pattern fileNamePattern_tFileList_1 : patternList_tFileList_1) {
          	if (fileNamePattern_tFileList_1.matcher(fileName_tFileList_1).matches()){
					if(!filePath_tFileList_1.contains(file.getAbsolutePath())) {
			          list_tFileList_1.add(file);
			          filePath_tFileList_1.add(file.getAbsolutePath());
			        }
			}
		}
                }
              return true;
            }
          }
      ); 
      java.util.Collections.sort(list_tFileList_1);
    
    for (int i_tFileList_1 = 0; i_tFileList_1 < list_tFileList_1.size(); i_tFileList_1++){
      java.io.File files_tFileList_1 = list_tFileList_1.get(i_tFileList_1);
      String fileName_tFileList_1 = files_tFileList_1.getName();
      
      String currentFileName_tFileList_1 = files_tFileList_1.getName(); 
      String currentFilePath_tFileList_1 = files_tFileList_1.getAbsolutePath();
      String currentFileDirectory_tFileList_1 = files_tFileList_1.getParent();
      String currentFileExtension_tFileList_1 = null;
      
      if (files_tFileList_1.getName().contains(".") && files_tFileList_1.isFile()){
        currentFileExtension_tFileList_1 = files_tFileList_1.getName().substring(files_tFileList_1.getName().lastIndexOf(".") + 1);
      } else{
        currentFileExtension_tFileList_1 = "";
      }
      
      NB_FILEtFileList_1 ++;
      globalMap.put("tFileList_1_CURRENT_FILE", currentFileName_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEPATH", currentFilePath_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEDIRECTORY", currentFileDirectory_tFileList_1);
      globalMap.put("tFileList_1_CURRENT_FILEEXTENSION", currentFileExtension_tFileList_1);
      globalMap.put("tFileList_1_NB_FILE", NB_FILEtFileList_1);
      
 



/**
 * [tFileList_1 begin ] stop
 */
	
	/**
	 * [tFileList_1 main ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 


	tos_count_tFileList_1++;

/**
 * [tFileList_1 main ] stop
 */
	
	/**
	 * [tFileList_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outSolicitudArchivo", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate4", 1, "exec" + NB_ITERATE_tFixedFlowInput_1);
					//Thread.sleep(1000);
				}				
			




	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outSolicitudArchivo");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{? = call " + "REP.InsSolicitudArchivo" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
outSolicitudArchivoStruct outSolicitudArchivo_tmp = new outSolicitudArchivoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row6.filepath = ((String) globalMap.get("tFileList_1_CURRENT_FILEPATH"));
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

outSolicitudArchivo = null;


// # Output table : 'outSolicitudArchivo'
outSolicitudArchivo_tmp.ID = null;
outSolicitudArchivo_tmp.NOMBRE_ = context.ID+"-"+context.SIGLA+"-"+TalendDate.getDate("DD/MM/YYYY") ;
outSolicitudArchivo_tmp.CONTENIDO_ = ArrayFromFile.ByteArrayFromFile(row6.filepath ) ;
outSolicitudArchivo_tmp.TCONTENIDO_ = "ZIP";
outSolicitudArchivo = outSolicitudArchivo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "outSolicitudArchivo"
if(outSolicitudArchivo != null) { 



	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outSolicitudArchivo"
						
						);
					}
					

			// code for the argument 1 (ID) of type 'OUT NUMERIC'
					statement_tOracleSP_1.registerOutParameter(1, java.sql.Types.NUMERIC);
			// code for the argument 2 (NOMBRE_) of type 'IN AUTOMAPPING'
    					if (outSolicitudArchivo.NOMBRE_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(2, outSolicitudArchivo.NOMBRE_);
    					}
    					
			// code for the argument 3 (CONTENIDO_) of type 'IN AUTOMAPPING'
    					if (outSolicitudArchivo.CONTENIDO_ == null) {
    						statement_tOracleSP_1.setNull(3, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_1.setObject(3, outSolicitudArchivo.CONTENIDO_);
    					}
    					
			// code for the argument 4 (TCONTENIDO_) of type 'IN AUTOMAPPING'
    					if (outSolicitudArchivo.TCONTENIDO_ == null) {
    						statement_tOracleSP_1.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(4, outSolicitudArchivo.TCONTENIDO_);
    					}
    					
		statement_tOracleSP_1.execute();
		
									row7.ID = statement_tOracleSP_1.getBigDecimal(1);
									
									if (statement_tOracleSP_1.wasNull()) {
										row7.ID = null;
									}
									
								row7.NOMBRE_ = outSolicitudArchivo.NOMBRE_;
								
								row7.CONTENIDO_ = outSolicitudArchivo.CONTENIDO_;
								
								row7.TCONTENIDO_ = outSolicitudArchivo.TCONTENIDO_;
								

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.ARCHIVOS_ID = row7.ID;

    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */

} // End of branch "outSolicitudArchivo"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outSolicitudArchivo");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tFileList_2Process(globalMap);



/**
 * [tJavaRow_3 end ] stop
 */









						if(execStat){
							runStat.updateStatOnConnection("iterate4", 2, "exec" + NB_ITERATE_tFixedFlowInput_1);
						}				
					




	
	/**
	 * [tFileList_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 process_data_end ] stop
 */
	
	/**
	 * [tFileList_1 end ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

  
    }
  globalMap.put("tFileList_1_NB_FILE", NB_FILEtFileList_1);
  

  
 

 

ok_Hash.put("tFileList_1", true);
end_Hash.put("tFileList_1", System.currentTimeMillis());




/**
 * [tFileList_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileList_1 finally ] start
	 */

	

	
	
	currentComponent="tFileList_1";
	
	

 



/**
 * [tFileList_1 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileList_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileList_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileList_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileList_2 begin ] start
	 */

				
			int NB_ITERATE_tFileDelete_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFileList_2", false);
		start_Hash.put("tFileList_2", System.currentTimeMillis());
		
	
	currentComponent="tFileList_2";
	
	
		int tos_count_tFileList_2 = 0;
		
	
 
     
    
  String directory_tFileList_2 = context.CARPETA_SALIDA;
  final java.util.List<String> maskList_tFileList_2 = new java.util.ArrayList<String>();
  final java.util.List<java.util.regex.Pattern> patternList_tFileList_2 = new java.util.ArrayList<java.util.regex.Pattern>();
      maskList_tFileList_2.add("*");  
  for (final String filemask_tFileList_2 : maskList_tFileList_2) {
	String filemask_compile_tFileList_2 = filemask_tFileList_2;
	
		filemask_compile_tFileList_2 = org.apache.oro.text.GlobCompiler.globToPerl5(filemask_tFileList_2.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
	
		java.util.regex.Pattern fileNamePattern_tFileList_2 = java.util.regex.Pattern.compile(filemask_compile_tFileList_2);
	patternList_tFileList_2.add(fileNamePattern_tFileList_2);
  }
  int NB_FILEtFileList_2 = 0;

  final boolean case_sensitive_tFileList_2 = true;
	
	
	
    final java.util.List<java.io.File> list_tFileList_2 = new java.util.ArrayList<java.io.File>();
    final java.util.Set<String> filePath_tFileList_2 = new java.util.HashSet<String>();
	java.io.File file_tFileList_2 = new java.io.File(directory_tFileList_2);
    
		file_tFileList_2.listFiles(new java.io.FilenameFilter() {
			public boolean accept(java.io.File dir, String name) {
				java.io.File file = new java.io.File(dir, name);
				
	                if (!file.isDirectory()) {
						
    	String fileName_tFileList_2 = file.getName();
		for (final java.util.regex.Pattern fileNamePattern_tFileList_2 : patternList_tFileList_2) {
          	if (fileNamePattern_tFileList_2.matcher(fileName_tFileList_2).matches()){
					if(!filePath_tFileList_2.contains(file.getAbsolutePath())) {
			          list_tFileList_2.add(file);
			          filePath_tFileList_2.add(file.getAbsolutePath());
			        }
			}
		}
	                	return true;
	                } else {
	                  file.listFiles(this);
	                }
				
				return false;
			}
		}
		); 
      java.util.Collections.sort(list_tFileList_2);
    
    for (int i_tFileList_2 = 0; i_tFileList_2 < list_tFileList_2.size(); i_tFileList_2++){
      java.io.File files_tFileList_2 = list_tFileList_2.get(i_tFileList_2);
      String fileName_tFileList_2 = files_tFileList_2.getName();
      
      String currentFileName_tFileList_2 = files_tFileList_2.getName(); 
      String currentFilePath_tFileList_2 = files_tFileList_2.getAbsolutePath();
      String currentFileDirectory_tFileList_2 = files_tFileList_2.getParent();
      String currentFileExtension_tFileList_2 = null;
      
      if (files_tFileList_2.getName().contains(".") && files_tFileList_2.isFile()){
        currentFileExtension_tFileList_2 = files_tFileList_2.getName().substring(files_tFileList_2.getName().lastIndexOf(".") + 1);
      } else{
        currentFileExtension_tFileList_2 = "";
      }
      
      NB_FILEtFileList_2 ++;
      globalMap.put("tFileList_2_CURRENT_FILE", currentFileName_tFileList_2);
      globalMap.put("tFileList_2_CURRENT_FILEPATH", currentFilePath_tFileList_2);
      globalMap.put("tFileList_2_CURRENT_FILEDIRECTORY", currentFileDirectory_tFileList_2);
      globalMap.put("tFileList_2_CURRENT_FILEEXTENSION", currentFileExtension_tFileList_2);
      globalMap.put("tFileList_2_NB_FILE", NB_FILEtFileList_2);
      
 



/**
 * [tFileList_2 begin ] stop
 */
	
	/**
	 * [tFileList_2 main ] start
	 */

	

	
	
	currentComponent="tFileList_2";
	
	

 


	tos_count_tFileList_2++;

/**
 * [tFileList_2 main ] stop
 */
	
	/**
	 * [tFileList_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileList_2";
	
	

 



/**
 * [tFileList_2 process_data_begin ] stop
 */
	NB_ITERATE_tFileDelete_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate5", 1, "exec" + NB_ITERATE_tFileDelete_1);
					//Thread.sleep(1000);
				}				
			

	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_1=new java.io.File(((String)globalMap.get("tFileList_2_CURRENT_FILEPATH")));
    if(file_tFileDelete_1.exists()&& file_tFileDelete_1.isFile()){
    	if(file_tFileDelete_1.delete()){
    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_1.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_1_DELETE_PATH",((String)globalMap.get("tFileList_2_CURRENT_FILEPATH")));
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tFileDelete_1 end ] stop
 */
						if(execStat){
							runStat.updateStatOnConnection("iterate5", 2, "exec" + NB_ITERATE_tFileDelete_1);
						}				
					




	
	/**
	 * [tFileList_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileList_2";
	
	

 



/**
 * [tFileList_2 process_data_end ] stop
 */
	
	/**
	 * [tFileList_2 end ] start
	 */

	

	
	
	currentComponent="tFileList_2";
	
	

  
    }
  globalMap.put("tFileList_2_NB_FILE", NB_FILEtFileList_2);
  

  
 

 

ok_Hash.put("tFileList_2", true);
end_Hash.put("tFileList_2", System.currentTimeMillis());




/**
 * [tFileList_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileList_2 finally ] start
	 */

	

	
	
	currentComponent="tFileList_2";
	
	

 



/**
 * [tFileList_2 finally ] stop
 */

	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileList_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println( ((String)globalMap.get("tFileList_2_CURRENT_FILE")) + " has been deleted!" );
context.FECHA_HORA_FINAL_EJECUCION = new Date();

System.out.println("FECHA_HORA_INICIO_EJECUCION:"+context.FECHA_HORA_INICIO_EJECUCION);
System.out.println("FECHA_HORA_FINAL_EJECUCION: "+context.FECHA_HORA_FINAL_EJECUCION);


System.out.println("Contexto ID " + context.ID);
System.out.println("Contexto ARCHIVOS_ID " + context.ARCHIVOS_ID);

context.NOMBRE_CONSOLIDADO="";
context.FECHA_INICIAL="";
context.FECHA_FINAL="";
context.ESM_REMITE="";
context.SIGLA="";
context.USUARIO="";
context.FUERZA="";
context.CIUDAD="";
context.DEPARTAMENTO="";
context.REGIONAL="";
context.EDAD_INICIAL="";
context.EDAD_FINAL="";
context.ESQUEMA="";
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public BigDecimal Sarchivo_Id_;

				public BigDecimal getSarchivo_Id_ () {
					return this.Sarchivo_Id_;
				}

				public Boolean Sarchivo_Id_IsNullable(){
				    return true;
				}
				public Boolean Sarchivo_Id_IsKey(){
				    return false;
				}
				public Integer Sarchivo_Id_Length(){
				    return 0;
				}
				public Integer Sarchivo_Id_Precision(){
				    return 0;
				}
				public String Sarchivo_Id_Default(){
				
					return null;
				
				}
				public String Sarchivo_Id_Comment(){
				
				    return "";
				
				}
				public String Sarchivo_Id_Pattern(){
				
					return "";
				
				}
				public String Sarchivo_Id_OriginalDbColumnName(){
				
					return "Sarchivo_Id_";
				
				}

				
			    public BigDecimal ARCHIVOS_ID_;

				public BigDecimal getARCHIVOS_ID_ () {
					return this.ARCHIVOS_ID_;
				}

				public Boolean ARCHIVOS_ID_IsNullable(){
				    return true;
				}
				public Boolean ARCHIVOS_ID_IsKey(){
				    return false;
				}
				public Integer ARCHIVOS_ID_Length(){
				    return null;
				}
				public Integer ARCHIVOS_ID_Precision(){
				    return null;
				}
				public String ARCHIVOS_ID_Default(){
				
					return null;
				
				}
				public String ARCHIVOS_ID_Comment(){
				
				    return "";
				
				}
				public String ARCHIVOS_ID_Pattern(){
				
					return "";
				
				}
				public String ARCHIVOS_ID_OriginalDbColumnName(){
				
					return "ARCHIVOS_ID_";
				
				}

				
			    public java.util.Date FINICIAL_;

				public java.util.Date getFINICIAL_ () {
					return this.FINICIAL_;
				}

				public Boolean FINICIAL_IsNullable(){
				    return true;
				}
				public Boolean FINICIAL_IsKey(){
				    return false;
				}
				public Integer FINICIAL_Length(){
				    return 0;
				}
				public Integer FINICIAL_Precision(){
				    return 0;
				}
				public String FINICIAL_Default(){
				
					return null;
				
				}
				public String FINICIAL_Comment(){
				
				    return "";
				
				}
				public String FINICIAL_Pattern(){
				
					return "";
				
				}
				public String FINICIAL_OriginalDbColumnName(){
				
					return "FINICIAL_";
				
				}

				
			    public java.util.Date FFINAL_;

				public java.util.Date getFFINAL_ () {
					return this.FFINAL_;
				}

				public Boolean FFINAL_IsNullable(){
				    return true;
				}
				public Boolean FFINAL_IsKey(){
				    return false;
				}
				public Integer FFINAL_Length(){
				    return 0;
				}
				public Integer FFINAL_Precision(){
				    return 0;
				}
				public String FFINAL_Default(){
				
					return null;
				
				}
				public String FFINAL_Comment(){
				
				    return "";
				
				}
				public String FFINAL_Pattern(){
				
					return "";
				
				}
				public String FFINAL_OriginalDbColumnName(){
				
					return "FFINAL_";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Sarchivo_Id_="+String.valueOf(Sarchivo_Id_));
		sb.append(",ARCHIVOS_ID_="+String.valueOf(ARCHIVOS_ID_));
		sb.append(",FINICIAL_="+String.valueOf(FINICIAL_));
		sb.append(",FFINAL_="+String.valueOf(FFINAL_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public BigDecimal Sarchivo_Id_;

				public BigDecimal getSarchivo_Id_ () {
					return this.Sarchivo_Id_;
				}

				public Boolean Sarchivo_Id_IsNullable(){
				    return true;
				}
				public Boolean Sarchivo_Id_IsKey(){
				    return false;
				}
				public Integer Sarchivo_Id_Length(){
				    return 0;
				}
				public Integer Sarchivo_Id_Precision(){
				    return 0;
				}
				public String Sarchivo_Id_Default(){
				
					return null;
				
				}
				public String Sarchivo_Id_Comment(){
				
				    return "";
				
				}
				public String Sarchivo_Id_Pattern(){
				
					return "";
				
				}
				public String Sarchivo_Id_OriginalDbColumnName(){
				
					return "Sarchivo_Id_";
				
				}

				
			    public BigDecimal ARCHIVOS_ID_;

				public BigDecimal getARCHIVOS_ID_ () {
					return this.ARCHIVOS_ID_;
				}

				public Boolean ARCHIVOS_ID_IsNullable(){
				    return true;
				}
				public Boolean ARCHIVOS_ID_IsKey(){
				    return false;
				}
				public Integer ARCHIVOS_ID_Length(){
				    return null;
				}
				public Integer ARCHIVOS_ID_Precision(){
				    return null;
				}
				public String ARCHIVOS_ID_Default(){
				
					return null;
				
				}
				public String ARCHIVOS_ID_Comment(){
				
				    return "";
				
				}
				public String ARCHIVOS_ID_Pattern(){
				
					return "";
				
				}
				public String ARCHIVOS_ID_OriginalDbColumnName(){
				
					return "ARCHIVOS_ID_";
				
				}

				
			    public java.util.Date FINICIAL_;

				public java.util.Date getFINICIAL_ () {
					return this.FINICIAL_;
				}

				public Boolean FINICIAL_IsNullable(){
				    return true;
				}
				public Boolean FINICIAL_IsKey(){
				    return false;
				}
				public Integer FINICIAL_Length(){
				    return 0;
				}
				public Integer FINICIAL_Precision(){
				    return 0;
				}
				public String FINICIAL_Default(){
				
					return null;
				
				}
				public String FINICIAL_Comment(){
				
				    return "";
				
				}
				public String FINICIAL_Pattern(){
				
					return "";
				
				}
				public String FINICIAL_OriginalDbColumnName(){
				
					return "FINICIAL_";
				
				}

				
			    public java.util.Date FFINAL_;

				public java.util.Date getFFINAL_ () {
					return this.FFINAL_;
				}

				public Boolean FFINAL_IsNullable(){
				    return true;
				}
				public Boolean FFINAL_IsKey(){
				    return false;
				}
				public Integer FFINAL_Length(){
				    return 0;
				}
				public Integer FFINAL_Precision(){
				    return 0;
				}
				public String FFINAL_Default(){
				
					return null;
				
				}
				public String FFINAL_Comment(){
				
				    return "";
				
				}
				public String FFINAL_Pattern(){
				
					return "";
				
				}
				public String FFINAL_OriginalDbColumnName(){
				
					return "FFINAL_";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
						this.Sarchivo_Id_ = (BigDecimal) dis.readObject();
					
						this.ARCHIVOS_ID_ = (BigDecimal) dis.readObject();
					
					this.FINICIAL_ = readDate(dis);
					
					this.FFINAL_ = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Sarchivo_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ARCHIVOS_ID_);
					
					// java.util.Date
				
						writeDate(this.FINICIAL_,dos);
					
					// java.util.Date
				
						writeDate(this.FFINAL_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Sarchivo_Id_="+String.valueOf(Sarchivo_Id_));
		sb.append(",ARCHIVOS_ID_="+String.valueOf(ARCHIVOS_ID_));
		sb.append(",FINICIAL_="+String.valueOf(FINICIAL_));
		sb.append(",FFINAL_="+String.valueOf(FFINAL_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
row5Struct row5 = new row5Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
		


	class Util_tLogRow_1 {
	
		String[] des_top = { ".", "-" };

        String[] des_data = { "-", "+" };

        String[] des_frame = { "|" }; 
        
        public void printLine(StringBuilder sb, int titleWidth, int dataWidth){
        
        	sb.append("+");
			for(int i=0; i<titleWidth+2; i++)
				sb.append("-");
			sb.append("+");
			for(int i=0; i<dataWidth+2; i++)
				sb.append("-");
        	sb.append("+" + "\n");
        }      

		public String print(String[] row, int nbLine){
			
			StringBuilder sb = new StringBuilder();
			
			    String title = "#" + nbLine + ". " + "tLogRow_1";
			    
		
			//step 1: get the max length of all the row[] member;
			int dataWidth = 5;		//the length of the string "value"	
			for(int i=0;i<row.length;i++) {
				if(row[i] == null && 4 > dataWidth) {
					dataWidth = 4;
				}
				else if(row[i] != null && row[i].length()>dataWidth) 
					dataWidth = row[i].length();
			}			
						
			int titleWidth = 12;
			
			int totalWidth = dataWidth + titleWidth + 5;
			
			//step 2: print the header with line number
			sb.append(".");
			for(int i=0 ; i<totalWidth ; i++)
				sb.append("-");			
			sb.append("." + "\n" + "|");
			
			int emptyCenterWidth = (totalWidth-title.length())/2;
			for(int i=0 ; i<emptyCenterWidth; i++)
				sb.append(" ");	
			sb.append(title);
			for(int i=0 ; i<totalWidth - emptyCenterWidth - title.length() ; i++)
				sb.append(" ");	
			sb.append("|" + "\n");
			
			//step 3: print "key" and "value"			
			printLine(sb,titleWidth,dataWidth);
			
			sb.append("|" + " key");
			for(int i=0; i<titleWidth-2; i++)
				sb.append(" ");
        	sb.append("|" + " value");
			for(int i=0; i<dataWidth-4; i++)
				sb.append(" ");
			sb.append("|" + "\n");
			
			printLine(sb,titleWidth,dataWidth);
			
			//step 4: print dataset
			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "Sarchivo_Id_");
				for(int i=0; i<titleWidth -"Sarchivo_Id_".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[0]);
				for(int i=0; row[0] == null && i<dataWidth - 3 || row[0] != null && i<dataWidth -row[0].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "ARCHIVOS_ID_");
				for(int i=0; i<titleWidth -"ARCHIVOS_ID_".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[1]);
				for(int i=0; row[1] == null && i<dataWidth - 3 || row[1] != null && i<dataWidth -row[1].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "FINICIAL_");
				for(int i=0; i<titleWidth -"FINICIAL_".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[2]);
				for(int i=0; row[2] == null && i<dataWidth - 3 || row[2] != null && i<dataWidth -row[2].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "FFINAL_");
				for(int i=0; i<titleWidth -"FFINAL_".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[3]);
				for(int i=0; row[3] == null && i<dataWidth - 3 || row[3] != null && i<dataWidth -row[3].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//step 5: print a line gap
			printLine(sb,titleWidth,dataWidth);
			return sb.toString();

		}


	}

	Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();




	java.io.PrintStream consoleOut_tLogRow_1 = null;
	if (globalMap.get("tLogRow_CONSOLE")!=null){
        consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
    }else{
        consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
        globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
    }

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tOracleSP_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_2", false);
		start_Hash.put("tOracleSP_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tOracleSP_2 = 0;
		

	java.sql.Connection connection_tOracleSP_2 = null;
	connection_tOracleSP_2 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_2 = connection_tOracleSP_2.prepareCall("{call " + "REP.UpdEstadoSolicitudArchivo" + "(?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_2;
String tmpString_tOracleSP_2;

 



/**
 * [tOracleSP_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row4.Sarchivo_Id_ = context.ID;
    	            	        	            	
    	            		row4.ARCHIVOS_ID_ = context.ARCHIVOS_ID;
    	            	        	            	
    	            		row4.FINICIAL_ = context.FECHA_HORA_INICIO_EJECUCION;
    	            	        	            	
    	            		row4.FFINAL_ = context.FECHA_HORA_FINAL_EJECUCION;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_2 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

			// code for the argument 1 (Sarchivo_Id_) of type 'IN AUTOMAPPING'
    					if (row4.Sarchivo_Id_ == null) {
    						statement_tOracleSP_2.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_2.setBigDecimal(1, row4.Sarchivo_Id_);
    					}
    					
			// code for the argument 2 (ARCHIVOS_ID_) of type 'IN AUTOMAPPING'
    					if (row4.ARCHIVOS_ID_ == null) {
    						statement_tOracleSP_2.setNull(2, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_2.setBigDecimal(2, row4.ARCHIVOS_ID_);
    					}
    					
			// code for the argument 3 (FINICIAL_) of type 'IN TIMESTAMP'
    					if (row4.FINICIAL_ == null) {
    						statement_tOracleSP_2.setNull(3, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_2.setTimestamp(3, new java.sql.Timestamp(row4.FINICIAL_.getTime()));
    					
    					}
    					
			// code for the argument 4 (FFINAL_) of type 'IN TIMESTAMP'
    					if (row4.FFINAL_ == null) {
    						statement_tOracleSP_2.setNull(4, java.sql.Types.DATE);
    					} else {
    					
    					statement_tOracleSP_2.setTimestamp(4, new java.sql.Timestamp(row4.FFINAL_.getTime()));
    					
    					}
    					
		statement_tOracleSP_2.execute();
		
								row5.Sarchivo_Id_ = row4.Sarchivo_Id_;
								
								row5.ARCHIVOS_ID_ = row4.ARCHIVOS_ID_;
								
								row5.FINICIAL_ = row4.FINICIAL_;
								
								row5.FFINAL_ = row4.FFINAL_;
								

 


	tos_count_tOracleSP_2++;

/**
 * [tOracleSP_2 main ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row5.Sarchivo_Id_ != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
								row5.Sarchivo_Id_.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString()				
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row5.ARCHIVOS_ID_ != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
								row5.ARCHIVOS_ID_.toPlainString()				
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row5.FINICIAL_ != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row5.FINICIAL_)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row5.FFINAL_ != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row5.FFINAL_)							
				);


							
	    		} //  			

				
				String[] row_tLogRow_1 = new String[4];
   				
	    		if(row5.Sarchivo_Id_ != null) { //              
                 row_tLogRow_1[0]=    						
								row5.Sarchivo_Id_.setScale(0, java.math.RoundingMode.HALF_UP).toPlainString()
					          ;	
							
	    		} //			
    			   				
	    		if(row5.ARCHIVOS_ID_ != null) { //              
                 row_tLogRow_1[1]=    						
								row5.ARCHIVOS_ID_.toPlainString()
					          ;	
							
	    		} //			
    			   				
	    		if(row5.FINICIAL_ != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row5.FINICIAL_)			
					          ;	
							
	    		} //			
    			   				
	    		if(row5.FFINAL_ != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(row5.FFINAL_)			
					          ;	
							
	    		} //			
    			
				nb_line_tLogRow_1++;
                consoleOut_tLogRow_1.println(util_tLogRow_1.print(row_tLogRow_1,nb_line_tLogRow_1));
                consoleOut_tLogRow_1.flush();
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tOracleSP_2 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	


	statement_tOracleSP_2.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tOracleSP_2", true);
end_Hash.put("tOracleSP_2", System.currentTimeMillis());




/**
 * [tOracleSP_2 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tOracleSP_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


context.NOMBRE_CONSOLIDADO="";
context.FECHA_INICIAL="";
context.FECHA_FINAL="";
context.ESM_REMITE="";
context.SIGLA="";
context.USUARIO="";
context.FUERZA="";
context.CIUDAD="";
context.DEPARTAMENTO="";
context.REGIONAL="";
context.EDAD_INICIAL="";
context.EDAD_FINAL="";
context.ESQUEMA="";
context.PERIODO_INICIAL = "";
context.TIPO_USUARIO = "";
context.GRUPO_EDAD="";
context.GRADO= "";
context.ESM_USUARIO="";
context.ROLES_ID="";
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];
    static byte[] commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length) {
				if(length < 1024 && commonByteArray_REP_CONSOLIDADOS_AfiConsolidados.length == 0) {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[1024];
				} else {
   					commonByteArray_REP_CONSOLIDADOS_AfiConsolidados = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length);
			strReturn = new String(commonByteArray_REP_CONSOLIDADOS_AfiConsolidados, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_REP_CONSOLIDADOS_AfiConsolidados) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();
row14Struct row13 = row14;





	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row14.type = lcm.getType();
		row14.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row14.priority = lcm.getPriority();
		row14.message = lcm.getMessage();
		row14.code = lcm.getCode();
		
		row14.moment = java.util.Calendar.getInstance().getTime();
	
    	row14.pid = pid;
		row14.root_pid = rootPid;
		row14.father_pid = fatherPid;
	
    	row14.project = projectName;
    	row14.job = jobName;
    	row14.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row14.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(row14.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row14.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            row14.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row14.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            row14.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row14.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            row14.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row14.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            row14.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row14.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            row14.message
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 
     row13 = row14;


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xercesImpl-2.12.2.jar;../lib/xml-apis-1.4.01.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/TalendSAX.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;mail_1_3.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_consolidados.mail_1_3.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xercesImpl-2.12.2.jar:$ROOT_PATH/../lib/xml-apis-1.4.01.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/TalendSAX.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/mail_1_3.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "rep_consolidados.mail_1_3.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = row13.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = row13.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = row13.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = row13.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = row13.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = row13.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_origen_ServiceName;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param service_name_origen=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param service_name_origen=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param service_name_origen=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("service_name_origen", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Server;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param server_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param server_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param server_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("server_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_Login;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param user_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param user_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param user_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("user_destino", obj_tRunJob_1);
	
		obj_tRunJob_1 = context.db_destino_ServiceName;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param service_name_destino=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param service_name_destino=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param service_name_destino=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("service_name_destino", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tJava_3Process(globalMap);



/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final AfiConsolidados AfiConsolidadosClass = new AfiConsolidados();

        int exitCode = AfiConsolidadosClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = AfiConsolidados.class.getClassLoader().getResourceAsStream("rep_consolidados/aficonsolidados_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = AfiConsolidados.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_Password", "id_Password");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            String pwd_db_origen_Password_value = context.getProperty("db_origen_Password");
                            context.db_origen_Password = null;
                            if(pwd_db_origen_Password_value!=null) {
                                if(context_param.containsKey("db_origen_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_origen_Password = pwd_db_origen_Password_value;
                                } else if (!pwd_db_origen_Password_value.isEmpty()) {
                                    try {
                                        context.db_origen_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_origen_Password_value);
                                        context.put("db_origen_Password",context.db_origen_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_destino_ServiceName", "id_String");
                        if(context.getStringValue("db_destino_ServiceName") == null) {
                            context.db_destino_ServiceName = null;
                        } else {
                            context.db_destino_ServiceName=(String) context.getProperty("db_destino_ServiceName");
                        }
                        context.setContextType("db_destino_AdditionalParams", "id_String");
                        if(context.getStringValue("db_destino_AdditionalParams") == null) {
                            context.db_destino_AdditionalParams = null;
                        } else {
                            context.db_destino_AdditionalParams=(String) context.getProperty("db_destino_AdditionalParams");
                        }
                        context.setContextType("db_destino_Login", "id_String");
                        if(context.getStringValue("db_destino_Login") == null) {
                            context.db_destino_Login = null;
                        } else {
                            context.db_destino_Login=(String) context.getProperty("db_destino_Login");
                        }
                        context.setContextType("db_destino_Port", "id_String");
                        if(context.getStringValue("db_destino_Port") == null) {
                            context.db_destino_Port = null;
                        } else {
                            context.db_destino_Port=(String) context.getProperty("db_destino_Port");
                        }
                        context.setContextType("db_destino_Schema", "id_String");
                        if(context.getStringValue("db_destino_Schema") == null) {
                            context.db_destino_Schema = null;
                        } else {
                            context.db_destino_Schema=(String) context.getProperty("db_destino_Schema");
                        }
                        context.setContextType("db_destino_Server", "id_String");
                        if(context.getStringValue("db_destino_Server") == null) {
                            context.db_destino_Server = null;
                        } else {
                            context.db_destino_Server=(String) context.getProperty("db_destino_Server");
                        }
                        context.setContextType("db_destino_Password", "id_Password");
                        if(context.getStringValue("db_destino_Password") == null) {
                            context.db_destino_Password = null;
                        } else {
                            String pwd_db_destino_Password_value = context.getProperty("db_destino_Password");
                            context.db_destino_Password = null;
                            if(pwd_db_destino_Password_value!=null) {
                                if(context_param.containsKey("db_destino_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.db_destino_Password = pwd_db_destino_Password_value;
                                } else if (!pwd_db_destino_Password_value.isEmpty()) {
                                    try {
                                        context.db_destino_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_db_destino_Password_value);
                                        context.put("db_destino_Password",context.db_destino_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("ACTUALIZACION_TOTAL", "id_Boolean");
                        if(context.getStringValue("ACTUALIZACION_TOTAL") == null) {
                            context.ACTUALIZACION_TOTAL = null;
                        } else {
                            try{
                                context.ACTUALIZACION_TOTAL=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("ACTUALIZACION_TOTAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ACTUALIZACION_TOTAL", e.getMessage()));
                                context.ACTUALIZACION_TOTAL=null;
                            }
                        }
                        context.setContextType("FECHA_TERMINACION", "id_String");
                        if(context.getStringValue("FECHA_TERMINACION") == null) {
                            context.FECHA_TERMINACION = null;
                        } else {
                            context.FECHA_TERMINACION=(String) context.getProperty("FECHA_TERMINACION");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("FANTERIOR", "id_String");
                        if(context.getStringValue("FANTERIOR") == null) {
                            context.FANTERIOR = null;
                        } else {
                            context.FANTERIOR=(String) context.getProperty("FANTERIOR");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("BODEGA", "id_String");
                        if(context.getStringValue("BODEGA") == null) {
                            context.BODEGA = null;
                        } else {
                            context.BODEGA=(String) context.getProperty("BODEGA");
                        }
                        context.setContextType("ID_SOLICITUD", "id_Integer");
                        if(context.getStringValue("ID_SOLICITUD") == null) {
                            context.ID_SOLICITUD = null;
                        } else {
                            try{
                                context.ID_SOLICITUD=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ID_SOLICITUD"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID_SOLICITUD", e.getMessage()));
                                context.ID_SOLICITUD=null;
                            }
                        }
                        context.setContextType("LAST_DAYS", "id_Integer");
                        if(context.getStringValue("LAST_DAYS") == null) {
                            context.LAST_DAYS = null;
                        } else {
                            try{
                                context.LAST_DAYS=routines.system.ParserUtils.parseTo_Integer (context.getProperty("LAST_DAYS"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "LAST_DAYS", e.getMessage()));
                                context.LAST_DAYS=null;
                            }
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("mail_User", "id_String");
                        if(context.getStringValue("mail_User") == null) {
                            context.mail_User = null;
                        } else {
                            context.mail_User=(String) context.getProperty("mail_User");
                        }
                        context.setContextType("mail_Message", "id_String");
                        if(context.getStringValue("mail_Message") == null) {
                            context.mail_Message = null;
                        } else {
                            context.mail_Message=(String) context.getProperty("mail_Message");
                        }
                        context.setContextType("mail_To", "id_String");
                        if(context.getStringValue("mail_To") == null) {
                            context.mail_To = null;
                        } else {
                            context.mail_To=(String) context.getProperty("mail_To");
                        }
                        context.setContextType("mail_SMTP_Port", "id_String");
                        if(context.getStringValue("mail_SMTP_Port") == null) {
                            context.mail_SMTP_Port = null;
                        } else {
                            context.mail_SMTP_Port=(String) context.getProperty("mail_SMTP_Port");
                        }
                        context.setContextType("mail_Password", "id_Password");
                        if(context.getStringValue("mail_Password") == null) {
                            context.mail_Password = null;
                        } else {
                            String pwd_mail_Password_value = context.getProperty("mail_Password");
                            context.mail_Password = null;
                            if(pwd_mail_Password_value!=null) {
                                if(context_param.containsKey("mail_Password")) {//no need to decrypt if it come from program argument or parent job runtime
                                    context.mail_Password = pwd_mail_Password_value;
                                } else if (!pwd_mail_Password_value.isEmpty()) {
                                    try {
                                        context.mail_Password = routines.system.PasswordEncryptUtil.decryptPassword(pwd_mail_Password_value);
                                        context.put("mail_Password",context.mail_Password);
                                    } catch (java.lang.RuntimeException e) {
                                        //do nothing
                                    }
                                }
                            }
                        }
                        context.setContextType("mail_SMTP_Host", "id_String");
                        if(context.getStringValue("mail_SMTP_Host") == null) {
                            context.mail_SMTP_Host = null;
                        } else {
                            context.mail_SMTP_Host=(String) context.getProperty("mail_SMTP_Host");
                        }
                        context.setContextType("mail_Sendername", "id_String");
                        if(context.getStringValue("mail_Sendername") == null) {
                            context.mail_Sendername = null;
                        } else {
                            context.mail_Sendername=(String) context.getProperty("mail_Sendername");
                        }
                        context.setContextType("mail_Subject", "id_String");
                        if(context.getStringValue("mail_Subject") == null) {
                            context.mail_Subject = null;
                        } else {
                            context.mail_Subject=(String) context.getProperty("mail_Subject");
                        }
                        context.setContextType("FUERZA", "id_String");
                        if(context.getStringValue("FUERZA") == null) {
                            context.FUERZA = null;
                        } else {
                            context.FUERZA=(String) context.getProperty("FUERZA");
                        }
                        context.setContextType("ESM_REMITE", "id_String");
                        if(context.getStringValue("ESM_REMITE") == null) {
                            context.ESM_REMITE = null;
                        } else {
                            context.ESM_REMITE=(String) context.getProperty("ESM_REMITE");
                        }
                        context.setContextType("VINCULACION", "id_String");
                        if(context.getStringValue("VINCULACION") == null) {
                            context.VINCULACION = null;
                        } else {
                            context.VINCULACION=(String) context.getProperty("VINCULACION");
                        }
                        context.setContextType("ESQUEMA", "id_String");
                        if(context.getStringValue("ESQUEMA") == null) {
                            context.ESQUEMA = null;
                        } else {
                            context.ESQUEMA=(String) context.getProperty("ESQUEMA");
                        }
                        context.setContextType("ARCHIVOS_ID", "id_BigDecimal");
                        if(context.getStringValue("ARCHIVOS_ID") == null) {
                            context.ARCHIVOS_ID = null;
                        } else {
                            try{
                                context.ARCHIVOS_ID=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("ARCHIVOS_ID"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ARCHIVOS_ID", e.getMessage()));
                                context.ARCHIVOS_ID=null;
                            }
                        }
                        context.setContextType("USUARIO", "id_String");
                        if(context.getStringValue("USUARIO") == null) {
                            context.USUARIO = null;
                        } else {
                            context.USUARIO=(String) context.getProperty("USUARIO");
                        }
                        context.setContextType("EDAD_INICIAL", "id_String");
                        if(context.getStringValue("EDAD_INICIAL") == null) {
                            context.EDAD_INICIAL = null;
                        } else {
                            context.EDAD_INICIAL=(String) context.getProperty("EDAD_INICIAL");
                        }
                        context.setContextType("CARPETA_TEMPORAL", "id_String");
                        if(context.getStringValue("CARPETA_TEMPORAL") == null) {
                            context.CARPETA_TEMPORAL = null;
                        } else {
                            context.CARPETA_TEMPORAL=(String) context.getProperty("CARPETA_TEMPORAL");
                        }
                        context.setContextType("FECHA_FINAL", "id_String");
                        if(context.getStringValue("FECHA_FINAL") == null) {
                            context.FECHA_FINAL = null;
                        } else {
                            context.FECHA_FINAL=(String) context.getProperty("FECHA_FINAL");
                        }
                        context.setContextType("CARPETA_SALIDA", "id_String");
                        if(context.getStringValue("CARPETA_SALIDA") == null) {
                            context.CARPETA_SALIDA = null;
                        } else {
                            context.CARPETA_SALIDA=(String) context.getProperty("CARPETA_SALIDA");
                        }
                        context.setContextType("SIGLA", "id_String");
                        if(context.getStringValue("SIGLA") == null) {
                            context.SIGLA = null;
                        } else {
                            context.SIGLA=(String) context.getProperty("SIGLA");
                        }
                        context.setContextType("NOMBRE_CONSOLIDADO", "id_String");
                        if(context.getStringValue("NOMBRE_CONSOLIDADO") == null) {
                            context.NOMBRE_CONSOLIDADO = null;
                        } else {
                            context.NOMBRE_CONSOLIDADO=(String) context.getProperty("NOMBRE_CONSOLIDADO");
                        }
                        context.setContextType("DEPARTAMENTO", "id_String");
                        if(context.getStringValue("DEPARTAMENTO") == null) {
                            context.DEPARTAMENTO = null;
                        } else {
                            context.DEPARTAMENTO=(String) context.getProperty("DEPARTAMENTO");
                        }
                        context.setContextType("CLASIFICACION", "id_String");
                        if(context.getStringValue("CLASIFICACION") == null) {
                            context.CLASIFICACION = null;
                        } else {
                            context.CLASIFICACION=(String) context.getProperty("CLASIFICACION");
                        }
                        context.setContextType("CIUDAD", "id_String");
                        if(context.getStringValue("CIUDAD") == null) {
                            context.CIUDAD = null;
                        } else {
                            context.CIUDAD=(String) context.getProperty("CIUDAD");
                        }
                        context.setContextType("FECHA_HORA_FINAL_EJECUCION", "id_Date");
                        if(context.getStringValue("FECHA_HORA_FINAL_EJECUCION") == null) {
                            context.FECHA_HORA_FINAL_EJECUCION = null;
                        } else {
                            String context_FECHA_HORA_FINAL_EJECUCION_value = context.getProperty("FECHA_HORA_FINAL_EJECUCION");
                            try{
                                if (context_FECHA_HORA_FINAL_EJECUCION_value == null){
                                    context_FECHA_HORA_FINAL_EJECUCION_value = "";
                                }
                                int context_FECHA_HORA_FINAL_EJECUCION_pos = context_FECHA_HORA_FINAL_EJECUCION_value.indexOf(";");
                                String context_FECHA_HORA_FINAL_EJECUCION_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FECHA_HORA_FINAL_EJECUCION_pos > -1){
                                    context_FECHA_HORA_FINAL_EJECUCION_pattern = context_FECHA_HORA_FINAL_EJECUCION_value.substring(0, context_FECHA_HORA_FINAL_EJECUCION_pos);
                                    context_FECHA_HORA_FINAL_EJECUCION_value = context_FECHA_HORA_FINAL_EJECUCION_value.substring(context_FECHA_HORA_FINAL_EJECUCION_pos + 1);
                                }

                                context.FECHA_HORA_FINAL_EJECUCION=(java.util.Date)(new java.text.SimpleDateFormat(context_FECHA_HORA_FINAL_EJECUCION_pattern).parse(context_FECHA_HORA_FINAL_EJECUCION_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FECHA_HORA_FINAL_EJECUCION_longValue = Long.valueOf(context_FECHA_HORA_FINAL_EJECUCION_value);
                                    context.FECHA_HORA_FINAL_EJECUCION = new java.util.Date(context_FECHA_HORA_FINAL_EJECUCION_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FECHA_HORA_FINAL_EJECUCION", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FECHA_HORA_FINAL_EJECUCION=null;
                                }
                            }
                        }
                        context.setContextType("ID", "id_BigDecimal");
                        if(context.getStringValue("ID") == null) {
                            context.ID = null;
                        } else {
                            try{
                                context.ID=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("ID"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID", e.getMessage()));
                                context.ID=null;
                            }
                        }
                        context.setContextType("FECHA_HORA_INICIO_EJECUCION", "id_Date");
                        if(context.getStringValue("FECHA_HORA_INICIO_EJECUCION") == null) {
                            context.FECHA_HORA_INICIO_EJECUCION = null;
                        } else {
                            String context_FECHA_HORA_INICIO_EJECUCION_value = context.getProperty("FECHA_HORA_INICIO_EJECUCION");
                            try{
                                if (context_FECHA_HORA_INICIO_EJECUCION_value == null){
                                    context_FECHA_HORA_INICIO_EJECUCION_value = "";
                                }
                                int context_FECHA_HORA_INICIO_EJECUCION_pos = context_FECHA_HORA_INICIO_EJECUCION_value.indexOf(";");
                                String context_FECHA_HORA_INICIO_EJECUCION_pattern =  "yyyy-MM-dd HH:mm:ss";
                                if(context_FECHA_HORA_INICIO_EJECUCION_pos > -1){
                                    context_FECHA_HORA_INICIO_EJECUCION_pattern = context_FECHA_HORA_INICIO_EJECUCION_value.substring(0, context_FECHA_HORA_INICIO_EJECUCION_pos);
                                    context_FECHA_HORA_INICIO_EJECUCION_value = context_FECHA_HORA_INICIO_EJECUCION_value.substring(context_FECHA_HORA_INICIO_EJECUCION_pos + 1);
                                }

                                context.FECHA_HORA_INICIO_EJECUCION=(java.util.Date)(new java.text.SimpleDateFormat(context_FECHA_HORA_INICIO_EJECUCION_pattern).parse(context_FECHA_HORA_INICIO_EJECUCION_value));

                            } catch(ParseException e) {
                                try { 
                                    long context_FECHA_HORA_INICIO_EJECUCION_longValue = Long.valueOf(context_FECHA_HORA_INICIO_EJECUCION_value);
                                    context.FECHA_HORA_INICIO_EJECUCION = new java.util.Date(context_FECHA_HORA_INICIO_EJECUCION_longValue);
                                } catch (NumberFormatException cantParseToLongException) {
                                        System.err.println(String.format("Null value will be used for context parameter %s: %s", "FECHA_HORA_INICIO_EJECUCION", "Can't parse date string: " + e.getMessage() + " and long: " + cantParseToLongException.getMessage()));
                                    context.FECHA_HORA_INICIO_EJECUCION=null;
                                }
                            }
                        }
                        context.setContextType("FECHA_INICIAL", "id_String");
                        if(context.getStringValue("FECHA_INICIAL") == null) {
                            context.FECHA_INICIAL = null;
                        } else {
                            context.FECHA_INICIAL=(String) context.getProperty("FECHA_INICIAL");
                        }
                        context.setContextType("REGIONAL", "id_String");
                        if(context.getStringValue("REGIONAL") == null) {
                            context.REGIONAL = null;
                        } else {
                            context.REGIONAL=(String) context.getProperty("REGIONAL");
                        }
                        context.setContextType("EDAD_FINAL", "id_String");
                        if(context.getStringValue("EDAD_FINAL") == null) {
                            context.EDAD_FINAL = null;
                        } else {
                            context.EDAD_FINAL=(String) context.getProperty("EDAD_FINAL");
                        }
                        context.setContextType("ESPECIALIDAD_ID", "id_String");
                        if(context.getStringValue("ESPECIALIDAD_ID") == null) {
                            context.ESPECIALIDAD_ID = null;
                        } else {
                            context.ESPECIALIDAD_ID=(String) context.getProperty("ESPECIALIDAD_ID");
                        }
                        context.setContextType("TIPO_USUARIO", "id_String");
                        if(context.getStringValue("TIPO_USUARIO") == null) {
                            context.TIPO_USUARIO = null;
                        } else {
                            context.TIPO_USUARIO=(String) context.getProperty("TIPO_USUARIO");
                        }
                        context.setContextType("FECHA_REALIZACION", "id_String");
                        if(context.getStringValue("FECHA_REALIZACION") == null) {
                            context.FECHA_REALIZACION = null;
                        } else {
                            context.FECHA_REALIZACION=(String) context.getProperty("FECHA_REALIZACION");
                        }
                        context.setContextType("PERIODO_INICIAL", "id_String");
                        if(context.getStringValue("PERIODO_INICIAL") == null) {
                            context.PERIODO_INICIAL = null;
                        } else {
                            context.PERIODO_INICIAL=(String) context.getProperty("PERIODO_INICIAL");
                        }
                        context.setContextType("RAN_CONDICION_ODH", "id_String");
                        if(context.getStringValue("RAN_CONDICION_ODH") == null) {
                            context.RAN_CONDICION_ODH = null;
                        } else {
                            context.RAN_CONDICION_ODH=(String) context.getProperty("RAN_CONDICION_ODH");
                        }
                        context.setContextType("NOMBRE_CSV", "id_String");
                        if(context.getStringValue("NOMBRE_CSV") == null) {
                            context.NOMBRE_CSV = null;
                        } else {
                            context.NOMBRE_CSV=(String) context.getProperty("NOMBRE_CSV");
                        }
                        context.setContextType("ESPECIALIDAD", "id_String");
                        if(context.getStringValue("ESPECIALIDAD") == null) {
                            context.ESPECIALIDAD = null;
                        } else {
                            context.ESPECIALIDAD=(String) context.getProperty("ESPECIALIDAD");
                        }
                        context.setContextType("RAN_CONDICION_PA", "id_String");
                        if(context.getStringValue("RAN_CONDICION_PA") == null) {
                            context.RAN_CONDICION_PA = null;
                        } else {
                            context.RAN_CONDICION_PA=(String) context.getProperty("RAN_CONDICION_PA");
                        }
                        context.setContextType("TPLANAFILIACION", "id_String");
                        if(context.getStringValue("TPLANAFILIACION") == null) {
                            context.TPLANAFILIACION = null;
                        } else {
                            context.TPLANAFILIACION=(String) context.getProperty("TPLANAFILIACION");
                        }
                        context.setContextType("ROLES_ID", "id_String");
                        if(context.getStringValue("ROLES_ID") == null) {
                            context.ROLES_ID = null;
                        } else {
                            context.ROLES_ID=(String) context.getProperty("ROLES_ID");
                        }
                        context.setContextType("GRADO", "id_String");
                        if(context.getStringValue("GRADO") == null) {
                            context.GRADO = null;
                        } else {
                            context.GRADO=(String) context.getProperty("GRADO");
                        }
                        context.setContextType("SEXO", "id_String");
                        if(context.getStringValue("SEXO") == null) {
                            context.SEXO = null;
                        } else {
                            context.SEXO=(String) context.getProperty("SEXO");
                        }
                        context.setContextType("NOMBRE_ZIP", "id_String");
                        if(context.getStringValue("NOMBRE_ZIP") == null) {
                            context.NOMBRE_ZIP = null;
                        } else {
                            context.NOMBRE_ZIP=(String) context.getProperty("NOMBRE_ZIP");
                        }
                        context.setContextType("GRUPO_EDAD", "id_String");
                        if(context.getStringValue("GRUPO_EDAD") == null) {
                            context.GRUPO_EDAD = null;
                        } else {
                            context.GRUPO_EDAD=(String) context.getProperty("GRUPO_EDAD");
                        }
                        context.setContextType("TCOTIZACION", "id_String");
                        if(context.getStringValue("TCOTIZACION") == null) {
                            context.TCOTIZACION = null;
                        } else {
                            context.TCOTIZACION=(String) context.getProperty("TCOTIZACION");
                        }
                        context.setContextType("ESM_NOMBRE", "id_String");
                        if(context.getStringValue("ESM_NOMBRE") == null) {
                            context.ESM_NOMBRE = null;
                        } else {
                            context.ESM_NOMBRE=(String) context.getProperty("ESM_NOMBRE");
                        }
                        context.setContextType("FECHA_TITULO", "id_String");
                        if(context.getStringValue("FECHA_TITULO") == null) {
                            context.FECHA_TITULO = null;
                        } else {
                            context.FECHA_TITULO=(String) context.getProperty("FECHA_TITULO");
                        }
                        context.setContextType("ESM_USUARIO", "id_String");
                        if(context.getStringValue("ESM_USUARIO") == null) {
                            context.ESM_USUARIO = null;
                        } else {
                            context.ESM_USUARIO=(String) context.getProperty("ESM_USUARIO");
                        }
                        context.setContextType("FUERZA_NOMBRE", "id_String");
                        if(context.getStringValue("FUERZA_NOMBRE") == null) {
                            context.FUERZA_NOMBRE = null;
                        } else {
                            context.FUERZA_NOMBRE=(String) context.getProperty("FUERZA_NOMBRE");
                        }
                        context.setContextType("TIPO_CITA", "id_String");
                        if(context.getStringValue("TIPO_CITA") == null) {
                            context.TIPO_CITA = null;
                        } else {
                            context.TIPO_CITA=(String) context.getProperty("TIPO_CITA");
                        }
                        context.setContextType("PERIODO_FINAL", "id_String");
                        if(context.getStringValue("PERIODO_FINAL") == null) {
                            context.PERIODO_FINAL = null;
                        } else {
                            context.PERIODO_FINAL=(String) context.getProperty("PERIODO_FINAL");
                        }
                        context.setContextType("TIPO_SOLICITUD", "id_String");
                        if(context.getStringValue("TIPO_SOLICITUD") == null) {
                            context.TIPO_SOLICITUD = null;
                        } else {
                            context.TIPO_SOLICITUD=(String) context.getProperty("TIPO_SOLICITUD");
                        }
                        context.setContextType("GE_VALOR_MENOR", "id_String");
                        if(context.getStringValue("GE_VALOR_MENOR") == null) {
                            context.GE_VALOR_MENOR = null;
                        } else {
                            context.GE_VALOR_MENOR=(String) context.getProperty("GE_VALOR_MENOR");
                        }
                        context.setContextType("RAN_CONDICION_AD", "id_String");
                        if(context.getStringValue("RAN_CONDICION_AD") == null) {
                            context.RAN_CONDICION_AD = null;
                        } else {
                            context.RAN_CONDICION_AD=(String) context.getProperty("RAN_CONDICION_AD");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (java.lang.String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_destino_ServiceName")) {
                context.db_destino_ServiceName = (String) parentContextMap.get("db_destino_ServiceName");
            }if (parentContextMap.containsKey("db_destino_AdditionalParams")) {
                context.db_destino_AdditionalParams = (String) parentContextMap.get("db_destino_AdditionalParams");
            }if (parentContextMap.containsKey("db_destino_Login")) {
                context.db_destino_Login = (String) parentContextMap.get("db_destino_Login");
            }if (parentContextMap.containsKey("db_destino_Port")) {
                context.db_destino_Port = (String) parentContextMap.get("db_destino_Port");
            }if (parentContextMap.containsKey("db_destino_Schema")) {
                context.db_destino_Schema = (String) parentContextMap.get("db_destino_Schema");
            }if (parentContextMap.containsKey("db_destino_Server")) {
                context.db_destino_Server = (String) parentContextMap.get("db_destino_Server");
            }if (parentContextMap.containsKey("db_destino_Password")) {
                context.db_destino_Password = (java.lang.String) parentContextMap.get("db_destino_Password");
            }if (parentContextMap.containsKey("ACTUALIZACION_TOTAL")) {
                context.ACTUALIZACION_TOTAL = (Boolean) parentContextMap.get("ACTUALIZACION_TOTAL");
            }if (parentContextMap.containsKey("FECHA_TERMINACION")) {
                context.FECHA_TERMINACION = (String) parentContextMap.get("FECHA_TERMINACION");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("FANTERIOR")) {
                context.FANTERIOR = (String) parentContextMap.get("FANTERIOR");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("BODEGA")) {
                context.BODEGA = (String) parentContextMap.get("BODEGA");
            }if (parentContextMap.containsKey("ID_SOLICITUD")) {
                context.ID_SOLICITUD = (Integer) parentContextMap.get("ID_SOLICITUD");
            }if (parentContextMap.containsKey("LAST_DAYS")) {
                context.LAST_DAYS = (Integer) parentContextMap.get("LAST_DAYS");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("mail_User")) {
                context.mail_User = (String) parentContextMap.get("mail_User");
            }if (parentContextMap.containsKey("mail_Message")) {
                context.mail_Message = (String) parentContextMap.get("mail_Message");
            }if (parentContextMap.containsKey("mail_To")) {
                context.mail_To = (String) parentContextMap.get("mail_To");
            }if (parentContextMap.containsKey("mail_SMTP_Port")) {
                context.mail_SMTP_Port = (String) parentContextMap.get("mail_SMTP_Port");
            }if (parentContextMap.containsKey("mail_Password")) {
                context.mail_Password = (java.lang.String) parentContextMap.get("mail_Password");
            }if (parentContextMap.containsKey("mail_SMTP_Host")) {
                context.mail_SMTP_Host = (String) parentContextMap.get("mail_SMTP_Host");
            }if (parentContextMap.containsKey("mail_Sendername")) {
                context.mail_Sendername = (String) parentContextMap.get("mail_Sendername");
            }if (parentContextMap.containsKey("mail_Subject")) {
                context.mail_Subject = (String) parentContextMap.get("mail_Subject");
            }if (parentContextMap.containsKey("FUERZA")) {
                context.FUERZA = (String) parentContextMap.get("FUERZA");
            }if (parentContextMap.containsKey("ESM_REMITE")) {
                context.ESM_REMITE = (String) parentContextMap.get("ESM_REMITE");
            }if (parentContextMap.containsKey("VINCULACION")) {
                context.VINCULACION = (String) parentContextMap.get("VINCULACION");
            }if (parentContextMap.containsKey("ESQUEMA")) {
                context.ESQUEMA = (String) parentContextMap.get("ESQUEMA");
            }if (parentContextMap.containsKey("ARCHIVOS_ID")) {
                context.ARCHIVOS_ID = (BigDecimal) parentContextMap.get("ARCHIVOS_ID");
            }if (parentContextMap.containsKey("USUARIO")) {
                context.USUARIO = (String) parentContextMap.get("USUARIO");
            }if (parentContextMap.containsKey("EDAD_INICIAL")) {
                context.EDAD_INICIAL = (String) parentContextMap.get("EDAD_INICIAL");
            }if (parentContextMap.containsKey("CARPETA_TEMPORAL")) {
                context.CARPETA_TEMPORAL = (String) parentContextMap.get("CARPETA_TEMPORAL");
            }if (parentContextMap.containsKey("FECHA_FINAL")) {
                context.FECHA_FINAL = (String) parentContextMap.get("FECHA_FINAL");
            }if (parentContextMap.containsKey("CARPETA_SALIDA")) {
                context.CARPETA_SALIDA = (String) parentContextMap.get("CARPETA_SALIDA");
            }if (parentContextMap.containsKey("SIGLA")) {
                context.SIGLA = (String) parentContextMap.get("SIGLA");
            }if (parentContextMap.containsKey("NOMBRE_CONSOLIDADO")) {
                context.NOMBRE_CONSOLIDADO = (String) parentContextMap.get("NOMBRE_CONSOLIDADO");
            }if (parentContextMap.containsKey("DEPARTAMENTO")) {
                context.DEPARTAMENTO = (String) parentContextMap.get("DEPARTAMENTO");
            }if (parentContextMap.containsKey("CLASIFICACION")) {
                context.CLASIFICACION = (String) parentContextMap.get("CLASIFICACION");
            }if (parentContextMap.containsKey("CIUDAD")) {
                context.CIUDAD = (String) parentContextMap.get("CIUDAD");
            }if (parentContextMap.containsKey("FECHA_HORA_FINAL_EJECUCION")) {
                context.FECHA_HORA_FINAL_EJECUCION = (java.util.Date) parentContextMap.get("FECHA_HORA_FINAL_EJECUCION");
            }if (parentContextMap.containsKey("ID")) {
                context.ID = (BigDecimal) parentContextMap.get("ID");
            }if (parentContextMap.containsKey("FECHA_HORA_INICIO_EJECUCION")) {
                context.FECHA_HORA_INICIO_EJECUCION = (java.util.Date) parentContextMap.get("FECHA_HORA_INICIO_EJECUCION");
            }if (parentContextMap.containsKey("FECHA_INICIAL")) {
                context.FECHA_INICIAL = (String) parentContextMap.get("FECHA_INICIAL");
            }if (parentContextMap.containsKey("REGIONAL")) {
                context.REGIONAL = (String) parentContextMap.get("REGIONAL");
            }if (parentContextMap.containsKey("EDAD_FINAL")) {
                context.EDAD_FINAL = (String) parentContextMap.get("EDAD_FINAL");
            }if (parentContextMap.containsKey("ESPECIALIDAD_ID")) {
                context.ESPECIALIDAD_ID = (String) parentContextMap.get("ESPECIALIDAD_ID");
            }if (parentContextMap.containsKey("TIPO_USUARIO")) {
                context.TIPO_USUARIO = (String) parentContextMap.get("TIPO_USUARIO");
            }if (parentContextMap.containsKey("FECHA_REALIZACION")) {
                context.FECHA_REALIZACION = (String) parentContextMap.get("FECHA_REALIZACION");
            }if (parentContextMap.containsKey("PERIODO_INICIAL")) {
                context.PERIODO_INICIAL = (String) parentContextMap.get("PERIODO_INICIAL");
            }if (parentContextMap.containsKey("RAN_CONDICION_ODH")) {
                context.RAN_CONDICION_ODH = (String) parentContextMap.get("RAN_CONDICION_ODH");
            }if (parentContextMap.containsKey("NOMBRE_CSV")) {
                context.NOMBRE_CSV = (String) parentContextMap.get("NOMBRE_CSV");
            }if (parentContextMap.containsKey("ESPECIALIDAD")) {
                context.ESPECIALIDAD = (String) parentContextMap.get("ESPECIALIDAD");
            }if (parentContextMap.containsKey("RAN_CONDICION_PA")) {
                context.RAN_CONDICION_PA = (String) parentContextMap.get("RAN_CONDICION_PA");
            }if (parentContextMap.containsKey("TPLANAFILIACION")) {
                context.TPLANAFILIACION = (String) parentContextMap.get("TPLANAFILIACION");
            }if (parentContextMap.containsKey("ROLES_ID")) {
                context.ROLES_ID = (String) parentContextMap.get("ROLES_ID");
            }if (parentContextMap.containsKey("GRADO")) {
                context.GRADO = (String) parentContextMap.get("GRADO");
            }if (parentContextMap.containsKey("SEXO")) {
                context.SEXO = (String) parentContextMap.get("SEXO");
            }if (parentContextMap.containsKey("NOMBRE_ZIP")) {
                context.NOMBRE_ZIP = (String) parentContextMap.get("NOMBRE_ZIP");
            }if (parentContextMap.containsKey("GRUPO_EDAD")) {
                context.GRUPO_EDAD = (String) parentContextMap.get("GRUPO_EDAD");
            }if (parentContextMap.containsKey("TCOTIZACION")) {
                context.TCOTIZACION = (String) parentContextMap.get("TCOTIZACION");
            }if (parentContextMap.containsKey("ESM_NOMBRE")) {
                context.ESM_NOMBRE = (String) parentContextMap.get("ESM_NOMBRE");
            }if (parentContextMap.containsKey("FECHA_TITULO")) {
                context.FECHA_TITULO = (String) parentContextMap.get("FECHA_TITULO");
            }if (parentContextMap.containsKey("ESM_USUARIO")) {
                context.ESM_USUARIO = (String) parentContextMap.get("ESM_USUARIO");
            }if (parentContextMap.containsKey("FUERZA_NOMBRE")) {
                context.FUERZA_NOMBRE = (String) parentContextMap.get("FUERZA_NOMBRE");
            }if (parentContextMap.containsKey("TIPO_CITA")) {
                context.TIPO_CITA = (String) parentContextMap.get("TIPO_CITA");
            }if (parentContextMap.containsKey("PERIODO_FINAL")) {
                context.PERIODO_FINAL = (String) parentContextMap.get("PERIODO_FINAL");
            }if (parentContextMap.containsKey("TIPO_SOLICITUD")) {
                context.TIPO_SOLICITUD = (String) parentContextMap.get("TIPO_SOLICITUD");
            }if (parentContextMap.containsKey("GE_VALOR_MENOR")) {
                context.GE_VALOR_MENOR = (String) parentContextMap.get("GE_VALOR_MENOR");
            }if (parentContextMap.containsKey("RAN_CONDICION_AD")) {
                context.RAN_CONDICION_AD = (String) parentContextMap.get("RAN_CONDICION_AD");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
			parametersToEncrypt.add("db_origen_Password");
			parametersToEncrypt.add("db_destino_Password");
			parametersToEncrypt.add("mail_Password");
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : AfiConsolidados");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tOracleConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));
            connections.put("conn_tOracleConnection_2", globalMap.get("conn_tOracleConnection_2"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     620786 characters generated by Talend Open Studio for ESB 
 *     on the November 4, 2024, 3:42:05 PM COT
 ************************************************************************************************/