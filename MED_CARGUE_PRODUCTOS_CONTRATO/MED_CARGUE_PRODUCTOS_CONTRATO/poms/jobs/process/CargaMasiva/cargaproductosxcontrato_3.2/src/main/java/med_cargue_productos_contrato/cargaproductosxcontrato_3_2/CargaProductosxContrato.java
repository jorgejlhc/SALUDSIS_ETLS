// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package med_cargue_productos_contrato.cargaproductosxcontrato_3_2;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: CargaProductosxContrato Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class CargaProductosxContrato implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(carga_id != null){
				
					this.setProperty("carga_id", carga_id.toString());
				
			}
			
			if(Contenido != null){
				
					this.setProperty("Contenido", Contenido.toString());
				
			}
			
			if(contrato_id != null){
				
					this.setProperty("contrato_id", contrato_id.toString());
				
			}
			
			if(ErrorLog != null){
				
					this.setProperty("ErrorLog", ErrorLog.toString());
				
			}
			
			if(Linea != null){
				
					this.setProperty("Linea", Linea.toString());
				
			}
			
			if(Mensaje_1 != null){
				
					this.setProperty("Mensaje_1", Mensaje_1.toString());
				
			}
			
			if(porcent_disp != null){
				
					this.setProperty("porcent_disp", porcent_disp.toString());
				
			}
			
			if(porcent_ivadisp != null){
				
					this.setProperty("porcent_ivadisp", porcent_ivadisp.toString());
				
			}
			
			if(porcent_ivasum != null){
				
					this.setProperty("porcent_ivasum", porcent_ivasum.toString());
				
			}
			
			if(porcent_sum != null){
				
					this.setProperty("porcent_sum", porcent_sum.toString());
				
			}
			
			if(result != null){
				
					this.setProperty("result", result.toString());
				
			}
			
			if(Salida != null){
				
					this.setProperty("Salida", Salida.toString());
				
			}
			
			if(TContenido != null){
				
					this.setProperty("TContenido", TContenido.toString());
				
			}
			
			if(usuario_id != null){
				
					this.setProperty("usuario_id", usuario_id.toString());
				
			}
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public BigDecimal carga_id;
public BigDecimal getCarga_id(){
	return this.carga_id;
}
public Object Contenido;
public Object getContenido(){
	return this.Contenido;
}
public String contrato_id;
public String getContrato_id(){
	return this.contrato_id;
}
public Integer ErrorLog;
public Integer getErrorLog(){
	return this.ErrorLog;
}
public Integer Linea;
public Integer getLinea(){
	return this.Linea;
}
public String Mensaje_1;
public String getMensaje_1(){
	return this.Mensaje_1;
}
public Double porcent_disp;
public Double getPorcent_disp(){
	return this.porcent_disp;
}
public Double porcent_ivadisp;
public Double getPorcent_ivadisp(){
	return this.porcent_ivadisp;
}
public Double porcent_ivasum;
public Double getPorcent_ivasum(){
	return this.porcent_ivasum;
}
public Double porcent_sum;
public Double getPorcent_sum(){
	return this.porcent_sum;
}
public String result;
public String getResult(){
	return this.result;
}
public Object Salida;
public Object getSalida(){
	return this.Salida;
}
public String TContenido;
public String getTContenido(){
	return this.TContenido;
}
public String usuario_id;
public String getUsuario_id(){
	return this.usuario_id;
}
public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Password;
public String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "3.2";
	private final String jobName = "CargaProductosxContrato";
	private final String projectName = "MED_CARGUE_PRODUCTOS_CONTRATO";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				CargaProductosxContrato.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(CargaProductosxContrato.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								errorCode = null;
								tFixedFlowInput_1Process(globalMap);
								if (!"failure".equals(status)) {
									status = "end";
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tFixedFlowInput_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tOracleInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");



 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 48;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				
			    public String MailTo;

				public String getMailTo () {
					return this.MailTo;
				}

				public Boolean MailToIsNullable(){
				    return true;
				}
				public Boolean MailToIsKey(){
				    return false;
				}
				public Integer MailToLength(){
				    return 0;
				}
				public Integer MailToPrecision(){
				    return 0;
				}
				public String MailToDefault(){
				
					return null;
				
				}
				public String MailToComment(){
				
				    return "";
				
				}
				public String MailToPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MailToOriginalDbColumnName(){
				
					return "MailTo";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.PathStorage = this.PathStorage;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            other.MailTo = this.MailTo;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
					this.MailTo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
					this.MailTo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
					// String
				
						writeString(this.MailTo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
					// String
				
						writeString(this.MailTo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
		sb.append(",MailTo="+MailTo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class NameSpaceTool_tFileInputXML_1 {

    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();
    
	private java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();

    public void countNSMap(org.dom4j.Element el) {
        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {
            if (ns.getPrefix().trim().length() == 0) {
                xmlNameSpaceMap.put("pre"+defualtNSPath.size(), ns.getURI());
                String path = "";
                org.dom4j.Element elTmp = el;
                while (elTmp != null) {
                	if (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {
                        path = "/" + elTmp.getNamespacePrefix() + ":" + elTmp.getName() + path;
                    } else {
                        path = "/" + elTmp.getName() + path;
                    }
                    elTmp = elTmp.getParent();
                }
                defualtNSPath.add(path);
            } else {
                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());
            }

        }
        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {
            countNSMap(e);
        }
    }
    
    private final org.talend.xpath.XPathUtil util = new  org.talend.xpath.XPathUtil();
    
    {
    	util.setDefaultNSPath(defualtNSPath);
    }
    
	public String addDefaultNSPrefix(String path) {
		return util.addDefaultNSPrefix(path);
	}
	
	public String addDefaultNSPrefix(String relativeXpression, String basePath) {
		return util.addDefaultNSPrefix(relativeXpression,basePath);
	}
    
}

class XML_API_tFileInputXML_1{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getStringValue().isEmpty();
        }
        return false;
    }
}


org.dom4j.io.SAXReader reader_tFileInputXML_1 = new org.dom4j.io.SAXReader();
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}

boolean isValidFile_tFileInputXML_1 = true;
org.dom4j.Document doc_tFileInputXML_1 = null;
java.io.Closeable toClose_tFileInputXML_1 = null;
try{
	if(filename_tFileInputXML_1 instanceof java.io.InputStream){
		java.io.InputStream inputStream_tFileInputXML_1 = (java.io.InputStream)filename_tFileInputXML_1;
		toClose_tFileInputXML_1 = inputStream_tFileInputXML_1;
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(inputStream_tFileInputXML_1);
	}else{
		java.io.Reader unicodeReader_tFileInputXML_1 = new UnicodeReader(new java.io.FileInputStream(String.valueOf(filename_tFileInputXML_1)),"UTF-8");
		toClose_tFileInputXML_1 = unicodeReader_tFileInputXML_1;
		org.xml.sax.InputSource in_tFileInputXML_1= new org.xml.sax.InputSource(unicodeReader_tFileInputXML_1);
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(in_tFileInputXML_1);
	}
}catch(java.lang.Exception e){
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	isValidFile_tFileInputXML_1 = false;
} finally {
	if(toClose_tFileInputXML_1!=null) {
		toClose_tFileInputXML_1.close();
	}
}
if(isValidFile_tFileInputXML_1){
NameSpaceTool_tFileInputXML_1 nsTool_tFileInputXML_1 = new NameSpaceTool_tFileInputXML_1();
nsTool_tFileInputXML_1.countNSMap(doc_tFileInputXML_1.getRootElement());
java.util.HashMap<String,String> xmlNameSpaceMap_tFileInputXML_1 = nsTool_tFileInputXML_1.xmlNameSpaceMap;  

org.dom4j.XPath x_tFileInputXML_1 = doc_tFileInputXML_1.createXPath(nsTool_tFileInputXML_1.addDefaultNSPrefix("/connectionStrings"));  
x_tFileInputXML_1.setNamespaceURIs(xmlNameSpaceMap_tFileInputXML_1); 

java.util.List<org.dom4j.Node> nodeList_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)x_tFileInputXML_1.selectNodes(doc_tFileInputXML_1);	
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();
String str_tFileInputXML_1 = "";
org.dom4j.Node node_tFileInputXML_1 = null;

//init all mapping xpaths
java.util.Map<Integer,org.dom4j.XPath> xpaths_tFileInputXML_1=new java.util.HashMap<Integer,org.dom4j.XPath>();
	class XPathUtil_tFileInputXML_1{
	
			   public void initXPaths_0(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			       java.util.HashMap<String,String> xmlNameSpaceMap){
			
	org.dom4j.XPath xpath_0 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Host","/connectionStrings"));
	xpath_0.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(0,xpath_0);
			
	org.dom4j.XPath xpath_1 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Port","/connectionStrings"));
	xpath_1.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(1,xpath_1);
			
	org.dom4j.XPath xpath_2 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Sid","/connectionStrings"));
	xpath_2.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(2,xpath_2);
			
	org.dom4j.XPath xpath_3 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("ServiceName","/connectionStrings"));
	xpath_3.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(3,xpath_3);
			
	org.dom4j.XPath xpath_4 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Schema","/connectionStrings"));
	xpath_4.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(4,xpath_4);
			
	org.dom4j.XPath xpath_5 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("User","/connectionStrings"));
	xpath_5.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(5,xpath_5);
			
	org.dom4j.XPath xpath_6 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Password","/connectionStrings"));
	xpath_6.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(6,xpath_6);
			
	org.dom4j.XPath xpath_7 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PathStorage","/connectionStrings"));
	xpath_7.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(7,xpath_7);
			
	org.dom4j.XPath xpath_8 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPHost","/connectionStrings"));
	xpath_8.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(8,xpath_8);
			
	org.dom4j.XPath xpath_9 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPPort","/connectionStrings"));
	xpath_9.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(9,xpath_9);
			
	org.dom4j.XPath xpath_10 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("UsernameMail","/connectionStrings"));
	xpath_10.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(10,xpath_10);
			
	org.dom4j.XPath xpath_11 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PasswordMail","/connectionStrings"));
	xpath_11.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(11,xpath_11);
			
	org.dom4j.XPath xpath_12 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("MailTo","/connectionStrings"));
	xpath_12.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(12,xpath_12);
			
	     }
	   
	      public void initXPaths(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			    java.util.HashMap<String,String> xmlNameSpaceMap){
			    
			        initXPaths_0(xpaths,nsTool, xmlNameSpaceMap);
			    
		   }
	}
	XPathUtil_tFileInputXML_1 xPathUtil_tFileInputXML_1 = new XPathUtil_tFileInputXML_1();
	xPathUtil_tFileInputXML_1.initXPaths(xpaths_tFileInputXML_1, nsTool_tFileInputXML_1, xmlNameSpaceMap_tFileInputXML_1);
for (org.dom4j.Node temp_tFileInputXML_1: nodeList_tFileInputXML_1) {
	if (nb_line_tFileInputXML_1>=1) {
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row1 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row1 = new row1Struct();
	try{
    Object obj0_tFileInputXML_1 = xpaths_tFileInputXML_1.get(0).evaluate(temp_tFileInputXML_1);
    if(obj0_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj0_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj0_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj0_tFileInputXML_1 instanceof String || obj0_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj0_tFileInputXML_1);
    } else if(obj0_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj0_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Host =null;
									}else{
		row1.Host = str_tFileInputXML_1;
	}
    Object obj1_tFileInputXML_1 = xpaths_tFileInputXML_1.get(1).evaluate(temp_tFileInputXML_1);
    if(obj1_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj1_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj1_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj1_tFileInputXML_1 instanceof String || obj1_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj1_tFileInputXML_1);
    } else if(obj1_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj1_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Port =null;
									}else{
		row1.Port = str_tFileInputXML_1;
	}
    Object obj2_tFileInputXML_1 = xpaths_tFileInputXML_1.get(2).evaluate(temp_tFileInputXML_1);
    if(obj2_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj2_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj2_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj2_tFileInputXML_1 instanceof String || obj2_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj2_tFileInputXML_1);
    } else if(obj2_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj2_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Sid =null;
									}else{
		row1.Sid = str_tFileInputXML_1;
	}
    Object obj3_tFileInputXML_1 = xpaths_tFileInputXML_1.get(3).evaluate(temp_tFileInputXML_1);
    if(obj3_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj3_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj3_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj3_tFileInputXML_1 instanceof String || obj3_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj3_tFileInputXML_1);
    } else if(obj3_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj3_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.ServiceName =null;
									}else{
		row1.ServiceName = str_tFileInputXML_1;
	}
    Object obj4_tFileInputXML_1 = xpaths_tFileInputXML_1.get(4).evaluate(temp_tFileInputXML_1);
    if(obj4_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj4_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj4_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj4_tFileInputXML_1 instanceof String || obj4_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj4_tFileInputXML_1);
    } else if(obj4_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj4_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Schema =null;
									}else{
		row1.Schema = str_tFileInputXML_1;
	}
    Object obj5_tFileInputXML_1 = xpaths_tFileInputXML_1.get(5).evaluate(temp_tFileInputXML_1);
    if(obj5_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj5_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj5_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj5_tFileInputXML_1 instanceof String || obj5_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj5_tFileInputXML_1);
    } else if(obj5_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj5_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.User =null;
									}else{
		row1.User = str_tFileInputXML_1;
	}
    Object obj6_tFileInputXML_1 = xpaths_tFileInputXML_1.get(6).evaluate(temp_tFileInputXML_1);
    if(obj6_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj6_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj6_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj6_tFileInputXML_1 instanceof String || obj6_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj6_tFileInputXML_1);
    } else if(obj6_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj6_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Password =null;
									}else{
		row1.Password = str_tFileInputXML_1;
	}
    Object obj7_tFileInputXML_1 = xpaths_tFileInputXML_1.get(7).evaluate(temp_tFileInputXML_1);
    if(obj7_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj7_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj7_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj7_tFileInputXML_1 instanceof String || obj7_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj7_tFileInputXML_1);
    } else if(obj7_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj7_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PathStorage =null;
									}else{
		row1.PathStorage = str_tFileInputXML_1;
	}
    Object obj8_tFileInputXML_1 = xpaths_tFileInputXML_1.get(8).evaluate(temp_tFileInputXML_1);
    if(obj8_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj8_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj8_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj8_tFileInputXML_1 instanceof String || obj8_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj8_tFileInputXML_1);
    } else if(obj8_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj8_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPHost =null;
									}else{
		row1.SMTPHost = str_tFileInputXML_1;
	}
    Object obj9_tFileInputXML_1 = xpaths_tFileInputXML_1.get(9).evaluate(temp_tFileInputXML_1);
    if(obj9_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj9_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj9_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj9_tFileInputXML_1 instanceof String || obj9_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj9_tFileInputXML_1);
    } else if(obj9_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj9_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPPort =null;
									}else{
		row1.SMTPPort = str_tFileInputXML_1;
	}
    Object obj10_tFileInputXML_1 = xpaths_tFileInputXML_1.get(10).evaluate(temp_tFileInputXML_1);
    if(obj10_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj10_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj10_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj10_tFileInputXML_1 instanceof String || obj10_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj10_tFileInputXML_1);
    } else if(obj10_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj10_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.UsernameMail =null;
									}else{
		row1.UsernameMail = str_tFileInputXML_1;
	}
    Object obj11_tFileInputXML_1 = xpaths_tFileInputXML_1.get(11).evaluate(temp_tFileInputXML_1);
    if(obj11_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj11_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj11_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj11_tFileInputXML_1 instanceof String || obj11_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj11_tFileInputXML_1);
    } else if(obj11_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj11_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PasswordMail =null;
									}else{
		row1.PasswordMail = str_tFileInputXML_1;
	}
    Object obj12_tFileInputXML_1 = xpaths_tFileInputXML_1.get(12).evaluate(temp_tFileInputXML_1);
    if(obj12_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj12_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj12_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj12_tFileInputXML_1 instanceof String || obj12_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj12_tFileInputXML_1);
    } else if(obj12_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj12_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.MailTo =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.MailTo ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.MailTo =null;
									}else{
		row1.MailTo = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row1 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    context.db_origen_Server = row1.Host;
context.db_origen_Port = row1.Port;
context.db_origen_ServiceName = row1.ServiceName;
context.db_origen_Login = row1.User;
context.db_origen_Password = row1.Password;
context.db_origen_Schema = row1.Schema;


globalMap.put("archivo_salida",new java.io.ByteArrayOutputStream());

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


}
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());




/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tOracleRow_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tBufferOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_1", false);
		start_Hash.put("tBufferOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tBufferOutput_1 = 0;
		

 



/**
 * [tBufferOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row44.Result = "2";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_1 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					



String[] row_tBufferOutput_1=new String[]{"",};		
	    if(row44.Result != null){
	        
	            row_tBufferOutput_1[0] = row44.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_1[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_1);	
	
 


	tos_count_tBufferOutput_1++;

/**
 * [tBufferOutput_1 main ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tBufferOutput_1 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_1", true);
end_Hash.put("tBufferOutput_1", System.currentTimeMillis());




/**
 * [tBufferOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tBufferOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_1", false);
		start_Hash.put("tOracleRow_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_1";
	
	
		int tos_count_tOracleRow_1 = 0;
		

	java.sql.Connection conn_tOracleRow_1 = null;
	String query_tOracleRow_1 = "";
	boolean whetherReject_tOracleRow_1 = false;
	int count_tOracleRow_1 = 0;
				conn_tOracleRow_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_1", conn_tOracleRow_1);
        java.sql.Statement stmt_tOracleRow_1 = conn_tOracleRow_1.createStatement();
        resourceMap.put("stmt_tOracleRow_1", stmt_tOracleRow_1);

 



/**
 * [tOracleRow_1 begin ] stop
 */
	
	/**
	 * [tOracleRow_1 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

query_tOracleRow_1 = "TRUNCATE TABLE TEMP_CONTRATOS";
whetherReject_tOracleRow_1 = false;
globalMap.put("tOracleRow_1_QUERY",query_tOracleRow_1);
try {
		stmt_tOracleRow_1.execute(query_tOracleRow_1);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_1_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_1 = true;
		
				System.err.print(e.getMessage());
				
	}
	
	if(!whetherReject_tOracleRow_1) {
		
	}
	

 


	tos_count_tOracleRow_1++;

/**
 * [tOracleRow_1 main ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_1 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

	globalMap.put("tOracleRow_1_NB_LINE", count_tOracleRow_1);
        stmt_tOracleRow_1.close();
        resourceMap.remove("stmt_tOracleRow_1");
    resourceMap.put("statementClosed_tOracleRow_1", true);
    resourceMap.put("finish_tOracleRow_1", true);

 

ok_Hash.put("tOracleRow_1", true);
end_Hash.put("tOracleRow_1", System.currentTimeMillis());




/**
 * [tOracleRow_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleRow_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tOracleRow_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_1") == null) {
            java.sql.Statement stmtToClose_tOracleRow_1 = null;
            if ((stmtToClose_tOracleRow_1 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_1")) != null) {
                stmtToClose_tOracleRow_1.close();
            }
    }
 



/**
 * [tOracleRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleRow_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_2", false);
		start_Hash.put("tOracleRow_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_2";
	
	
		int tos_count_tOracleRow_2 = 0;
		

	java.sql.Connection conn_tOracleRow_2 = null;
	String query_tOracleRow_2 = "";
	boolean whetherReject_tOracleRow_2 = false;
	int count_tOracleRow_2 = 0;
				conn_tOracleRow_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_2", conn_tOracleRow_2);
        java.sql.Statement stmt_tOracleRow_2 = conn_tOracleRow_2.createStatement();
        resourceMap.put("stmt_tOracleRow_2", stmt_tOracleRow_2);

 



/**
 * [tOracleRow_2 begin ] stop
 */
	
	/**
	 * [tOracleRow_2 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

query_tOracleRow_2 = "TRUNCATE TABLE LOG_CONTRATOS";
whetherReject_tOracleRow_2 = false;
globalMap.put("tOracleRow_2_QUERY",query_tOracleRow_2);
try {
		stmt_tOracleRow_2.execute(query_tOracleRow_2);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_2_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_2 = true;
		
				System.err.print(e.getMessage());
				
	}
	
	if(!whetherReject_tOracleRow_2) {
		
	}
	

 


	tos_count_tOracleRow_2++;

/**
 * [tOracleRow_2 main ] stop
 */
	
	/**
	 * [tOracleRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

 



/**
 * [tOracleRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

 



/**
 * [tOracleRow_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_2 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

	globalMap.put("tOracleRow_2_NB_LINE", count_tOracleRow_2);
        stmt_tOracleRow_2.close();
        resourceMap.remove("stmt_tOracleRow_2");
    resourceMap.put("statementClosed_tOracleRow_2", true);
    resourceMap.put("finish_tOracleRow_2", true);

 

ok_Hash.put("tOracleRow_2", true);
end_Hash.put("tOracleRow_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleInput_1Process(globalMap);



/**
 * [tOracleRow_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_2") == null) {
            java.sql.Statement stmtToClose_tOracleRow_2 = null;
            if ((stmtToClose_tOracleRow_2 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_2")) != null) {
                stmtToClose_tOracleRow_2.close();
            }
    }
 



/**
 * [tOracleRow_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_2_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public double ID;

				public double getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public double INTDISPENSACION;

				public double getINTDISPENSACION () {
					return this.INTDISPENSACION;
				}

				public Boolean INTDISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean INTDISPENSACIONIsKey(){
				    return false;
				}
				public Integer INTDISPENSACIONLength(){
				    return 0;
				}
				public Integer INTDISPENSACIONPrecision(){
				    return null;
				}
				public String INTDISPENSACIONDefault(){
				
					return "";
				
				}
				public String INTDISPENSACIONComment(){
				
				    return "";
				
				}
				public String INTDISPENSACIONPattern(){
				
					return "";
				
				}
				public String INTDISPENSACIONOriginalDbColumnName(){
				
					return "INTDISPENSACION";
				
				}

				
			    public double INTSUMINISTRO;

				public double getINTSUMINISTRO () {
					return this.INTSUMINISTRO;
				}

				public Boolean INTSUMINISTROIsNullable(){
				    return false;
				}
				public Boolean INTSUMINISTROIsKey(){
				    return false;
				}
				public Integer INTSUMINISTROLength(){
				    return 0;
				}
				public Integer INTSUMINISTROPrecision(){
				    return null;
				}
				public String INTSUMINISTRODefault(){
				
					return "";
				
				}
				public String INTSUMINISTROComment(){
				
				    return "";
				
				}
				public String INTSUMINISTROPattern(){
				
					return "";
				
				}
				public String INTSUMINISTROOriginalDbColumnName(){
				
					return "INTSUMINISTRO";
				
				}

				
			    public double INTIVA;

				public double getINTIVA () {
					return this.INTIVA;
				}

				public Boolean INTIVAIsNullable(){
				    return false;
				}
				public Boolean INTIVAIsKey(){
				    return false;
				}
				public Integer INTIVALength(){
				    return 0;
				}
				public Integer INTIVAPrecision(){
				    return null;
				}
				public String INTIVADefault(){
				
					return "";
				
				}
				public String INTIVAComment(){
				
				    return "";
				
				}
				public String INTIVAPattern(){
				
					return "";
				
				}
				public String INTIVAOriginalDbColumnName(){
				
					return "INTIVA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
							result = prime * result + (int) this.ID;
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.ID != other.ID)
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.ID = this.ID;
	            other.INTDISPENSACION = this.INTDISPENSACION;
	            other.INTSUMINISTRO = this.INTSUMINISTRO;
	            other.INTIVA = this.INTIVA;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.ID = this.ID;
	            	
	}




    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readDouble();
					
			        this.INTDISPENSACION = dis.readDouble();
					
			        this.INTSUMINISTRO = dis.readDouble();
					
			        this.INTIVA = dis.readDouble();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			        this.ID = dis.readDouble();
					
			        this.INTDISPENSACION = dis.readDouble();
					
			        this.INTSUMINISTRO = dis.readDouble();
					
			        this.INTIVA = dis.readDouble();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// double
				
		            	dos.writeDouble(this.ID);
					
					// double
				
		            	dos.writeDouble(this.INTDISPENSACION);
					
					// double
				
		            	dos.writeDouble(this.INTSUMINISTRO);
					
					// double
				
		            	dos.writeDouble(this.INTIVA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// double
				
		            	dos.writeDouble(this.ID);
					
					// double
				
		            	dos.writeDouble(this.INTDISPENSACION);
					
					// double
				
		            	dos.writeDouble(this.INTSUMINISTRO);
					
					// double
				
		            	dos.writeDouble(this.INTIVA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",INTDISPENSACION="+String.valueOf(INTDISPENSACION));
		sb.append(",INTSUMINISTRO="+String.valueOf(INTSUMINISTRO));
		sb.append(",INTIVA="+String.valueOf(INTIVA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement();

		    String dbquery_tOracleInput_1 = "SELECT \n  ID, \n  INTDISPENSACION, \n  INTSUMINISTRO, \n  INTIVA\nFROM MED_CONTRATOS\nWHERE ID =  " + context.contrato_id;
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row10.ID = 0;
							} else {
	                         		
				row10.ID = routines.system.JDBCUtil.getDouble(rs_tOracleInput_1, 1);
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row10.INTDISPENSACION = 0;
							} else {
	                         		
				row10.INTDISPENSACION = routines.system.JDBCUtil.getDouble(rs_tOracleInput_1, 2);
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row10.INTSUMINISTRO = 0;
							} else {
	                         		
				row10.INTSUMINISTRO = routines.system.JDBCUtil.getDouble(rs_tOracleInput_1, 3);
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row10.INTIVA = 0;
							} else {
	                         		
				row10.INTIVA = routines.system.JDBCUtil.getDouble(rs_tOracleInput_1, 4);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

    //Code generate according to input schema and output schema
//output_row.ID = row10.ID;
//output_row.INTDISPENSACION = row10.INTDISPENSACION;
//output_row.INTSUMINISTRO = row10.INTSUMINISTRO;
//output_row.INTIVA = row10.INTIVA;

context.porcent_sum = row10.INTSUMINISTRO;
context.porcent_ivasum = row10.INTIVA;
context.porcent_disp = row10.INTDISPENSACION;
context.porcent_ivadisp =  row10.INTIVA;



    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tJavaRow_2_NB_LINE")) > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If1", 0, "true");
					}
				tOracleInput_3Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If1", 0, "false");
					}   	 
   				}
   			if (((Integer)globalMap.get("tJavaRow_2_NB_LINE")) == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tFixedFlowInput_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class outCSVStruct implements routines.system.IPersistableRow<outCSVStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String CONTRATO_ID;

				public String getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return 100;
				}
				public Integer CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public String USUARIO_ID;

				public String getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 100;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return null;
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 300;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 300;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 300;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 300;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 300;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 300;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 300;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 300;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 300;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 300;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 300;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 300;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 300;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.CONTRATO_ID = readString(dis);
					
					this.USUARIO_ID = readString(dis);
					
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.CONTRATO_ID = readString(dis);
					
					this.USUARIO_ID = readString(dis);
					
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO_ID,dos);
					
					// String
				
						writeString(this.USUARIO_ID,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO_ID,dos);
					
					// String
				
						writeString(this.USUARIO_ID,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+CONTRATO_ID);
		sb.append(",USUARIO_ID="+USUARIO_ID);
		sb.append(",ITEM="+ITEM);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outCSVStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 0;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+ITEM);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_OPERADOR;

				public String getCODIGO_OPERADOR () {
					return this.CODIGO_OPERADOR;
				}

				public Boolean CODIGO_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_OPERADORIsKey(){
				    return false;
				}
				public Integer CODIGO_OPERADORLength(){
				    return 0;
				}
				public Integer CODIGO_OPERADORPrecision(){
				    return 0;
				}
				public String CODIGO_OPERADORDefault(){
				
					return null;
				
				}
				public String CODIGO_OPERADORComment(){
				
				    return "";
				
				}
				public String CODIGO_OPERADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_OPERADOROriginalDbColumnName(){
				
					return "CODIGO_OPERADOR";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.ITEM = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_OPERADOR = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_OPERADOR,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+ITEM);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_OPERADOR="+CODIGO_OPERADOR);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.ID = this.ID;
	            other.CONTENIDO = this.CONTENIDO;
	            other.TCONTENIDO = this.TCONTENIDO;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class upestadoStruct implements routines.system.IPersistableRow<upestadoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Estado_="+Estado_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(upestadoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_1Struct implements routines.system.IPersistableRow<next_1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final next_1Struct other = (next_1Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(next_1Struct other) {

		other.ID = this.ID;
	            other.CONTENIDO = this.CONTENIDO;
	            other.TCONTENIDO = this.TCONTENIDO;
	            
	}

	public void copyKeysDataTo(next_1Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
upestadoStruct upestado = new upestadoStruct();
next_1Struct next_1 = new next_1Struct();
row6Struct row6 = new row6Struct();
row2Struct row2 = new row2Struct();
row5Struct row5 = new row5Struct();
outCSVStruct outCSV = new outCSVStruct();





	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"upestado");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "MED.UpdEstadoCargaMasiva" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */





	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tFileInputDelimited_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_1");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
upestadoStruct upestado_tmp = new upestadoStruct();
next_1Struct next_1_tmp = new next_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "select \n	carga.id,\n	anex.contenido,\n	anex.tcontenido\nfrom med_cargasmasivas carga\ninner join med_anexos anex on an"
+"ex.id=carga.anexos_id\nwhere carga.ESTREGISTRO_ID=1 and carga.id= " + context.carga_id+"\nand estado = 'Inicial' ";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row3.ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row3.ID = rs_tOracleInput_3.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row3.CONTENIDO = null;
							} else {
		                          
				Object tmpObj_2_tOracleInput_3 = rs_tOracleInput_3.getObject(2);
				if(tmpObj_2_tOracleInput_3 != null) {
					row3.CONTENIDO = tmpObj_2_tOracleInput_3;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row3.TCONTENIDO = null;
							} else {
	                         		
        	row3.TCONTENIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

upestado = null;
next_1 = null;


// # Output table : 'upestado'
upestado_tmp.Id_ = context.carga_id;
upestado_tmp.Estado_ = "En proceso" ;
upestado = upestado_tmp;

// # Output table : 'next_1'
next_1_tmp.ID = row3.ID ;
next_1_tmp.CONTENIDO = row3.CONTENIDO ;
next_1_tmp.TCONTENIDO = row3.TCONTENIDO ;
next_1 = next_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "upestado"
if(upestado != null) { 



	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"upestado"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
    					if (upestado.Id_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_1.setBigDecimal(1, upestado.Id_);
    					}
    					
			// code for the argument 2 (Estado_) of type 'IN AUTOMAPPING'
    					if (upestado.Estado_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(2, upestado.Estado_);
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */

} // End of branch "upestado"




// Start of branch "next_1"
if(next_1 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_1"
						
						);
					}
					

    
//context.Id = next_1.id;
context.Contenido = ((java.sql.Blob)next_1.CONTENIDO).getBinaryStream();
context.TContenido =  next_1.TCONTENIDO;




    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					


    	            
            globalMap.put("row6.ID", row6.ID);
    	            
            globalMap.put("row6.CONTENIDO", row6.CONTENIDO);
    	            
            globalMap.put("row6.TCONTENIDO", row6.TCONTENIDO);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tFileInputDelimited_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("productosValido", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("caracteristicaValida", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("log_duplicados", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("validacionProductos", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("validacionCaract", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk3", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("duplicados", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outCSV", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tFileInputDelimited_1);
					//Thread.sleep(1000);
				}				
			




	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outCSV");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("TEMP_CONTRATOS");
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("TEMP_CONTRATOS");
        }
                                String tableNameForSearch_tOracleOutput_1= "" + ((String)"TEMP_CONTRATOS") + "";
String dbschemaForSearch_tOracleOutput_1= null;
if(dbschema_tOracleOutput_1== null || dbschema_tOracleOutput_1.trim().length() == 0) {
dbschemaForSearch_tOracleOutput_1= ((String)globalMap.get("username_tOracleConnection_1")).toUpperCase();
} else {
dbschemaForSearch_tOracleOutput_1= dbschema_tOracleOutput_1.toUpperCase();
}

                                java.sql.DatabaseMetaData dbMetaData_tOracleOutput_1 = conn_tOracleOutput_1.getMetaData();
                                if(tableNameForSearch_tOracleOutput_1.indexOf("\"")==-1){
                                    tableNameForSearch_tOracleOutput_1 = tableNameForSearch_tOracleOutput_1.toUpperCase();
                                }else{
                                    tableNameForSearch_tOracleOutput_1 = tableNameForSearch_tOracleOutput_1.replaceAll("\"","");
                                }
                                boolean whetherExist_tOracleOutput_1 = false;
                                try (java.sql.ResultSet rsTable_tOracleOutput_1 = dbMetaData_tOracleOutput_1.getTables(null, dbschemaForSearch_tOracleOutput_1, tableNameForSearch_tOracleOutput_1, new String[]{"TABLE"})) {
                                    if(rsTable_tOracleOutput_1.next()) {
                                        whetherExist_tOracleOutput_1 = true;
                                    }
                                }

                                if(!whetherExist_tOracleOutput_1) {
                                    try (java.sql.Statement stmtCreate_tOracleOutput_1 = conn_tOracleOutput_1.createStatement()) {
                                        stmtCreate_tOracleOutput_1.execute("CREATE TABLE " + tableName_tOracleOutput_1 + "(CONTRATO_ID VARCHAR2(100)  ,USUARIO_ID VARCHAR2(100)  ,ITEM VARCHAR2(300)  ,CODIGO_BARRAS VARCHAR2(300)  ,CODIGO_SSMP VARCHAR2(300)  ,CODIGO_PROVISIONAL VARCHAR2(300)  ,CODIGO_PRODUCTO VARCHAR2(300)  ,VALOR_UNITARIO VARCHAR2(300)  ,IVA VARCHAR2(300)  ,VALOR_SERVSUM VARCHAR2(300)  ,VALOR_IVA_SERVSUM VARCHAR2(300)  ,VALOR_SERVDISP VARCHAR2(300)  ,VALOR_IVA_SERVDISP VARCHAR2(300)  ,OPCION VARCHAR2(300)  ,CARACTERISTICA VARCHAR2(300)  )");
                                    }
                                }
                String insert_tOracleOutput_1 = "INSERT INTO " + tableName_tOracleOutput_1 + " (CONTRATO_ID,USUARIO_ID,ITEM,CODIGO_BARRAS,CODIGO_SSMP,CODIGO_PROVISIONAL,CODIGO_PRODUCTO,VALOR_UNITARIO,IVA,VALOR_SERVSUM,VALOR_IVA_SERVSUM,VALOR_SERVDISP,VALOR_IVA_SERVDISP,OPCION,CARACTERISTICA) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(insert_tOracleOutput_1);
                        resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
outCSVStruct outCSV_tmp = new outCSVStruct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = (java.io.InputStream)context.Contenido;
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited((java.io.InputStream)context.Contenido, "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row2 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row2 = new row2Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row2.ITEM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row2.CODIGO_BARRAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
							row2.CODIGO_OPERADOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
							row2.CODIGO_PROVISIONAL = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row2.VALOR_UNITARIO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
							row2.IVA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
							row2.VALOR_SERVSUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
							row2.VALOR_IVA_SERVSUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 8;
					
							row2.VALOR_SERVDISP = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 9;
					
							row2.VALOR_IVA_SERVDISP = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 10;
					
							row2.OPCION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 11;
					
							row2.CARACTERISTICA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row2 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row2"
if(row2 != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

          row5 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("||");
            ope_tFilterRow_1.matches((row2.ITEM == null? false : row2.ITEM.compareTo("") != 0)
                           , "ITEM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.CODIGO_BARRAS == null? false : row2.CODIGO_BARRAS.compareTo("") != 0)
                           , "CODIGO_BARRAS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.CODIGO_OPERADOR == null? false : row2.CODIGO_OPERADOR.compareTo("") != 0)
                           , "CODIGO_OPERADOR.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.ITEM == null? false : row2.ITEM.compareTo("") != 0)
                           , "ITEM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.CODIGO_PROVISIONAL == null? false : row2.CODIGO_PROVISIONAL.compareTo("") != 0)
                           , "CODIGO_PROVISIONAL.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.VALOR_UNITARIO == null? false : row2.VALOR_UNITARIO.compareTo("") != 0)
                           , "VALOR_UNITARIO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.IVA == null? false : row2.IVA.compareTo("") != 0)
                           , "IVA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.VALOR_SERVSUM == null? false : row2.VALOR_SERVSUM.compareTo("") != 0)
                           , "VALOR_SERVSUM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.VALOR_IVA_SERVSUM == null? false : row2.VALOR_IVA_SERVSUM.compareTo("") != 0)
                           , "VALOR_IVA_SERVSUM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.VALOR_SERVDISP == null? false : row2.VALOR_SERVDISP.compareTo("") != 0)
                           , "VALOR_SERVDISP.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.VALOR_IVA_SERVDISP == null? false : row2.VALOR_IVA_SERVDISP.compareTo("") != 0)
                           , "VALOR_IVA_SERVDISP.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.OPCION == null? false : row2.OPCION.compareTo("") != 0)
                           , "OPCION.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row2.CARACTERISTICA == null? false : row2.CARACTERISTICA.compareTo("") != 0)
                           , "CARACTERISTICA.compareTo(\"\") != 0 failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row5 == null){ 
                row5 = new row5Struct();
              }
               row5.ITEM = row2.ITEM;
               row5.CODIGO_BARRAS = row2.CODIGO_BARRAS;
               row5.CODIGO_OPERADOR = row2.CODIGO_OPERADOR;
               row5.CODIGO_PROVISIONAL = row2.CODIGO_PROVISIONAL;
               row5.VALOR_UNITARIO = row2.VALOR_UNITARIO;
               row5.IVA = row2.IVA;
               row5.VALOR_SERVSUM = row2.VALOR_SERVSUM;
               row5.VALOR_IVA_SERVSUM = row2.VALOR_IVA_SERVSUM;
               row5.VALOR_SERVDISP = row2.VALOR_SERVDISP;
               row5.VALOR_IVA_SERVDISP = row2.VALOR_IVA_SERVDISP;
               row5.OPCION = row2.OPCION;
               row5.CARACTERISTICA = row2.CARACTERISTICA;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

outCSV = null;


// # Output table : 'outCSV'
outCSV_tmp.CONTRATO_ID = context.contrato_id;
outCSV_tmp.USUARIO_ID = context.usuario_id;
outCSV_tmp.ITEM = row5.ITEM ;
outCSV_tmp.CODIGO_BARRAS = Utils.mayusculasSinAcentos(row5.CODIGO_BARRAS);
outCSV_tmp.CODIGO_SSMP = Utils.mayusculasSinAcentos(row5.CODIGO_OPERADOR);
outCSV_tmp.CODIGO_PROVISIONAL = row5.CODIGO_PROVISIONAL ;
outCSV_tmp.CODIGO_PRODUCTO = Utils.mayusculasSinAcentos(row5.CODIGO_OPERADOR);
outCSV_tmp.VALOR_UNITARIO = row5.VALOR_UNITARIO ;
outCSV_tmp.IVA = row5.IVA ;
outCSV_tmp.VALOR_SERVSUM = row5.VALOR_SERVSUM ;
outCSV_tmp.VALOR_IVA_SERVSUM = row5.VALOR_IVA_SERVSUM ;
outCSV_tmp.VALOR_SERVDISP = row5.VALOR_SERVDISP ;
outCSV_tmp.VALOR_IVA_SERVDISP = row5.VALOR_IVA_SERVDISP ;
outCSV_tmp.OPCION = row5.OPCION ;
outCSV_tmp.CARACTERISTICA = Utils.mayusculasSinAcentos(row5.CARACTERISTICA);
outCSV = outCSV_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "outCSV"
if(outCSV != null) { 



	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outCSV"
						
						);
					}
					



        whetherReject_tOracleOutput_1 = false;
                        if(outCSV.CONTRATO_ID == null) {
pstmt_tOracleOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(1, outCSV.CONTRATO_ID);
}

                        if(outCSV.USUARIO_ID == null) {
pstmt_tOracleOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(2, outCSV.USUARIO_ID);
}

                        if(outCSV.ITEM == null) {
pstmt_tOracleOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(3, outCSV.ITEM);
}

                        if(outCSV.CODIGO_BARRAS == null) {
pstmt_tOracleOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(4, outCSV.CODIGO_BARRAS);
}

                        if(outCSV.CODIGO_SSMP == null) {
pstmt_tOracleOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(5, outCSV.CODIGO_SSMP);
}

                        if(outCSV.CODIGO_PROVISIONAL == null) {
pstmt_tOracleOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(6, outCSV.CODIGO_PROVISIONAL);
}

                        if(outCSV.CODIGO_PRODUCTO == null) {
pstmt_tOracleOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(7, outCSV.CODIGO_PRODUCTO);
}

                        if(outCSV.VALOR_UNITARIO == null) {
pstmt_tOracleOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(8, outCSV.VALOR_UNITARIO);
}

                        if(outCSV.IVA == null) {
pstmt_tOracleOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(9, outCSV.IVA);
}

                        if(outCSV.VALOR_SERVSUM == null) {
pstmt_tOracleOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(10, outCSV.VALOR_SERVSUM);
}

                        if(outCSV.VALOR_IVA_SERVSUM == null) {
pstmt_tOracleOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(11, outCSV.VALOR_IVA_SERVSUM);
}

                        if(outCSV.VALOR_SERVDISP == null) {
pstmt_tOracleOutput_1.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(12, outCSV.VALOR_SERVDISP);
}

                        if(outCSV.VALOR_IVA_SERVDISP == null) {
pstmt_tOracleOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(13, outCSV.VALOR_IVA_SERVDISP);
}

                        if(outCSV.OPCION == null) {
pstmt_tOracleOutput_1.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(14, outCSV.OPCION);
}

                        if(outCSV.CARACTERISTICA == null) {
pstmt_tOracleOutput_1.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(15, outCSV.CARACTERISTICA);
}

                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    insertedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }
            if(!whetherReject_tOracleOutput_1) {
            }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */

} // End of branch "outCSV"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "row2"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)((java.io.InputStream)context.Contenido) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outCSV");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tOracleInput_8Process(globalMap);



/**
 * [tOracleOutput_1 end ] stop
 */









						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tFileInputDelimited_1);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "next_1"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"upestado");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */




	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */




	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class log_duplicadosStruct implements routines.system.IPersistableRow<log_duplicadosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(log_duplicadosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return null;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return null;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return null;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return null;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return null;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return null;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return null;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return null;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return null;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return null;
				}
				public Integer OPCIONPrecision(){
				    return null;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return null;
				}
				public Integer CARACTERISTICAPrecision(){
				    return null;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class duplicadosStruct implements routines.system.IPersistableRow<duplicadosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return null;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return null;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return null;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return null;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return null;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return null;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return null;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return null;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return null;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return null;
				}
				public Integer OPCIONPrecision(){
				    return null;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return null;
				}
				public Integer CARACTERISTICAPrecision(){
				    return null;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(duplicadosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return null;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return null;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return null;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return null;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return null;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return null;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return null;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return null;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return null;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return null;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return null;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return null;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return null;
				}
				public Integer OPCIONPrecision(){
				    return null;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return null;
				}
				public Integer CARACTERISTICAPrecision(){
				    return null;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();
duplicadosStruct duplicados = new duplicadosStruct();
row23Struct row23 = new row23Struct();
log_duplicadosStruct log_duplicados = new log_duplicadosStruct();







	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"log_duplicados");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
        dbschema_tOracleOutput_2 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("LOG_CONTRATOS");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("LOG_CONTRATOS");
        }
                                String tableNameForSearch_tOracleOutput_2= "" + ((String)"LOG_CONTRATOS") + "";
String dbschemaForSearch_tOracleOutput_2= null;
if(dbschema_tOracleOutput_2== null || dbschema_tOracleOutput_2.trim().length() == 0) {
dbschemaForSearch_tOracleOutput_2= ((String)globalMap.get("username_tOracleConnection_1")).toUpperCase();
} else {
dbschemaForSearch_tOracleOutput_2= dbschema_tOracleOutput_2.toUpperCase();
}

                                java.sql.DatabaseMetaData dbMetaData_tOracleOutput_2 = conn_tOracleOutput_2.getMetaData();
                                if(tableNameForSearch_tOracleOutput_2.indexOf("\"")==-1){
                                    tableNameForSearch_tOracleOutput_2 = tableNameForSearch_tOracleOutput_2.toUpperCase();
                                }else{
                                    tableNameForSearch_tOracleOutput_2 = tableNameForSearch_tOracleOutput_2.replaceAll("\"","");
                                }
                                boolean whetherExist_tOracleOutput_2 = false;
                                try (java.sql.ResultSet rsTable_tOracleOutput_2 = dbMetaData_tOracleOutput_2.getTables(null, dbschemaForSearch_tOracleOutput_2, tableNameForSearch_tOracleOutput_2, new String[]{"TABLE"})) {
                                    if(rsTable_tOracleOutput_2.next()) {
                                        whetherExist_tOracleOutput_2 = true;
                                    }
                                }

                                if(!whetherExist_tOracleOutput_2) {
                                    try (java.sql.Statement stmtCreate_tOracleOutput_2 = conn_tOracleOutput_2.createStatement()) {
                                        stmtCreate_tOracleOutput_2.execute("CREATE TABLE " + tableName_tOracleOutput_2 + "(Mensaje VARCHAR2(500)  ,Item NUMBER )");
                                    }
                                }
                String insert_tOracleOutput_2 = "INSERT INTO " + tableName_tOracleOutput_2 + " (Mensaje,Item) VALUES (?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(insert_tOracleOutput_2);
                        resourceMap.put("pstmt_tOracleOutput_2", pstmt_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
log_duplicadosStruct log_duplicados_tmp = new log_duplicadosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"duplicados");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
duplicadosStruct duplicados_tmp = new duplicadosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				conn_tOracleInput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_8 = false;
				boolean isConnectionWrapped_tOracleInput_8 = !(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_8 = null;
                if (isConnectionWrapped_tOracleInput_8) {
					unwrappedOraConn_tOracleInput_8 = conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_8 != null) {
                        isTimeZoneNull_tOracleInput_8 = (unwrappedOraConn_tOracleInput_8.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_8 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_8).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_8) {
					java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_8.next()) {
						sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_8 && unwrappedOraConn_tOracleInput_8 != null) {
                        unwrappedOraConn_tOracleInput_8.setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement();

		    String dbquery_tOracleInput_8 = "SELECT \nITEM,\nCODIGO_BARRAS,\nCODIGO_SSMP,\nCODIGO_PROVISIONAL,\nCODIGO_PRODUCTO,\nVALOR_UNITARIO,\nIVA,\nVALOR_SERVS"
+"UM,\nVALOR_IVA_SERVSUM,\nVALOR_SERVDISP,\nVALOR_IVA_SERVDISP,\nOPCION,\nCARACTERISTICA\nFROM TEMP_CONTRATOS \nWHERE (COD"
+"IGO_BARRAS, CODIGO_SSMP,CODIGO_PROVISIONAL,CODIGO_PRODUCTO) IN (\n    SELECT CODIGO_BARRAS, CODIGO_SSMP,CODIGO_PROVISION"
+"AL,CODIGO_PRODUCTO\n    FROM TEMP_CONTRATOS\n    GROUP BY  CODIGO_BARRAS, CODIGO_SSMP,CODIGO_PROVISIONAL,CODIGO_PRODUCTO"
+"\n    HAVING COUNT(*) > 1\n)\n";
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row22.ITEM = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(1) != null) {
						row22.ITEM = rs_tOracleInput_8.getLong(1);
					} else {
				
						row22.ITEM = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row22.CODIGO_BARRAS = null;
							} else {
	                         		
        	row22.CODIGO_BARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 3) {
								row22.CODIGO_SSMP = null;
							} else {
	                         		
        	row22.CODIGO_SSMP = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 4) {
								row22.CODIGO_PROVISIONAL = null;
							} else {
	                         		
        	row22.CODIGO_PROVISIONAL = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 5) {
								row22.VALOR_UNITARIO = null;
							} else {
	                         		
        	row22.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 6) {
								row22.IVA = null;
							} else {
	                         		
        	row22.IVA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 7) {
								row22.VALOR_SERVSUM = null;
							} else {
	                         		
        	row22.VALOR_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 8) {
								row22.VALOR_IVA_SERVSUM = null;
							} else {
	                         		
        	row22.VALOR_IVA_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 9) {
								row22.VALOR_SERVDISP = null;
							} else {
	                         		
        	row22.VALOR_SERVDISP = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 10) {
								row22.OPCION = null;
							} else {
	                         		
        	row22.OPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 11) {
								row22.CARACTERISTICA = null;
							} else {
	                         		
        	row22.CARACTERISTICA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 11, false);
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

duplicados = null;


// # Output table : 'duplicados'
duplicados_tmp.ITEM = row22.ITEM ;
duplicados_tmp.CODIGO_BARRAS = row22.CODIGO_BARRAS ;
duplicados_tmp.CODIGO_SSMP = row22.CODIGO_SSMP ;
duplicados_tmp.CODIGO_PROVISIONAL = row22.CODIGO_PROVISIONAL ;
duplicados_tmp.VALOR_UNITARIO = row22.VALOR_UNITARIO ;
duplicados_tmp.IVA = row22.IVA ;
duplicados_tmp.VALOR_SERVSUM = row22.VALOR_SERVSUM ;
duplicados_tmp.VALOR_IVA_SERVSUM = row22.VALOR_IVA_SERVSUM ;
duplicados_tmp.VALOR_SERVDISP = row22.VALOR_SERVDISP ;
duplicados_tmp.OPCION = row22.OPCION ;
duplicados_tmp.CARACTERISTICA = row22.CARACTERISTICA ;
duplicados = duplicados_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "duplicados"
if(duplicados != null) { 



	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"duplicados"
						
						);
					}
					

    //Code generate according to input schema and output schema
row23.ITEM = duplicados.ITEM;
row23.CODIGO_BARRAS = duplicados.CODIGO_BARRAS;
row23.CODIGO_SSMP = duplicados.CODIGO_SSMP;
row23.CODIGO_PROVISIONAL = duplicados.CODIGO_PROVISIONAL;
row23.VALOR_UNITARIO = duplicados.VALOR_UNITARIO;
row23.IVA = duplicados.IVA;
row23.VALOR_SERVSUM = duplicados.VALOR_SERVSUM;
row23.VALOR_IVA_SERVSUM = duplicados.VALOR_IVA_SERVSUM;
row23.VALOR_SERVDISP = duplicados.VALOR_SERVDISP;
row23.OPCION = duplicados.OPCION;
row23.CARACTERISTICA = duplicados.CARACTERISTICA;

System.out.println("Registros duplicados");
System.out.println(row23.ITEM);
context.ErrorLog +=1;

    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

log_duplicados = null;


// # Output table : 'log_duplicados'
log_duplicados_tmp.Mensaje = "El campo se encuentra duplicado";
log_duplicados_tmp.Item = row23.ITEM;
log_duplicados = log_duplicados_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "log_duplicados"
if(log_duplicados != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"log_duplicados"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(log_duplicados.Mensaje == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(1, log_duplicados.Mensaje);
}

                        if(log_duplicados.Item == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setLong(2, log_duplicados.Item);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "log_duplicados"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */

} // End of branch "duplicados"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());




/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"duplicados");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmt_tOracleOutput_2 != null) {
			
				pstmt_tOracleOutput_2.close();
				resourceMap.remove("pstmt_tOracleOutput_2");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"log_duplicados");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());




/**
 * [tOracleOutput_2 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tOracleInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_2 = null;
                if ((pstmtToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_2")) != null) {
                    pstmtToClose_tOracleOutput_2.close();
                }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long CONTRATO_ID;

				public Long getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return null;
				}
				public Integer CONTRATO_IDPrecision(){
				    return null;
				}
				public String CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public Long USUARIO_ID;

				public Long getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return null;
				}
				public Integer USUARIO_IDPrecision(){
				    return null;
				}
				public String USUARIO_IDDefault(){
				
					return null;
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 0;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 0;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+String.valueOf(CONTRATO_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_CargaProductosxContrato_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement();

		    String dbquery_tOracleInput_9 = "SELECT \nCONTRATO_ID,\nUSUARIO_ID,\nITEM,\nCODIGO_BARRAS,\nCODIGO_SSMP,\nCODIGO_PROVISIONAL,\nCODIGO_PRODUCTO,\nVALOR_U"
+"NITARIO,\nIVA,\nVALOR_SERVSUM,\nVALOR_IVA_SERVSUM,\nVALOR_SERVDISP,\nVALOR_IVA_SERVDISP,\nOPCION,\nCARACTERISTICA\nFROM "
+"TEMP_CONTRATOS \nWHERE (CODIGO_BARRAS, CODIGO_SSMP,CODIGO_PROVISIONAL,CODIGO_PRODUCTO) NOT IN (\n    SELECT CODIGO_BARRA"
+"S, CODIGO_SSMP,CODIGO_PROVISIONAL,CODIGO_PRODUCTO\n    FROM TEMP_CONTRATOS\n    GROUP BY  CODIGO_BARRAS, CODIGO_SSMP,COD"
+"IGO_PROVISIONAL,CODIGO_PRODUCTO\n    HAVING COUNT(*) > 1\n)";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row24.CONTRATO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(1) != null) {
						row24.CONTRATO_ID = rs_tOracleInput_9.getLong(1);
					} else {
				
						row24.CONTRATO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row24.USUARIO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(2) != null) {
						row24.USUARIO_ID = rs_tOracleInput_9.getLong(2);
					} else {
				
						row24.USUARIO_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row24.ITEM = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(3) != null) {
						row24.ITEM = rs_tOracleInput_9.getLong(3);
					} else {
				
						row24.ITEM = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row24.CODIGO_BARRAS = null;
							} else {
	                         		
        	row24.CODIGO_BARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 5) {
								row24.CODIGO_SSMP = null;
							} else {
	                         		
        	row24.CODIGO_SSMP = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 6) {
								row24.CODIGO_PROVISIONAL = null;
							} else {
	                         		
        	row24.CODIGO_PROVISIONAL = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 7) {
								row24.CODIGO_PRODUCTO = null;
							} else {
	                         		
        	row24.CODIGO_PRODUCTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 8) {
								row24.VALOR_UNITARIO = null;
							} else {
	                         		
        	row24.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 9) {
								row24.IVA = null;
							} else {
	                         		
        	row24.IVA = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 10) {
								row24.VALOR_SERVSUM = null;
							} else {
	                         		
        	row24.VALOR_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 11) {
								row24.VALOR_IVA_SERVSUM = null;
							} else {
	                         		
        	row24.VALOR_IVA_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 12) {
								row24.VALOR_SERVDISP = null;
							} else {
	                         		
        	row24.VALOR_SERVDISP = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 13) {
								row24.VALOR_IVA_SERVDISP = null;
							} else {
	                         		
        	row24.VALOR_IVA_SERVDISP = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 14) {
								row24.OPCION = null;
							} else {
	                         		
        	row24.OPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 15) {
								row24.CARACTERISTICA = null;
							} else {
	                         		
        	row24.CARACTERISTICA = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 15, false);
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					



    
		row24Struct oneRow_tHashOutput_1 = new row24Struct();
				
					oneRow_tHashOutput_1.CONTRATO_ID = row24.CONTRATO_ID;
					oneRow_tHashOutput_1.USUARIO_ID = row24.USUARIO_ID;
					oneRow_tHashOutput_1.ITEM = row24.ITEM;
					oneRow_tHashOutput_1.CODIGO_BARRAS = row24.CODIGO_BARRAS;
					oneRow_tHashOutput_1.CODIGO_SSMP = row24.CODIGO_SSMP;
					oneRow_tHashOutput_1.CODIGO_PROVISIONAL = row24.CODIGO_PROVISIONAL;
					oneRow_tHashOutput_1.CODIGO_PRODUCTO = row24.CODIGO_PRODUCTO;
					oneRow_tHashOutput_1.VALOR_UNITARIO = row24.VALOR_UNITARIO;
					oneRow_tHashOutput_1.IVA = row24.IVA;
					oneRow_tHashOutput_1.VALOR_SERVSUM = row24.VALOR_SERVSUM;
					oneRow_tHashOutput_1.VALOR_IVA_SERVSUM = row24.VALOR_IVA_SERVSUM;
					oneRow_tHashOutput_1.VALOR_SERVDISP = row24.VALOR_SERVDISP;
					oneRow_tHashOutput_1.VALOR_IVA_SERVDISP = row24.VALOR_IVA_SERVDISP;
					oneRow_tHashOutput_1.OPCION = row24.OPCION;
					oneRow_tHashOutput_1.CARACTERISTICA = row24.CARACTERISTICA;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());




/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tOracleInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Long CONTRATOS_ID;

				public Long getCONTRATOS_ID () {
					return this.CONTRATOS_ID;
				}

				public Boolean CONTRATOS_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer CONTRATOS_IDLength(){
				    return null;
				}
				public Integer CONTRATOS_IDPrecision(){
				    return null;
				}
				public String CONTRATOS_IDDefault(){
				
					return null;
				
				}
				public String CONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String CONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String CONTRATOS_IDOriginalDbColumnName(){
				
					return "CONTRATOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 300;
				}
				public Integer CODIGOPrecision(){
				    return null;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public Long PRODUCTOS_ID;

				public Long getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return null;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return null;
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATOS_ID = null;
           				} else {
           			    	this.CONTRATOS_ID = dis.readLong();
           				}
					
					this.CODIGO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRODUCTOS_ID = null;
           				} else {
           			    	this.PRODUCTOS_ID = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATOS_ID = null;
           				} else {
           			    	this.CONTRATOS_ID = dis.readLong();
           				}
					
					this.CODIGO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRODUCTOS_ID = null;
           				} else {
           			    	this.PRODUCTOS_ID = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Long
				
						if(this.CONTRATOS_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATOS_ID);
		            	}
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// Long
				
						if(this.PRODUCTOS_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.PRODUCTOS_ID);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Long
				
						if(this.CONTRATOS_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATOS_ID);
		            	}
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// Long
				
						if(this.PRODUCTOS_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.PRODUCTOS_ID);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTRATOS_ID="+String.valueOf(CONTRATOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_CargaProductosxContrato_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement();

		    String dbquery_tOracleInput_11 = "SELECT \nDC.ID,\nDC.CONTRATOS_ID,\nDC.CODIGO,\nDC.PRODUCTOS_ID\nFROM MED_DCONTRATOS DC\nWHERE DC.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row32.ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(1) != null) {
						row32.ID = rs_tOracleInput_11.getBigDecimal(1);
					} else {
				
						row32.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row32.CONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(2) != null) {
						row32.CONTRATOS_ID = rs_tOracleInput_11.getLong(2);
					} else {
				
						row32.CONTRATOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_11 < 3) {
								row32.CODIGO = null;
							} else {
	                         		
        	row32.CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 4) {
								row32.PRODUCTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(4) != null) {
						row32.PRODUCTOS_ID = rs_tOracleInput_11.getLong(4);
					} else {
				
						row32.PRODUCTOS_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					



    
		row32Struct oneRow_tHashOutput_4 = new row32Struct();
				
					oneRow_tHashOutput_4.ID = row32.ID;
					oneRow_tHashOutput_4.CONTRATOS_ID = row32.CONTRATOS_ID;
					oneRow_tHashOutput_4.CODIGO = row32.CODIGO;
					oneRow_tHashOutput_4.PRODUCTOS_ID = row32.PRODUCTOS_ID;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());




/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return 150;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class validacionCaractStruct implements routines.system.IPersistableRow<validacionCaractStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(validacionCaractStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class caracteristicaValidaStruct implements routines.system.IPersistableRow<caracteristicaValidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public BigDecimal CARACTERISTICA_ID;

				public BigDecimal getCARACTERISTICA_ID () {
					return this.CARACTERISTICA_ID;
				}

				public Boolean CARACTERISTICA_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_IDLength(){
				    return null;
				}
				public Integer CARACTERISTICA_IDPrecision(){
				    return null;
				}
				public String CARACTERISTICA_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 500;
				}
				public Integer NOMBREPrecision(){
				    return null;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 100;
				}
				public Integer SIGLAPrecision(){
				    return null;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return null;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.CARACTERISTICA_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.CARACTERISTICA_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE = readString(dis);
					
					this.SIGLA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.CARACTERISTICA_ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.CARACTERISTICA_ID);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// String
				
						writeString(this.SIGLA,dos);
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CARACTERISTICA_ID="+String.valueOf(CARACTERISTICA_ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",ITEM="+String.valueOf(ITEM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(caracteristicaValidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long CONTRATO_ID;

				public Long getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public Long USUARIO_ID;

				public Long getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 0;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return null;
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 0;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 0;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+String.valueOf(CONTRATO_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long CONTRATO_ID;

				public Long getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CONTRATO_IDDefault(){
				
					return null;
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public Long USUARIO_ID;

				public Long getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 0;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return null;
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 0;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 0;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+String.valueOf(CONTRATO_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_7Process(globalMap);

		row20Struct row20 = new row20Struct();
validacionCaractStruct validacionCaract = new validacionCaractStruct();
row25Struct row25 = new row25Struct();
caracteristicaValidaStruct caracteristicaValida = new caracteristicaValidaStruct();






	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
        dbschema_tOracleOutput_4 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("LOG_CONTRATOS");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("LOG_CONTRATOS");
        }
                                String tableNameForSearch_tOracleOutput_4= "" + ((String)"LOG_CONTRATOS") + "";
String dbschemaForSearch_tOracleOutput_4= null;
if(dbschema_tOracleOutput_4== null || dbschema_tOracleOutput_4.trim().length() == 0) {
dbschemaForSearch_tOracleOutput_4= ((String)globalMap.get("username_tOracleConnection_1")).toUpperCase();
} else {
dbschemaForSearch_tOracleOutput_4= dbschema_tOracleOutput_4.toUpperCase();
}

                                java.sql.DatabaseMetaData dbMetaData_tOracleOutput_4 = conn_tOracleOutput_4.getMetaData();
                                if(tableNameForSearch_tOracleOutput_4.indexOf("\"")==-1){
                                    tableNameForSearch_tOracleOutput_4 = tableNameForSearch_tOracleOutput_4.toUpperCase();
                                }else{
                                    tableNameForSearch_tOracleOutput_4 = tableNameForSearch_tOracleOutput_4.replaceAll("\"","");
                                }
                                boolean whetherExist_tOracleOutput_4 = false;
                                try (java.sql.ResultSet rsTable_tOracleOutput_4 = dbMetaData_tOracleOutput_4.getTables(null, dbschemaForSearch_tOracleOutput_4, tableNameForSearch_tOracleOutput_4, new String[]{"TABLE"})) {
                                    if(rsTable_tOracleOutput_4.next()) {
                                        whetherExist_tOracleOutput_4 = true;
                                    }
                                }

                                if(!whetherExist_tOracleOutput_4) {
                                    try (java.sql.Statement stmtCreate_tOracleOutput_4 = conn_tOracleOutput_4.createStatement()) {
                                        stmtCreate_tOracleOutput_4.execute("CREATE TABLE " + tableName_tOracleOutput_4 + "(Mensaje VARCHAR2(500)  ,Item NUMBER(150,0)  )");
                                    }
                                }
                String insert_tOracleOutput_4 = "INSERT INTO " + tableName_tOracleOutput_4 + " (Mensaje,Item) VALUES (?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(insert_tOracleOutput_4);
                        resourceMap.put("pstmt_tOracleOutput_4", pstmt_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"validacionCaract");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"caracteristicaValida");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<caracteristicaValidaStruct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_CargaProductosxContrato_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<caracteristicaValidaStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
					globalMap.get( "tHash_Lookup_row21" ))
					;					
					
	

row21Struct row21HashKey = new row21Struct();
row21Struct row21Default = new row21Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
validacionCaractStruct validacionCaract_tmp = new validacionCaractStruct();
caracteristicaValidaStruct caracteristicaValida_tmp = new caracteristicaValidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_CargaProductosxContrato_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row24Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row24Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row20.CONTRATO_ID = next_tHashInput_1.CONTRATO_ID;
	row20.USUARIO_ID = next_tHashInput_1.USUARIO_ID;
	row20.ITEM = next_tHashInput_1.ITEM;
	row20.CODIGO_BARRAS = next_tHashInput_1.CODIGO_BARRAS;
	row20.CODIGO_SSMP = next_tHashInput_1.CODIGO_SSMP;
	row20.CODIGO_PROVISIONAL = next_tHashInput_1.CODIGO_PROVISIONAL;
	row20.CODIGO_PRODUCTO = next_tHashInput_1.CODIGO_PRODUCTO;
	row20.VALOR_UNITARIO = next_tHashInput_1.VALOR_UNITARIO;
	row20.IVA = next_tHashInput_1.IVA;
	row20.VALOR_SERVSUM = next_tHashInput_1.VALOR_SERVSUM;
	row20.VALOR_IVA_SERVSUM = next_tHashInput_1.VALOR_IVA_SERVSUM;
	row20.VALOR_SERVDISP = next_tHashInput_1.VALOR_SERVDISP;
	row20.VALOR_IVA_SERVDISP = next_tHashInput_1.VALOR_IVA_SERVDISP;
	row20.OPCION = next_tHashInput_1.OPCION;
	row20.CARACTERISTICA = next_tHashInput_1.CARACTERISTICA;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row21Struct row21 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row21" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow21 = false;
       		  	    	
       		  	    	
 							row21Struct row21ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row21HashKey.SIGLA = row20.CARACTERISTICA ;
                        		    		

								
		                        	row21HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row21.lookup( row21HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row21.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_10 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row21Struct fromLookup_row21 = null;
							row21 = row21Default;
										 
							
								 
							
							
								if (tHash_Lookup_row21 !=null && tHash_Lookup_row21.hasNext()) { // G 099
								
							
								
								fromLookup_row21 = tHash_Lookup_row21.next();

							
							
								} // G 099
							
							

							if(fromLookup_row21 != null) {
								row21 = fromLookup_row21;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

caracteristicaValida = null;
validacionCaract = null;

if(!rejectedInnerJoin_tMap_10 ) {

// # Output table : 'caracteristicaValida'
caracteristicaValida_tmp.CARACTERISTICA_ID = row21.ID ;
caracteristicaValida_tmp.NOMBRE = row21.NOMBRE ;
caracteristicaValida_tmp.SIGLA = row21.SIGLA ;
caracteristicaValida_tmp.ITEM = row20.ITEM ;
caracteristicaValida = caracteristicaValida_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'validacionCaract'
// # Filter conditions 
if( rejectedInnerJoin_tMap_10 ) {
validacionCaract_tmp.Mensaje = "No se encuentra parametrizado la caracteristica: ( "+row20.CARACTERISTICA + " ) como tipo costo en el sistema para el ítem "+row20.ITEM.toString() ;
validacionCaract_tmp.Item = row20.ITEM ;
validacionCaract = validacionCaract_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "validacionCaract"
if(validacionCaract != null) { 



	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"validacionCaract"
						
						);
					}
					

    //Code generate according to input schema and output schema
row25.Mensaje = validacionCaract.Mensaje;
row25.Item = validacionCaract.Item;

context.ErrorLog +=1;
    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					



        whetherReject_tOracleOutput_4 = false;
                        if(row25.Mensaje == null) {
pstmt_tOracleOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(1, row25.Mensaje);
}

                        if(row25.Item == null) {
pstmt_tOracleOutput_4.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_4.setLong(2, row25.Item);
}

                try {
                    nb_line_tOracleOutput_4++;
                    int processedCount_tOracleOutput_4 = pstmt_tOracleOutput_4.executeUpdate();
                    insertedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                            System.err.print(e_tOracleOutput_4.getMessage());
                }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */

} // End of branch "validacionCaract"




// Start of branch "caracteristicaValida"
if(caracteristicaValida != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"caracteristicaValida"
						
						);
					}
					



    
		caracteristicaValidaStruct oneRow_tHashOutput_2 = new caracteristicaValidaStruct();
				
					oneRow_tHashOutput_2.CARACTERISTICA_ID = caracteristicaValida.CARACTERISTICA_ID;
					oneRow_tHashOutput_2.NOMBRE = caracteristicaValida.NOMBRE;
					oneRow_tHashOutput_2.SIGLA = caracteristicaValida.SIGLA;
					oneRow_tHashOutput_2.ITEM = caracteristicaValida.ITEM;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "caracteristicaValida"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaProductosxContrato_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row21 != null) {
						tHash_Lookup_row21.endGet();
					}
					globalMap.remove( "tHash_Lookup_row21" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"validacionCaract");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmt_tOracleOutput_4 != null) {
			
				pstmt_tOracleOutput_4.close();
				resourceMap.remove("pstmt_tOracleOutput_4");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());




/**
 * [tOracleOutput_4 end ] stop
 */







	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"caracteristicaValida");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row21"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_4 = null;
                if ((pstmtToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_4")) != null) {
                    pstmtToClose_tOracleOutput_4.close();
                }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */







	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class validacionProductosStruct implements routines.system.IPersistableRow<validacionProductosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(validacionProductosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class productosValidoStruct implements routines.system.IPersistableRow<productosValidoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public BigDecimal PRODUCTO_ID;

				public BigDecimal getPRODUCTO_ID () {
					return this.PRODUCTO_ID;
				}

				public Boolean PRODUCTO_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTO_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTO_IDLength(){
				    return null;
				}
				public Integer PRODUCTO_IDPrecision(){
				    return null;
				}
				public String PRODUCTO_IDDefault(){
				
					return null;
				
				}
				public String PRODUCTO_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTO_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTO_IDOriginalDbColumnName(){
				
					return "PRODUCTO_ID";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 20;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return null;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 400;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return null;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return null;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.PRODUCTO_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.PRODUCTO_ID = (BigDecimal) dis.readObject();
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTO_ID);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTO_ID);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRODUCTO_ID="+String.valueOf(PRODUCTO_ID));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",ITEM="+String.valueOf(ITEM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(productosValidoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long CONTRATO_ID;

				public Long getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CONTRATO_IDDefault(){
				
					return "";
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public Long USUARIO_ID;

				public Long getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 0;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return "";
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return "";
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 0;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 0;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+String.valueOf(CONTRATO_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_2Struct implements routines.system.IPersistableRow<after_tHashInput_2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long CONTRATO_ID;

				public Long getCONTRATO_ID () {
					return this.CONTRATO_ID;
				}

				public Boolean CONTRATO_IDIsNullable(){
				    return true;
				}
				public Boolean CONTRATO_IDIsKey(){
				    return false;
				}
				public Integer CONTRATO_IDLength(){
				    return 0;
				}
				public Integer CONTRATO_IDPrecision(){
				    return 0;
				}
				public String CONTRATO_IDDefault(){
				
					return "";
				
				}
				public String CONTRATO_IDComment(){
				
				    return "";
				
				}
				public String CONTRATO_IDPattern(){
				
					return "";
				
				}
				public String CONTRATO_IDOriginalDbColumnName(){
				
					return "CONTRATO_ID";
				
				}

				
			    public Long USUARIO_ID;

				public Long getUSUARIO_ID () {
					return this.USUARIO_ID;
				}

				public Boolean USUARIO_IDIsNullable(){
				    return true;
				}
				public Boolean USUARIO_IDIsKey(){
				    return false;
				}
				public Integer USUARIO_IDLength(){
				    return 0;
				}
				public Integer USUARIO_IDPrecision(){
				    return 0;
				}
				public String USUARIO_IDDefault(){
				
					return "";
				
				}
				public String USUARIO_IDComment(){
				
				    return "";
				
				}
				public String USUARIO_IDPattern(){
				
					return "";
				
				}
				public String USUARIO_IDOriginalDbColumnName(){
				
					return "USUARIO_ID";
				
				}

				
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return "";
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 0;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 0;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 0;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 0;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 0;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 0;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 0;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CONTRATO_ID = null;
           				} else {
           			    	this.CONTRATO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.USUARIO_ID = null;
           				} else {
           			    	this.USUARIO_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.CONTRATO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CONTRATO_ID);
		            	}
					
					// Long
				
						if(this.USUARIO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.USUARIO_ID);
		            	}
					
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CONTRATO_ID="+String.valueOf(CONTRATO_ID));
		sb.append(",USUARIO_ID="+String.valueOf(USUARIO_ID));
		sb.append(",ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_6Process(globalMap);

		row26Struct row26 = new row26Struct();
validacionProductosStruct validacionProductos = new validacionProductosStruct();
row28Struct row28 = new row28Struct();
productosValidoStruct productosValido = new productosValidoStruct();






	
	/**
	 * [tOracleOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_5", false);
		start_Hash.put("tOracleOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tOracleOutput_5 = 0;
		






    
    int nb_line_tOracleOutput_5 = 0;
    int nb_line_update_tOracleOutput_5 = 0;
    int nb_line_inserted_tOracleOutput_5 = 0;
    int nb_line_deleted_tOracleOutput_5 = 0;
    int nb_line_rejected_tOracleOutput_5 = 0;

    int tmp_batchUpdateCount_tOracleOutput_5 = 0;

    int deletedCount_tOracleOutput_5=0;
    int updatedCount_tOracleOutput_5=0;
    int insertedCount_tOracleOutput_5=0;
    int rowsToCommitCount_tOracleOutput_5=0;
    int rejectedCount_tOracleOutput_5=0;

    boolean whetherReject_tOracleOutput_5 = false;

    java.sql.Connection conn_tOracleOutput_5 = null;

    //optional table
    String dbschema_tOracleOutput_5 = null;
    String tableName_tOracleOutput_5 = null;
        dbschema_tOracleOutput_5 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_5=0;

        if(dbschema_tOracleOutput_5 == null || dbschema_tOracleOutput_5.trim().length() == 0) {
            tableName_tOracleOutput_5 = ("LOG_CONTRATOS");
        } else {
            tableName_tOracleOutput_5 = dbschema_tOracleOutput_5 + "." + ("LOG_CONTRATOS");
        }
                String insert_tOracleOutput_5 = "INSERT INTO " + tableName_tOracleOutput_5 + " (Mensaje,Item) VALUES (?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(insert_tOracleOutput_5);
                        resourceMap.put("pstmt_tOracleOutput_5", pstmt_tOracleOutput_5);





 



/**
 * [tOracleOutput_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"validacionProductos");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"productosValido");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<productosValidoStruct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_CargaProductosxContrato_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<productosValidoStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
					globalMap.get( "tHash_Lookup_row27" ))
					;					
					
	

row27Struct row27HashKey = new row27Struct();
row27Struct row27Default = new row27Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
validacionProductosStruct validacionProductos_tmp = new validacionProductosStruct();
productosValidoStruct productosValido_tmp = new productosValidoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_CargaProductosxContrato_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row24Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row24Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row26.CONTRATO_ID = next_tHashInput_2.CONTRATO_ID;
	row26.USUARIO_ID = next_tHashInput_2.USUARIO_ID;
	row26.ITEM = next_tHashInput_2.ITEM;
	row26.CODIGO_BARRAS = next_tHashInput_2.CODIGO_BARRAS;
	row26.CODIGO_SSMP = next_tHashInput_2.CODIGO_SSMP;
	row26.CODIGO_PROVISIONAL = next_tHashInput_2.CODIGO_PROVISIONAL;
	row26.CODIGO_PRODUCTO = next_tHashInput_2.CODIGO_PRODUCTO;
	row26.VALOR_UNITARIO = next_tHashInput_2.VALOR_UNITARIO;
	row26.IVA = next_tHashInput_2.IVA;
	row26.VALOR_SERVSUM = next_tHashInput_2.VALOR_SERVSUM;
	row26.VALOR_IVA_SERVSUM = next_tHashInput_2.VALOR_IVA_SERVSUM;
	row26.VALOR_SERVDISP = next_tHashInput_2.VALOR_SERVDISP;
	row26.VALOR_IVA_SERVDISP = next_tHashInput_2.VALOR_IVA_SERVDISP;
	row26.OPCION = next_tHashInput_2.OPCION;
	row26.CARACTERISTICA = next_tHashInput_2.CARACTERISTICA;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
						row27Struct row27 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row27" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow27 = false;
       		  	    	
       		  	    	
 							row27Struct row27ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_13) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_13 = false;
								
                        		    		    row27HashKey.CODBARRAS = row26.CODIGO_BARRAS ;
                        		    		

								
		                        	row27HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row27.lookup( row27HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row27.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_13 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row27Struct fromLookup_row27 = null;
							row27 = row27Default;
										 
							
								 
							
							
								if (tHash_Lookup_row27 !=null && tHash_Lookup_row27.hasNext()) { // G 099
								
							
								
								fromLookup_row27 = tHash_Lookup_row27.next();

							
							
								} // G 099
							
							

							if(fromLookup_row27 != null) {
								row27 = fromLookup_row27;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

productosValido = null;
validacionProductos = null;

if(!rejectedInnerJoin_tMap_13 ) {

// # Output table : 'productosValido'
productosValido_tmp.PRODUCTO_ID = row27.ID ;
productosValido_tmp.CODIGO_BARRAS = row27.CODBARRAS ;
productosValido_tmp.CODIGO_SSMP = row27.CODSSMP ;
productosValido_tmp.ITEM = row26.ITEM ;
productosValido = productosValido_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'validacionProductos'
// # Filter conditions 
if( rejectedInnerJoin_tMap_13 ) {
validacionProductos_tmp.Mensaje = "El codigo de barras: "+row26.CODIGO_BARRAS+ " no se encuentra relacionado para un medicamento por acuerdo para el ítem "+row26.ITEM+"" ;
validacionProductos_tmp.Item = row26.ITEM ;
validacionProductos = validacionProductos_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "validacionProductos"
if(validacionProductos != null) { 



	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"validacionProductos"
						
						);
					}
					

    //Code generate according to input schema and output schema
row28.Mensaje = validacionProductos.Mensaje;
row28.Item = validacionProductos.Item;


context.ErrorLog +=1;
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					



        whetherReject_tOracleOutput_5 = false;
                        if(row28.Mensaje == null) {
pstmt_tOracleOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(1, row28.Mensaje);
}

                        if(row28.Item == null) {
pstmt_tOracleOutput_5.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_5.setLong(2, row28.Item);
}

                try {
                    nb_line_tOracleOutput_5++;
                    int processedCount_tOracleOutput_5 = pstmt_tOracleOutput_5.executeUpdate();
                    insertedCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    rowsToCommitCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                } catch(java.lang.Exception e_tOracleOutput_5) {
globalMap.put("tOracleOutput_5_ERROR_MESSAGE",e_tOracleOutput_5.getMessage());
                    whetherReject_tOracleOutput_5 = true;
                            System.err.print(e_tOracleOutput_5.getMessage());
                }

 


	tos_count_tOracleOutput_5++;

/**
 * [tOracleOutput_5 main ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */

} // End of branch "validacionProductos"




// Start of branch "productosValido"
if(productosValido != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"productosValido"
						
						);
					}
					



    
		productosValidoStruct oneRow_tHashOutput_3 = new productosValidoStruct();
				
					oneRow_tHashOutput_3.PRODUCTO_ID = productosValido.PRODUCTO_ID;
					oneRow_tHashOutput_3.CODIGO_BARRAS = productosValido.CODIGO_BARRAS;
					oneRow_tHashOutput_3.CODIGO_SSMP = productosValido.CODIGO_SSMP;
					oneRow_tHashOutput_3.ITEM = productosValido.ITEM;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "productosValido"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaProductosxContrato_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row27 != null) {
						tHash_Lookup_row27.endGet();
					}
					globalMap.remove( "tHash_Lookup_row27" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"validacionProductos");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tOracleOutput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
	



	
        if(pstmt_tOracleOutput_5 != null) {
			
				pstmt_tOracleOutput_5.close();
				resourceMap.remove("pstmt_tOracleOutput_5");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_5", true);

	
	nb_line_deleted_tOracleOutput_5=nb_line_deleted_tOracleOutput_5+ deletedCount_tOracleOutput_5;
	nb_line_update_tOracleOutput_5=nb_line_update_tOracleOutput_5 + updatedCount_tOracleOutput_5;
	nb_line_inserted_tOracleOutput_5=nb_line_inserted_tOracleOutput_5 + insertedCount_tOracleOutput_5;
	nb_line_rejected_tOracleOutput_5=nb_line_rejected_tOracleOutput_5 + rejectedCount_tOracleOutput_5;
	
        globalMap.put("tOracleOutput_5_NB_LINE",nb_line_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_UPDATED",nb_line_update_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_5);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_5", true);
end_Hash.put("tOracleOutput_5", System.currentTimeMillis());




/**
 * [tOracleOutput_5 end ] stop
 */







	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"productosValido");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_13"
					     			globalMap.remove("tHash_Lookup_row27"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tOracleOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_5 = null;
                if ((pstmtToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_5")) != null) {
                    pstmtToClose_tOracleOutput_5.close();
                }
    }
 



/**
 * [tOracleOutput_5 finally ] stop
 */







	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class yaRegistradosStruct implements routines.system.IPersistableRow<yaRegistradosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(yaRegistradosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Contrato_Id_;

				public String getContrato_Id_ () {
					return this.Contrato_Id_;
				}

				public Boolean Contrato_Id_IsNullable(){
				    return true;
				}
				public Boolean Contrato_Id_IsKey(){
				    return false;
				}
				public Integer Contrato_Id_Length(){
				    return null;
				}
				public Integer Contrato_Id_Precision(){
				    return null;
				}
				public String Contrato_Id_Default(){
				
					return null;
				
				}
				public String Contrato_Id_Comment(){
				
				    return "";
				
				}
				public String Contrato_Id_Pattern(){
				
					return "";
				
				}
				public String Contrato_Id_OriginalDbColumnName(){
				
					return "Contrato_Id_";
				
				}

				
			    public String User_Id_;

				public String getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public String Producto_Id_;

				public String getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String Id_;

				public String getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Insert;

				public String getInsert () {
					return this.Insert;
				}

				public Boolean InsertIsNullable(){
				    return true;
				}
				public Boolean InsertIsKey(){
				    return false;
				}
				public Integer InsertLength(){
				    return null;
				}
				public Integer InsertPrecision(){
				    return null;
				}
				public String InsertDefault(){
				
					return null;
				
				}
				public String InsertComment(){
				
				    return "";
				
				}
				public String InsertPattern(){
				
					return "";
				
				}
				public String InsertOriginalDbColumnName(){
				
					return "Insert";
				
				}

				
			    public String Message;

				public String getMessage () {
					return this.Message;
				}

				public Boolean MessageIsNullable(){
				    return true;
				}
				public Boolean MessageIsKey(){
				    return false;
				}
				public Integer MessageLength(){
				    return null;
				}
				public Integer MessagePrecision(){
				    return null;
				}
				public String MessageDefault(){
				
					return null;
				
				}
				public String MessageComment(){
				
				    return "";
				
				}
				public String MessagePattern(){
				
					return "";
				
				}
				public String MessageOriginalDbColumnName(){
				
					return "Message";
				
				}

				
			    public String Item_;

				public String getItem_ () {
					return this.Item_;
				}

				public Boolean Item_IsNullable(){
				    return true;
				}
				public Boolean Item_IsKey(){
				    return false;
				}
				public Integer Item_Length(){
				    return 0;
				}
				public Integer Item_Precision(){
				    return 0;
				}
				public String Item_Default(){
				
					return null;
				
				}
				public String Item_Comment(){
				
				    return "";
				
				}
				public String Item_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Item_OriginalDbColumnName(){
				
					return "Item_";
				
				}

				
			    public String CodProvisional_;

				public String getCodProvisional_ () {
					return this.CodProvisional_;
				}

				public Boolean CodProvisional_IsNullable(){
				    return true;
				}
				public Boolean CodProvisional_IsKey(){
				    return false;
				}
				public Integer CodProvisional_Length(){
				    return 0;
				}
				public Integer CodProvisional_Precision(){
				    return 0;
				}
				public String CodProvisional_Default(){
				
					return null;
				
				}
				public String CodProvisional_Comment(){
				
				    return "";
				
				}
				public String CodProvisional_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodProvisional_OriginalDbColumnName(){
				
					return "CodProvisional_";
				
				}

				
			    public String Codigo_;

				public String getCodigo_ () {
					return this.Codigo_;
				}

				public Boolean Codigo_IsNullable(){
				    return true;
				}
				public Boolean Codigo_IsKey(){
				    return false;
				}
				public Integer Codigo_Length(){
				    return 0;
				}
				public Integer Codigo_Precision(){
				    return 0;
				}
				public String Codigo_Default(){
				
					return null;
				
				}
				public String Codigo_Comment(){
				
				    return "";
				
				}
				public String Codigo_Pattern(){
				
					return "";
				
				}
				public String Codigo_OriginalDbColumnName(){
				
					return "Codigo_";
				
				}

				
			    public String Precio_;

				public String getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return 0;
				}
				public Integer Precio_Precision(){
				    return 0;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public String Porcentaje_Iva_;

				public String getPorcentaje_Iva_ () {
					return this.Porcentaje_Iva_;
				}

				public Boolean Porcentaje_Iva_IsNullable(){
				    return true;
				}
				public Boolean Porcentaje_Iva_IsKey(){
				    return false;
				}
				public Integer Porcentaje_Iva_Length(){
				    return 0;
				}
				public Integer Porcentaje_Iva_Precision(){
				    return 0;
				}
				public String Porcentaje_Iva_Default(){
				
					return null;
				
				}
				public String Porcentaje_Iva_Comment(){
				
				    return "";
				
				}
				public String Porcentaje_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Porcentaje_Iva_OriginalDbColumnName(){
				
					return "Porcentaje_Iva_";
				
				}

				
			    public String Opcion_;

				public String getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String Caracteristica_Id_;

				public String getCaracteristica_Id_ () {
					return this.Caracteristica_Id_;
				}

				public Boolean Caracteristica_Id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_Id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_Id_Length(){
				    return null;
				}
				public Integer Caracteristica_Id_Precision(){
				    return null;
				}
				public String Caracteristica_Id_Default(){
				
					return null;
				
				}
				public String Caracteristica_Id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_Id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_Id_OriginalDbColumnName(){
				
					return "Caracteristica_Id_";
				
				}

				
			    public String VSuministro_;

				public String getVSuministro_ () {
					return this.VSuministro_;
				}

				public Boolean VSuministro_IsNullable(){
				    return true;
				}
				public Boolean VSuministro_IsKey(){
				    return false;
				}
				public Integer VSuministro_Length(){
				    return null;
				}
				public Integer VSuministro_Precision(){
				    return null;
				}
				public String VSuministro_Default(){
				
					return null;
				
				}
				public String VSuministro_Comment(){
				
				    return "";
				
				}
				public String VSuministro_Pattern(){
				
					return "";
				
				}
				public String VSuministro_OriginalDbColumnName(){
				
					return "VSuministro_";
				
				}

				
			    public String IvaSuministro_;

				public String getIvaSuministro_ () {
					return this.IvaSuministro_;
				}

				public Boolean IvaSuministro_IsNullable(){
				    return true;
				}
				public Boolean IvaSuministro_IsKey(){
				    return false;
				}
				public Integer IvaSuministro_Length(){
				    return null;
				}
				public Integer IvaSuministro_Precision(){
				    return null;
				}
				public String IvaSuministro_Default(){
				
					return null;
				
				}
				public String IvaSuministro_Comment(){
				
				    return "";
				
				}
				public String IvaSuministro_Pattern(){
				
					return "";
				
				}
				public String IvaSuministro_OriginalDbColumnName(){
				
					return "IvaSuministro_";
				
				}

				
			    public String VDispensacion_;

				public String getVDispensacion_ () {
					return this.VDispensacion_;
				}

				public Boolean VDispensacion_IsNullable(){
				    return true;
				}
				public Boolean VDispensacion_IsKey(){
				    return false;
				}
				public Integer VDispensacion_Length(){
				    return null;
				}
				public Integer VDispensacion_Precision(){
				    return null;
				}
				public String VDispensacion_Default(){
				
					return null;
				
				}
				public String VDispensacion_Comment(){
				
				    return "";
				
				}
				public String VDispensacion_Pattern(){
				
					return "";
				
				}
				public String VDispensacion_OriginalDbColumnName(){
				
					return "VDispensacion_";
				
				}

				
			    public String IvaDispensacion_;

				public String getIvaDispensacion_ () {
					return this.IvaDispensacion_;
				}

				public Boolean IvaDispensacion_IsNullable(){
				    return true;
				}
				public Boolean IvaDispensacion_IsKey(){
				    return false;
				}
				public Integer IvaDispensacion_Length(){
				    return null;
				}
				public Integer IvaDispensacion_Precision(){
				    return null;
				}
				public String IvaDispensacion_Default(){
				
					return null;
				
				}
				public String IvaDispensacion_Comment(){
				
				    return "";
				
				}
				public String IvaDispensacion_Pattern(){
				
					return "";
				
				}
				public String IvaDispensacion_OriginalDbColumnName(){
				
					return "IvaDispensacion_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Contrato_Id_="+Contrato_Id_);
		sb.append(",User_Id_="+User_Id_);
		sb.append(",Producto_Id_="+Producto_Id_);
		sb.append(",Id_="+Id_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Estado_="+Estado_);
		sb.append(",Insert="+Insert);
		sb.append(",Message="+Message);
		sb.append(",Item_="+Item_);
		sb.append(",CodProvisional_="+CodProvisional_);
		sb.append(",Codigo_="+Codigo_);
		sb.append(",Precio_="+Precio_);
		sb.append(",Porcentaje_Iva_="+Porcentaje_Iva_);
		sb.append(",Opcion_="+Opcion_);
		sb.append(",Caracteristica_Id_="+Caracteristica_Id_);
		sb.append(",VSuministro_="+VSuministro_);
		sb.append(",IvaSuministro_="+IvaSuministro_);
		sb.append(",VDispensacion_="+VDispensacion_);
		sb.append(",IvaDispensacion_="+IvaDispensacion_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Contrato_Id_;

				public String getContrato_Id_ () {
					return this.Contrato_Id_;
				}

				public Boolean Contrato_Id_IsNullable(){
				    return true;
				}
				public Boolean Contrato_Id_IsKey(){
				    return false;
				}
				public Integer Contrato_Id_Length(){
				    return null;
				}
				public Integer Contrato_Id_Precision(){
				    return null;
				}
				public String Contrato_Id_Default(){
				
					return null;
				
				}
				public String Contrato_Id_Comment(){
				
				    return "";
				
				}
				public String Contrato_Id_Pattern(){
				
					return "";
				
				}
				public String Contrato_Id_OriginalDbColumnName(){
				
					return "Contrato_Id_";
				
				}

				
			    public String User_Id_;

				public String getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public String Producto_Id_;

				public String getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String Id_;

				public String getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Insert;

				public String getInsert () {
					return this.Insert;
				}

				public Boolean InsertIsNullable(){
				    return true;
				}
				public Boolean InsertIsKey(){
				    return false;
				}
				public Integer InsertLength(){
				    return null;
				}
				public Integer InsertPrecision(){
				    return null;
				}
				public String InsertDefault(){
				
					return null;
				
				}
				public String InsertComment(){
				
				    return "";
				
				}
				public String InsertPattern(){
				
					return "";
				
				}
				public String InsertOriginalDbColumnName(){
				
					return "Insert";
				
				}

				
			    public String Message;

				public String getMessage () {
					return this.Message;
				}

				public Boolean MessageIsNullable(){
				    return true;
				}
				public Boolean MessageIsKey(){
				    return false;
				}
				public Integer MessageLength(){
				    return null;
				}
				public Integer MessagePrecision(){
				    return null;
				}
				public String MessageDefault(){
				
					return null;
				
				}
				public String MessageComment(){
				
				    return "";
				
				}
				public String MessagePattern(){
				
					return "";
				
				}
				public String MessageOriginalDbColumnName(){
				
					return "Message";
				
				}

				
			    public String Item_;

				public String getItem_ () {
					return this.Item_;
				}

				public Boolean Item_IsNullable(){
				    return true;
				}
				public Boolean Item_IsKey(){
				    return false;
				}
				public Integer Item_Length(){
				    return 0;
				}
				public Integer Item_Precision(){
				    return 0;
				}
				public String Item_Default(){
				
					return null;
				
				}
				public String Item_Comment(){
				
				    return "";
				
				}
				public String Item_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Item_OriginalDbColumnName(){
				
					return "Item_";
				
				}

				
			    public String CodProvisional_;

				public String getCodProvisional_ () {
					return this.CodProvisional_;
				}

				public Boolean CodProvisional_IsNullable(){
				    return true;
				}
				public Boolean CodProvisional_IsKey(){
				    return false;
				}
				public Integer CodProvisional_Length(){
				    return 0;
				}
				public Integer CodProvisional_Precision(){
				    return 0;
				}
				public String CodProvisional_Default(){
				
					return null;
				
				}
				public String CodProvisional_Comment(){
				
				    return "";
				
				}
				public String CodProvisional_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodProvisional_OriginalDbColumnName(){
				
					return "CodProvisional_";
				
				}

				
			    public String Codigo_;

				public String getCodigo_ () {
					return this.Codigo_;
				}

				public Boolean Codigo_IsNullable(){
				    return true;
				}
				public Boolean Codigo_IsKey(){
				    return false;
				}
				public Integer Codigo_Length(){
				    return 0;
				}
				public Integer Codigo_Precision(){
				    return 0;
				}
				public String Codigo_Default(){
				
					return null;
				
				}
				public String Codigo_Comment(){
				
				    return "";
				
				}
				public String Codigo_Pattern(){
				
					return "";
				
				}
				public String Codigo_OriginalDbColumnName(){
				
					return "Codigo_";
				
				}

				
			    public String Precio_;

				public String getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return 0;
				}
				public Integer Precio_Precision(){
				    return 0;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public String Porcentaje_Iva_;

				public String getPorcentaje_Iva_ () {
					return this.Porcentaje_Iva_;
				}

				public Boolean Porcentaje_Iva_IsNullable(){
				    return true;
				}
				public Boolean Porcentaje_Iva_IsKey(){
				    return false;
				}
				public Integer Porcentaje_Iva_Length(){
				    return 0;
				}
				public Integer Porcentaje_Iva_Precision(){
				    return 0;
				}
				public String Porcentaje_Iva_Default(){
				
					return null;
				
				}
				public String Porcentaje_Iva_Comment(){
				
				    return "";
				
				}
				public String Porcentaje_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Porcentaje_Iva_OriginalDbColumnName(){
				
					return "Porcentaje_Iva_";
				
				}

				
			    public String Opcion_;

				public String getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String Caracteristica_Id_;

				public String getCaracteristica_Id_ () {
					return this.Caracteristica_Id_;
				}

				public Boolean Caracteristica_Id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_Id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_Id_Length(){
				    return null;
				}
				public Integer Caracteristica_Id_Precision(){
				    return null;
				}
				public String Caracteristica_Id_Default(){
				
					return null;
				
				}
				public String Caracteristica_Id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_Id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_Id_OriginalDbColumnName(){
				
					return "Caracteristica_Id_";
				
				}

				
			    public String VSuministro_;

				public String getVSuministro_ () {
					return this.VSuministro_;
				}

				public Boolean VSuministro_IsNullable(){
				    return true;
				}
				public Boolean VSuministro_IsKey(){
				    return false;
				}
				public Integer VSuministro_Length(){
				    return null;
				}
				public Integer VSuministro_Precision(){
				    return null;
				}
				public String VSuministro_Default(){
				
					return null;
				
				}
				public String VSuministro_Comment(){
				
				    return "";
				
				}
				public String VSuministro_Pattern(){
				
					return "";
				
				}
				public String VSuministro_OriginalDbColumnName(){
				
					return "VSuministro_";
				
				}

				
			    public String IvaSuministro_;

				public String getIvaSuministro_ () {
					return this.IvaSuministro_;
				}

				public Boolean IvaSuministro_IsNullable(){
				    return true;
				}
				public Boolean IvaSuministro_IsKey(){
				    return false;
				}
				public Integer IvaSuministro_Length(){
				    return null;
				}
				public Integer IvaSuministro_Precision(){
				    return null;
				}
				public String IvaSuministro_Default(){
				
					return null;
				
				}
				public String IvaSuministro_Comment(){
				
				    return "";
				
				}
				public String IvaSuministro_Pattern(){
				
					return "";
				
				}
				public String IvaSuministro_OriginalDbColumnName(){
				
					return "IvaSuministro_";
				
				}

				
			    public String VDispensacion_;

				public String getVDispensacion_ () {
					return this.VDispensacion_;
				}

				public Boolean VDispensacion_IsNullable(){
				    return true;
				}
				public Boolean VDispensacion_IsKey(){
				    return false;
				}
				public Integer VDispensacion_Length(){
				    return null;
				}
				public Integer VDispensacion_Precision(){
				    return null;
				}
				public String VDispensacion_Default(){
				
					return null;
				
				}
				public String VDispensacion_Comment(){
				
				    return "";
				
				}
				public String VDispensacion_Pattern(){
				
					return "";
				
				}
				public String VDispensacion_OriginalDbColumnName(){
				
					return "VDispensacion_";
				
				}

				
			    public String IvaDispensacion_;

				public String getIvaDispensacion_ () {
					return this.IvaDispensacion_;
				}

				public Boolean IvaDispensacion_IsNullable(){
				    return true;
				}
				public Boolean IvaDispensacion_IsKey(){
				    return false;
				}
				public Integer IvaDispensacion_Length(){
				    return null;
				}
				public Integer IvaDispensacion_Precision(){
				    return null;
				}
				public String IvaDispensacion_Default(){
				
					return null;
				
				}
				public String IvaDispensacion_Comment(){
				
				    return "";
				
				}
				public String IvaDispensacion_Pattern(){
				
					return "";
				
				}
				public String IvaDispensacion_OriginalDbColumnName(){
				
					return "IvaDispensacion_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Contrato_Id_="+Contrato_Id_);
		sb.append(",User_Id_="+User_Id_);
		sb.append(",Producto_Id_="+Producto_Id_);
		sb.append(",Id_="+Id_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Estado_="+Estado_);
		sb.append(",Insert="+Insert);
		sb.append(",Message="+Message);
		sb.append(",Item_="+Item_);
		sb.append(",CodProvisional_="+CodProvisional_);
		sb.append(",Codigo_="+Codigo_);
		sb.append(",Precio_="+Precio_);
		sb.append(",Porcentaje_Iva_="+Porcentaje_Iva_);
		sb.append(",Opcion_="+Opcion_);
		sb.append(",Caracteristica_Id_="+Caracteristica_Id_);
		sb.append(",VSuministro_="+VSuministro_);
		sb.append(",IvaSuministro_="+IvaSuministro_);
		sb.append(",VDispensacion_="+VDispensacion_);
		sb.append(",IvaDispensacion_="+IvaDispensacion_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfnext_4_0Struct implements routines.system.IPersistableRow<copyOfnext_4_0Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Contrato_Id_;

				public String getContrato_Id_ () {
					return this.Contrato_Id_;
				}

				public Boolean Contrato_Id_IsNullable(){
				    return true;
				}
				public Boolean Contrato_Id_IsKey(){
				    return false;
				}
				public Integer Contrato_Id_Length(){
				    return null;
				}
				public Integer Contrato_Id_Precision(){
				    return null;
				}
				public String Contrato_Id_Default(){
				
					return null;
				
				}
				public String Contrato_Id_Comment(){
				
				    return "";
				
				}
				public String Contrato_Id_Pattern(){
				
					return "";
				
				}
				public String Contrato_Id_OriginalDbColumnName(){
				
					return "Contrato_Id_";
				
				}

				
			    public String User_Id_;

				public String getUser_Id_ () {
					return this.User_Id_;
				}

				public Boolean User_Id_IsNullable(){
				    return true;
				}
				public Boolean User_Id_IsKey(){
				    return false;
				}
				public Integer User_Id_Length(){
				    return null;
				}
				public Integer User_Id_Precision(){
				    return null;
				}
				public String User_Id_Default(){
				
					return null;
				
				}
				public String User_Id_Comment(){
				
				    return "";
				
				}
				public String User_Id_Pattern(){
				
					return "";
				
				}
				public String User_Id_OriginalDbColumnName(){
				
					return "User_Id_";
				
				}

				
			    public String Producto_Id_;

				public String getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String Id_;

				public String getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Insert;

				public String getInsert () {
					return this.Insert;
				}

				public Boolean InsertIsNullable(){
				    return true;
				}
				public Boolean InsertIsKey(){
				    return false;
				}
				public Integer InsertLength(){
				    return null;
				}
				public Integer InsertPrecision(){
				    return null;
				}
				public String InsertDefault(){
				
					return null;
				
				}
				public String InsertComment(){
				
				    return "";
				
				}
				public String InsertPattern(){
				
					return "";
				
				}
				public String InsertOriginalDbColumnName(){
				
					return "Insert";
				
				}

				
			    public String Message;

				public String getMessage () {
					return this.Message;
				}

				public Boolean MessageIsNullable(){
				    return true;
				}
				public Boolean MessageIsKey(){
				    return false;
				}
				public Integer MessageLength(){
				    return null;
				}
				public Integer MessagePrecision(){
				    return null;
				}
				public String MessageDefault(){
				
					return null;
				
				}
				public String MessageComment(){
				
				    return "";
				
				}
				public String MessagePattern(){
				
					return "";
				
				}
				public String MessageOriginalDbColumnName(){
				
					return "Message";
				
				}

				
			    public String Item_;

				public String getItem_ () {
					return this.Item_;
				}

				public Boolean Item_IsNullable(){
				    return true;
				}
				public Boolean Item_IsKey(){
				    return false;
				}
				public Integer Item_Length(){
				    return 0;
				}
				public Integer Item_Precision(){
				    return 0;
				}
				public String Item_Default(){
				
					return null;
				
				}
				public String Item_Comment(){
				
				    return "";
				
				}
				public String Item_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Item_OriginalDbColumnName(){
				
					return "Item_";
				
				}

				
			    public String CodProvisional_;

				public String getCodProvisional_ () {
					return this.CodProvisional_;
				}

				public Boolean CodProvisional_IsNullable(){
				    return true;
				}
				public Boolean CodProvisional_IsKey(){
				    return false;
				}
				public Integer CodProvisional_Length(){
				    return 0;
				}
				public Integer CodProvisional_Precision(){
				    return 0;
				}
				public String CodProvisional_Default(){
				
					return null;
				
				}
				public String CodProvisional_Comment(){
				
				    return "";
				
				}
				public String CodProvisional_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodProvisional_OriginalDbColumnName(){
				
					return "CodProvisional_";
				
				}

				
			    public String Codigo_;

				public String getCodigo_ () {
					return this.Codigo_;
				}

				public Boolean Codigo_IsNullable(){
				    return true;
				}
				public Boolean Codigo_IsKey(){
				    return false;
				}
				public Integer Codigo_Length(){
				    return 0;
				}
				public Integer Codigo_Precision(){
				    return 0;
				}
				public String Codigo_Default(){
				
					return null;
				
				}
				public String Codigo_Comment(){
				
				    return "";
				
				}
				public String Codigo_Pattern(){
				
					return "";
				
				}
				public String Codigo_OriginalDbColumnName(){
				
					return "Codigo_";
				
				}

				
			    public String Precio_;

				public String getPrecio_ () {
					return this.Precio_;
				}

				public Boolean Precio_IsNullable(){
				    return true;
				}
				public Boolean Precio_IsKey(){
				    return false;
				}
				public Integer Precio_Length(){
				    return 0;
				}
				public Integer Precio_Precision(){
				    return 0;
				}
				public String Precio_Default(){
				
					return null;
				
				}
				public String Precio_Comment(){
				
				    return "";
				
				}
				public String Precio_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Precio_OriginalDbColumnName(){
				
					return "Precio_";
				
				}

				
			    public String Porcentaje_Iva_;

				public String getPorcentaje_Iva_ () {
					return this.Porcentaje_Iva_;
				}

				public Boolean Porcentaje_Iva_IsNullable(){
				    return true;
				}
				public Boolean Porcentaje_Iva_IsKey(){
				    return false;
				}
				public Integer Porcentaje_Iva_Length(){
				    return 0;
				}
				public Integer Porcentaje_Iva_Precision(){
				    return 0;
				}
				public String Porcentaje_Iva_Default(){
				
					return null;
				
				}
				public String Porcentaje_Iva_Comment(){
				
				    return "";
				
				}
				public String Porcentaje_Iva_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Porcentaje_Iva_OriginalDbColumnName(){
				
					return "Porcentaje_Iva_";
				
				}

				
			    public String Opcion_;

				public String getOpcion_ () {
					return this.Opcion_;
				}

				public Boolean Opcion_IsNullable(){
				    return true;
				}
				public Boolean Opcion_IsKey(){
				    return false;
				}
				public Integer Opcion_Length(){
				    return null;
				}
				public Integer Opcion_Precision(){
				    return null;
				}
				public String Opcion_Default(){
				
					return null;
				
				}
				public String Opcion_Comment(){
				
				    return "";
				
				}
				public String Opcion_Pattern(){
				
					return "";
				
				}
				public String Opcion_OriginalDbColumnName(){
				
					return "Opcion_";
				
				}

				
			    public String Caracteristica_Id_;

				public String getCaracteristica_Id_ () {
					return this.Caracteristica_Id_;
				}

				public Boolean Caracteristica_Id_IsNullable(){
				    return true;
				}
				public Boolean Caracteristica_Id_IsKey(){
				    return false;
				}
				public Integer Caracteristica_Id_Length(){
				    return null;
				}
				public Integer Caracteristica_Id_Precision(){
				    return null;
				}
				public String Caracteristica_Id_Default(){
				
					return null;
				
				}
				public String Caracteristica_Id_Comment(){
				
				    return "";
				
				}
				public String Caracteristica_Id_Pattern(){
				
					return "";
				
				}
				public String Caracteristica_Id_OriginalDbColumnName(){
				
					return "Caracteristica_Id_";
				
				}

				
			    public String VSuministro_;

				public String getVSuministro_ () {
					return this.VSuministro_;
				}

				public Boolean VSuministro_IsNullable(){
				    return true;
				}
				public Boolean VSuministro_IsKey(){
				    return false;
				}
				public Integer VSuministro_Length(){
				    return null;
				}
				public Integer VSuministro_Precision(){
				    return null;
				}
				public String VSuministro_Default(){
				
					return null;
				
				}
				public String VSuministro_Comment(){
				
				    return "";
				
				}
				public String VSuministro_Pattern(){
				
					return "";
				
				}
				public String VSuministro_OriginalDbColumnName(){
				
					return "VSuministro_";
				
				}

				
			    public String IvaSuministro_;

				public String getIvaSuministro_ () {
					return this.IvaSuministro_;
				}

				public Boolean IvaSuministro_IsNullable(){
				    return true;
				}
				public Boolean IvaSuministro_IsKey(){
				    return false;
				}
				public Integer IvaSuministro_Length(){
				    return null;
				}
				public Integer IvaSuministro_Precision(){
				    return null;
				}
				public String IvaSuministro_Default(){
				
					return null;
				
				}
				public String IvaSuministro_Comment(){
				
				    return "";
				
				}
				public String IvaSuministro_Pattern(){
				
					return "";
				
				}
				public String IvaSuministro_OriginalDbColumnName(){
				
					return "IvaSuministro_";
				
				}

				
			    public String VDispensacion_;

				public String getVDispensacion_ () {
					return this.VDispensacion_;
				}

				public Boolean VDispensacion_IsNullable(){
				    return true;
				}
				public Boolean VDispensacion_IsKey(){
				    return false;
				}
				public Integer VDispensacion_Length(){
				    return null;
				}
				public Integer VDispensacion_Precision(){
				    return null;
				}
				public String VDispensacion_Default(){
				
					return null;
				
				}
				public String VDispensacion_Comment(){
				
				    return "";
				
				}
				public String VDispensacion_Pattern(){
				
					return "";
				
				}
				public String VDispensacion_OriginalDbColumnName(){
				
					return "VDispensacion_";
				
				}

				
			    public String IvaDispensacion_;

				public String getIvaDispensacion_ () {
					return this.IvaDispensacion_;
				}

				public Boolean IvaDispensacion_IsNullable(){
				    return true;
				}
				public Boolean IvaDispensacion_IsKey(){
				    return false;
				}
				public Integer IvaDispensacion_Length(){
				    return null;
				}
				public Integer IvaDispensacion_Precision(){
				    return null;
				}
				public String IvaDispensacion_Default(){
				
					return null;
				
				}
				public String IvaDispensacion_Comment(){
				
				    return "";
				
				}
				public String IvaDispensacion_Pattern(){
				
					return "";
				
				}
				public String IvaDispensacion_OriginalDbColumnName(){
				
					return "IvaDispensacion_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Contrato_Id_ = readString(dis);
					
					this.User_Id_ = readString(dis);
					
					this.Producto_Id_ = readString(dis);
					
					this.Id_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Insert = readString(dis);
					
					this.Message = readString(dis);
					
					this.Item_ = readString(dis);
					
					this.CodProvisional_ = readString(dis);
					
					this.Codigo_ = readString(dis);
					
					this.Precio_ = readString(dis);
					
					this.Porcentaje_Iva_ = readString(dis);
					
					this.Opcion_ = readString(dis);
					
					this.Caracteristica_Id_ = readString(dis);
					
					this.VSuministro_ = readString(dis);
					
					this.IvaSuministro_ = readString(dis);
					
					this.VDispensacion_ = readString(dis);
					
					this.IvaDispensacion_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Contrato_Id_,dos);
					
					// String
				
						writeString(this.User_Id_,dos);
					
					// String
				
						writeString(this.Producto_Id_,dos);
					
					// String
				
						writeString(this.Id_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Insert,dos);
					
					// String
				
						writeString(this.Message,dos);
					
					// String
				
						writeString(this.Item_,dos);
					
					// String
				
						writeString(this.CodProvisional_,dos);
					
					// String
				
						writeString(this.Codigo_,dos);
					
					// String
				
						writeString(this.Precio_,dos);
					
					// String
				
						writeString(this.Porcentaje_Iva_,dos);
					
					// String
				
						writeString(this.Opcion_,dos);
					
					// String
				
						writeString(this.Caracteristica_Id_,dos);
					
					// String
				
						writeString(this.VSuministro_,dos);
					
					// String
				
						writeString(this.IvaSuministro_,dos);
					
					// String
				
						writeString(this.VDispensacion_,dos);
					
					// String
				
						writeString(this.IvaDispensacion_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Contrato_Id_="+Contrato_Id_);
		sb.append(",User_Id_="+User_Id_);
		sb.append(",Producto_Id_="+Producto_Id_);
		sb.append(",Id_="+Id_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Estado_="+Estado_);
		sb.append(",Insert="+Insert);
		sb.append(",Message="+Message);
		sb.append(",Item_="+Item_);
		sb.append(",CodProvisional_="+CodProvisional_);
		sb.append(",Codigo_="+Codigo_);
		sb.append(",Precio_="+Precio_);
		sb.append(",Porcentaje_Iva_="+Porcentaje_Iva_);
		sb.append(",Opcion_="+Opcion_);
		sb.append(",Caracteristica_Id_="+Caracteristica_Id_);
		sb.append(",VSuministro_="+VSuministro_);
		sb.append(",IvaSuministro_="+IvaSuministro_);
		sb.append(",VDispensacion_="+VDispensacion_);
		sb.append(",IvaDispensacion_="+IvaDispensacion_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfnext_4_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public Long ITEM;

				public Long getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 0;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 300;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CODIGO_SSMP;

				public String getCODIGO_SSMP () {
					return this.CODIGO_SSMP;
				}

				public Boolean CODIGO_SSMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SSMPIsKey(){
				    return false;
				}
				public Integer CODIGO_SSMPLength(){
				    return 300;
				}
				public Integer CODIGO_SSMPPrecision(){
				    return 0;
				}
				public String CODIGO_SSMPDefault(){
				
					return null;
				
				}
				public String CODIGO_SSMPComment(){
				
				    return "";
				
				}
				public String CODIGO_SSMPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_SSMPOriginalDbColumnName(){
				
					return "CODIGO_SSMP";
				
				}

				
			    public String CODIGO_PROVISIONAL;

				public String getCODIGO_PROVISIONAL () {
					return this.CODIGO_PROVISIONAL;
				}

				public Boolean CODIGO_PROVISIONALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PROVISIONALIsKey(){
				    return false;
				}
				public Integer CODIGO_PROVISIONALLength(){
				    return 300;
				}
				public Integer CODIGO_PROVISIONALPrecision(){
				    return 0;
				}
				public String CODIGO_PROVISIONALDefault(){
				
					return null;
				
				}
				public String CODIGO_PROVISIONALComment(){
				
				    return "";
				
				}
				public String CODIGO_PROVISIONALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_PROVISIONALOriginalDbColumnName(){
				
					return "CODIGO_PROVISIONAL";
				
				}

				
			    public String CODIGO_PRODUCTO;

				public String getCODIGO_PRODUCTO () {
					return this.CODIGO_PRODUCTO;
				}

				public Boolean CODIGO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer CODIGO_PRODUCTOLength(){
				    return 300;
				}
				public Integer CODIGO_PRODUCTOPrecision(){
				    return 0;
				}
				public String CODIGO_PRODUCTODefault(){
				
					return null;
				
				}
				public String CODIGO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String CODIGO_PRODUCTOPattern(){
				
					return "";
				
				}
				public String CODIGO_PRODUCTOOriginalDbColumnName(){
				
					return "CODIGO_PRODUCTO";
				
				}

				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 300;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 0;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String IVA;

				public String getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return true;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 300;
				}
				public Integer IVAPrecision(){
				    return 0;
				}
				public String IVADefault(){
				
					return null;
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public String VALOR_SERVSUM;

				public String getVALOR_SERVSUM () {
					return this.VALOR_SERVSUM;
				}

				public Boolean VALOR_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_SERVSUMLength(){
				    return 300;
				}
				public Integer VALOR_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_SERVSUM";
				
				}

				
			    public String VALOR_IVA_SERVSUM;

				public String getVALOR_IVA_SERVSUM () {
					return this.VALOR_IVA_SERVSUM;
				}

				public Boolean VALOR_IVA_SERVSUMIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVSUMIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVSUMLength(){
				    return 300;
				}
				public Integer VALOR_IVA_SERVSUMPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVSUMDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVSUMComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVSUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVSUMOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVSUM";
				
				}

				
			    public String VALOR_SERVDISP;

				public String getVALOR_SERVDISP () {
					return this.VALOR_SERVDISP;
				}

				public Boolean VALOR_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_SERVDISPLength(){
				    return 300;
				}
				public Integer VALOR_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_SERVDISP";
				
				}

				
			    public String VALOR_IVA_SERVDISP;

				public String getVALOR_IVA_SERVDISP () {
					return this.VALOR_IVA_SERVDISP;
				}

				public Boolean VALOR_IVA_SERVDISPIsNullable(){
				    return true;
				}
				public Boolean VALOR_IVA_SERVDISPIsKey(){
				    return false;
				}
				public Integer VALOR_IVA_SERVDISPLength(){
				    return 300;
				}
				public Integer VALOR_IVA_SERVDISPPrecision(){
				    return 0;
				}
				public String VALOR_IVA_SERVDISPDefault(){
				
					return null;
				
				}
				public String VALOR_IVA_SERVDISPComment(){
				
				    return "";
				
				}
				public String VALOR_IVA_SERVDISPPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VALOR_IVA_SERVDISPOriginalDbColumnName(){
				
					return "VALOR_IVA_SERVDISP";
				
				}

				
			    public String OPCION;

				public String getOPCION () {
					return this.OPCION;
				}

				public Boolean OPCIONIsNullable(){
				    return true;
				}
				public Boolean OPCIONIsKey(){
				    return false;
				}
				public Integer OPCIONLength(){
				    return 300;
				}
				public Integer OPCIONPrecision(){
				    return 0;
				}
				public String OPCIONDefault(){
				
					return null;
				
				}
				public String OPCIONComment(){
				
				    return "";
				
				}
				public String OPCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OPCIONOriginalDbColumnName(){
				
					return "OPCION";
				
				}

				
			    public String CARACTERISTICA;

				public String getCARACTERISTICA () {
					return this.CARACTERISTICA;
				}

				public Boolean CARACTERISTICAIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICAIsKey(){
				    return false;
				}
				public Integer CARACTERISTICALength(){
				    return 300;
				}
				public Integer CARACTERISTICAPrecision(){
				    return 0;
				}
				public String CARACTERISTICADefault(){
				
					return null;
				
				}
				public String CARACTERISTICAComment(){
				
				    return "";
				
				}
				public String CARACTERISTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICAOriginalDbColumnName(){
				
					return "CARACTERISTICA";
				
				}

				
			    public Long CARACTERISTICA_ID;

				public Long getCARACTERISTICA_ID () {
					return this.CARACTERISTICA_ID;
				}

				public Boolean CARACTERISTICA_IDIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICA_IDIsKey(){
				    return false;
				}
				public Integer CARACTERISTICA_IDLength(){
				    return null;
				}
				public Integer CARACTERISTICA_IDPrecision(){
				    return null;
				}
				public String CARACTERISTICA_IDDefault(){
				
					return null;
				
				}
				public String CARACTERISTICA_IDComment(){
				
				    return "";
				
				}
				public String CARACTERISTICA_IDPattern(){
				
					return "";
				
				}
				public String CARACTERISTICA_IDOriginalDbColumnName(){
				
					return "CARACTERISTICA_ID";
				
				}

				
			    public Long PRODUCTO_ID;

				public Long getPRODUCTO_ID () {
					return this.PRODUCTO_ID;
				}

				public Boolean PRODUCTO_IDIsNullable(){
				    return true;
				}
				public Boolean PRODUCTO_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTO_IDLength(){
				    return null;
				}
				public Integer PRODUCTO_IDPrecision(){
				    return null;
				}
				public String PRODUCTO_IDDefault(){
				
					return null;
				
				}
				public String PRODUCTO_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTO_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTO_IDOriginalDbColumnName(){
				
					return "PRODUCTO_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CARACTERISTICA_ID = null;
           				} else {
           			    	this.CARACTERISTICA_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRODUCTO_ID = null;
           				} else {
           			    	this.PRODUCTO_ID = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ITEM = null;
           				} else {
           			    	this.ITEM = dis.readLong();
           				}
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CODIGO_SSMP = readString(dis);
					
					this.CODIGO_PROVISIONAL = readString(dis);
					
					this.CODIGO_PRODUCTO = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.IVA = readString(dis);
					
					this.VALOR_SERVSUM = readString(dis);
					
					this.VALOR_IVA_SERVSUM = readString(dis);
					
					this.VALOR_SERVDISP = readString(dis);
					
					this.VALOR_IVA_SERVDISP = readString(dis);
					
					this.OPCION = readString(dis);
					
					this.CARACTERISTICA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CARACTERISTICA_ID = null;
           				} else {
           			    	this.CARACTERISTICA_ID = dis.readLong();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PRODUCTO_ID = null;
           				} else {
           			    	this.PRODUCTO_ID = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
					// Long
				
						if(this.CARACTERISTICA_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CARACTERISTICA_ID);
		            	}
					
					// Long
				
						if(this.PRODUCTO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.PRODUCTO_ID);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Long
				
						if(this.ITEM == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.ITEM);
		            	}
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CODIGO_SSMP,dos);
					
					// String
				
						writeString(this.CODIGO_PROVISIONAL,dos);
					
					// String
				
						writeString(this.CODIGO_PRODUCTO,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.IVA,dos);
					
					// String
				
						writeString(this.VALOR_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVSUM,dos);
					
					// String
				
						writeString(this.VALOR_SERVDISP,dos);
					
					// String
				
						writeString(this.VALOR_IVA_SERVDISP,dos);
					
					// String
				
						writeString(this.OPCION,dos);
					
					// String
				
						writeString(this.CARACTERISTICA,dos);
					
					// Long
				
						if(this.CARACTERISTICA_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.CARACTERISTICA_ID);
		            	}
					
					// Long
				
						if(this.PRODUCTO_ID == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.PRODUCTO_ID);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CODIGO_SSMP="+CODIGO_SSMP);
		sb.append(",CODIGO_PROVISIONAL="+CODIGO_PROVISIONAL);
		sb.append(",CODIGO_PRODUCTO="+CODIGO_PRODUCTO);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",IVA="+IVA);
		sb.append(",VALOR_SERVSUM="+VALOR_SERVSUM);
		sb.append(",VALOR_IVA_SERVSUM="+VALOR_IVA_SERVSUM);
		sb.append(",VALOR_SERVDISP="+VALOR_SERVDISP);
		sb.append(",VALOR_IVA_SERVDISP="+VALOR_IVA_SERVDISP);
		sb.append(",OPCION="+OPCION);
		sb.append(",CARACTERISTICA="+CARACTERISTICA);
		sb.append(",CARACTERISTICA_ID="+String.valueOf(CARACTERISTICA_ID));
		sb.append(",PRODUCTO_ID="+String.valueOf(PRODUCTO_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row29Struct row29 = new row29Struct();
copyOfnext_4_0Struct copyOfnext_4_0 = new copyOfnext_4_0Struct();
row30Struct row30 = new row30Struct();
row35Struct row35 = new row35Struct();
yaRegistradosStruct yaRegistrados = new yaRegistradosStruct();
row37Struct row37 = new row37Struct();









	
	/**
	 * [tOracleOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_7", false);
		start_Hash.put("tOracleOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tOracleOutput_7 = 0;
		






    
    int nb_line_tOracleOutput_7 = 0;
    int nb_line_update_tOracleOutput_7 = 0;
    int nb_line_inserted_tOracleOutput_7 = 0;
    int nb_line_deleted_tOracleOutput_7 = 0;
    int nb_line_rejected_tOracleOutput_7 = 0;

    int tmp_batchUpdateCount_tOracleOutput_7 = 0;

    int deletedCount_tOracleOutput_7=0;
    int updatedCount_tOracleOutput_7=0;
    int insertedCount_tOracleOutput_7=0;
    int rowsToCommitCount_tOracleOutput_7=0;
    int rejectedCount_tOracleOutput_7=0;

    boolean whetherReject_tOracleOutput_7 = false;

    java.sql.Connection conn_tOracleOutput_7 = null;

    //optional table
    String dbschema_tOracleOutput_7 = null;
    String tableName_tOracleOutput_7 = null;
        dbschema_tOracleOutput_7 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_7=0;

        if(dbschema_tOracleOutput_7 == null || dbschema_tOracleOutput_7.trim().length() == 0) {
            tableName_tOracleOutput_7 = ("LOG_CONTRATOS");
        } else {
            tableName_tOracleOutput_7 = dbschema_tOracleOutput_7 + "." + ("LOG_CONTRATOS");
        }
                String insert_tOracleOutput_7 = "INSERT INTO " + tableName_tOracleOutput_7 + " (Mensaje,Item) VALUES (?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_7 = conn_tOracleOutput_7.prepareStatement(insert_tOracleOutput_7);
                        resourceMap.put("pstmt_tOracleOutput_7", pstmt_tOracleOutput_7);





 



/**
 * [tOracleOutput_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"yaRegistrados");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
yaRegistradosStruct yaRegistrados_tmp = new yaRegistradosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tFilterRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_3", false);
		start_Hash.put("tFilterRow_3", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tFilterRow_3 = 0;
		
    int nb_line_tFilterRow_3 = 0;
    int nb_line_ok_tFilterRow_3 = 0;
    int nb_line_reject_tFilterRow_3 = 0;

    class Operator_tFilterRow_3 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_3(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_3 begin ] stop
 */



	
	/**
	 * [tOracleSP_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_4", false);
		start_Hash.put("tOracleSP_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfnext_4_0");
					}
				
		int tos_count_tOracleSP_4 = 0;
		

	java.sql.Connection connection_tOracleSP_4 = null;
	connection_tOracleSP_4 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_4 = connection_tOracleSP_4.prepareCall("{call " + "MED.InsProductoContratoCM" + "(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_4;
String tmpString_tOracleSP_4;

 



/**
 * [tOracleSP_4 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfnext_4_0Struct copyOfnext_4_0_tmp = new copyOfnext_4_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement();

		    String dbquery_tOracleInput_10 = "\nSELECT \na.ITEM,\na.CODIGO_BARRAS,\na.CODIGO_SSMP,\na.CODIGO_PROVISIONAL,\na.CODIGO_PRODUCTO,\na.VALOR_UNITARIO,\na.I"
+"VA,\na.VALOR_SERVSUM,\na.VALOR_IVA_SERVSUM,\na.VALOR_SERVDISP,\na.VALOR_IVA_SERVDISP,\na.OPCION,\na.CARACTERISTICA,\nc.I"
+"D AS CARACTERISTICA_ID,\nb.ID AS PRODUCTO_ID\nFROM TEMP_CONTRATOS a\nINNER JOIN MED_PRODUCTOS b on a.CODIGO_BARRAS =  b."
+"CODBARRAS AND b.ESTREGISTRO_ID = 1\nINNER JOIN MED_TCARACTERISTICAS c on  a.CARACTERISTICA = c.SIGLA AND c.TIPO = 'Costo"
+"' AND c.ESTREGISTRO_ID = 1\nWHERE a.ITEM NOT IN ( SELECT Item FROM LOG_CONTRATOS)";
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row29.ITEM = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(1) != null) {
						row29.ITEM = rs_tOracleInput_10.getLong(1);
					} else {
				
						row29.ITEM = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_10 < 2) {
								row29.CODIGO_BARRAS = null;
							} else {
	                         		
        	row29.CODIGO_BARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 3) {
								row29.CODIGO_SSMP = null;
							} else {
	                         		
        	row29.CODIGO_SSMP = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 4) {
								row29.CODIGO_PROVISIONAL = null;
							} else {
	                         		
        	row29.CODIGO_PROVISIONAL = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 5) {
								row29.CODIGO_PRODUCTO = null;
							} else {
	                         		
        	row29.CODIGO_PRODUCTO = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 6) {
								row29.VALOR_UNITARIO = null;
							} else {
	                         		
        	row29.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 7) {
								row29.IVA = null;
							} else {
	                         		
        	row29.IVA = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 8) {
								row29.VALOR_SERVSUM = null;
							} else {
	                         		
        	row29.VALOR_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 9) {
								row29.VALOR_IVA_SERVSUM = null;
							} else {
	                         		
        	row29.VALOR_IVA_SERVSUM = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 10) {
								row29.VALOR_SERVDISP = null;
							} else {
	                         		
        	row29.VALOR_SERVDISP = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 11) {
								row29.VALOR_IVA_SERVDISP = null;
							} else {
	                         		
        	row29.VALOR_IVA_SERVDISP = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 12) {
								row29.OPCION = null;
							} else {
	                         		
        	row29.OPCION = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 13) {
								row29.CARACTERISTICA = null;
							} else {
	                         		
        	row29.CARACTERISTICA = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 14) {
								row29.CARACTERISTICA_ID = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(14) != null) {
						row29.CARACTERISTICA_ID = rs_tOracleInput_10.getLong(14);
					} else {
				
						row29.CARACTERISTICA_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_10 < 15) {
								row29.PRODUCTO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(15) != null) {
						row29.PRODUCTO_ID = rs_tOracleInput_10.getLong(15);
					} else {
				
						row29.PRODUCTO_ID = null;
					}
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

copyOfnext_4_0 = null;


// # Output table : 'copyOfnext_4_0'
copyOfnext_4_0_tmp.Contrato_Id_ = context.contrato_id;
copyOfnext_4_0_tmp.User_Id_ = context.usuario_id ;
copyOfnext_4_0_tmp.Producto_Id_ = row29.PRODUCTO_ID.toString() ;
copyOfnext_4_0_tmp.Id_ = null;
copyOfnext_4_0_tmp.Respuesta_ = null;
copyOfnext_4_0_tmp.Estado_ = "";
copyOfnext_4_0_tmp.Insert = null;
copyOfnext_4_0_tmp.Message = null;
copyOfnext_4_0_tmp.Item_ = row29.ITEM.toString();
copyOfnext_4_0_tmp.CodProvisional_ = row29.CODIGO_PROVISIONAL;
copyOfnext_4_0_tmp.Codigo_ = row29.CODIGO_PRODUCTO ;
copyOfnext_4_0_tmp.Precio_ = row29.VALOR_UNITARIO ;
copyOfnext_4_0_tmp.Porcentaje_Iva_ = row29.IVA ;
copyOfnext_4_0_tmp.Opcion_ = row29.OPCION ;
copyOfnext_4_0_tmp.Caracteristica_Id_ = row29.CARACTERISTICA_ID.toString();
copyOfnext_4_0_tmp.VSuministro_ = row29.VALOR_SERVSUM ;
copyOfnext_4_0_tmp.IvaSuministro_ = row29.VALOR_IVA_SERVSUM ;
copyOfnext_4_0_tmp.VDispensacion_ = row29.VALOR_SERVDISP;
copyOfnext_4_0_tmp.IvaDispensacion_ = row29.VALOR_IVA_SERVDISP ;
copyOfnext_4_0 = copyOfnext_4_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "copyOfnext_4_0"
if(copyOfnext_4_0 != null) { 



	
	/**
	 * [tOracleSP_4 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfnext_4_0"
						
						);
					}
					

			// code for the argument 1 (Contrato_Id_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Contrato_Id_ == null) {
    						statement_tOracleSP_4.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(1, copyOfnext_4_0.Contrato_Id_);
    					}
    					
			// code for the argument 2 (User_Id_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.User_Id_ == null) {
    						statement_tOracleSP_4.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(2, copyOfnext_4_0.User_Id_);
    					}
    					
			// code for the argument 3 (Producto_Id_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Producto_Id_ == null) {
    						statement_tOracleSP_4.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(3, copyOfnext_4_0.Producto_Id_);
    					}
    					
			// code for the argument 4 (Codigo_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Codigo_ == null) {
    						statement_tOracleSP_4.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(4, copyOfnext_4_0.Codigo_);
    					}
    					
			// code for the argument 5 (Item_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Item_ == null) {
    						statement_tOracleSP_4.setNull(5, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(5, copyOfnext_4_0.Item_);
    					}
    					
			// code for the argument 6 (CodProvisional_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.CodProvisional_ == null) {
    						statement_tOracleSP_4.setNull(6, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(6, copyOfnext_4_0.CodProvisional_);
    					}
    					
			// code for the argument 7 (Precio_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Precio_ == null) {
    						statement_tOracleSP_4.setNull(7, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(7, copyOfnext_4_0.Precio_);
    					}
    					
			// code for the argument 8 (Porcentaje_Iva_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Porcentaje_Iva_ == null) {
    						statement_tOracleSP_4.setNull(8, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(8, copyOfnext_4_0.Porcentaje_Iva_);
    					}
    					
			// code for the argument 9 (VSuministro_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.VSuministro_ == null) {
    						statement_tOracleSP_4.setNull(9, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(9, copyOfnext_4_0.VSuministro_);
    					}
    					
			// code for the argument 10 (IvaSuministro_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.IvaSuministro_ == null) {
    						statement_tOracleSP_4.setNull(10, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(10, copyOfnext_4_0.IvaSuministro_);
    					}
    					
			// code for the argument 11 (VDispensacion_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.VDispensacion_ == null) {
    						statement_tOracleSP_4.setNull(11, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(11, copyOfnext_4_0.VDispensacion_);
    					}
    					
			// code for the argument 12 (IvaDispensacion_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.IvaDispensacion_ == null) {
    						statement_tOracleSP_4.setNull(12, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(12, copyOfnext_4_0.IvaDispensacion_);
    					}
    					
			// code for the argument 13 (Opcion_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Opcion_ == null) {
    						statement_tOracleSP_4.setNull(13, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(13, copyOfnext_4_0.Opcion_);
    					}
    					
			// code for the argument 14 (Caracteristica_Id_) of type 'IN AUTOMAPPING'
    					if (copyOfnext_4_0.Caracteristica_Id_ == null) {
    						statement_tOracleSP_4.setNull(14, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(14, copyOfnext_4_0.Caracteristica_Id_);
    					}
    					
			// code for the argument 15 (Estado_) of type 'INOUT AUTOMAPPING'
    					if (copyOfnext_4_0.Estado_ == null) {
    						statement_tOracleSP_4.setNull(15, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(15, copyOfnext_4_0.Estado_);
    					}
    					
					statement_tOracleSP_4.registerOutParameter(15, java.sql.Types.VARCHAR);
			// code for the argument 16 (Respuesta_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(16, java.sql.Types.VARCHAR);
			// code for the argument 17 (Id_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(17, java.sql.Types.VARCHAR);
		statement_tOracleSP_4.execute();
		
								row30.Contrato_Id_ = copyOfnext_4_0.Contrato_Id_;
								
								row30.User_Id_ = copyOfnext_4_0.User_Id_;
								
								row30.Producto_Id_ = copyOfnext_4_0.Producto_Id_;
								
									row30.Id_ = statement_tOracleSP_4.getString(17);
									
									if (statement_tOracleSP_4.wasNull()) {
										row30.Id_ = null;
									}
									
									row30.Respuesta_ = statement_tOracleSP_4.getString(16);
									
									if (statement_tOracleSP_4.wasNull()) {
										row30.Respuesta_ = null;
									}
									
									row30.Estado_ = statement_tOracleSP_4.getString(15);
									
									if (statement_tOracleSP_4.wasNull()) {
										row30.Estado_ = null;
									}
									
										row30.Insert = copyOfnext_4_0.Insert;
										
										row30.Message = copyOfnext_4_0.Message;
										
								row30.Item_ = copyOfnext_4_0.Item_;
								
								row30.CodProvisional_ = copyOfnext_4_0.CodProvisional_;
								
								row30.Codigo_ = copyOfnext_4_0.Codigo_;
								
								row30.Precio_ = copyOfnext_4_0.Precio_;
								
								row30.Porcentaje_Iva_ = copyOfnext_4_0.Porcentaje_Iva_;
								
								row30.Opcion_ = copyOfnext_4_0.Opcion_;
								
								row30.Caracteristica_Id_ = copyOfnext_4_0.Caracteristica_Id_;
								
								row30.VSuministro_ = copyOfnext_4_0.VSuministro_;
								
								row30.IvaSuministro_ = copyOfnext_4_0.IvaSuministro_;
								
								row30.VDispensacion_ = copyOfnext_4_0.VDispensacion_;
								
								row30.IvaDispensacion_ = copyOfnext_4_0.IvaDispensacion_;
								

 


	tos_count_tOracleSP_4++;

/**
 * [tOracleSP_4 main ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_3 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

          row35 = null;
    Operator_tFilterRow_3 ope_tFilterRow_3 = new Operator_tFilterRow_3("||");
            ope_tFilterRow_3.matches((row30.Estado_ == null? false : row30.Estado_.compareTo("Error") == 0)
                           , "Estado_.compareTo(\"Error\") == 0 failed");
    
    if (ope_tFilterRow_3.getMatchFlag()) {
              if(row35 == null){ 
                row35 = new row35Struct();
              }
               row35.Contrato_Id_ = row30.Contrato_Id_;
               row35.User_Id_ = row30.User_Id_;
               row35.Producto_Id_ = row30.Producto_Id_;
               row35.Id_ = row30.Id_;
               row35.Respuesta_ = row30.Respuesta_;
               row35.Estado_ = row30.Estado_;
               row35.Insert = row30.Insert;
               row35.Message = row30.Message;
               row35.Item_ = row30.Item_;
               row35.CodProvisional_ = row30.CodProvisional_;
               row35.Codigo_ = row30.Codigo_;
               row35.Precio_ = row30.Precio_;
               row35.Porcentaje_Iva_ = row30.Porcentaje_Iva_;
               row35.Opcion_ = row30.Opcion_;
               row35.Caracteristica_Id_ = row30.Caracteristica_Id_;
               row35.VSuministro_ = row30.VSuministro_;
               row35.IvaSuministro_ = row30.IvaSuministro_;
               row35.VDispensacion_ = row30.VDispensacion_;
               row35.IvaDispensacion_ = row30.IvaDispensacion_;    
      nb_line_ok_tFilterRow_3++;
    } else {
      nb_line_reject_tFilterRow_3++;
    }

nb_line_tFilterRow_3++;

 


	tos_count_tFilterRow_3++;

/**
 * [tFilterRow_3 main ] stop
 */
	
	/**
	 * [tFilterRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_begin ] stop
 */
// Start of branch "row35"
if(row35 != null) { 



	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

yaRegistrados = null;


// # Output table : 'yaRegistrados'
yaRegistrados_tmp.Mensaje = row35.Respuesta_ ;
yaRegistrados_tmp.Item = Long.parseLong(row35.Item_) ;
yaRegistrados = yaRegistrados_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "yaRegistrados"
if(yaRegistrados != null) { 



	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"yaRegistrados"
						
						);
					}
					

    //Code generate according to input schema and output schema
row37.Mensaje = yaRegistrados.Mensaje;
row37.Item = yaRegistrados.Item;


context.ErrorLog +=1;
    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					



        whetherReject_tOracleOutput_7 = false;
                        if(row37.Mensaje == null) {
pstmt_tOracleOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_7.setString(1, row37.Mensaje);
}

                        if(row37.Item == null) {
pstmt_tOracleOutput_7.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_7.setLong(2, row37.Item);
}

                try {
                    nb_line_tOracleOutput_7++;
                    int processedCount_tOracleOutput_7 = pstmt_tOracleOutput_7.executeUpdate();
                    insertedCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                    rowsToCommitCount_tOracleOutput_7 += processedCount_tOracleOutput_7;
                } catch(java.lang.Exception e_tOracleOutput_7) {
globalMap.put("tOracleOutput_7_ERROR_MESSAGE",e_tOracleOutput_7.getMessage());
                    whetherReject_tOracleOutput_7 = true;
                            System.err.print(e_tOracleOutput_7.getMessage());
                }

 


	tos_count_tOracleOutput_7++;

/**
 * [tOracleOutput_7 main ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	

 



/**
 * [tOracleOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */

} // End of branch "yaRegistrados"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */

} // End of branch "row35"




	
	/**
	 * [tFilterRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_end ] stop
 */

} // End of branch "copyOfnext_4_0"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());




/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tOracleSP_4 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	


	statement_tOracleSP_4.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfnext_4_0");
			  	}
			  	
 

ok_Hash.put("tOracleSP_4", true);
end_Hash.put("tOracleSP_4", System.currentTimeMillis());




/**
 * [tOracleSP_4 end ] stop
 */

	
	/**
	 * [tFilterRow_3 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
    globalMap.put("tFilterRow_3_NB_LINE", nb_line_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_OK", nb_line_ok_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_REJECT", nb_line_reject_tFilterRow_3);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tFilterRow_3", true);
end_Hash.put("tFilterRow_3", System.currentTimeMillis());




/**
 * [tFilterRow_3 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"yaRegistrados");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());




/**
 * [tJavaRow_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	
	



	
        if(pstmt_tOracleOutput_7 != null) {
			
				pstmt_tOracleOutput_7.close();
				resourceMap.remove("pstmt_tOracleOutput_7");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_7", true);

	
	nb_line_deleted_tOracleOutput_7=nb_line_deleted_tOracleOutput_7+ deletedCount_tOracleOutput_7;
	nb_line_update_tOracleOutput_7=nb_line_update_tOracleOutput_7 + updatedCount_tOracleOutput_7;
	nb_line_inserted_tOracleOutput_7=nb_line_inserted_tOracleOutput_7 + insertedCount_tOracleOutput_7;
	nb_line_rejected_tOracleOutput_7=nb_line_rejected_tOracleOutput_7 + rejectedCount_tOracleOutput_7;
	
        globalMap.put("tOracleOutput_7_NB_LINE",nb_line_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_UPDATED",nb_line_update_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_7);
        globalMap.put("tOracleOutput_7_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_7);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_7", true);
end_Hash.put("tOracleOutput_7", System.currentTimeMillis());




/**
 * [tOracleOutput_7 end ] stop
 */


















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tOracleSP_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 finally ] stop
 */

	
	/**
	 * [tFilterRow_3 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_7";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_7") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_7 = null;
                if ((pstmtToClose_tOracleOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_7")) != null) {
                    pstmtToClose_tOracleOutput_7.close();
                }
    }
 



/**
 * [tOracleOutput_7 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableComparableLookupRow<row21Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 4000;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tAdvancedHash_row21 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row21", false);
		start_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tAdvancedHash_row21 = 0;
		

			   		// connection name:row21
			   		// source node:tOracleInput_7 - inputs:(after_tHashInput_1) outputs:(row21,row21) | target node:tAdvancedHash_row21 - inputs:(row21) outputs:()
			   		// linked node: tMap_10 - inputs:(row20,row21) outputs:(validacionCaract,caracteristicaValida)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row21 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row21Struct>getLookup(matchingModeEnum_row21);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row21", tHash_Lookup_row21);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row21 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement();

		    String dbquery_tOracleInput_7 = "SELECT \n  ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAcentos(SIG"
+"LA))) AS SIGLA\nFROM MED_TCARACTERISTICAS\nWHERE TIPO = 'Costo' AND ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row21.ID = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(1) != null) {
						row21.ID = rs_tOracleInput_7.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row21.NOMBRE = null;
							} else {
	                         		
        	row21.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 3) {
								row21.SIGLA = null;
							} else {
	                         		
        	row21.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 3, false);
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


			   
			   

					row21Struct row21_HashRow = new row21Struct();
		   	   	   
				
				row21_HashRow.ID = row21.ID;
				
				row21_HashRow.NOMBRE = row21.NOMBRE;
				
				row21_HashRow.SIGLA = row21.SIGLA;
				
			tHash_Lookup_row21.put(row21_HashRow);
			
            




 


	tos_count_tAdvancedHash_row21++;

/**
 * [tAdvancedHash_row21 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

tHash_Lookup_row21.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row21", true);
end_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());




/**
 * [tAdvancedHash_row21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableComparableLookupRow<row27Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String CODBARRAS;

				public String getCODBARRAS () {
					return this.CODBARRAS;
				}

				public Boolean CODBARRASIsNullable(){
				    return true;
				}
				public Boolean CODBARRASIsKey(){
				    return false;
				}
				public Integer CODBARRASLength(){
				    return 20;
				}
				public Integer CODBARRASPrecision(){
				    return 0;
				}
				public String CODBARRASDefault(){
				
					return null;
				
				}
				public String CODBARRASComment(){
				
				    return "";
				
				}
				public String CODBARRASPattern(){
				
					return "";
				
				}
				public String CODBARRASOriginalDbColumnName(){
				
					return "CODBARRAS";
				
				}

				
			    public String CODSSMP;

				public String getCODSSMP () {
					return this.CODSSMP;
				}

				public Boolean CODSSMPIsNullable(){
				    return true;
				}
				public Boolean CODSSMPIsKey(){
				    return false;
				}
				public Integer CODSSMPLength(){
				    return 4000;
				}
				public Integer CODSSMPPrecision(){
				    return 0;
				}
				public String CODSSMPDefault(){
				
					return null;
				
				}
				public String CODSSMPComment(){
				
				    return "";
				
				}
				public String CODSSMPPattern(){
				
					return "";
				
				}
				public String CODSSMPOriginalDbColumnName(){
				
					return "CODSSMP";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODBARRAS == null) ? 0 : this.CODBARRAS.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row27Struct other = (row27Struct) obj;
		
						if (this.CODBARRAS == null) {
							if (other.CODBARRAS != null)
								return false;
						
						} else if (!this.CODBARRAS.equals(other.CODBARRAS))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row27Struct other) {

		other.ID = this.ID;
	            other.CODBARRAS = this.CODBARRAS;
	            other.CODSSMP = this.CODSSMP;
	            
	}

	public void copyKeysDataTo(row27Struct other) {

		other.CODBARRAS = this.CODBARRAS;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.CODBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.CODBARRAS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODBARRAS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.CODSSMP = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.CODSSMP = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.CODSSMP, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.CODSSMP, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CODBARRAS="+CODBARRAS);
		sb.append(",CODSSMP="+CODSSMP);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODBARRAS, other.CODBARRAS);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tAdvancedHash_row27 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row27", false);
		start_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tAdvancedHash_row27 = 0;
		

			   		// connection name:row27
			   		// source node:tOracleInput_6 - inputs:(after_tHashInput_2) outputs:(row27,row27) | target node:tAdvancedHash_row27 - inputs:(row27) outputs:()
			   		// linked node: tMap_13 - inputs:(row26,row27) outputs:(validacionProductos,productosValido)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row27 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.FIRST_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row27Struct>getLookup(matchingModeEnum_row27);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row27", tHash_Lookup_row27);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row27 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement();

		    String dbquery_tOracleInput_6 = "SELECT \n  pr.ID,\n  UPPER(TRIM(MED.MayusculasSinAcentos(pr.CODBARRAS))) AS CODBARRAS,\n  UPPER(TRIM(MED.MayusculasSinA"
+"centos(da.CODSSMP))) AS CODSSMP\nFROM MED_PRODUCTOS pr\nINNER JOIN MED_DACUERDOSFORMAS df ON df.FORMASFARMACEUTICAS_ID ="
+" pr.FORMASFARMACEUTICAS_ID\nINNER JOIN MED_DACUERDOS da ON da.ID = df.DACUERDOS_ID\n\nWHERE pr.ESTREGISTRO_ID = 1 AND df"
+".ESTREGISTRO_ID = 1 AND df.ESTADO = 'Activo' AND da.ESTREGISTRO_ID = 1\nAND pr.CODBARRAS IS NOT NULL";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row27.ID = null;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(1) != null) {
						row27.ID = rs_tOracleInput_6.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row27.CODBARRAS = null;
							} else {
	                         		
        	row27.CODBARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 3) {
								row27.CODSSMP = null;
							} else {
	                         		
        	row27.CODSSMP = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 3, false);
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					


			   
			   

					row27Struct row27_HashRow = new row27Struct();
		   	   	   
				
				row27_HashRow.ID = row27.ID;
				
				row27_HashRow.CODBARRAS = row27.CODBARRAS;
				
				row27_HashRow.CODSSMP = row27.CODSSMP;
				
			tHash_Lookup_row27.put(row27_HashRow);
			
            




 


	tos_count_tAdvancedHash_row27++;

/**
 * [tAdvancedHash_row27 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());




/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

tHash_Lookup_row27.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row27", true);
end_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());




/**
 * [tAdvancedHash_row27 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class mailStruct implements routines.system.IPersistableRow<mailStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(mailStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class salidaStruct implements routines.system.IPersistableRow<salidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(salidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();
salidaStruct salida = new salidaStruct();
salidaStruct mail = salida;
row19Struct row19 = new row19Struct();







	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJava_4 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";


 



/**
 * [tJava_4 begin ] stop
 */



	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"mail");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"salida");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("root_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("father_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("priority");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("code");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
	String var1;
	String var2;
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
salidaStruct salida_tmp = new salidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row45.type = lcm.getType();
		row45.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row45.priority = lcm.getPriority();
		row45.message = lcm.getMessage();
		row45.code = lcm.getCode();
		
		row45.moment = java.util.Calendar.getInstance().getTime();
	
    	row45.pid = pid;
		row45.root_pid = rootPid;
		row45.father_pid = fatherPid;
	
    	row45.project = projectName;
    	row45.job = jobName;
    	row45.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;
Var.var1 = context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY"); ;
Var.var2 = context.ESTADO_EXEC = "Interrumpido";;// ###############################
        // ###############################
        // # Output tables

salida = null;


// # Output table : 'salida'
salida_tmp.moment = row45.moment;
salida_tmp.pid = row45.pid;
salida_tmp.root_pid = row45.root_pid;
salida_tmp.father_pid = row45.father_pid;
salida_tmp.project = row45.project;
salida_tmp.job = row45.job;
salida_tmp.context = row45.context;
salida_tmp.priority = row45.priority;
salida_tmp.type = row45.type;
salida_tmp.origin = row45.origin;
salida_tmp.message = row45.message;
salida_tmp.code = row45.code;
salida = salida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "salida"
if(salida != null) { 



	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"salida"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(salida.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(salida.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.root_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.father_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.priority != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.priority
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.message
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.code != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.code
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 
     mail = salida;


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"mail"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xpathutil-1.0.0.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;../lib/jaxen-1.1.6.jar;mail_1_5.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_productos_contrato.mail_1_5.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xpathutil-1.0.0.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/../lib/jaxen-1.1.6.jar:$ROOT_PATH/mail_1_5.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_productos_contrato.mail_1_5.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = mail.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.pid;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param pid=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param pid=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param pid=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("pid", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */

	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */



	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */

} // End of branch "salida"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"salida");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"mail");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */

	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */

	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tJava_3Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);
   			if (context.ErrorLog > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If3", 0, "true");
					}
				tOracleInput_12Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If3", 0, "false");
					}   	 
   				}



/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tOracleRow_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_INICIO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_FINAL");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ESTADO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("JOBS");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row18.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row18.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row18.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row18.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row18.JOBS = "MedMoleculasAcuerdo";
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row18.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            row18.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row18.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row18.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row18.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_2.append(
                            row18.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row18.ESTADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row18.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row18.JOBS != null) {
                        sb_tFileOutputDelimited_2.append(
                            row18.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Mensaje;

				public String getMensaje () {
					return this.Mensaje;
				}

				public Boolean MensajeIsNullable(){
				    return true;
				}
				public Boolean MensajeIsKey(){
				    return false;
				}
				public Integer MensajeLength(){
				    return 500;
				}
				public Integer MensajePrecision(){
				    return null;
				}
				public String MensajeDefault(){
				
					return null;
				
				}
				public String MensajeComment(){
				
				    return "";
				
				}
				public String MensajePattern(){
				
					return "";
				
				}
				public String MensajeOriginalDbColumnName(){
				
					return "Mensaje";
				
				}

				
			    public Long Item;

				public Long getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Mensaje = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Item = null;
           				} else {
           			    	this.Item = dis.readLong();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Mensaje,dos);
					
					// Long
				
						if(this.Item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeLong(this.Item);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Mensaje="+Mensaje);
		sb.append(",Item="+String.valueOf(Item));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row40Struct row40 = new row40Struct();




	
	/**
	 * [tFileOutputExcel_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_5", false);
		start_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tFileOutputExcel_5 = 0;
		


		
		int columnIndex_tFileOutputExcel_5 = 0;
		boolean headerIsInserted_tFileOutputExcel_5 = false;
		
		
		int nb_line_tFileOutputExcel_5 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_5 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_5.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_5.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_5.setSheet("Productos por contrato no registrados");
		xlsxTool_tFileOutputExcel_5.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_5.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_5.setXY(false,0,0,false);
		
		xlsxTool_tFileOutputExcel_5.prepareStream();
		
		xlsxTool_tFileOutputExcel_5.setFont("");
		
		if (xlsxTool_tFileOutputExcel_5.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_5.addRow();
		
		xlsxTool_tFileOutputExcel_5.addCellValue("Mensaje");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("Item");
		
		nb_line_tFileOutputExcel_5++;
		headerIsInserted_tFileOutputExcel_5 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement();

		    String dbquery_tOracleInput_12 = "SELECT\nMensaje,\nItem\nFROM LOG_CONTRATOS ORDER BY Item ASC ";
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row40.Mensaje = null;
							} else {
	                         		
        	row40.Mensaje = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row40.Item = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(2) != null) {
						row40.Item = rs_tOracleInput_12.getLong(2);
					} else {
				
						row40.Item = null;
					}
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_5.addRow();
									   				
	    				if(row40.Mensaje != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row40.Mensaje));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row40.Item != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(Double.parseDouble(String.valueOf(row40.Item)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_5++;
				
 


	tos_count_tFileOutputExcel_5++;

/**
 * [tFileOutputExcel_5 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());




/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

							columnIndex_tFileOutputExcel_5 = 0;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 1;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
	
	
	
			xlsxTool_tFileOutputExcel_5.writeExcel((java.io.OutputStream)globalMap.get("archivo_salida"));
	
		if(headerIsInserted_tFileOutputExcel_5 && nb_line_tFileOutputExcel_5 > 0){
			nb_line_tFileOutputExcel_5 = nb_line_tFileOutputExcel_5 -1;
		}
		globalMap.put("tFileOutputExcel_5_NB_LINE",nb_line_tFileOutputExcel_5);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_5", true);
end_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tFileOutputExcel_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class logCargaStruct implements routines.system.IPersistableRow<logCargaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return false;
				}
				public Boolean Id_IsKey(){
				    return true;
				}
				public Integer Id_Length(){
				    return 0;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return "SALUDSIS\".\"ISEQ$$_108067\".nextval";
				
				}
				public String Id_Comment(){
				
				    return "PK - Llave primaria";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public Object Log_;

				public Object getLog_ () {
					return this.Log_;
				}

				public Boolean Log_IsNullable(){
				    return true;
				}
				public Boolean Log_IsKey(){
				    return false;
				}
				public Integer Log_Length(){
				    return 4000;
				}
				public Integer Log_Precision(){
				    return 0;
				}
				public String Log_Default(){
				
					return null;
				
				}
				public String Log_Comment(){
				
				    return "Descripcion del log de errores";
				
				}
				public String Log_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Log_OriginalDbColumnName(){
				
					return "Log_";
				
				}

				
			    public String Extension_;

				public String getExtension_ () {
					return this.Extension_;
				}

				public Boolean Extension_IsNullable(){
				    return true;
				}
				public Boolean Extension_IsKey(){
				    return false;
				}
				public Integer Extension_Length(){
				    return null;
				}
				public Integer Extension_Precision(){
				    return null;
				}
				public String Extension_Default(){
				
					return null;
				
				}
				public String Extension_Comment(){
				
				    return "";
				
				}
				public String Extension_Pattern(){
				
					return "";
				
				}
				public String Extension_OriginalDbColumnName(){
				
					return "Extension_";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Id_ == null) ? 0 : this.Id_.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final logCargaStruct other = (logCargaStruct) obj;
		
						if (this.Id_ == null) {
							if (other.Id_ != null)
								return false;
						
						} else if (!this.Id_.equals(other.Id_))
						
							return false;
					

		return true;
    }

	public void copyDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            other.Log_ = this.Log_;
	            other.Extension_ = this.Extension_;
	            
	}

	public void copyKeysDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// Object
				
       			    	dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Log_="+String.valueOf(Log_));
		sb.append(",Extension_="+Extension_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(logCargaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Id_, other.Id_);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String NO_DATA;

				public String getNO_DATA () {
					return this.NO_DATA;
				}

				public Boolean NO_DATAIsNullable(){
				    return false;
				}
				public Boolean NO_DATAIsKey(){
				    return false;
				}
				public Integer NO_DATALength(){
				    return null;
				}
				public Integer NO_DATAPrecision(){
				    return null;
				}
				public String NO_DATADefault(){
				
					return null;
				
				}
				public String NO_DATAComment(){
				
				    return "";
				
				}
				public String NO_DATAPattern(){
				
					return "";
				
				}
				public String NO_DATAOriginalDbColumnName(){
				
					return "NO_DATA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NO_DATA="+NO_DATA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();
logCargaStruct logCarga = new logCargaStruct();





	
	/**
	 * [tOracleSP_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_3", false);
		start_Hash.put("tOracleSP_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"logCarga");
					}
				
		int tos_count_tOracleSP_3 = 0;
		

	java.sql.Connection connection_tOracleSP_3 = null;
	connection_tOracleSP_3 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_3 = connection_tOracleSP_3.prepareCall("{call " + "MED.UpdLogCargaMasiva" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_3;
String tmpString_tOracleSP_3;

 



/**
 * [tOracleSP_3 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
logCargaStruct logCarga_tmp = new logCargaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


context.Salida = globalMap.get("archivo_salida");
//System.out.println(context.Salida);
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

logCarga = null;


// # Output table : 'logCarga'
logCarga_tmp.Id_ = context.carga_id ;
logCarga_tmp.Log_ = ((ByteArrayOutputStream)context.Salida).toByteArray(); ;
logCarga_tmp.Extension_ = "xlsx";
logCarga = logCarga_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "logCarga"
if(logCarga != null) { 



	
	/**
	 * [tOracleSP_3 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"logCarga"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_3.setBigDecimal(1, logCarga.Id_);
			// code for the argument 2 (Log_) of type 'IN AUTOMAPPING'
    					if (logCarga.Log_ == null) {
    						statement_tOracleSP_3.setNull(2, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_3.setObject(2, logCarga.Log_);
    					}
    					
			// code for the argument 3 (Extension_) of type 'IN AUTOMAPPING'
    					if (logCarga.Extension_ == null) {
    						statement_tOracleSP_3.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(3, logCarga.Extension_);
    					}
    					
		statement_tOracleSP_3.execute();
		

 


	tos_count_tOracleSP_3++;

/**
 * [tOracleSP_3 main ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_end ] stop
 */

} // End of branch "logCarga"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tOracleSP_3 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	


	statement_tOracleSP_3.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"logCarga");
			  	}
			  	
 

ok_Hash.put("tOracleSP_3", true);
end_Hash.put("tOracleSP_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tOracleSP_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tOracleSP_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tBufferOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_2", false);
		start_Hash.put("tBufferOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tBufferOutput_2 = 0;
		

 



/**
 * [tBufferOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row36.Result = context.result;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_2 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					



String[] row_tBufferOutput_2=new String[]{"",};		
	    if(row36.Result != null){
	        
	            row_tBufferOutput_2[0] = row36.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_2[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_2);	
	
 


	tos_count_tBufferOutput_2++;

/**
 * [tBufferOutput_2 main ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tBufferOutput_2 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_2", true);
end_Hash.put("tBufferOutput_2", System.currentTimeMillis());




/**
 * [tBufferOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tBufferOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato = new byte[0];

	



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		

		

        }

		
			finally {}
		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_CONTRATO_CargaProductosxContrato) {

        	try {

        		int length = 0;
		

		

        }

		
			finally {}
		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
        }

			finally {}
		

    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
        }

			finally {}
		

    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleRow_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tJava_5 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_5 begin ] stop
 */



	
	/**
	 * [tOracleRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_4", false);
		start_Hash.put("tOracleRow_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_4";
	
	
		int tos_count_tOracleRow_4 = 0;
		

	java.sql.Connection conn_tOracleRow_4 = null;
	String query_tOracleRow_4 = "";
	boolean whetherReject_tOracleRow_4 = false;
	int count_tOracleRow_4 = 0;
				conn_tOracleRow_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_4", conn_tOracleRow_4);
        java.sql.Statement stmt_tOracleRow_4 = conn_tOracleRow_4.createStatement();
        resourceMap.put("stmt_tOracleRow_4", stmt_tOracleRow_4);

 



/**
 * [tOracleRow_4 begin ] stop
 */
	
	/**
	 * [tOracleRow_4 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

		row4 = null;
		
query_tOracleRow_4 = "update MED_CARGASMASIVAS\n       set DESCRIPCION = 'Log cargado',\n           ESTADO      = 'Finalizado',\n           F"
+"FINAL      = SYSDATE\n     where id = " + context.carga_id;
whetherReject_tOracleRow_4 = false;
globalMap.put("tOracleRow_4_QUERY",query_tOracleRow_4);
try {
		stmt_tOracleRow_4.execute(query_tOracleRow_4);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_4_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_4 = true;
		
				System.err.print(e.getMessage());
				
	}
	
	if(!whetherReject_tOracleRow_4) {
		
					row4 = new row4Struct();
					
	}
	

 


	tos_count_tOracleRow_4++;

/**
 * [tOracleRow_4 main ] stop
 */
	
	/**
	 * [tOracleRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

 



/**
 * [tOracleRow_4 process_data_begin ] stop
 */
// Start of branch "row4"
if(row4 != null) { 



	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */

} // End of branch "row4"




	
	/**
	 * [tOracleRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

 



/**
 * [tOracleRow_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_4 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

	globalMap.put("tOracleRow_4_NB_LINE", count_tOracleRow_4);
        stmt_tOracleRow_4.close();
        resourceMap.remove("stmt_tOracleRow_4");
    resourceMap.put("statementClosed_tOracleRow_4", true);
    resourceMap.put("finish_tOracleRow_4", true);

 

ok_Hash.put("tOracleRow_4", true);
end_Hash.put("tOracleRow_4", System.currentTimeMillis());




/**
 * [tOracleRow_4 end ] stop
 */

	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tJava_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_4";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_4") == null) {
            java.sql.Statement stmtToClose_tOracleRow_4 = null;
            if ((stmtToClose_tOracleRow_4 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_4")) != null) {
                stmtToClose_tOracleRow_4.close();
            }
    }
 



/**
 * [tOracleRow_4 finally ] stop
 */

	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_4_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final CargaProductosxContrato CargaProductosxContratoClass = new CargaProductosxContrato();

        int exitCode = CargaProductosxContratoClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = (String[][])globalBuffer.toArray(new String[globalBuffer.size()][]);

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        		hastBufferOutput = true;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = CargaProductosxContrato.class.getClassLoader().getResourceAsStream("med_cargue_productos_contrato/cargaproductosxcontrato_3_2/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = CargaProductosxContrato.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("carga_id", "id_BigDecimal");
                        if(context.getStringValue("carga_id") == null) {
                            context.carga_id = null;
                        } else {
                            try{
                                context.carga_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("carga_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "carga_id", e.getMessage()));
                                context.carga_id=null;
                            }
                        }
                        context.setContextType("Contenido", "id_Object");
                        if(context.getStringValue("Contenido") == null) {
                            context.Contenido = null;
                        } else {
                            context.Contenido=(Object) context.getProperty("Contenido");
                        }
                        context.setContextType("contrato_id", "id_String");
                        if(context.getStringValue("contrato_id") == null) {
                            context.contrato_id = null;
                        } else {
                            context.contrato_id=(String) context.getProperty("contrato_id");
                        }
                        context.setContextType("ErrorLog", "id_Integer");
                        if(context.getStringValue("ErrorLog") == null) {
                            context.ErrorLog = null;
                        } else {
                            try{
                                context.ErrorLog=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ErrorLog"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ErrorLog", e.getMessage()));
                                context.ErrorLog=null;
                            }
                        }
                        context.setContextType("Linea", "id_Integer");
                        if(context.getStringValue("Linea") == null) {
                            context.Linea = null;
                        } else {
                            try{
                                context.Linea=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Linea"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Linea", e.getMessage()));
                                context.Linea=null;
                            }
                        }
                        context.setContextType("Mensaje_1", "id_String");
                        if(context.getStringValue("Mensaje_1") == null) {
                            context.Mensaje_1 = null;
                        } else {
                            context.Mensaje_1=(String) context.getProperty("Mensaje_1");
                        }
                        context.setContextType("porcent_disp", "id_Double");
                        if(context.getStringValue("porcent_disp") == null) {
                            context.porcent_disp = null;
                        } else {
                            try{
                                context.porcent_disp=routines.system.ParserUtils.parseTo_Double (context.getProperty("porcent_disp"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "porcent_disp", e.getMessage()));
                                context.porcent_disp=null;
                            }
                        }
                        context.setContextType("porcent_ivadisp", "id_Double");
                        if(context.getStringValue("porcent_ivadisp") == null) {
                            context.porcent_ivadisp = null;
                        } else {
                            try{
                                context.porcent_ivadisp=routines.system.ParserUtils.parseTo_Double (context.getProperty("porcent_ivadisp"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "porcent_ivadisp", e.getMessage()));
                                context.porcent_ivadisp=null;
                            }
                        }
                        context.setContextType("porcent_ivasum", "id_Double");
                        if(context.getStringValue("porcent_ivasum") == null) {
                            context.porcent_ivasum = null;
                        } else {
                            try{
                                context.porcent_ivasum=routines.system.ParserUtils.parseTo_Double (context.getProperty("porcent_ivasum"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "porcent_ivasum", e.getMessage()));
                                context.porcent_ivasum=null;
                            }
                        }
                        context.setContextType("porcent_sum", "id_Double");
                        if(context.getStringValue("porcent_sum") == null) {
                            context.porcent_sum = null;
                        } else {
                            try{
                                context.porcent_sum=routines.system.ParserUtils.parseTo_Double (context.getProperty("porcent_sum"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "porcent_sum", e.getMessage()));
                                context.porcent_sum=null;
                            }
                        }
                        context.setContextType("result", "id_String");
                        if(context.getStringValue("result") == null) {
                            context.result = null;
                        } else {
                            context.result=(String) context.getProperty("result");
                        }
                        context.setContextType("Salida", "id_Object");
                        if(context.getStringValue("Salida") == null) {
                            context.Salida = null;
                        } else {
                            context.Salida=(Object) context.getProperty("Salida");
                        }
                        context.setContextType("TContenido", "id_String");
                        if(context.getStringValue("TContenido") == null) {
                            context.TContenido = null;
                        } else {
                            context.TContenido=(String) context.getProperty("TContenido");
                        }
                        context.setContextType("usuario_id", "id_String");
                        if(context.getStringValue("usuario_id") == null) {
                            context.usuario_id = null;
                        } else {
                            context.usuario_id=(String) context.getProperty("usuario_id");
                        }
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_String");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            context.db_origen_Password=(String) context.getProperty("db_origen_Password");
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("carga_id")) {
                context.carga_id = (BigDecimal) parentContextMap.get("carga_id");
            }if (parentContextMap.containsKey("Contenido")) {
                context.Contenido = (Object) parentContextMap.get("Contenido");
            }if (parentContextMap.containsKey("contrato_id")) {
                context.contrato_id = (String) parentContextMap.get("contrato_id");
            }if (parentContextMap.containsKey("ErrorLog")) {
                context.ErrorLog = (Integer) parentContextMap.get("ErrorLog");
            }if (parentContextMap.containsKey("Linea")) {
                context.Linea = (Integer) parentContextMap.get("Linea");
            }if (parentContextMap.containsKey("Mensaje_1")) {
                context.Mensaje_1 = (String) parentContextMap.get("Mensaje_1");
            }if (parentContextMap.containsKey("porcent_disp")) {
                context.porcent_disp = (Double) parentContextMap.get("porcent_disp");
            }if (parentContextMap.containsKey("porcent_ivadisp")) {
                context.porcent_ivadisp = (Double) parentContextMap.get("porcent_ivadisp");
            }if (parentContextMap.containsKey("porcent_ivasum")) {
                context.porcent_ivasum = (Double) parentContextMap.get("porcent_ivasum");
            }if (parentContextMap.containsKey("porcent_sum")) {
                context.porcent_sum = (Double) parentContextMap.get("porcent_sum");
            }if (parentContextMap.containsKey("result")) {
                context.result = (String) parentContextMap.get("result");
            }if (parentContextMap.containsKey("Salida")) {
                context.Salida = (Object) parentContextMap.get("Salida");
            }if (parentContextMap.containsKey("TContenido")) {
                context.TContenido = (String) parentContextMap.get("TContenido");
            }if (parentContextMap.containsKey("usuario_id")) {
                context.usuario_id = (String) parentContextMap.get("usuario_id");
            }if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tOracleInput_10Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tOracleInput_10) {
globalMap.put("tOracleInput_10_SUBPROCESS_STATE", -1);

e_tOracleInput_10.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : CargaProductosxContrato");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1058159 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 3:23:22 PM COT
 ************************************************************************************************/